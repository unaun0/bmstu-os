            Temp.lst				Sourcer	v7.00   13-Sep-24   2:57 am   Page 1

020C:0746  E8 0070		;*		call	sub_2			; (07B9)
020C:0746  E8 70 00				db	0E8h, 70h, 00h
020C:0749  06					push	es
020C:074A  1E					push	ds
020C:074B  50					push	ax
020C:074C  52					push	dx
020C:074D  B8 0040				mov	ax,40h
020C:0750  8E D8				mov	ds,ax
020C:0752  33 C0				xor	ax,ax			; Zero register
020C:0754  8E C0				mov	es,ax
020C:0756  FF 06 006C				inc	word ptr ds:[6Ch]	; (0040:006C=0F4D7h)
020C:075A  75 04				jnz	loc_1			; Jump if not zero
020C:075C  FF 06 006E				inc	word ptr ds:[6Eh]	; (0040:006E=2)
020C:0760			loc_1:
020C:0760  83 3E 006E 18			cmp	word ptr ds:[6Eh],18h	; (0040:006E=2)
020C:0765  75 15				jne	loc_2			; Jump if not equal
020C:0767  81 3E 006C 00B0			cmp	word ptr ds:[6Ch],0B0h	; (0040:006C=0F4D7h)
020C:076D  75 0D				jne	loc_2			; Jump if not equal
020C:076F  A3 006E				mov	word ptr ds:[6Eh],ax	; (0040:006E=2)
020C:0772  A3 006C				mov	word ptr ds:[6Ch],ax	; (0040:006C=0F4D7h)
020C:0775  C6 06 0070 01			mov	byte ptr ds:[70h],1	; (0040:0070=0)
020C:077A  0C 08				or	al,8
020C:077C			loc_2:
020C:077C  50					push	ax
020C:077D  FE 0E 0040				dec	byte ptr ds:[40h]	; (0040:0040=3Dh)
020C:0781  75 0B				jnz	loc_3			; Jump if not zero
020C:0783  80 26 003F F0			and	byte ptr ds:[3Fh],0F0h	; (0040:003F=0)
020C:0788  B0 0C				mov	al,0Ch
020C:078A  BA 03F2				mov	dx,3F2h
020C:078D  EE					out	dx,al			; port 3F2h, dsk0 contrl output
020C:078E			loc_3:
020C:078E  58					pop	ax
020C:078F  F7 06 0314 0004			test	word ptr ds:[314h],4	; (0040:0314=3200h)
020C:0795  75 0C				jnz	loc_4			; Jump if not zero
020C:0797  9F					lahf				; Load ah from flags
020C:0798  86 E0				xchg	ah,al
020C:079A  50					push	ax
020C:079B  26: FF 1E 0070			call	dword ptr es:[70h]	; (0000:0070=6ADh)
020C:07A0  EB 03				jmp	short loc_5		; (07A5)
020C:07A2  90					nop
020C:07A3			loc_4:
020C:07A3  CD 1C				int	1Ch			; Timer break (call each 18.2ms)
020C:07A5			loc_5:
020C:07A5  E8 0011				call	sub_2			; (07B9)
020C:07A8  B0 20				mov	al,20h			; ' '
020C:07AA  E6 20				out	20h,al			; port 20h, 8259-1 int command
										;  al = 20h, end of interrupt
020C:07AC  5A					pop	dx
020C:07AD  58					pop	ax
020C:07AE  1F					pop	ds
020C:07AF  07					pop	es
020C:07B0  E9 FE99				jmp	$-164h
020C:07B3  C4					db	0C4h
							                        ;* No entry point to code
020C:07B4  C4 0E 93E9				les	cx,dword ptr ds:[93E9h]	; (0000:93E9=0E06h) Load seg:offset pt
020C:07B8  FE					db	0FEh

           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 2

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:07B9			sub_2		proc	near
020C:07B9  1E					push	ds
020C:07BA  50					push	ax
020C:07BB  B8 0040				mov	ax,40h
020C:07BE  8E D8				mov	ds,ax
020C:07C0  9F					lahf				; Load ah from flags
020C:07C1  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020C:07C7  75 0C				jnz	loc_7			; Jump if not zero
020C:07C9  F0> 81 26 0314 FDFF	                           lock	and	word ptr ds:[314h],0FDFFh	; (0040:0314=3200h)
020C:07D0			loc_6:
020C:07D0  9E					sahf				; Store ah into flags
020C:07D1  58					pop	ax
020C:07D2  1F					pop	ds
020C:07D3  EB 03				jmp	short loc_8		; (07D8)
020C:07D5			loc_7:
020C:07D5  FA					cli				; Disable interrupts
020C:07D6  EB F8				jmp	short loc_6		; (07D0)
020C:07D8			loc_8:
020C:07D8  C3					retn
				sub_2		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:07D9			sub_3		proc	near
020C:07D9  1E					push	ds
020C:07DA  50					push	ax
020C:07DB  B8 0040				mov	ax,40h
020C:07DE  8E D8				mov	ds,ax
020C:07E0  9F					lahf				; Load ah from flags
020C:07E1  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020C:07E7  75 14				jnz	loc_10			; Jump if not zero
020C:07E9  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020C:07EF  0C75			data_112	dw	0C75h
020C:07F1  F0> 81 0E 0314 0200	                           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020C:07F8			loc_9:
020C:07F8  9E					sahf				; Store ah into flags
020C:07F9  58					pop	ax
020C:07FA  1F					pop	ds
020C:07FB  EB 03				jmp	short loc_11		; (0800)
020C:07FD			loc_10:
020C:07FD  FB					sti				; Enable interrupts
020C:07FE  EB F8				jmp	short loc_9		; (07F8)
020C:0800			loc_11:
020C:0800  C3					retn
				sub_3		endp

020C:0801  00					db	0
020C:0802  0000			data_113	dw	0
020C:0804  0000			data_114	dw	0

           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 3

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:0806			sub_4		proc	near
020C:0806  2E: FF 06 0804			inc	cs:data_114		; (020C:0804=0)
020C:080B  3D 13FF				cmp	ax,13FFh
020C:080E  75 5B				jne	loc_14			; Jump if not equal
020C:0810  83 F9 01				cmp	cx,1
020C:0813  74 40				je	loc_12			; Jump if equal
020C:0815  56					push	si
020C:0816  BE 00A4				mov	si,0A4h
020C:0819  2E: 2B 36 0802			sub	si,cs:data_113		; (020C:0802=0)
020C:081E  3B CE				cmp	cx,si
020C:0820  73 3E				jae	loc_13			; Jump if above or =
020C:0822  57					push	di
020C:0823  51					push	cx
020C:0824  52					push	dx
020C:0825  1E					push	ds
020C:0826  06					push	es
020C:0827  8C C2				mov	dx,es
020C:0829  8E DA				mov	ds,dx
020C:082B  BA B000				mov	dx,0B000h
020C:082E  8E C2				mov	es,dx
020C:0830  8B D1				mov	dx,cx
020C:0832  8B F7				mov	si,di
020C:0834  2E: 8B 3E 0802			mov	di,cs:data_113		; (020C:0802=0)
020C:0839  FC					cld				; Clear direction
020C:083A  D1 E9				shr	cx,1			; Shift w/zeros fill
020C:083C  F3/ A5				rep	movsw			; Rep when cx >0 Mov [si] to es:[di]
020C:083E  80 D1 00				adc	cl,0
020C:0841  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:0843  2E: 01 16 0802			add	cs:data_113,dx		; (020C:0802=0)
020C:0848  07					pop	es
020C:0849  1F					pop	ds
020C:084A  5A					pop	dx
020C:084B  59					pop	cx
020C:084C  5F					pop	di
020C:084D  5E					pop	si
020C:084E  F9					stc				; Set carry flag
020C:084F  2E: FF 0E 0804			dec	cs:data_114		; (020C:0804=0)
020C:0854  C3					retn
020C:0855			loc_12:
020C:0855  50					push	ax
020C:0856  B4 0E				mov	ah,0Eh
020C:0858  26: 8A 05				mov	al,es:[di]
020C:085B  E8 0012				call	sub_5			; (0870)
020C:085E  58					pop	ax
020C:085F  C3					retn
020C:0860			loc_13:
020C:0860  5E					pop	si
020C:0861  2E: FF 0E 0804			dec	cs:data_114		; (020C:0804=0)
020C:0866  C4					db	0C4h
020C:0867  C4 42 F9				les	ax,dword ptr [bp+si-7]	; Load seg:offset ptr
020C:086A  C3					retn
020C:086B			loc_14:
020C:086B  80 FC 0E				cmp	ah,0Eh
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 4

020C:086E  75 28				jne	loc_15			; Jump if not equal

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

020C:0870			sub_5:
020C:0870  56					push	si
020C:0871  2E: 8B 36 0802			mov	si,cs:data_113		; (020C:0802=0)
020C:0876  81 FE 00A4				cmp	si,0A4h
020C:087A  73 E4				jae	loc_13			; Jump if above or =
020C:087C  1E					push	ds
020C:087D  BE B000				mov	si,0B000h
020C:0880  8E DE				mov	ds,si
020C:0882  2E: 8B 36 0802			mov	si,cs:data_113		; (020C:0802=0)
020C:0887  88 04				mov	[si],al
020C:0889  46					inc	si
020C:088A  2E: 89 36 0802			mov	cs:data_113,si		; (020C:0802=0)
020C:088F  1F					pop	ds
020C:0890  5E					pop	si
020C:0891  F9					stc				; Set carry flag
020C:0892  2E: FF 0E 0804			dec	cs:data_114		; (020C:0804=0)
020C:0897  C3					retn
020C:0898			loc_15:
020C:0898  50					push	ax
020C:0899  B8 13FE				mov	ax,13FEh
020C:089C  C4					db	0C4h
020C:089D  C4 42 58				les	ax,dword ptr [bp+si+58h]	; Load seg:offset ptr
020C:08A0  F8					clc				; Clear carry flag
020C:08A1  2E: FF 0E 0804			dec	cs:data_114		; (020C:0804=0)
020C:08A6  C3					retn
				sub_4		endp

020C:08A7  00			data_115	db	0
020C:08A8  00			data_116	db	0
020C:08A9  2E: 80 3E 08A7 02			cmp	cs:data_115,2		; (020C:08A7=0)
020C:08AF  75 05				jne	loc_16			; Jump if not equal
020C:08B1  E8 FF52				call	sub_4			; (0806)
020C:08B4  72 5F				jc	loc_22			; Jump if carry Set
020C:08B6			loc_16:
020C:08B6  2E: 80 3E 08A7 01			cmp	cs:data_115,1		; (020C:08A7=0)
020C:08BC  74 5D				je	loc_24			; Jump if equal
020C:08BE  80 FC 00				cmp	ah,0
020C:08C1  74 30				je	loc_20			; Jump if equal
020C:08C3  80 FC 1C				cmp	ah,1Ch
020C:08C6  77 0B				ja	loc_17			; Jump if above
020C:08C8  80 FC 04				cmp	ah,4
020C:08CB  74 20				je	loc_19			; Jump if equal
020C:08CD  C4					db	0C4h
020C:08CE  C4 42 EB				les	ax,dword ptr [bp+si-15h]	; Load seg:offset ptr
020C:08D1  43					inc	bx
020C:08D2  90					nop
020C:08D3			loc_17:
020C:08D3  80 FC 4F				cmp	ah,4Fh			; 'O'
020C:08D6  75 06				jne	loc_18			; Jump if not equal
020C:08D8  C4					db	0C4h
020C:08D9  C4 BE 73EB				les	di,dword ptr [bp+73EBh]	; Load seg:offset ptr
020C:08DD  90					nop
020C:08DE			loc_18:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 5

020C:08DE  80 FC F0				cmp	ah,0F0h
020C:08E1  72 35				jb	loc_23			; Jump if below
020C:08E3  80 FC F7				cmp	ah,0F7h
020C:08E6  76 05				jbe	loc_19			; Jump if below or =
020C:08E8  80 FC FA				cmp	ah,0FAh
020C:08EB  75 2B				jne	loc_23			; Jump if not equal
020C:08ED			loc_19:
020C:08ED  C4					db	0C4h
020C:08EE  C4 BE 23EB				les	di,dword ptr [bp+23EBh]	; Load seg:offset ptr
020C:08F2  90					nop
020C:08F3			loc_20:
020C:08F3  2E: C6 06 08A8 01			mov	cs:data_116,1		; (020C:08A8=0)
020C:08F9  C4					db	0C4h
020C:08FA  C4 BE 9090				les	di,dword ptr [bp-6F70h]	; Load seg:offset ptr
020C:08FE  50					push	ax
020C:08FF  25 007F				and	ax,7Fh
020C:0902  3C 03				cmp	al,3
020C:0904  76 08				jbe	loc_21			; Jump if below or =
020C:0906  3C			data_117	db	3Ch
020C:0907  07					pop	es
020C:0908  74 04				jz	loc_21			; Jump if zero
020C:090A  58					pop	ax
020C:090B  EB 0E				jmp	short loc_24		; (091B)
							                        ;* No entry point to code
020C:090D  90					nop
020C:090E			loc_21:
020C:090E  58					pop	ax
020C:090F  2E: C6 06 08A8 00			mov	cs:data_116,0		; (020C:08A8=0)
020C:0915			loc_22:
020C:0915  E9 FD34				jmp	$-2C9h
020C:0918			loc_23:
020C:0918  F9					stc				; Set carry flag
020C:0919  EB FA				jmp	short loc_22		; (0915)
020C:091B			loc_24:
020C:091B  2E: C6 06 08A8 00			mov	cs:data_116,0		; (020C:08A8=0)
020C:0921  3D 13FF				cmp	ax,13FFh
020C:0924  74 2F				je	loc_28			; Jump if equal
020C:0926  80 FC F0				cmp	ah,0F0h
020C:0929  72 0D				jb	loc_25			; Jump if below
020C:092B  80 FC F7				cmp	ah,0F7h
020C:092E  76 BD				jbe	loc_19			; Jump if below or =
020C:0930  80 FC FA				cmp	ah,0FAh
020C:0933  74 B8				je	loc_19			; Jump if equal
020C:0935  EB 19				jmp	short loc_27		; (0950)
020C:0937  90					nop
020C:0938			loc_25:
020C:0938  80 FC 04				cmp	ah,4
020C:093B  74 B0				je	loc_19			; Jump if equal
020C:093D  80 FC 00				cmp	ah,0
020C:0940  75 06				jne	loc_26			; Jump if not equal
020C:0942  C4					db	0C4h
020C:0943  C4 BE 09EB				les	di,dword ptr [bp+9EBh]	; Load seg:offset ptr
020C:0947  90					nop
020C:0948			loc_26:
020C:0948  80 FC 11				cmp	ah,11h
020C:094B  75 03				jne	loc_27			; Jump if not equal
020C:094D  C4					db	0C4h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 6

020C:094E  C4 BE 10EA				les	di,dword ptr [bp+10EAh]	; Load seg:offset ptr
020C:0952  01 00				add	[bx+si],ax
020C:0954  C0					db	0C0h
020C:0955			loc_28:
020C:0955  56					push	si
020C:0956  57					push	di
020C:0957  55					push	bp

020C:0958			locloop_29:
020C:0958  BA 0046				mov	dx,46h
020C:095B  52					push	dx
020C:095C  0E					push	cs
020C:095D  BB 096C				mov	bx,96Ch
020C:0960  53					push	bx
020C:0961  BB 0007				mov	bx,7
020C:0964  B4 0E				mov	ah,0Eh
020C:0966  26: 8A 05				mov	al,es:[di]
020C:0969  47					inc	di
020C:096A  EB E4		;*		jmp	short loc_27		;*(0950)
020C:096A  EB E4				db	0EBh,0E4h
							                        ;* No entry point to code
020C:096C  E2 EA				loop	locloop_29		; Loop if cx > 0

020C:096E  5D					pop	bp
020C:096F  5F					pop	di
020C:0970  5E					pop	si
020C:0971  B8 0001				mov	ax,1
020C:0974			loc_30:
020C:0974  EB 9F				jmp	short loc_22		; (0915)
							                        ;* No entry point to code
020C:0976  2E: 80 3E 08A7 02			cmp	cs:data_115,2		; (020C:08A7=0)
020C:097C  75 05				jne	loc_31			; Jump if not equal
020C:097E  E8 FE85				call	sub_4			; (0806)
020C:0981  72 F1				jc	loc_30			; Jump if carry Set
020C:0983			loc_31:
020C:0983  2E: 80 3E 08A7 01			cmp	cs:data_115,1		; (020C:08A7=0)
020C:0989  74 06				je	loc_32			; Jump if equal
020C:098B  C4					db	0C4h
020C:098C  C4 10				les	dx,dword ptr [bx+si]	; Load seg:offset ptr
020C:098E  E9 FCBB				jmp	$-342h
020C:0991			loc_32:
020C:0991  80 FC 13				cmp	ah,13h
020C:0994  75 04				jne	loc_33			; Jump if not equal
020C:0996  3C FF				cmp	al,0FFh
020C:0998  74 BB				je	loc_28			; Jump if equal
020C:099A			loc_33:
020C:099A  EA F000:FF53		;*		jmp	far ptr loc_2728	;*(F000:FF53)
020C:099A  EA					db	0EAh
020C:099B  FF53 F000				dw	0FF53h, 0F000h
020C:099F  CD 10				int	10h			; Video display   ah=functn 00h
										;  set display mode in al
020C:09A1  C4					db	0C4h
020C:09A2  C4					db	0C4h
020C:09A3  FE C4				inc	ah
020C:09A5  C4 11				les	dx,dword ptr [bx+di]	; Load seg:offset ptr
020C:09A7  E9 FCA2				jmp	$-35Bh
020C:09AA  C4					db	0C4h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 7

							                        ;* No entry point to code
020C:09AB  C4 12				les	dx,dword ptr [bp+si]	; Load seg:offset ptr
020C:09AD  E9 FC9C				jmp	$-361h
020C:09B0  C4					db	0C4h
							                        ;* No entry point to code
020C:09B1  C4 14				les	dx,dword ptr [si]	; Load seg:offset ptr
020C:09B3  E9 FC96				jmp	$-367h
020C:09B6  87 DB				xchg	bx,bx
020C:09B8  0000			data_119	dw	0
020C:09BA  00 00				add	[bx+si],al
020C:09BC  02CA			data_120	dw	2CAh
020C:09BE  00 00				add	[bx+si],al
020C:09C0  0032			data_121	dw	32h
020C:09C2  00 00				add	[bx+si],al
020C:09C4  1E					push	ds
020C:09C5  53					push	bx
020C:09C6  BB 0040				mov	bx,40h
020C:09C9  8E DB				mov	ds,bx
020C:09CB  80 FC 10				cmp	ah,10h
020C:09CE  E8 FDE8				call	sub_2			; (07B9)
020C:09D1  72 03				jc	loc_34			; Jump if carry Set
020C:09D3  E9 00E0				jmp	loc_48			; (0AB6)
020C:09D6			loc_34:
020C:09D6  0A E4				or	ah,ah			; Zero ?
020C:09D8  74 3E				jz	loc_39			; Jump if zero
020C:09DA  FE CC				dec	ah
020C:09DC  74 74				jz	loc_43			; Jump if zero
020C:09DE  FE CC				dec	ah
020C:09E0  74 11				jz	loc_36			; Jump if zero
020C:09E2  FE CC				dec	ah
020C:09E4  74 08				jz	loc_35			; Jump if zero
020C:09E6  FE CC				dec	ah
020C:09E8  74 04				jz	loc_35			; Jump if zero
020C:09EA  FE CC				dec	ah
020C:09EC  74 0A				jz	loc_37			; Jump if zero
020C:09EE			loc_35:
020C:09EE  5B					pop	bx
020C:09EF  1F					pop	ds
020C:09F0  E9 FC59				jmp	$-3A4h
020C:09F3			loc_36:
020C:09F3  A0 0017				mov	al,byte ptr data_14+1	; (020C:0017=0)
020C:09F6  EB F6				jmp	short loc_35		; (09EE)
020C:09F8			loc_37:
020C:09F8  56					push	si
020C:09F9  8B 1E 001C				mov	bx,word ptr data_17+2	; (020C:001C=148Fh)
020C:09FD  8B F3				mov	si,bx
020C:09FF  E8 01B9				call	sub_10			; (0BBB)
020C:0A02  3B 1E 001A				cmp	bx,word ptr ds:[1Ah]	; (020C:001A=0AE9Ch)
020C:0A06  74 0B				je	loc_38			; Jump if equal
020C:0A08  89 0C				mov	[si],cx
020C:0A0A  89 1E 001C				mov	word ptr data_17+2,bx	; (020C:001C=148Fh)
020C:0A0E  B0 00				mov	al,0
020C:0A10  5E					pop	si
020C:0A11  EB DB				jmp	short loc_35		; (09EE)
020C:0A13			loc_38:
020C:0A13  B0 01				mov	al,1
020C:0A15  5E					pop	si
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 8

020C:0A16  EB D6				jmp	short loc_35		; (09EE)
020C:0A18			loc_39:
020C:0A18  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020C:001A=0AE9Ch)
020C:0A1C  3B 1E 001C				cmp	bx,word ptr data_17+2	; (020C:001C=148Fh)
020C:0A20  75 13				jne	loc_41			; Jump if not equal
020C:0A22  E8 FDB4				call	sub_3			; (07D9)
020C:0A25  B8 9002				mov	ax,9002h
020C:0A28  CD 15				int	15h			; General services, ah=func 90h
										;  device busy, al=type,
										;   es:bx=ptr of request block
020C:0A2A			loc_40:
020C:0A2A  E8 FD8C				call	sub_2			; (07B9)
020C:0A2D  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020C:001A=0AE9Ch)
020C:0A31  3B 1E 001C				cmp	bx,word ptr data_17+2	; (020C:001C=148Fh)
020C:0A35			loc_41:
020C:0A35  E8 0190				call	sub_11			; (0BC8)
020C:0A38  75 05				jnz	loc_42			; Jump if not zero
020C:0A3A  E8 00E3				call	sub_6			; (0B20)
020C:0A3D  EB EB				jmp	short loc_40		; (0A2A)
020C:0A3F			loc_42:
020C:0A3F  8B 07				mov	ax,[bx]
020C:0A41  E8 0177				call	sub_10			; (0BBB)
020C:0A44  89 1E 001A				mov	word ptr ds:[1Ah],bx	; (020C:001A=0AE9Ch)
020C:0A48  E8 0129				call	sub_9			; (0B74)
020C:0A4B  72 DD				jc	loc_40			; Jump if carry Set
020C:0A4D  E8 00FC				call	sub_7			; (0B4C)
020C:0A50  EB 9C				jmp	short loc_35		; (09EE)
020C:0A52			loc_43:
020C:0A52  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020C:001A=0AE9Ch)
020C:0A56  3B 1E 001C				cmp	bx,word ptr data_17+2	; (020C:001C=148Fh)
020C:0A5A  8B 07				mov	ax,[bx]
020C:0A5C  E8 0169				call	sub_11			; (0BC8)
020C:0A5F  74 2F				jz	loc_45			; Jump if zero
020C:0A61  E8 00E8				call	sub_7			; (0B4C)
020C:0A64  E8 010D				call	sub_9			; (0B74)
020C:0A67  E8 FD6F				call	sub_3			; (07D9)
020C:0A6A  73 45				jnc	loc_47			; Jump if carry=0
020C:0A6C  E8 014C				call	sub_10			; (0BBB)
020C:0A6F  89 1E 001A				mov	word ptr ds:[1Ah],bx	; (020C:001A=0AE9Ch)
020C:0A73  EB DD				jmp	short loc_43		; (0A52)
020C:0A75			loc_44:
020C:0A75  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020C:001A=0AE9Ch)
020C:0A79  3B 1E 001C				cmp	bx,word ptr data_17+2	; (020C:001C=148Fh)
020C:0A7D  8B 07				mov	ax,[bx]
020C:0A7F  E8 0146				call	sub_11			; (0BC8)
020C:0A82  74 0C				jz	loc_45			; Jump if zero
020C:0A84  E8 00C5				call	sub_7			; (0B4C)
020C:0A87  E8 00D1				call	sub_8			; (0B5B)
020C:0A8A  E8 FD4C				call	sub_3			; (07D9)
020C:0A8D  EB 22				jmp	short loc_47		; (0AB1)
020C:0A8F  90					nop
020C:0A90			loc_45:
020C:0A90  E8 FD46				call	sub_3			; (07D9)
020C:0A93  50					push	ax
020C:0A94  9F					lahf				; Load ah from flags
020C:0A95  50					push	ax
020C:0A96  2E: A1 09B8				mov	ax,cs:data_119		; (020C:09B8=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 9

020C:0A9A  2E: 3B 06 09C0			cmp	ax,cs:data_121		; (020C:09C0=32h)
020C:0A9F  72 08				jb	loc_46			; Jump if below
020C:0AA1  B4 01				mov	ah,1
020C:0AA3  C4					db	0C4h
020C:0AA4  C4 16 06EB				les	dx,dword ptr ds:[6EBh]	; (020C:06EB=52D2h) Load seg:offset pt
020C:0AA8  90					nop
020C:0AA9			loc_46:
020C:0AA9  2E: FF 06 09BC			inc	cs:data_120		; (020C:09BC=390h)
020C:0AAE  58					pop	ax
020C:0AAF  9E					sahf				; Store ah into flags
020C:0AB0  58					pop	ax
020C:0AB1			loc_47:
020C:0AB1  5B					pop	bx
020C:0AB2  1F					pop	ds
020C:0AB3  CA 0002				retf	2			; Return far
020C:0AB6			loc_48:
020C:0AB6  80 EC 10				sub	ah,10h
020C:0AB9  74 2C				jz	loc_50			; Jump if zero
020C:0ABB  FE CC				dec	ah
020C:0ABD  74 B6				jz	loc_44			; Jump if zero
020C:0ABF  FE CC				dec	ah
020C:0AC1  74 03				jz	loc_49			; Jump if zero
020C:0AC3  E9 FF28				jmp	loc_35			; (09EE)
020C:0AC6			loc_49:
020C:0AC6  A0 0018				mov	al,byte ptr ds:[18h]	; (020C:0018=0)
020C:0AC9  8A E0				mov	ah,al
020C:0ACB  24 04				and	al,4
020C:0ACD  51					push	cx
020C:0ACE  B1 05				mov	cl,5
020C:0AD0  D2 E0				shl	al,cl			; Shift w/zeros fill
020C:0AD2  59					pop	cx
020C:0AD3  80 E4 73				and	ah,73h			; 's'
020C:0AD6  0A C4				or	al,ah
020C:0AD8  8A 26 0096				mov	ah,byte ptr ds:[96h]	; (020C:0096=0)
020C:0ADC  80 E4 0C				and	ah,0Ch
020C:0ADF  0A E0				or	ah,al
020C:0AE1  A0 0017				mov	al,byte ptr data_14+1	; (020C:0017=0)
020C:0AE4  E9 FF07				jmp	loc_35			; (09EE)
020C:0AE7			loc_50:
020C:0AE7  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020C:001A=0AE9Ch)
020C:0AEB  3B 1E 001C				cmp	bx,word ptr data_17+2	; (020C:001C=148Fh)
020C:0AEF  75 13				jne	loc_52			; Jump if not equal
020C:0AF1  E8 FCE5				call	sub_3			; (07D9)
020C:0AF4  B8 9002				mov	ax,9002h
020C:0AF7  CD 15				int	15h			; General services, ah=func 90h
										;  device busy, al=type,
										;   es:bx=ptr of request block
020C:0AF9			loc_51:
020C:0AF9  E8 FCBD				call	sub_2			; (07B9)
020C:0AFC  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020C:001A=0AE9Ch)
020C:0B00  3B 1E 001C				cmp	bx,word ptr data_17+2	; (020C:001C=148Fh)
020C:0B04			loc_52:
020C:0B04  E8 00C1				call	sub_11			; (0BC8)
020C:0B07  75 05				jnz	loc_53			; Jump if not zero
020C:0B09  E8 0014				call	sub_6			; (0B20)
020C:0B0C  EB EB				jmp	short loc_51		; (0AF9)
020C:0B0E			loc_53:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 10

020C:0B0E  8B 07				mov	ax,[bx]
020C:0B10  E8 00A8				call	sub_10			; (0BBB)
020C:0B13  89 1E 001A				mov	word ptr ds:[1Ah],bx	; (020C:001A=0AE9Ch)
020C:0B17  E8 0041				call	sub_8			; (0B5B)
020C:0B1A  E8 002F				call	sub_7			; (0B4C)
020C:0B1D  E9 FECE				jmp	loc_35			; (09EE)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:0B20			sub_6		proc	near
020C:0B20  50					push	ax
020C:0B21  E8 FCB5				call	sub_3			; (07D9)
020C:0B24  B4 02				mov	ah,2
020C:0B26  C4					db	0C4h
020C:0B27  C4 16 1E8B				les	dx,data_340		; (020C:1E8B=0) Load seg:offset ptr
020C:0B2B  1A 00				sbb	al,[bx+si]
020C:0B2D  3B 1E 001C				cmp	bx,word ptr data_17+2	; (020C:001C=148Fh)
020C:0B31  75 17				jne	loc_56			; Jump if not equal
020C:0B33  2E: A1 09B8				mov	ax,cs:data_119		; (020C:09B8=0)
020C:0B37  2E: 3B 06 09C0			cmp	ax,cs:data_121		; (020C:09C0=32h)
020C:0B3C  73 07				jae	loc_55			; Jump if above or =
020C:0B3E  2E: FF 06 09BC			inc	cs:data_120		; (020C:09BC=40Ah)
020C:0B43  EB E4		;*		jmp	short loc_54		;*(0B29)
020C:0B43  EB E4				db	0EBh,0E4h
020C:0B45			loc_55:
020C:0B45  B4 01				mov	ah,1
020C:0B47  C4					db	0C4h
020C:0B48  C4 16 C358				les	dx,dword ptr data_888	; (020C:C358=623Eh) Load seg:offset pt

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

020C:0B4C			sub_7:
020C:0B4C  2E: C7 06 09B8 0000			mov	cs:data_119,0		; (020C:09B8=0)
020C:0B53  2E: C7 06 09BC 0000			mov	cs:data_120,0		; (020C:09BC=41Ah)
020C:0B5A  C3					retn
				sub_6		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:0B5B			sub_8		proc	near
020C:0B5B  53					push	bx
020C:0B5C  50					push	ax
020C:0B5D  9F					lahf				; Load ah from flags
020C:0B5E  8B D8				mov	bx,ax
020C:0B60  58					pop	ax
020C:0B61  53					push	bx
020C:0B62  3C F0				cmp	al,0F0h
020C:0B64  75 06				jne	loc_57			; Jump if not equal
020C:0B66  0A E4				or	ah,ah			; Zero ?
020C:0B68  74 02				jz	loc_57			; Jump if zero
020C:0B6A  32 C0				xor	al,al			; Zero register
020C:0B6C			loc_57:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 11

020C:0B6C  8B D8				mov	bx,ax
020C:0B6E  58					pop	ax
020C:0B6F  9E					sahf				; Store ah into flags
020C:0B70  8B C3				mov	ax,bx
020C:0B72  5B					pop	bx
020C:0B73  C3					retn
				sub_8		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:0B74			sub_9		proc	near
020C:0B74  53					push	bx
020C:0B75  50					push	ax
020C:0B76  9F					lahf				; Load ah from flags
020C:0B77  8B D8				mov	bx,ax
020C:0B79  58					pop	ax
020C:0B7A  53					push	bx
020C:0B7B  80 FC E0				cmp	ah,0E0h
020C:0B7E  75 0F				jne	loc_58			; Jump if not equal
020C:0B80  B4 1C				mov	ah,1Ch
020C:0B82  3C 0D				cmp	al,0Dh
020C:0B84  74 23				je	loc_60			; Jump if equal
020C:0B86  3C 0A				cmp	al,0Ah
020C:0B88  74 1F				je	loc_60			; Jump if equal
020C:0B8A  B4 35				mov	ah,35h			; '5'
020C:0B8C  EB 1B				jmp	short loc_60		; (0BA9)
020C:0B8E  90					nop
020C:0B8F			loc_58:
020C:0B8F  80 FC 84				cmp	ah,84h
020C:0B92  77 1E				ja	loc_61			; Jump if above
020C:0B94  3C F0				cmp	al,0F0h
020C:0B96  75 07				jne	loc_59			; Jump if not equal
020C:0B98  0A E4				or	ah,ah			; Zero ?
020C:0B9A  74 0D				jz	loc_60			; Jump if zero
020C:0B9C  EB 14				jmp	short loc_61		; (0BB2)
020C:0B9E  90					nop
020C:0B9F			loc_59:
020C:0B9F  3C E0				cmp	al,0E0h
020C:0BA1  75 06				jne	loc_60			; Jump if not equal
020C:0BA3  0A E4				or	ah,ah			; Zero ?
020C:0BA5  74 02				jz	loc_60			; Jump if zero
020C:0BA7  32 C0				xor	al,al			; Zero register
020C:0BA9			loc_60:
020C:0BA9  8B D8				mov	bx,ax
020C:0BAB  58					pop	ax
020C:0BAC  9E					sahf				; Store ah into flags
020C:0BAD  8B C3				mov	ax,bx
020C:0BAF  5B					pop	bx
020C:0BB0  F8					clc				; Clear carry flag
020C:0BB1  C3					retn
020C:0BB2			loc_61:
020C:0BB2  8B D8				mov	bx,ax
020C:0BB4  58					pop	ax
020C:0BB5  9E					sahf				; Store ah into flags
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 12

020C:0BB6  8B C3				mov	ax,bx
020C:0BB8  5B					pop	bx
020C:0BB9  F9					stc				; Set carry flag
020C:0BBA  C3					retn
				sub_9		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:0BBB			sub_10		proc	near
020C:0BBB  43					inc	bx
020C:0BBC  43					inc	bx
020C:0BBD  3B 1E 0082				cmp	bx,word ptr ds:[82h]	; (020C:0082=10h)
020C:0BC1  75 04				jne	loc_62			; Jump if not equal
020C:0BC3  8B 1E 0080				mov	bx,word ptr ds:[80h]	; (020C:0080=1850h)
020C:0BC7			loc_62:
020C:0BC7  C3					retn
				sub_10		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:0BC8			sub_11		proc	near
020C:0BC8  53					push	bx
020C:0BC9  51					push	cx
020C:0BCA  50					push	ax
020C:0BCB  9F					lahf				; Load ah from flags
020C:0BCC  50					push	ax
020C:0BCD  A0 0017				mov	al,byte ptr data_14+1	; (020C:0017=0)
020C:0BD0  24 70				and	al,70h			; 'p'
020C:0BD2  B1 04				mov	cl,4
020C:0BD4  D2 E8				shr	al,cl			; Shift w/zeros fill
020C:0BD6  24 07				and	al,7
020C:0BD8  8A 1E 0097				mov	bl,byte ptr ds:[97h]	; (020C:0097=0)
020C:0BDC  32 D8				xor	bl,al
020C:0BDE  80 E3 07				and	bl,7
020C:0BE1  74 25				jz	loc_63			; Jump if zero
020C:0BE3  F6 06 0097 40			test	byte ptr ds:[97h],40h	; (020C:0097=0) '@'
020C:0BE8  75 1E				jnz	loc_63			; Jump if not zero
020C:0BEA  80 0E 0097 40			or	byte ptr ds:[97h],40h	; (020C:0097=0) '@'
020C:0BEF  D2 E3				shl	bl,cl			; Shift w/zeros fill
020C:0BF1  0A C3				or	al,bl
020C:0BF3  B4 03				mov	ah,3
020C:0BF5  C4					db	0C4h
020C:0BF6  C4 16 2680				les	dx,dword ptr data_496	; (020C:2680=6572h) Load seg:offset pt
020C:0BFA  97					xchg	di,ax
020C:0BFB  00 F8				add	al,bh
020C:0BFD  24 0F				and	al,0Fh
020C:0BFF  08 06 0097				or	byte ptr ds:[97h],al	; (020C:0097=0)
020C:0C03  80 26 0097 BF			and	byte ptr ds:[97h],0BFh	; (020C:0097=0)
020C:0C08			loc_63:
020C:0C08  58					pop	ax
020C:0C09  9E					sahf				; Store ah into flags
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 13

020C:0C0A  58					pop	ax
020C:0C0B  59					pop	cx
020C:0C0C  5B			data_125	db	5Bh			; Data table (indexed access)
020C:0C0D  C3					retn
				sub_11		endp

020C:0C0E  C4					db	0C4h
							                        ;* No entry point to code
020C:0C0F  C4 18				les	bx,dword ptr [bx+si]	; Load seg:offset ptr
020C:0C11  E9 FA38				jmp	$-5C5h
020C:0C14  C4					db	0C4h
							                        ;* No entry point to code
020C:0C15  C4 19				les	bx,dword ptr [bx+di]	; Load seg:offset ptr
020C:0C17  E9 FA32				jmp	$-5CBh
020C:0C1A  F4D7			data_126	dw	0F4D7h
020C:0C1C  0002			data_127	dw	2
020C:0C1E  00			data_128	db	0
020C:0C1F  E8 FBB7				call	sub_3			; (07D9)
020C:0C22  80 FC 02				cmp	ah,2
020C:0C25  72 06				jb	loc_64			; Jump if below
020C:0C27  C4					db	0C4h
020C:0C28  C4 1A				les	bx,dword ptr [bp+si]	; Load seg:offset ptr
020C:0C2A  E9 FA1F				jmp	$-5DEh
020C:0C2D			loc_64:
020C:0C2D  1E					push	ds
020C:0C2E  53					push	bx
020C:0C2F  50					push	ax
020C:0C30  B8 0040				mov	ax,40h
020C:0C33  8E D8				mov	ds,ax
020C:0C35  58					pop	ax
020C:0C36  E8 FB80				call	sub_2			; (07B9)
020C:0C39  0A E4				or	ah,ah			; Zero ?
020C:0C3B  75 3F				jnz	loc_67			; Jump if not zero
020C:0C3D			loc_65:
020C:0C3D  A0 0070				mov	al,byte ptr ds:[70h]	; (0040:0070=0)
020C:0C40  8B 0E 006E				mov	cx,word ptr ds:[6Eh]	; (0040:006E=2)
020C:0C44  8B 16 006C				mov	dx,word ptr ds:[6Ch]	; (0040:006C=0F4D7h)
020C:0C48  2E: 39 0E 0C1C			cmp	cs:data_127,cx		; (020C:0C1C=2)
020C:0C4D  75 35				jne	loc_68			; Jump if not equal
020C:0C4F  2E: 8B 1E 0C1A			mov	bx,cs:data_126		; (020C:0C1A=0F4D7h)
020C:0C54  3B DA				cmp	bx,dx
020C:0C56  74 05				je	loc_66			; Jump if equal
020C:0C58  43					inc	bx
020C:0C59  3B DA				cmp	bx,dx
020C:0C5B  75 27				jne	loc_68			; Jump if not equal
020C:0C5D			loc_66:
020C:0C5D  2E: FE 06 0C1E			inc	cs:data_128		; (020C:0C1E=0)
020C:0C62  2E: 80 3E 0C1E 10			cmp	cs:data_128,10h		; (020C:0C1E=0)
020C:0C68  72 20				jb	loc_69			; Jump if below
020C:0C6A  E8 FB6C				call	sub_3			; (07D9)
020C:0C6D  33 C0				xor	ax,ax			; Zero register
020C:0C6F  2E: FF 0E 0C1A			dec	cs:data_126		; (020C:0C1A=0F4D7h)
020C:0C74  C4					db	0C4h
020C:0C75  C4 5A E8				les	bx,dword ptr [bp+si-18h]	; Load seg:offset ptr
020C:0C78  3F					aas				; Ascii adjust
020C:0C79  FB					sti				; Enable interrupts
020C:0C7A  EB C1				jmp	short loc_65		; (0C3D)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 14

020C:0C7C			loc_67:
020C:0C7C  89 16 006C				mov	word ptr ds:[6Ch],dx	; (0040:006C=0F4D7h)
020C:0C80  89 0E 006E				mov	word ptr ds:[6Eh],cx	; (0040:006E=2)
020C:0C84			loc_68:
020C:0C84  2E: C6 06 0C1E 00			mov	cs:data_128,0		; (020C:0C1E=0)
020C:0C8A			loc_69:
020C:0C8A  2E: 89 16 0C1A			mov	cs:data_126,dx		; (020C:0C1A=0F4D7h)
020C:0C8F  2E: 89 0E 0C1C			mov	cs:data_127,cx		; (020C:0C1C=2)
020C:0C94  C6 06 0070 00			mov	byte ptr ds:[70h],0	; (0040:0070=0)
020C:0C99  5B					pop	bx
020C:0C9A  1F					pop	ds
020C:0C9B  E9 F9AE				jmp	$-64Fh
020C:0C9E  C4					db	0C4h
							                        ;* No entry point to code
020C:0C9F  C4 1E A8E9				les	bx,dword ptr data_851	; (020C:A8E9=3D82h) Load seg:offset pt
020C:0CA3  F9					stc				; Set carry flag
020C:0CA4  C4					db	0C4h
020C:0CA5  C4 70 E9				les	si,dword ptr [bx+si-17h]	; Load seg:offset ptr
020C:0CA8  A2 E8F9				mov	data_909,al		; (020C:E8F9=0AEh)
020C:0CAB  2C FB				sub	al,0FBh
020C:0CAD  CD 4A				int	4Ah			; RTC Alarm occurred
020C:0CAF  EB 01				jmp	short $+3		; delay for I/O
020C:0CB1  90					nop
020C:0CB2  EB 01				jmp	short $+3		; delay for I/O
020C:0CB4  90					nop
020C:0CB5  EB 01				jmp	short $+3		; delay for I/O
020C:0CB7  90					nop
020C:0CB8  E8 FAFE				call	sub_2			; (07B9)
020C:0CBB  C4					db	0C4h
020C:0CBC  C4					db	0C4h
020C:0CBD  FE C4				inc	ah
020C:0CBF  C4 71 CD				les	si,dword ptr [bx+di-33h]	; Load seg:offset ptr
020C:0CC2  0A E9				or	ch,cl
020C:0CC4  86 F9				xchg	bh,cl
020C:0CC6  C4					db	0C4h
020C:0CC7			loc_70:
020C:0CC7  C4 75 CD				les	si,dword ptr [di-33h]	; Load seg:offset ptr
020C:0CCA  02 E9				add	ch,cl
020C:0CCC  7E F9				jle	loc_70			; Jump if < or =
020C:0CCE  E8 FB08				call	sub_3			; (07D9)
020C:0CD1  EB 00				jmp	short $+2		; delay for I/O
020C:0CD3  EB 00				jmp	short $+2		; delay for I/O
020C:0CD5  EB 00				jmp	short $+2		; delay for I/O
020C:0CD7  C4					db	0C4h
020C:0CD8  C4					db	0C4h
020C:0CD9  FE					db	0FEh
020C:0CDA  33 F6				xor	si,si			; Zero register
020C:0CDC  8E DE				mov	ds,si
020C:0CDE  B8 4400				mov	ax,4400h
020C:0CE1  DB					db	0DBh
020C:0CE2  02 4E 00				add	cl,[bp]
020C:0CE5  0B DB				or	bx,bx			; Zero ?
020C:0CE7  07					pop	es
020C:0CE8  48					dec	ax
020C:0CE9  49					dec	cx
020C:0CEA  4D					dec	bp
020C:0CEB  45					inc	bp
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 15

020C:0CEC  4D					dec	bp
020C:0CED  20 20				and	[bx+si],ah
020C:0CEF  20 24				and	[si],ah
020C:0CF1  00 70 00		;*		add	[bx+si+0],dh
020C:0CF1  00 70 00				db	 00h, 70h, 00h
020C:0CF4  00 A0 0041				add	byte ptr ds:[41h][bx+si],ah	; (0000:0041=8)
020C:0CF8  4C					dec	sp
020C:0CF9  00 58 4D				add	[bx+si+4Dh],bl
020C:0CFC  53					push	bx
020C:0CFD  58					pop	ax
020C:0CFE  58					pop	ax
020C:0CFF  58					pop	ax
020C:0D00  58					pop	ax
020C:0D01  30 DE				xor	dh,bl
020C:0D03  04 74				add	al,74h			; 't'
020C:0D05  00 82 FB04				add	[bp+si-4FCh],al
020C:0D09  8D 54 00				lea	dx,[si+0]		; Load effective addr
020C:0D0C  00 00				add	[bx+si],al
020C:0D0E  42					inc	dx
020C:0D0F  05 020C				add	ax,20Ch
020C:0D12  A4					movsb				; Mov [si] to es:[di]
020C:0D13  10 A7 0100				adc	byte ptr ds:[100h][bx],ah	; (0000:0100=8Ah)
020C:0D17  01 01				add	[bx+di],ax
020C:0D19  01 00				add	[bx+si],ax
020C:0D1B  01 00				add	[bx+si],ax
020C:0D1D  01 00				add	[bx+si],ax
020C:0D1F  01 00				add	[bx+si],ax
020C:0D21  000A[00]				db	10 dup (0)
020C:0D2B  02 01				add	al,[bx+di]
020C:0D2D  00					db	0
020C:0D2E  00 00				add	[bx+si],al
020C:0D30  00 2E 1E89				add	byte ptr ds:[1E89h],ch	; (0000:1E89=0)
020C:0D34  16					push	ss
020C:0D35  00 2E 068C				add	byte ptr ds:[68Ch],ch	; (0000:068C=0)
020C:0D39  18 00				sbb	[bx+si],al
020C:0D3B  CB					retf
							                        ;* No entry point to code
020C:0D3C  53					push	bx
020C:0D3D  1E					push	ds
020C:0D3E  2E: C5 1E 0016			lds	bx,dword ptr cs:[16h]	; (020C:0016=0) Load seg:offset ptr
020C:0D43  80 7F 02 10				cmp	byte ptr [bx+2],10h
020C:0D47  C7 47 03 0100			mov	word ptr [bx+3],100h
020C:0D4C  76 05				jbe	loc_71			; Jump if below or =
020C:0D4E  81 4F 03 8003			or	word ptr [bx+3],8003h
020C:0D53			loc_71:
020C:0D53  1F					pop	ds
020C:0D54  5B					pop	bx
020C:0D55  CB					retf
							                        ;* No entry point to code
020C:0D56  E8 03DB				call	sub_20			; (1134)
020C:0D59  80 FC 43				cmp	ah,43h			; 'C'
020C:0D5C  75 15				jne	loc_73			; Jump if not equal
020C:0D5E  0A C0				or	al,al			; Zero ?
020C:0D60  75 05				jnz	loc_72			; Jump if not zero
020C:0D62  B0 80				mov	al,80h
020C:0D64  E9 03F5				jmp	loc_125			; (115C)
020C:0D67			loc_72:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 16

020C:0D67  3C 10				cmp	al,10h
020C:0D69  75 08				jne	loc_73			; Jump if not equal
020C:0D6B  0E					push	cs
020C:0D6C  07					pop	es
020C:0D6D  BB 00AF				mov	bx,0AFh
020C:0D70  E9 03E9				jmp	loc_125			; (115C)
020C:0D73			loc_73:
020C:0D73  E8 039E				call	sub_19			; (1114)
020C:0D76  2E: FF 2E 0022			jmp	dword ptr cs:[22h]	; (020C:0022=0FFh)
							                        ;* No entry point to code
020C:0D7B  12 A0 0265				adc	ah,byte ptr ds:[265h][bx+si]	; (020C:0265=0)
020C:0D7F  98					cbw				; Convrt byte to word
020C:0D80  02 B2 D402				add	dh,[bp+si-2BFEh]
020C:0D84  02 F6				add	dh,dh
020C:0D86  02 30				add	dh,[bx+si]
020C:0D88  03 99 2B03				add	bx,data_506[bx+di]	; (020C:2B03=8D1Eh)
020C:0D8C  A0 A03C				mov	al,data_820		; (020C:A03C=5Dh)
020C:0D8F  94					xchg	sp,ax
020C:0D90  A0 A264				mov	al,data_829		; (020C:A264=18h)
020C:0D93  CF					iret				; Interrupt return
							                        ;* No entry point to code
020C:0D94  A0 A0FF				mov	al,data_825		; (020C:A0FF=1)
020C:0D97  23 A1 A159				and	sp,data_826[bx+di]	; (020C:A159=7601h)
020C:0D9B  11 A2 A216				adc	[bp+si-5DEAh],sp
020C:0D9F  EB 03				jmp	short loc_74		; (0DA4)
020C:0DA1  90					nop
020C:0DA2  90					nop
020C:0DA3  90					nop
020C:0DA4			loc_74:
020C:0DA4  51					push	cx
020C:0DA5  56					push	si
020C:0DA6  57					push	di
020C:0DA7  1E					push	ds
020C:0DA8  06					push	es
020C:0DA9  9C					pushf				; Push flags
020C:0DAA  FC					cld				; Clear direction
020C:0DAB  1E					push	ds
020C:0DAC  07					pop	es
020C:0DAD  0E					push	cs
020C:0DAE  1F					pop	ds
020C:0DAF  50					push	ax
020C:0DB0  0A E4				or	ah,ah			; Zero ?
020C:0DB2  74 31				jz	loc_77			; Jump if zero
020C:0DB4  80 FC 12				cmp	ah,12h
020C:0DB7  72 07				jb	loc_75			; Jump if below
020C:0DB9  58					pop	ax
020C:0DBA  33 C0				xor	ax,ax			; Zero register
020C:0DBC  B3 80				mov	bl,80h
020C:0DBE  EB 72				jmp	short loc_82		; (0E32)
020C:0DC0			loc_75:
020C:0DC0  9C					pushf				; Push flags
020C:0DC1  E8 0350				call	sub_19			; (1114)
020C:0DC4  83 3E 0020 00			cmp	word ptr data_19+2,0	; (020C:0020=0A3B9h)
020C:0DC9  75 05				jne	loc_76			; Jump if not equal
020C:0DCB  52					push	dx
020C:0DCC  E8 0076				call	sub_13			; (0E45)
020C:0DCF  5A					pop	dx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 17

020C:0DD0			loc_76:
020C:0DD0  0E					push	cs
020C:0DD1  FF 16 0014				call	word ptr ds:[14h]	; (020C:0014=0E0Dh)
020C:0DD5  80 3E 002C 00			cmp	byte ptr ds:[2Ch],0	; (020C:002C=39h)
020C:0DDA  74 09				je	loc_77			; Jump if equal
020C:0DDC  58					pop	ax
020C:0DDD  33 C0				xor	ax,ax			; Zero register
020C:0DDF  B3 81				mov	bl,81h
020C:0DE1  33 D2				xor	dx,dx			; Zero register
020C:0DE3  EB			data_130	db	0EBh
020C:0DE4  4D					dec	bp
020C:0DE5			loc_77:
020C:0DE5  58					pop	ax
020C:0DE6  50					push	ax
020C:0DE7  8A C4				mov	al,ah
020C:0DE9  32 E4				xor	ah,ah			; Zero register
020C:0DEB  D1 E0				shl	ax,1			; Shift w/zeros fill
020C:0DED  8B F8				mov	di,ax
020C:0DEF  58					pop	ax
020C:0DF0  8B BD 008B				mov	di,word ptr data_49+1[di]	; (020C:008B=504Fh)
020C:0DF4  0B FF				or	di,di			; Zero ?
020C:0DF6  79 38				jns	loc_81			; Jump if not sign
020C:0DF8  80 3E 002B 00			cmp	byte ptr ds:[2Bh],0	; (020C:002B=38h)
020C:0DFD  74 12				je	loc_79			; Jump if equal
020C:0DFF  56					push	si
020C:0E00  57					push	di
020C:0E01  50					push	ax
020C:0E02  53					push	bx
020C:0E03			loc_78:
020C:0E03  51					push	cx
020C:0E04  E8 01DF				call	sub_15			; (0FE6)
020C:0E07  3D 0001				cmp	ax,1
020C:0E0A  59					pop	cx
020C:0E0B  5B					pop	bx
020C:0E0C  58					pop	ax
020C:0E0D  5F					pop	di
020C:0E0E  5E			data_131	db	5Eh
020C:0E0F  75 17				jnz	loc_80			; Jump if not zero
020C:0E11			loc_79:
020C:0E11  0E E8 002A				callf	sub_12			; (0E3F)
020C:0E15  80 3E 002B 00			cmp	byte ptr ds:[2Bh],0	; (020C:002B=38h)
020C:0E1A  74 16				je	loc_82			; Jump if equal
020C:0E1C  50					push	ax
020C:0E1D  53					push	bx
020C:0E1E  E8 01FF				call	sub_16			; (1020)
020C:0E21  3D 0001				cmp	ax,1
020C:0E24  5B					pop	bx
020C:0E25  58					pop	ax
020C:0E26  74 0A				jz	loc_82			; Jump if zero
020C:0E28			loc_80:
020C:0E28  33 C0				xor	ax,ax			; Zero register
020C:0E2A  33 D2				xor	dx,dx			; Zero register
020C:0E2C  B3 82				mov	bl,82h
020C:0E2E  EB 02				jmp	short loc_82		; (0E32)
020C:0E30			loc_81:
020C:0E30  FF D7				call	di			;*
020C:0E32			loc_82:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 18

020C:0E32  0E					push	cs
020C:0E33  FF 16 0014				call	word ptr ds:[14h]	; (020C:0014=0E0Dh)
020C:0E37  07					pop	es
020C:0E38  1F					pop	ds
020C:0E39  5F					pop	di
020C:0E3A  5E					pop	si
020C:0E3B  59					pop	cx
020C:0E3C  CB					retf				; Return far
020C:0E3D  6E					db	6Eh
020C:0E3E  FB					sti				; Enable interrupts

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:0E3F			sub_12		proc	near
020C:0E3F  FF 36 014D				push	word ptr ds:[14Dh]	; (020C:014D=5582h)
020C:0E43  57					push	di
020C:0E44  CB					retf				; Return far
				sub_12		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:0E45			sub_13		proc	near
020C:0E45  06					push	es
020C:0E46  E8 0071				call	sub_14			; (0EBA)
020C:0E49  80 3E 002C 00			cmp	byte ptr ds:[2Ch],0	; (020C:002C=39h)
020C:0E4E  74 02				je	loc_83			; Jump if equal
020C:0E50  07					pop	es
020C:0E51  C3					retn
020C:0E52			loc_83:
020C:0E52  B8 020D				mov	ax,20Dh
020C:0E55  C4					db	0C4h
020C:0E56  C4 52 09				les	dx,dword ptr [bp+si+9]	; Load seg:offset ptr
020C:0E59  C4 36 001A				les	si,dword ptr ds:[1Ah]	; (020C:001A=0AE9Ch) Load seg:offset p
020C:0E5D  26: 87 04				xchg	es:[si],ax
020C:0E60  A3 001E				mov	word ptr ds:[1Eh],ax	; (020C:001E=961Fh)
020C:0E63  8C C8				mov	ax,cs
020C:0E65  26: 87 44 02				xchg	es:[si+2],ax
020C:0E69  A3 0020				mov	word ptr data_19+2,ax	; (020C:0020=0A3B9h)
020C:0E6C  8B C1				mov	ax,cx
020C:0E6E  3D 3C00				cmp	ax,3C00h
020C:0E71  72 03				jb	loc_84			; Jump if below
020C:0E73  B8 3C00				mov	ax,3C00h
020C:0E76			loc_84:
020C:0E76  2B 06 0037				sub	ax,word ptr ds:[37h]	; (020C:0037=0)
020C:0E7A  3D 0040				cmp	ax,40h
020C:0E7D  72 0C				jb	loc_85			; Jump if below
020C:0E7F  83 3E 0035 00			cmp	word ptr ds:[35h],0	; (020C:0035=80Fh)
020C:0E84  75 05				jne	loc_85			; Jump if not equal
020C:0E86  C6 06 0029 01			mov	byte ptr ds:[29h],1	; (020C:0029=14h)
020C:0E8B			loc_85:
020C:0E8B  0B C0				or	ax,ax			; Zero ?
020C:0E8D  74 20				jz	loc_88			; Jump if zero
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 19

020C:0E8F  B9 0400				mov	cx,400h
020C:0E92  33 DB				xor	bx,bx			; Zero register
020C:0E94  80 3E 0029 00			cmp	byte ptr ds:[29h],0	; (020C:0029=14h)
020C:0E99  74 03				je	loc_86			; Jump if equal
020C:0E9B  BB 0040				mov	bx,40h
020C:0E9E			loc_86:
020C:0E9E  3B 1E 0035				cmp	bx,word ptr ds:[35h]	; (020C:0035=80Fh)
020C:0EA2  73 04				jae	loc_87			; Jump if above or =
020C:0EA4  8B 1E 0035				mov	bx,word ptr ds:[35h]	; (020C:0035=80Fh)
020C:0EA8			loc_87:
020C:0EA8  03 CB				add	cx,bx
020C:0EAA  2B C3				sub	ax,bx
020C:0EAC  E8 01E2				call	sub_18			; (1091)
020C:0EAF			loc_88:
020C:0EAF  07					pop	es
020C:0EB0  C3					retn
				sub_13		endp

							                        ;* No entry point to code
020C:0EB1  13 00				adc	ax,[bx+si]
020C:0EB3  FF					db	0FFh
020C:0EB4  FF 56 44				call	word ptr [bp+44h]	;*
020C:0EB7  49					dec	cx
020C:0EB8  53					push	bx
020C:0EB9  4B					dec	bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:0EBA			sub_14		proc	near
020C:0EBA  06					push	es
020C:0EBB  33 C0				xor	ax,ax			; Zero register
020C:0EBD  8E C0				mov	es,ax
020C:0EBF  26: 8E 06 0066			mov	es,word ptr es:[66h]	; (0000:0066=20Ch)
020C:0EC4  BF 0012				mov	di,12h
020C:0EC7  BE 01C5				mov	si,1C5h
020C:0ECA  B9 0005				mov	cx,5
020C:0ECD  FC					cld				; Clear direction
020C:0ECE  F3/ A6				repe	cmpsb			; Rep zf=1+cx >0 Cmp [si] to es:[di]
020C:0ED0  07					pop	es
020C:0ED1  74 24				jz	loc_89			; Jump if zero
020C:0ED3  E8 0110				call	sub_15			; (0FE6)
020C:0ED6  06					push	es
020C:0ED7  2E: C4 3E 01C1			les	di,dword ptr cs:[1C1h]	; (020C:01C1=0) Load seg:offset ptr
020C:0EDC  BE 01C5				mov	si,1C5h
020C:0EDF  B9 0005				mov	cx,5
020C:0EE2  FC					cld				; Clear direction
020C:0EE3  F3/ A6				repe	cmpsb			; Rep zf=1+cx >0 Cmp [si] to es:[di]
020C:0EE5  07					pop	es
020C:0EE6  9C					pushf				; Push flags
020C:0EE7  E8 0136				call	sub_16			; (1020)
020C:0EEA  0E					push	cs
020C:0EEB  FF 16 0014				call	word ptr ds:[14h]	; (020C:0014=0E0Dh)
020C:0EEF  74 06				jz	loc_89			; Jump if zero
020C:0EF1  C6 06 002C 00			mov	byte ptr ds:[2Ch],0	; (020C:002C=39h)
020C:0EF6  C3					retn
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 20

020C:0EF7			loc_89:
020C:0EF7  C6 06 002C 01			mov	byte ptr ds:[2Ch],1	; (020C:002C=39h)
020C:0EFC  C3					retn
				sub_14		endp

							                        ;* No entry point to code
020C:0EFD  80 FC 88				cmp	ah,88h
020C:0F00  74 0A				je	loc_90			; Jump if equal
020C:0F02  80 FC 87				cmp	ah,87h
020C:0F05  74 0C				je	loc_91			; Jump if equal
020C:0F07  2E: FF 2E 001E			jmp	dword ptr cs:[1Eh]	; (020C:001E=961Fh)
020C:0F0C			loc_90:
020C:0F0C  2E: A1 0035				mov	ax,word ptr cs:[35h]	; (020C:0035=80Fh)
020C:0F10  E9 0249				jmp	loc_125			; (115C)
020C:0F13			loc_91:
020C:0F13  E8 01FE				call	sub_19			; (1114)
020C:0F16  83 EC 04				sub	sp,4
020C:0F19  60					db	60h
020C:0F1A  E8 016C				call	sub_17			; (1089)
020C:0F1D  8B EC				mov	bp,sp
020C:0F1F  89 46 12				mov	[bp+12h],ax
020C:0F22  8B 46 18				mov	ax,[bp+18h]
020C:0F25  89 46 10				mov	[bp+10h],ax
020C:0F28  61					db	61h
020C:0F29  2E: FF 1E 001E			call	dword ptr cs:[1Eh]	; (020C:001E=961Fh)
020C:0F2E  50					push	ax
020C:0F2F  9C					pushf				; Push flags
020C:0F30  55					push	bp
020C:0F31  8B EC				mov	bp,sp
020C:0F33  8B 46 02				mov	ax,[bp+2]
020C:0F36  89 46 0C				mov	[bp+0Ch],ax
020C:0F39  83 7E 06 00				cmp	word ptr [bp+6],0
020C:0F3D  5D					pop	bp
020C:0F3E  58					pop	ax
020C:0F3F  58					pop	ax
020C:0F40  74 0B				jz	loc_92			; Jump if zero
020C:0F42  E8 01CF				call	sub_19			; (1114)
020C:0F45  60					db	60h
020C:0F46  B8 0001				mov	ax,1
020C:0F49  E8 0272				call	sub_21			; (11BE)
020C:0F4C  61					db	61h
020C:0F4D			loc_92:
020C:0F4D  83 C4 02				add	sp,2
020C:0F50  E9 0209				jmp	loc_125			; (115C)
020C:0F53  00 00				add	[bx+si],al
020C:0F55  E8 01BC				call	sub_19			; (1114)
020C:0F58  B3 91				mov	bl,91h
020C:0F5A  3C 40				cmp	al,40h			; '@'
020C:0F5C  75 06				jne	loc_93			; Jump if not equal
020C:0F5E  3B 16 0263				cmp	dx,word ptr ds:[263h]	; (020C:0263=0)
020C:0F62  74 21				je	loc_94			; Jump if equal
020C:0F64			loc_93:
020C:0F64  80 3E 0026 01			cmp	byte ptr ds:[26h],1	; (020C:0026=3)
020C:0F69  74 1A				je	loc_94			; Jump if equal
020C:0F6B  B3 90				mov	bl,90h
020C:0F6D  80 3E 0029 00			cmp	byte ptr ds:[29h],0	; (020C:0029=14h)
020C:0F72  74 11				je	loc_94			; Jump if equal
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 21

020C:0F74  B3 92				mov	bl,92h
020C:0F76  3B 16 0033				cmp	dx,word ptr ds:[33h]	; (020C:0033=0Ch)
020C:0F7A  72 09				jb	loc_94			; Jump if below
020C:0F7C  B8 0001				mov	ax,1
020C:0F7F  A2 0026				mov	byte ptr ds:[26h],al	; (020C:0026=3)
020C:0F82  32 DB				xor	bl,bl			; Zero register
020C:0F84  C3					retn
020C:0F85			loc_94:
020C:0F85  33 C0				xor	ax,ax			; Zero register
020C:0F87  C3					retn
							                        ;* No entry point to code
020C:0F88  E8 0189				call	sub_19			; (1114)
020C:0F8B  A0 0026				mov	al,byte ptr ds:[26h]	; (020C:0026=3)
020C:0F8E  0A C0				or	al,al			; Zero ?
020C:0F90  74 0B				jz	loc_95			; Jump if zero
020C:0F92  C6 06 0026 00			mov	byte ptr ds:[26h],0	; (020C:0026=3)
020C:0F97  B8 0001				mov	ax,1
020C:0F9A  32 DB				xor	bl,bl			; Zero register
020C:0F9C  C3					retn
020C:0F9D			loc_95:
020C:0F9D  33 C0				xor	ax,ax			; Zero register
020C:0F9F  B3 93				mov	bl,93h
020C:0FA1  C3					retn
							                        ;* No entry point to code
020C:0FA2  E8 016F				call	sub_19			; (1114)
020C:0FA5  83 3E 0031 01			cmp	word ptr ds:[31h],1	; (020C:0031=3F3Eh)
020C:0FAA  74 0D				je	loc_96			; Jump if equal
020C:0FAC  E8 0037				call	sub_15			; (0FE6)
020C:0FAF  0B C0				or	ax,ax			; Zero ?
020C:0FB1  74 0C				jz	loc_97			; Jump if zero
020C:0FB3  C7 06 0031 0001			mov	word ptr ds:[31h],1	; (020C:0031=3F3Eh)
020C:0FB9			loc_96:
020C:0FB9  B8 0001				mov	ax,1
020C:0FBC  32 DB				xor	bl,bl			; Zero register
020C:0FBE  C3					retn
020C:0FBF			loc_97:
020C:0FBF  B3 82				mov	bl,82h
020C:0FC1  33 C0				xor	ax,ax			; Zero register
020C:0FC3  C3					retn
							                        ;* No entry point to code
020C:0FC4  E8 014D				call	sub_19			; (1114)
020C:0FC7  83 3E 0031 00			cmp	word ptr ds:[31h],0	; (020C:0031=3F3Eh)
020C:0FCC  74 0D				je	loc_98			; Jump if equal
020C:0FCE  E8 004F				call	sub_16			; (1020)
020C:0FD1  0B C0				or	ax,ax			; Zero ?
020C:0FD3  74 0C				jz	loc_99			; Jump if zero
020C:0FD5  C7 06 0031 0000			mov	word ptr ds:[31h],0	; (020C:0031=3F3Eh)
020C:0FDB			loc_98:
020C:0FDB  B8 0001				mov	ax,1
020C:0FDE  32 DB				xor	bl,bl			; Zero register
020C:0FE0  C3					retn
020C:0FE1			loc_99:
020C:0FE1  B3 82				mov	bl,82h
020C:0FE3  33			data_133	db	33h
020C:0FE4  C0					db	0C0h
020C:0FE5  C3					retn

           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 22

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:0FE6			sub_15		proc	near
020C:0FE6  E8 012B				call	sub_19			; (1114)
020C:0FE9  80 3E 0027 01			cmp	byte ptr ds:[27h],1	; (020C:0027=4)
020C:0FEE  75 25				jne	loc_103			; Jump if not equal
020C:0FF0  C6 06 003B 03			mov	byte ptr ds:[3Bh],3	; (020C:003B=0)
020C:0FF5  83 3E 002F 00			cmp	word ptr ds:[2Fh],0	; (020C:002F=3D3Ch)
020C:0FFA  74 07				je	loc_101			; Jump if equal
020C:0FFC			loc_100:
020C:0FFC  E8 008A				call	sub_17			; (1089)
020C:0FFF  0B C0				or	ax,ax			; Zero ?
020C:1001  75			data_134	db	75h			; Data table (indexed access)
020C:1002  0E					push	cs
020C:1003			loc_101:
020C:1003  B8 0001				mov	ax,1
020C:1006  E8 01B5				call	sub_21			; (11BE)
020C:1009  FE 0E 003B				dec	byte ptr ds:[3Bh]	; (020C:003B=0)
020C:100D  75 ED				jnz	loc_100			; Jump if not zero
020C:100F  EB 0A				jmp	short loc_104		; (101B)
020C:1011			loc_102:
020C:1011  FF 06 002F				inc	word ptr ds:[2Fh]	; (020C:002F=3D3Ch)
020C:1015			loc_103:
020C:1015  B8 0001				mov	ax,1
020C:1018  32 DB				xor	bl,bl			; Zero register
020C:101A  C3					retn
020C:101B			loc_104:
020C:101B  B3 82				mov	bl,82h
020C:101D  33 C0				xor	ax,ax			; Zero register
020C:101F  C3					retn
				sub_15		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:1020			sub_16		proc	near
020C:1020  E8 00F1				call	sub_19			; (1114)
020C:1023  80 3E 0027 00			cmp	byte ptr ds:[27h],0	; (020C:0027=4)
020C:1028  74 34				je	loc_109			; Jump if equal
020C:102A  83 3E 002F 00			cmp	word ptr ds:[2Fh],0	; (020C:002F=3D3Ch)
020C:102F  74 33				je	loc_110			; Jump if equal
020C:1031  C6 06 003B 03			mov	byte ptr ds:[3Bh],3	; (020C:003B=0)
020C:1036			loc_105:
020C:1036  E8 0050				call	sub_17			; (1089)
020C:1039  83 3E 002F 01			cmp	word ptr ds:[2Fh],1	; (020C:002F=3D3Ch)
020C:103E  0875			data_135	dw	875h			; Data table (indexed access)
020C:1040  0B C0				or	ax,ax			; Zero ?
020C:1042  74 16				jz	loc_108			; Jump if zero
020C:1044  33 C0				xor	ax,ax			; Zero register
020C:1046  EB 07				jmp	short loc_107		; (104F)
020C:1048			loc_106:
020C:1048  0B C0				or	ax,ax			; Zero ?
020C:104A  75 0E				jnz	loc_108			; Jump if not zero
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 23

020C:104C  B8 0001				mov	ax,1
020C:104F			loc_107:
020C:104F  E8 016C				call	sub_21			; (11BE)
020C:1052  FE 0E 003B				dec	byte ptr ds:[3Bh]	; (020C:003B=0)
020C:1056  75 DE				jnz	loc_105			; Jump if not zero
020C:1058  EB 0A				jmp	short loc_110		; (1064)
020C:105A			loc_108:
020C:105A  FF 0E 002F				dec	word ptr ds:[2Fh]	; (020C:002F=3D3Ch)
020C:105E			loc_109:
020C:105E  B8 0001				mov	ax,1
020C:1061  32 DB				xor	bl,bl			; Zero register
020C:1063  C3					retn
020C:1064			loc_110:
020C:1064  B3 82				mov	bl,82h
020C:1066  33 C0				xor	ax,ax			; Zero register
020C:1068  C3					retn
				sub_16		endp

							                        ;* No entry point to code
020C:1069  2E: 80 3E 002B 00			cmp	byte ptr cs:[2Bh],0	; (020C:002B=38h)
020C:106F  74 04				je	loc_111			; Jump if equal
020C:1071  B8 0001				mov	ax,1
020C:1074  CB					retf				; Return far
020C:1075			loc_111:
020C:1075  E8 FF6E				call	sub_15			; (0FE6)
020C:1078  CB					retf
							                        ;* No entry point to code
020C:1079  2E: 80 3E 002B 00			cmp	byte ptr cs:[2Bh],0	; (020C:002B=38h)
020C:107F  74 04				je	loc_112			; Jump if equal
020C:1081  B8 0001				mov	ax,1
020C:1084  CB					retf				; Return far
020C:1085			loc_112:
020C:1085  E8 FF98				call	sub_16			; (1020)
020C:1088  CB					retf				; Return far

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:1089			sub_17		proc	near
020C:1089  2E: A0 003C				mov	al,byte ptr cs:[3Ch]	; (020C:003C=10h)
020C:108D  98					cbw				; Convrt byte to word
020C:108E  32 DB				xor	bl,bl			; Zero register
020C:1090  C3					retn
				sub_17		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:1091			sub_18		proc	near
020C:1091  8B D0				mov	dx,ax
020C:1093  8B F1				mov	si,cx
020C:1095  33 FF				xor	di,di			; Zero register
020C:1097  06					push	es
020C:1098  8E 06 014D				mov	es,word ptr ds:[14Dh]	; (020C:014D=5582h)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 24

020C:109C  26: 8B 1E A004			mov	bx,word ptr es:[0A004h]	; (5582:A004=0FFFFh)
020C:10A1  26: 8B 0E A008			mov	cx,word ptr es:[0A008h]	; (5582:A008=0FFFFh)

020C:10A6			locloop_113:
020C:10A6  26: 80 3F 04				cmp	byte ptr es:[bx],4
020C:10AA  75 08				jne	loc_114			; Jump if not equal
020C:10AC  0B FF				or	di,di			; Zero ?
020C:10AE  75 48				jnz	loc_117			; Jump if not zero
020C:10B0  8B FB				mov	di,bx
020C:10B2  EB 44				jmp	short loc_117		; (10F8)
020C:10B4			loc_114:
020C:10B4  26: 80 3F 01				cmp	byte ptr es:[bx],1
020C:10B8  75 3E				jne	loc_117			; Jump if not equal
020C:10BA  26: 8B 47 02				mov	ax,es:[bx+2]
020C:10BE  26: 03 47 04				add	ax,es:[bx+4]
020C:10C2  3B C6				cmp	ax,si
020C:10C4  72 32				jb	loc_117			; Jump if below
020C:10C6  8B C6				mov	ax,si
020C:10C8  03 C2				add	ax,dx
020C:10CA  26: 3B 47 02				cmp	ax,es:[bx+2]
020C:10CE  72 28				jb	loc_117			; Jump if below
020C:10D0  26: 3B 77 02				cmp	si,es:[bx+2]
020C:10D4  76 08				jbe	loc_115			; Jump if below or =
020C:10D6  03 D6				add	dx,si
020C:10D8  26: 8B 77 02				mov	si,es:[bx+2]
020C:10DC  2B D6				sub	dx,si
020C:10DE			loc_115:
020C:10DE  26: 8B 47 02				mov	ax,es:[bx+2]
020C:10E2  26: 03 47 04				add	ax,es:[bx+4]
020C:10E6  2B C2				sub	ax,dx
020C:10E8  2B C6				sub	ax,si
020C:10EA  76 02				jbe	loc_116			; Jump if below or =
020C:10EC  03 D0				add	dx,ax
020C:10EE			loc_116:
020C:10EE  26: C6 07 04				mov	byte ptr es:[bx],4
020C:10F2  0B FF				or	di,di			; Zero ?
020C:10F4  75 02				jnz	loc_117			; Jump if not zero
020C:10F6  8B FB				mov	di,bx
020C:10F8			loc_117:
020C:10F8  83 C3 06				add	bx,6
020C:10FB  E2 A9				loop	locloop_113		; Loop if cx > 0

020C:10FD  0B FF				or	di,di			; Zero ?
020C:10FF  74 11				jz	loc_118			; Jump if zero
020C:1101  26: C6 45 01 00			mov	byte ptr es:[di+1],0
020C:1106  26: C6 05 01				mov	byte ptr es:[di],1
020C:110A  26: 89 75 02				mov	es:[di+2],si
020C:110E  26: 89 55 04				mov	es:[di+4],dx
020C:1112			loc_118:
020C:1112  07					pop	es
020C:1113  C3					retn
				sub_18		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 25


020C:1114			sub_19		proc	near
020C:1114  1E					push	ds
020C:1115  50					push	ax
020C:1116  B8 0040				mov	ax,40h
020C:1119  8E D8				mov	ds,ax
020C:111B  9F					lahf				; Load ah from flags
020C:111C  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020C:1122  75 0C				jnz	loc_120			; Jump if not zero
020C:1124  F0> 81 26 0314 FDFF	                           lock	and	word ptr ds:[314h],0FDFFh	; (0040:0314=3200h)
020C:112B			loc_119:
020C:112B  9E					sahf				; Store ah into flags
020C:112C  58					pop	ax
020C:112D  1F					pop	ds
020C:112E  EB 03				jmp	short loc_121		; (1133)
020C:1130			loc_120:
020C:1130  FA					cli				; Disable interrupts
020C:1131  EB F8				jmp	short loc_119		; (112B)
020C:1133			loc_121:
020C:1133  C3					retn
				sub_19		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:1134			sub_20		proc	near
020C:1134  1E					push	ds
020C:1135  50					push	ax
020C:1136  B8 0040				mov	ax,40h
020C:1139  8E D8				mov	ds,ax
020C:113B  9F					lahf				; Load ah from flags
020C:113C  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020C:1142  75 14				jnz	loc_123			; Jump if not zero
020C:1144  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020C:114A  75 0C				jnz	loc_123			; Jump if not zero
020C:114C  F0> 81 0E 0314 0200	                           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020C:1153			loc_122:
020C:1153  9E					sahf				; Store ah into flags
020C:1154  58					pop	ax
020C:1155  1F					pop	ds
020C:1156  EB 03				jmp	short loc_124		; (115B)
020C:1158			loc_123:
020C:1158  FB					sti				; Enable interrupts
020C:1159  EB F8				jmp	short loc_122		; (1153)
020C:115B			loc_124:
020C:115B  C3					retn
				sub_20		endp

020C:115C			loc_125:
020C:115C  1E					push	ds
020C:115D  50					push	ax
020C:115E  B8 0040				mov	ax,40h
020C:1161  8E D8				mov	ds,ax
020C:1163  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020C:1169  75 4F				jnz	loc_133			; Jump if not zero
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 26

020C:116B  55					push	bp
020C:116C  8B EC				mov	bp,sp
020C:116E  8B 46 0A				mov	ax,[bp+0Ah]
020C:1171  5D					pop	bp
020C:1172  A9 0100				test	ax,100h
020C:1175  75 43				jnz	loc_133			; Jump if not zero
020C:1177  A9 0200				test	ax,200h
020C:117A  74 22				jz	loc_129			; Jump if zero
020C:117C  F0> 81 0E 0314 0200	                           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020C:1183  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020C:1189  75 2F				jnz	loc_133			; Jump if not zero
020C:118B			loc_126:
020C:118B  86 E0				xchg	ah,al
020C:118D  FC					cld				; Clear direction
020C:118E  A8 04				test	al,4
020C:1190  75 25				jnz	loc_132			; Jump if not zero
020C:1192			loc_127:
020C:1192  A8 08				test	al,8
020C:1194  75 11				jnz	loc_130			; Jump if not zero
020C:1196  70 19				jo	loc_131			; Jump if overflow=1
020C:1198			loc_128:
020C:1198  9E					sahf				; Store ah into flags
020C:1199  58					pop	ax
020C:119A  1F					pop	ds
020C:119B  CA 0002				retf	2			; Return far
020C:119E			loc_129:
020C:119E  F0> 81 26 0314 FDFF	                           lock	and	word ptr ds:[314h],0FDFFh	; (020C:0314=3231h)
020C:11A5  EB E4				jmp	short loc_126		; (118B)
020C:11A7			loc_130:
020C:11A7  70 EF				jo	loc_128			; Jump if overflow=1
020C:11A9  50					push	ax
020C:11AA  B0 7F				mov	al,7Fh
020C:11AC  04 02				add	al,2
020C:11AE  58					pop	ax
020C:11AF  EB E7				jmp	short loc_128		; (1198)
020C:11B1			loc_131:
020C:11B1  50					push	ax
020C:11B2  32 C0				xor	al,al			; Zero register
020C:11B4  58					pop	ax
020C:11B5  EB E1				jmp	short loc_128		; (1198)
020C:11B7			loc_132:
020C:11B7  FD					std				; Set direction flag
020C:11B8  EB D8				jmp	short loc_127		; (1192)
020C:11BA			loc_133:
020C:11BA  58					pop	ax
020C:11BB  1F					pop	ds
020C:11BC  CF					iret				; Interrupt return
020C:11BD  00 3D				add	[di],bh
020C:11BF  02 00				add	al,[bx+si]
020C:11C1  75 06				jnz	loc_134			; Jump if not zero
020C:11C3  2E: A0 003C				mov	al,byte ptr cs:[3Ch]	; (020C:003C=10h)
020C:11C7  98					cbw				; Convrt byte to word
020C:11C8  C3					retn
020C:11C9			loc_134:
020C:11C9  C4					db	0C4h
020C:11CA  C4 52 00		;*		les	dx,dword ptr [bp+si+0]	; Load seg:offset ptr
020C:11CA  C4 52 00				db	0C4h, 52h, 00h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 27

020C:11CD  C3					retn
							                        ;* No entry point to code
020C:11CE  2E: C6 46 2A 03			mov	byte ptr cs:[bp+2Ah],3
020C:11D3  49					dec	cx
020C:11D4  00 00				add	[bx+si],al
020C:11D6  0D 002F				or	ax,2Fh
020C:11D9  00 06 0600				add	byte ptr ds:[600h],al	; (020C:0600=2)
020C:11DD  00 0F				add	[bx],cl
020C:11DF  61					db	61h
020C:11E0  FF					db	0FFh
020C:11E1  FF 06 2300				inc	data_449		; (020C:2300=0)
020C:11E5  0021[00]				db	33 dup (0)
020C:1206  00			data_137	db	0
020C:1207  00			data_138	db	0
020C:1208  00			data_139	db	0
020C:1209  00			data_140	db	0
020C:120A  00			data_141	db	0
020C:120B  00					db	0
020C:120C  00					db	0
020C:120D  00					db	0
020C:120E  00					db	0
020C:120F  00					db	0
020C:1210  00					db	0
020C:1211  00					db	0
020C:1212  0000			data_142	dw	0
020C:1214  00					db	0
020C:1215  00					db	0
020C:1216  00					db	0
020C:1217  00					db	0
020C:1218  0000			data_143	dw	0
020C:121A  00					db	0
020C:121B  00					db	0
020C:121C  0000			data_144	dw	0
020C:121E  00					db	0
020C:121F  00					db	0
020C:1220  0000			data_145	dw	0
020C:1222  0000			data_146	dw	0
020C:1224  00					db	0
020C:1225  00					db	0
020C:1226  0000			data_147	dw	0
020C:1228  0000			data_148	dw	0
020C:122A  0000			data_149	dw	0
020C:122C  00					db	0
020C:122D  00					db	0
020C:122E  00					db	0
020C:122F  00					db	0
020C:1230  0000			data_150	dw	0
020C:1232  0000			data_151	dw	0
020C:1234  0000			data_152	dw	0
020C:1236  00					db	0
020C:1237  00					db	0
020C:1238  00					db	0
020C:1239  00					db	0
020C:123A  00					db	0
020C:123B  00					db	0
020C:123C  00					db	0
020C:123D  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 28

020C:123E  00					db	0
020C:123F  00					db	0
020C:1240  00					db	0
020C:1241  00					db	0
020C:1242  0000			data_153	dw	0
020C:1244  0000			data_154	dw	0
020C:1246  0000			data_155	dw	0
020C:1248  00					db	0
020C:1249  00					db	0
020C:124A  00					db	0
020C:124B  00					db	0
020C:124C  00					db	0
020C:124D  00					db	0
020C:124E  00					db	0
020C:124F  00					db	0
020C:1250  00					db	0
020C:1251  00					db	0
020C:1252  00					db	0
020C:1253  00					db	0
020C:1254  00					db	0
020C:1255  00					db	0
020C:1256  00					db	0
020C:1257  00					db	0
020C:1258  00					db	0
020C:1259  00					db	0
020C:125A  00					db	0
020C:125B  00					db	0
020C:125C  00					db	0
020C:125D  00					db	0
020C:125E  00					db	0
020C:125F  00					db	0
020C:1260  00					db	0
020C:1261  00					db	0
020C:1262  00					db	0
020C:1263  00					db	0
020C:1264  00					db	0
020C:1265  00					db	0
020C:1266  00					db	0
020C:1267  00					db	0
020C:1268  00					db	0
020C:1269  00					db	0
020C:126A  00					db	0
020C:126B  00					db	0
020C:126C  00					db	0
020C:126D  00					db	0
020C:126E  00					db	0
020C:126F  00					db	0
020C:1270  00					db	0
020C:1271  00					db	0
020C:1272  00					db	0
020C:1273  00					db	0
020C:1274  00					db	0
020C:1275  00					db	0
020C:1276  00					db	0
020C:1277  00					db	0
020C:1278  00					db	0
020C:1279  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 29

020C:127A  00					db	0
020C:127B  00					db	0
020C:127C  00					db	0
020C:127D  00					db	0
020C:127E  00					db	0
020C:127F  00					db	0
020C:1280  00					db	0
020C:1281  00					db	0
020C:1282  00					db	0
020C:1283  00					db	0
020C:1284  00					db	0
020C:1285  00					db	0
020C:1286  00					db	0
020C:1287  00					db	0
020C:1288  00					db	0
020C:1289  00					db	0
020C:128A  00					db	0
020C:128B  00					db	0
020C:128C  00					db	0
020C:128D  00					db	0
020C:128E  00					db	0
020C:128F  00					db	0
020C:1290  00					db	0
020C:1291  00					db	0
020C:1292  00					db	0
020C:1293  00					db	0
020C:1294  00					db	0
020C:1295  00					db	0
020C:1296  00					db	0
020C:1297  00					db	0
020C:1298  00					db	0
020C:1299  00					db	0
020C:129A  00					db	0
020C:129B  00					db	0
020C:129C  00					db	0
020C:129D  00					db	0
020C:129E  00					db	0
020C:129F  00					db	0
020C:12A0  00					db	0
020C:12A1  00					db	0
020C:12A2  00					db	0
020C:12A3  00					db	0
020C:12A4  00					db	0
020C:12A5  00					db	0
020C:12A6  00					db	0
020C:12A7  00					db	0
020C:12A8  00					db	0
020C:12A9  00					db	0
020C:12AA  00					db	0
020C:12AB  00					db	0
020C:12AC  00					db	0
020C:12AD  00					db	0
020C:12AE  00					db	0
020C:12AF  00					db	0
020C:12B0  00					db	0
020C:12B1  00					db	0
020C:12B2  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 30

020C:12B3  00					db	0
020C:12B4  00					db	0
020C:12B5  00					db	0
020C:12B6  00					db	0
020C:12B7  00					db	0
020C:12B8  00					db	0
020C:12B9  00					db	0
020C:12BA  00					db	0
020C:12BB  00					db	0
020C:12BC  00					db	0
020C:12BD  00					db	0
020C:12BE  00					db	0
020C:12BF  00					db	0
020C:12C0  00					db	0
020C:12C1  00					db	0
020C:12C2  00					db	0
020C:12C3  00					db	0
020C:12C4  00					db	0
020C:12C5  00					db	0
020C:12C6  00					db	0
020C:12C7  00					db	0
020C:12C8  00					db	0
020C:12C9  00					db	0
020C:12CA  00					db	0
020C:12CB  00					db	0
020C:12CC  00					db	0
020C:12CD  00					db	0
020C:12CE  00					db	0
020C:12CF  00					db	0
020C:12D0  00					db	0
020C:12D1  00					db	0
020C:12D2  00					db	0
020C:12D3  00					db	0
020C:12D4  00					db	0
020C:12D5  00					db	0
020C:12D6  00					db	0
020C:12D7  00					db	0
020C:12D8  00					db	0
020C:12D9  00					db	0
020C:12DA  00					db	0
020C:12DB  00					db	0
020C:12DC  00					db	0
020C:12DD  00					db	0
020C:12DE  00					db	0
020C:12DF  00					db	0
020C:12E0  00					db	0
020C:12E1  00					db	0
020C:12E2  00					db	0
020C:12E3  00					db	0
020C:12E4  00					db	0
020C:12E5  00					db	0
020C:12E6  00					db	0
020C:12E7  00					db	0
020C:12E8  00					db	0
020C:12E9  00					db	0
020C:12EA  00					db	0
020C:12EB  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 31

020C:12EC  00					db	0
020C:12ED  00					db	0
020C:12EE  00					db	0
020C:12EF  00					db	0
020C:12F0  00					db	0
020C:12F1  00					db	0
020C:12F2  00					db	0
020C:12F3  00					db	0
020C:12F4  00					db	0
020C:12F5  00					db	0
020C:12F6  00					db	0
020C:12F7  00					db	0
020C:12F8  00					db	0
020C:12F9  00					db	0
020C:12FA  00					db	0
020C:12FB  00					db	0
020C:12FC  00					db	0
020C:12FD  00					db	0
020C:12FE  00					db	0
020C:12FF  00					db	0
020C:1300  00					db	0
020C:1301  00					db	0
020C:1302  00					db	0
020C:1303  00					db	0
020C:1304  00					db	0
020C:1305  00					db	0
020C:1306  00					db	0
020C:1307  00					db	0
020C:1308  00					db	0
020C:1309  00					db	0
020C:130A  00					db	0
020C:130B  00					db	0
020C:130C  00					db	0
020C:130D  00					db	0
020C:130E  00					db	0
020C:130F  00					db	0
020C:1310  00					db	0
020C:1311  00					db	0
020C:1312  00					db	0
020C:1313  00					db	0
020C:1314  00					db	0
020C:1315  00					db	0
020C:1316  00					db	0
020C:1317  00					db	0
020C:1318  00					db	0
020C:1319  00					db	0
020C:131A  00					db	0
020C:131B  0000			data_156	dw	0
020C:131D  0000			data_157	dw	0
020C:131F  0000			data_158	dw	0
020C:1321  0000			data_159	dw	0
020C:1323  00					db	0
020C:1324  00					db	0
020C:1325  00					db	0
020C:1326  0000			data_160	dw	0
020C:1328  00			data_161	db	0
020C:1329  00			data_162	db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 32

020C:132A  00					db	0
020C:132B  00					db	0
020C:132C  00					db	0
020C:132D  00					db	0
020C:132E  00					db	0
020C:132F  00					db	0
020C:1330  00					db	0
020C:1331  00					db	0
020C:1332  00					db	0
020C:1333  00					db	0
020C:1334  00					db	0
020C:1335  00					db	0
020C:1336  00					db	0
020C:1337  00					db	0
020C:1338  00					db	0
020C:1339  00					db	0
020C:133A  00					db	0
020C:133B  00					db	0
020C:133C  00					db	0
020C:133D  00					db	0
020C:133E  00			data_163	db	0
020C:133F  00					db	0
020C:1340  00					db	0
020C:1341  00					db	0
020C:1342  00					db	0
020C:1343  00					db	0
020C:1344  00					db	0
020C:1345  0000			data_164	dw	0
020C:1347  00					db	0
020C:1348  00					db	0
020C:1349  00					db	0
020C:134A  00					db	0
020C:134B  00					db	0
020C:134C  00					db	0
020C:134D  00					db	0
020C:134E  00					db	0
020C:134F  00					db	0
020C:1350  00					db	0
020C:1351  00					db	0
020C:1352  00					db	0
020C:1353  00					db	0
020C:1354  00					db	0
020C:1355  00					db	0
020C:1356  00					db	0
020C:1357  00					db	0
020C:1358  00					db	0
020C:1359  00					db	0
020C:135A  00					db	0
020C:135B  00					db	0
020C:135C  00					db	0
020C:135D  00					db	0
020C:135E  00					db	0
020C:135F  00					db	0
020C:1360  00					db	0
020C:1361  00					db	0
020C:1362  00					db	0
020C:1363  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 33

020C:1364  00					db	0
020C:1365  00					db	0
020C:1366  00					db	0
020C:1367  00					db	0
020C:1368  00					db	0
020C:1369  00					db	0
020C:136A  00					db	0
020C:136B  00					db	0
020C:136C  00					db	0
020C:136D  00					db	0
020C:136E  00					db	0
020C:136F  00					db	0
020C:1370  00					db	0
020C:1371  0000			data_165	dw	0
020C:1373  00					db	0
020C:1374  00					db	0
020C:1375  00					db	0
020C:1376  00					db	0
020C:1377  00					db	0
020C:1378  00					db	0
020C:1379  00					db	0
020C:137A  00					db	0
020C:137B  00					db	0
020C:137C  00					db	0
020C:137D  00					db	0
020C:137E  00					db	0
020C:137F  00					db	0
020C:1380  00					db	0
020C:1381  00					db	0
020C:1382  00					db	0
020C:1383  00					db	0
020C:1384  00					db	0
020C:1385  00					db	0
020C:1386  00					db	0
020C:1387  00					db	0
020C:1388  00					db	0
020C:1389  00					db	0
020C:138A  00					db	0
020C:138B  00					db	0
020C:138C  00					db	0
020C:138D  00					db	0
020C:138E  00					db	0
020C:138F  00					db	0
020C:1390  00					db	0
020C:1391  00					db	0
020C:1392  00					db	0
020C:1393  00					db	0
020C:1394  00					db	0
020C:1395  00					db	0
020C:1396  00					db	0
020C:1397  00					db	0
020C:1398  00					db	0
020C:1399  00					db	0
020C:139A  00					db	0
020C:139B  00					db	0
020C:139C  00					db	0
020C:139D  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 34

020C:139E  00					db	0
020C:139F  00					db	0
020C:13A0  00					db	0
020C:13A1  00					db	0
020C:13A2  00					db	0
020C:13A3  00					db	0
020C:13A4  00					db	0
020C:13A5  00					db	0
020C:13A6  00					db	0
020C:13A7  00					db	0
020C:13A8  00					db	0
020C:13A9  00					db	0
020C:13AA  00					db	0
020C:13AB  00					db	0
020C:13AC  00					db	0
020C:13AD  00					db	0
020C:13AE  00					db	0
020C:13AF  00					db	0
020C:13B0  00					db	0
020C:13B1  00					db	0
020C:13B2  00					db	0
020C:13B3  00					db	0
020C:13B4  00					db	0
020C:13B5  00					db	0
020C:13B6  00					db	0
020C:13B7  00					db	0
020C:13B8  00					db	0
020C:13B9  00					db	0
020C:13BA  00					db	0
020C:13BB  00					db	0
020C:13BC  00					db	0
020C:13BD  00					db	0
020C:13BE  00					db	0
020C:13BF  00					db	0
020C:13C0  00					db	0
020C:13C1  00					db	0
020C:13C2  00					db	0
020C:13C3  00					db	0
020C:13C4  00					db	0
020C:13C5  00					db	0
020C:13C6  00					db	0
020C:13C7  00					db	0
020C:13C8  00					db	0
020C:13C9  00					db	0
020C:13CA  00					db	0
020C:13CB  00					db	0
020C:13CC  00					db	0
020C:13CD  00					db	0
020C:13CE  00					db	0
020C:13CF  00					db	0
020C:13D0  00					db	0
020C:13D1  00					db	0
020C:13D2  00					db	0
020C:13D3  00					db	0
020C:13D4  00					db	0
020C:13D5  00					db	0
020C:13D6  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 35

020C:13D7  00					db	0
020C:13D8  00					db	0
020C:13D9  00					db	0
020C:13DA  00					db	0
020C:13DB  00					db	0
020C:13DC  00					db	0
020C:13DD  00					db	0
020C:13DE  00					db	0
020C:13DF  00					db	0
020C:13E0  00					db	0
020C:13E1  00					db	0
020C:13E2  00					db	0
020C:13E3  00					db	0
020C:13E4  00					db	0
020C:13E5  00					db	0
020C:13E6  00					db	0
020C:13E7  00					db	0
020C:13E8  00					db	0
020C:13E9  00					db	0
020C:13EA  00					db	0
020C:13EB  00					db	0
020C:13EC  00					db	0
020C:13ED  00					db	0
020C:13EE  00					db	0
020C:13EF  00					db	0
020C:13F0  00			data_166	db	0
020C:13F1  0000			data_167	dw	0
020C:13F3  0000			data_168	dw	0
020C:13F5  00					db	0
020C:13F6  00					db	0
020C:13F7  00					db	0
020C:13F8  00					db	0
020C:13F9  00					db	0
020C:13FA  00					db	0
020C:13FB  00					db	0
020C:13FC  00					db	0
020C:13FD  00					db	0
020C:13FE  00					db	0
020C:13FF  00					db	0
020C:1400  00					db	0
020C:1401  00					db	0
020C:1402  00					db	0
020C:1403  00					db	0
020C:1404  00					db	0
020C:1405  00					db	0
020C:1406  00					db	0
020C:1407  00					db	0
020C:1408  00					db	0
020C:1409  00					db	0
020C:140A  00					db	0
020C:140B  00					db	0
020C:140C  00					db	0
020C:140D  00					db	0
020C:140E  00					db	0
020C:140F  00					db	0
020C:1410  00					db	0
020C:1411  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 36

020C:1412  00					db	0
020C:1413  00					db	0
020C:1414  00					db	0
020C:1415  00					db	0
020C:1416  00					db	0
020C:1417  00					db	0
020C:1418  00					db	0
020C:1419  00					db	0
020C:141A  00					db	0
020C:141B  00					db	0
020C:141C  00					db	0
020C:141D  00					db	0
020C:141E  00					db	0
020C:141F  00					db	0
020C:1420  00					db	0
020C:1421  00					db	0
020C:1422  00					db	0
020C:1423  00					db	0
020C:1424  00					db	0
020C:1425  00					db	0
020C:1426  00					db	0
020C:1427  00					db	0
020C:1428  00					db	0
020C:1429  00					db	0
020C:142A  00					db	0
020C:142B  00					db	0
020C:142C  00					db	0
020C:142D  00					db	0
020C:142E  00					db	0
020C:142F  00					db	0
020C:1430  00					db	0
020C:1431  00					db	0
020C:1432  00					db	0
020C:1433  00					db	0
020C:1434  00					db	0
020C:1435  00					db	0
020C:1436  00					db	0
020C:1437  00					db	0
020C:1438  00					db	0
020C:1439  00					db	0
020C:143A  00					db	0
020C:143B  00					db	0
020C:143C  00					db	0
020C:143D  00					db	0
020C:143E  00					db	0
020C:143F  00					db	0
020C:1440  00					db	0
020C:1441  00					db	0
020C:1442  00					db	0
020C:1443  00					db	0
020C:1444  00					db	0
020C:1445  00					db	0
020C:1446  00					db	0
020C:1447  00					db	0
020C:1448  00					db	0
020C:1449  00					db	0
020C:144A  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 37

020C:144B  00					db	0
020C:144C  00					db	0
020C:144D  00					db	0
020C:144E  00					db	0
020C:144F  00					db	0
020C:1450  00					db	0
020C:1451  00					db	0
020C:1452  00					db	0
020C:1453  00					db	0
020C:1454  00					db	0
020C:1455  00					db	0
020C:1456  00					db	0
020C:1457  00					db	0
020C:1458  00					db	0
020C:1459  00					db	0
020C:145A  00					db	0
020C:145B  00					db	0
020C:145C  00					db	0
020C:145D  00					db	0
020C:145E  00					db	0
020C:145F  00					db	0
020C:1460  00					db	0
020C:1461  00					db	0
020C:1462  00					db	0
020C:1463  00					db	0
020C:1464  00					db	0
020C:1465  00					db	0
020C:1466  00					db	0
020C:1467  00					db	0
020C:1468  00					db	0
020C:1469  00					db	0
020C:146A  00					db	0
020C:146B  00					db	0
020C:146C  00					db	0
020C:146D  00					db	0
020C:146E  00					db	0
020C:146F  00					db	0
020C:1470  00					db	0
020C:1471  00					db	0
020C:1472  00					db	0
020C:1473  00					db	0
020C:1474  00					db	0
020C:1475  00					db	0
020C:1476  00					db	0
020C:1477  00					db	0
020C:1478  00					db	0
020C:1479  00					db	0
020C:147A  00					db	0
020C:147B  00					db	0
020C:147C  00					db	0
020C:147D  00					db	0
020C:147E  00					db	0
020C:147F  00					db	0
020C:1480  00					db	0
020C:1481  00					db	0
020C:1482  00					db	0
020C:1483  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 38

020C:1484  00					db	0
020C:1485  00					db	0
020C:1486  00					db	0
020C:1487  00					db	0
020C:1488  00					db	0
020C:1489  00					db	0
020C:148A  00					db	0
020C:148B  00					db	0
020C:148C  00					db	0
020C:148D  00					db	0
020C:148E  00					db	0
020C:148F  00					db	0
020C:1490  00					db	0
020C:1491  00					db	0
020C:1492  00					db	0
020C:1493  00					db	0
020C:1494  00					db	0
020C:1495  00					db	0
020C:1496  00					db	0
020C:1497  00					db	0
020C:1498  00					db	0
020C:1499  00					db	0
020C:149A  00					db	0
020C:149B  00					db	0
020C:149C  00					db	0
020C:149D  00					db	0
020C:149E  00					db	0
020C:149F  00					db	0
020C:14A0  00					db	0
020C:14A1  00					db	0
020C:14A2  00					db	0
020C:14A3  00					db	0
020C:14A4  00					db	0
020C:14A5  00					db	0
020C:14A6  00					db	0
020C:14A7  00					db	0
020C:14A8  00					db	0
020C:14A9  00					db	0
020C:14AA  00					db	0
020C:14AB  00					db	0
020C:14AC  00					db	0
020C:14AD  00					db	0
020C:14AE  00					db	0
020C:14AF  00					db	0
020C:14B0  00					db	0
020C:14B1  00					db	0
020C:14B2  00					db	0
020C:14B3  00					db	0
020C:14B4  00					db	0
020C:14B5  00					db	0
020C:14B6  00					db	0
020C:14B7  00					db	0
020C:14B8  00					db	0
020C:14B9  00					db	0
020C:14BA  00					db	0
020C:14BB  00					db	0
020C:14BC  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 39

020C:14BD  00					db	0
020C:14BE  00					db	0
020C:14BF  00					db	0
020C:14C0  00					db	0
020C:14C1  00					db	0
020C:14C2  00					db	0
020C:14C3  00					db	0
020C:14C4  00					db	0
020C:14C5  00					db	0
020C:14C6  00					db	0
020C:14C7  00					db	0
020C:14C8  00					db	0
020C:14C9  00					db	0
020C:14CA  00					db	0
020C:14CB  00					db	0
020C:14CC  00					db	0
020C:14CD  00					db	0
020C:14CE  00					db	0
020C:14CF  00					db	0
020C:14D0  00					db	0
020C:14D1  00					db	0
020C:14D2  00					db	0
020C:14D3  00					db	0
020C:14D4  00					db	0
020C:14D5  00					db	0
020C:14D6  00					db	0
020C:14D7  00					db	0
020C:14D8  00					db	0
020C:14D9  00					db	0
020C:14DA  00					db	0
020C:14DB  00					db	0
020C:14DC  00					db	0
020C:14DD  00					db	0
020C:14DE  00					db	0
020C:14DF  00					db	0
020C:14E0  00					db	0
020C:14E1  00					db	0
020C:14E2  00					db	0
020C:14E3  00					db	0
020C:14E4  00					db	0
020C:14E5  00					db	0
020C:14E6  00					db	0
020C:14E7  00					db	0
020C:14E8  00					db	0
020C:14E9  00					db	0
020C:14EA  00					db	0
020C:14EB  00					db	0
020C:14EC  00					db	0
020C:14ED  00					db	0
020C:14EE  00					db	0
020C:14EF  00					db	0
020C:14F0  00					db	0
020C:14F1  00					db	0
020C:14F2  00					db	0
020C:14F3  00					db	0
020C:14F4  00					db	0
020C:14F5  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 40

020C:14F6  00					db	0
020C:14F7  00					db	0
020C:14F8  00					db	0
020C:14F9  00					db	0
020C:14FA  00					db	0
020C:14FB  00					db	0
020C:14FC  00					db	0
020C:14FD  00					db	0
020C:14FE  00					db	0
020C:14FF  00					db	0
020C:1500  00					db	0
020C:1501  00					db	0
020C:1502  00					db	0
020C:1503  00					db	0
020C:1504  00					db	0
020C:1505  00					db	0
020C:1506  00					db	0
020C:1507  00					db	0
020C:1508  00					db	0
020C:1509  00					db	0
020C:150A  00					db	0
020C:150B  00					db	0
020C:150C  00					db	0
020C:150D  00					db	0
020C:150E  00					db	0
020C:150F  00					db	0
020C:1510  00					db	0
020C:1511  00					db	0
020C:1512  00					db	0
020C:1513  00					db	0
020C:1514  00					db	0
020C:1515  00					db	0
020C:1516  00					db	0
020C:1517  00					db	0
020C:1518  00					db	0
020C:1519  00					db	0
020C:151A  00					db	0
020C:151B  00					db	0
020C:151C  00					db	0
020C:151D  00					db	0
020C:151E  00					db	0
020C:151F  00					db	0
020C:1520  00					db	0
020C:1521  00					db	0
020C:1522  00					db	0
020C:1523  00					db	0
020C:1524  00					db	0
020C:1525  00					db	0
020C:1526  00					db	0
020C:1527  00					db	0
020C:1528  00					db	0
020C:1529  00					db	0
020C:152A  00					db	0
020C:152B  00					db	0
020C:152C  00					db	0
020C:152D  00					db	0
020C:152E  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 41

020C:152F  00					db	0
020C:1530  00					db	0
020C:1531  00					db	0
020C:1532  00					db	0
020C:1533  00					db	0
020C:1534  00					db	0
020C:1535  00					db	0
020C:1536  00					db	0
020C:1537  00					db	0
020C:1538  00					db	0
020C:1539  00					db	0
020C:153A  00					db	0
020C:153B  00					db	0
020C:153C  00					db	0
020C:153D  00					db	0
020C:153E  00					db	0
020C:153F  00					db	0
020C:1540  00					db	0
020C:1541  00					db	0
020C:1542  00					db	0
020C:1543  00					db	0
020C:1544  00					db	0
020C:1545  00					db	0
020C:1546  00					db	0
020C:1547  00			data_169	db	0
020C:1548  00					db	0
020C:1549  00					db	0
020C:154A  00					db	0
020C:154B  00					db	0
020C:154C  00					db	0
020C:154D  00					db	0
020C:154E  00					db	0
020C:154F  00					db	0
020C:1550  00					db	0
020C:1551  00			data_170	db	0
020C:1552  00					db	0
020C:1553  00					db	0
020C:1554  00					db	0
020C:1555  00					db	0
020C:1556  00					db	0
020C:1557  00					db	0
020C:1558  00					db	0
020C:1559  00					db	0
020C:155A  00					db	0
020C:155B  00					db	0
020C:155C  00					db	0
020C:155D  00					db	0
020C:155E  00					db	0
020C:155F  00					db	0
020C:1560  00					db	0
020C:1561  00					db	0
020C:1562  00					db	0
020C:1563  00					db	0
020C:1564  00					db	0
020C:1565  00					db	0
020C:1566  00					db	0
020C:1567  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 42

020C:1568  00					db	0
020C:1569  00					db	0
020C:156A  00					db	0
020C:156B  00					db	0
020C:156C  00					db	0
020C:156D  00					db	0
020C:156E  00					db	0
020C:156F  00					db	0
020C:1570  00					db	0
020C:1571  00					db	0
020C:1572  00					db	0
020C:1573  00					db	0
020C:1574  00					db	0
020C:1575  00					db	0
020C:1576  00					db	0
020C:1577  00					db	0
020C:1578  00					db	0
020C:1579  00					db	0
020C:157A  00					db	0
020C:157B  00					db	0
020C:157C  00					db	0
020C:157D  00					db	0
020C:157E  00					db	0
020C:157F  00					db	0
020C:1580  00					db	0
020C:1581  00					db	0
020C:1582  00					db	0
020C:1583  00					db	0
020C:1584  00					db	0
020C:1585  00					db	0
020C:1586  00					db	0
020C:1587  00					db	0
020C:1588  00					db	0
020C:1589  00					db	0
020C:158A  00					db	0
020C:158B  00					db	0
020C:158C  00					db	0
020C:158D  00					db	0
020C:158E  00					db	0
020C:158F  00					db	0
020C:1590  00					db	0
020C:1591  00					db	0
020C:1592  00					db	0
020C:1593  00					db	0
020C:1594  00					db	0
020C:1595  00					db	0
020C:1596  00					db	0
020C:1597  00					db	0
020C:1598  00					db	0
020C:1599  00					db	0
020C:159A  00					db	0
020C:159B  00					db	0
020C:159C  00					db	0
020C:159D  00					db	0
020C:159E  00					db	0
020C:159F  00					db	0
020C:15A0  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 43

020C:15A1  00					db	0
020C:15A2  00					db	0
020C:15A3  00					db	0
020C:15A4  00					db	0
020C:15A5  00					db	0
020C:15A6  00					db	0
020C:15A7  00					db	0
020C:15A8  00					db	0
020C:15A9  00					db	0
020C:15AA  00					db	0
020C:15AB  00					db	0
020C:15AC  00					db	0
020C:15AD  00					db	0
020C:15AE  00					db	0
020C:15AF  00					db	0
020C:15B0  00					db	0
020C:15B1  00					db	0
020C:15B2  00					db	0
020C:15B3  00					db	0
020C:15B4  00					db	0
020C:15B5  00					db	0
020C:15B6  00					db	0
020C:15B7  00					db	0
020C:15B8  00					db	0
020C:15B9  00					db	0
020C:15BA  00					db	0
020C:15BB  00					db	0
020C:15BC  00					db	0
020C:15BD  00					db	0
020C:15BE  00					db	0
020C:15BF  00					db	0
020C:15C0  00					db	0
020C:15C1  00					db	0
020C:15C2  00					db	0
020C:15C3  00					db	0
020C:15C4  00					db	0
020C:15C5  00					db	0
020C:15C6  00					db	0
020C:15C7  00					db	0
020C:15C8  00					db	0
020C:15C9  00					db	0
020C:15CA  00					db	0
020C:15CB  00					db	0
020C:15CC  00					db	0
020C:15CD  00					db	0
020C:15CE  00					db	0
020C:15CF  00					db	0
020C:15D0  00					db	0
020C:15D1  00					db	0
020C:15D2  00					db	0
020C:15D3  00					db	0
020C:15D4  00					db	0
020C:15D5  00					db	0
020C:15D6  00					db	0
020C:15D7  00					db	0
020C:15D8  00					db	0
020C:15D9  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 44

020C:15DA  00					db	0
020C:15DB  00					db	0
020C:15DC  00					db	0
020C:15DD  00					db	0
020C:15DE  00					db	0
020C:15DF  00					db	0
020C:15E0  00					db	0
020C:15E1  00					db	0
020C:15E2  00					db	0
020C:15E3  00					db	0
020C:15E4  00					db	0
020C:15E5  00					db	0
020C:15E6  00					db	0
020C:15E7  00					db	0
020C:15E8  00					db	0
020C:15E9  00					db	0
020C:15EA  00					db	0
020C:15EB  00					db	0
020C:15EC  00					db	0
020C:15ED  00					db	0
020C:15EE  00					db	0
020C:15EF  00					db	0
020C:15F0  00					db	0
020C:15F1  00					db	0
020C:15F2  00					db	0
020C:15F3  00					db	0
020C:15F4  00					db	0
020C:15F5  00					db	0
020C:15F6  00					db	0
020C:15F7  00					db	0
020C:15F8  00					db	0
020C:15F9  00					db	0
020C:15FA  00					db	0
020C:15FB  00					db	0
020C:15FC  00					db	0
020C:15FD  00					db	0
020C:15FE  00					db	0
020C:15FF  00					db	0
020C:1600  00					db	0
020C:1601  00					db	0
020C:1602  00					db	0
020C:1603  00					db	0
020C:1604  00					db	0
020C:1605  00					db	0
020C:1606  00					db	0
020C:1607  00					db	0
020C:1608  00					db	0
020C:1609  00					db	0
020C:160A  00					db	0
020C:160B  00					db	0
020C:160C  00					db	0
020C:160D  00					db	0
020C:160E  00					db	0
020C:160F  00					db	0
020C:1610  00					db	0
020C:1611  00					db	0
020C:1612  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 45

020C:1613  00					db	0
020C:1614  00					db	0
020C:1615  00					db	0
020C:1616  00					db	0
020C:1617  00					db	0
020C:1618  00					db	0
020C:1619  00					db	0
020C:161A  00					db	0
020C:161B  00					db	0
020C:161C  00					db	0
020C:161D  00					db	0
020C:161E  00					db	0
020C:161F  00					db	0
020C:1620  00					db	0
020C:1621  00					db	0
020C:1622  00					db	0
020C:1623  00					db	0
020C:1624  00					db	0
020C:1625  00					db	0
020C:1626  00					db	0
020C:1627  00					db	0
020C:1628  00					db	0
020C:1629  00					db	0
020C:162A  00					db	0
020C:162B  00					db	0
020C:162C  00					db	0
020C:162D  00					db	0
020C:162E  00					db	0
020C:162F  00					db	0
020C:1630  00					db	0
020C:1631  00					db	0
020C:1632  00					db	0
020C:1633  00					db	0
020C:1634  00					db	0
020C:1635  00					db	0
020C:1636  00					db	0
020C:1637  00					db	0
020C:1638  00					db	0
020C:1639  00					db	0
020C:163A  00					db	0
020C:163B  00			data_171	db	0
020C:163C  00					db	0
020C:163D  00			data_172	db	0
020C:163E  00			data_173	db	0
020C:163F  00			data_174	db	0
020C:1640  00					db	0
020C:1641  00					db	0
020C:1642  00					db	0
020C:1643  00					db	0
020C:1644  00					db	0
020C:1645  00					db	0
020C:1646  00					db	0
020C:1647  00					db	0
020C:1648  00					db	0
020C:1649  00					db	0
020C:164A  00					db	0
020C:164B  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 46

020C:164C  00					db	0
020C:164D  00					db	0
020C:164E  00					db	0
020C:164F  00					db	0
020C:1650  00					db	0
020C:1651  00					db	0
020C:1652  00					db	0
020C:1653  00					db	0
020C:1654  00					db	0
020C:1655  00					db	0
020C:1656  00					db	0
020C:1657  00					db	0
020C:1658  00					db	0
020C:1659  00					db	0
020C:165A  00					db	0
020C:165B  00					db	0
020C:165C  00					db	0
020C:165D  00					db	0
020C:165E  00					db	0
020C:165F  00					db	0
020C:1660  00					db	0
020C:1661  00					db	0
020C:1662  00					db	0
020C:1663  00					db	0
020C:1664  00					db	0
020C:1665  00					db	0
020C:1666  00					db	0
020C:1667  00 00				add	[bx+si],al
020C:1669  00 0C				add	[si],cl
020C:166B  00 82 5401				add	[bp+si+5401h],al
020C:166F  03 58 74				add	bx,[bx+si+74h]
020C:1672  03 09				add	cx,[bx+di]
020C:1674  00 19				add	[bx+di],bl
020C:1676  00 00				add	[bx+si],al
020C:1678  0C 00				or	al,0
020C:167A  82 01 52				add	byte ptr [bx+di],52h	; 'R'
020C:167D  03 00				add	ax,[bx+si]
020C:167F  00 FF				add	bh,bh
020C:1681  FF					db	0FFh
020C:1682  D9					db	0D9h
020C:1683  19 04				sbb	[si],ax
020C:1685  00 00				add	[bx+si],al
020C:1687  00 41 41				add	[bx+di+41h],al
020C:168A  000F[41]				db	15 dup (41h)
020C:1699  00					db	0
020C:169A  00 00				add	[bx+si],al
020C:169C  00 41 41				add	[bx+di+41h],al
020C:169F  41 41 41				db	 41h, 41h, 41h
020C:16A2  41			data_177	db	41h
020C:16A3  41					inc	cx
020C:16A4  41					inc	cx
020C:16A5  41					inc	cx
020C:16A6  41					inc	cx
020C:16A7  00 00				add	[bx+si],al
020C:16A9  0011[41]				db	17 dup (41h)
020C:16BA  00					db	0
020C:16BB  00 00				add	[bx+si],al
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 47

020C:16BD  00 41 41				add	[bx+di+41h],al
020C:16C0  0008[41]				db	8 dup (41h)
020C:16C8  00 00				add	[bx+si],al
020C:16CA  0011[41]				db	17 dup (41h)
020C:16DB  00					db	0
020C:16DC  00 00				add	[bx+si],al
020C:16DE  00 41 41				add	[bx+di+41h],al
020C:16E1  0008[41]				db	8 dup (41h)
020C:16E9  00 00				add	[bx+si],al
020C:16EB  41 41 41 41 41 41			db	 41h, 41h, 41h, 41h, 41h, 41h
020C:16F1  41 41 41 41 41 41	data_183	db	'AAAAAAAAAAA', 0
020C:16F7  41 41 41 41 41 00
020C:16FD  00 00				add	[bx+si],al
020C:16FF  00 41 41				add	[bx+di+41h],al
020C:1702  0008[41]				db	8 dup (41h)
020C:170A  00					db	0
020C:170B  00 00				add	[bx+si],al
020C:170D  00 95 4C1C				add	data_749[di],dl		; (020C:4C1C=3Ch)
020C:1711  7E 03				jle	loc_136			; Jump if < or =
020C:1713  12 00				adc	al,[bx+si]
020C:1715  00 52 03				add	[bp+si+3],dl
020C:1718  00					db	0
020C:1719  00 00				add	[bx+si],al
020C:171B  00 C7				add	bh,al
020C:171D  1C 00				sbb	al,0
020C:171F  00 41 3A				add	[bx+di+3Ah],al
020C:1722  5C					pop	sp
020C:1723  0041[00]				db	65 dup (0)
020C:1764  58					pop	ax
020C:1765  02 00				add	al,[bx+si]
020C:1767  42					inc	dx
020C:1768  3A 5C 00		;*		cmp	bl,[si+0]
020C:1768  3A 5C 00				db	 3Ah, 5Ch, 00h
020C:176B  001F[00]				db	31 dup (0)
020C:178A  00			data_190	db	0
020C:178B  00			data_191	db	0
020C:178C  00			data_192	db	0
020C:178D  0000			data_193	dw	0
020C:178F  00			data_194	db	0
020C:1790  00			data_195	db	0
020C:1791  0000			data_196	dw	0
020C:1793  00					db	0
020C:1794  00			data_197	db	0
020C:1795  00			data_198	db	0
020C:1796  00			data_199	db	0
020C:1797  0000			data_200	dw	0
020C:1799  00			data_201	db	0
020C:179A  00			data_202	db	0
020C:179B  00					db	0
020C:179C  00					db	0
020C:179D  00					db	0
020C:179E  00					db	0
020C:179F  00					db	0
020C:17A0  00					db	0
020C:17A1  00					db	0
020C:17A2  00					db	0
020C:17A3  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 48

020C:17A4  00					db	0
020C:17A5  00					db	0
020C:17A6  00					db	0
020C:17A7  00					db	0
020C:17A8  00 00				add	[bx+si],al
020C:17AA  00 58 02				add	[bx+si+2],bl
020C:17AD  00 43 3A				add	[bp+di+3Ah],al
020C:17B0  5C					pop	sp
020C:17B1  44					inc	sp
020C:17B2  4F					dec	di
020C:17B3  43					inc	bx
020C:17B4  55					push	bp
020C:17B5  4D					dec	bp
020C:17B6  45					inc	bp
020C:17B7  7E 31				jle	$+33h			; Jump if < or =
020C:17B9  5C					pop	sp
020C:17BA  39 33				cmp	[bp+di],si
020C:17BC  33 35				xor	si,[di]
020C:17BE  7E 31				jle	$+33h			; Jump if < or =
020C:17C0  5C					pop	sp
020C:17C1  4C					dec	sp
020C:17C2  4F					dec	di
020C:17C3  43					inc	bx
020C:17C4  41					inc	cx
020C:17C5  4C					dec	sp
020C:17C6  53					push	bx
020C:17C7  7E 31				jle	$+33h			; Jump if < or =
020C:17C9  5C					pop	sp
020C:17CA  54					push	sp
020C:17CB  65					db	65h
020C:17CC  6D					db	6Dh
020C:17CD  70 5C				jo	$+5Eh			; Jump if overflow=1
020C:17CF  52					push	dx
020C:17D0  61					db	61h
020C:17D1  72 24				jc	$+26h			; Jump if carry Set
020C:17D3  45					inc	bp
020C:17D4  58					pop	ax
020C:17D5  31 33				xor	[bp+di],si
020C:17D7  2E					db	2Eh
020C:17D8  34 38				xor	al,38h			; '8'
020C:17DA  35 535C				xor	ax,535Ch
020C:17DD  52					push	dx
020C:17DE  43					inc	bx
020C:17DF  45					inc	bp
020C:17E0  52					push	dx
020C:17E1  37					aaa				; Ascii adjust
020C:17E2  30 30				xor	[bx+si],dh
020C:17E4  000E[00]				db	14 dup (0)
020C:17F2  54					push	sp
020C:17F3  02 00				add	al,[bx+si]
020C:17F5  44					inc	sp
020C:17F6  3A 5C 00		;*		cmp	bl,[si+0]
020C:17F6  3A 5C 00				db	 3Ah, 5Ch, 00h
020C:17F9  003E[00]				db	62 dup (0)
020C:1837  0000			data_206	dw	0
020C:1839  025C			data_207	dw	25Ch
020C:183B  00			data_208	db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 49

020C:183C  01B5			data_209	dw	1B5h			; Data table (indexed access)
020C:183E  0000			data_210	dw	0			; Data table (indexed access)
020C:1840  9153			data_211	dw	9153h			; Data table (indexed access)
020C:1842  7E03			data_212	dw	7E03h			; Data table (indexed access)
020C:1844  00 00				add	[bx+si],al
020C:1846  0C 00				or	al,0
020C:1848  58					pop	ax
020C:1849  00 AA 0003				add	[bp+si+3],ch
020C:184D  00					db	0
020C:184E  00					db	0
020C:184F  00 00				add	[bx+si],al
020C:1851  00 09				add	[bx+di],cl
020C:1853  00 48 00		;*		add	[bx+si+0],cl
020C:1853  00 48 00				db	 00h, 48h, 00h
020C:1856  80 00 00				add	byte ptr [bx+si],0
020C:1859  00 C2				add	dl,al
020C:185B  03 00				add	ax,[bx+si]
020C:185D  00 40 00		;*		add	[bx+si+0],al
020C:185D  00 40 00				db	 00h, 40h, 00h
020C:1860  40					inc	ax
020C:1861  00 EA				add	dl,ch
020C:1863  6D					db	6Dh
020C:1864  F000			data_213	dw	0F000h
020C:1866  CEE8			data_214	dw	0CEE8h
020C:1868  01 12				add	[bp+si],dx
020C:186A  00 46 07				add	[bp+7],al
020C:186D  0C 02				or	al,2
020C:186F  E8 01C5				call	sub_24			; (1A37)
020C:1872  1B 00				sbb	ax,[bx+si]
020C:1874  0A 04				or	al,[si]
020C:1876  0C 02				or	al,2
020C:1878  EB			data_216	db	0EBh
020C:1879  02 90 E800				add	dl,byte ptr ds:[0E800h][bx+si]	; (020C:E800=6)
020C:187D  B8 2401				mov	ax,2401h
020C:1880  00 A4 0C0C				add	data_125[si],ah		; (020C:0C0C=5Bh)
020C:1884  02 E8				add	ch,al
020C:1886  AF					scasw				; Scan es:[di] for ax
020C:1887  01 31				add	[bx+di],si
020C:1889  00 EB				add	bl,ch
020C:188B  10 FF				adc	bh,bh
020C:188D  03 0C				add	cx,[si]
020C:188F  02 4B 42				add	cl,[bp+di+42h]
020C:1892  00 EB				add	bl,ch
020C:1894  0C 00				or	al,0
020C:1896  00					db	0
020C:1897  00					db	0
020C:1898  00					db	0
020C:1899  00 00				add	[bx+si],al
020C:189B  00 E8				add	al,ch
020C:189D  98					cbw				; Convrt byte to word
020C:189E  01 3C				add	[si],di
020C:18A0  00 E9				add	cl,ch
020C:18A2  32 01				xor	al,[bx+di]
020C:18A4  EB 10				jmp	short loc_138		; (18B6)
020C:18A6  FF 03				inc	word ptr [bp+di]
020C:18A8  0C 02				or	al,2
020C:18AA  4B					dec	bx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 50

020C:18AB  42					inc	dx
020C:18AC  00 EB				add	bl,ch
020C:18AE  0C 00				or	al,0
020C:18B0  00					db	0
020C:18B1  00					db	0
020C:18B2  00					db	0
020C:18B3  00 00				add	[bx+si],al
020C:18B5  00 E8				add	al,ch
020C:18B7  7E 01				jle	loc_139			; Jump if < or =
020C:18B9  56					push	si
020C:18BA			loc_139:
020C:18BA  00 E9				add	cl,ch
020C:18BC  18 01				sbb	[bx+di],al
020C:18BE  EB 10				jmp	short loc_140		; (18D0)
020C:18C0  FF 03				inc	word ptr [bp+di]
020C:18C2  0C 02				or	al,2
020C:18C4  4B					dec	bx
020C:18C5  42					inc	dx
020C:18C6  00 EB				add	bl,ch
020C:18C8  0C 00				or	al,0
020C:18CA  00					db	0
020C:18CB  00					db	0
020C:18CC  00					db	0
020C:18CD  00 00				add	[bx+si],al
020C:18CF  00 E8				add	al,ch
020C:18D1  64					db	64h
020C:18D2  01 70 00		;*		add	[bx+si+0],si
020C:18D2  01 70 00				db	 01h, 70h, 00h
020C:18D5  E9 00FE				jmp	loc_153			; (19D6)
020C:18D8  10EB			data_218	dw	10EBh
020C:18DA  FF 03				inc	word ptr [bp+di]
020C:18DC  0C 02				or	al,2
020C:18DE  4B					dec	bx
020C:18DF  42					inc	dx
020C:18E0  00 EB				add	bl,ch
020C:18E2  0C 00				or	al,0
020C:18E4  00					db	0
020C:18E5  00					db	0
020C:18E6  00					db	0
020C:18E7  00 00				add	[bx+si],al
020C:18E9  00 E8				add	al,ch
020C:18EB  4A					dec	dx
020C:18EC  01 8A E900				add	[bp+si-1700h],cx
020C:18F0  E4 00				in	al,0			; port 0, DMA-1 bas&add ch 0
020C:18F2  EB 10				jmp	short loc_142		; (1904)
020C:18F4  B3 07				mov	bl,7
020C:18F6  0C 02				or	al,2
020C:18F8  4B					dec	bx
020C:18F9  42					inc	dx
020C:18FA  00 EB				add	bl,ch
020C:18FC  0C 00				or	al,0
020C:18FE  00					db	0
020C:18FF  00					db	0
020C:1900  00					db	0
020C:1901  00 00				add	[bx+si],al
020C:1903  00 E8				add	al,ch
020C:1905  30 01				xor	[bx+di],al
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 51

020C:1907  A4					movsb				; Mov [si] to es:[di]
020C:1908  00 E9				add	cl,ch
020C:190A  CA EB00				retf	0EB00h			; Return far
020C:190D  10 B4 0C06				adc	byte ptr ds:[0C06h][si],dh	; (020C:0C06=0)
020C:1911  02 4B 42				add	cl,[bp+di+42h]
020C:1914  00 EB				add	bl,ch
020C:1916  0C 00				or	al,0
020C:1918  00					db	0
020C:1919  00					db	0
020C:191A  00					db	0
020C:191B  00 00				add	[bx+si],al
020C:191D  00 E8				add	al,ch
020C:191F  16					push	ss
020C:1920  01 BE E900				add	[bp-1700h],di
020C:1924  B0 00				mov	al,0
020C:1926  EB 10				jmp	short loc_143		; (1938)
020C:1928  B4 06				mov	ah,6
020C:192A  0C 02				or	al,2
020C:192C  4B					dec	bx
020C:192D  42					inc	dx
020C:192E  00 EB				add	bl,ch
020C:1930  0C 00				or	al,0
020C:1932  00					db	0
020C:1933  00					db	0
020C:1934  00					db	0
020C:1935  00 00				add	[bx+si],al
020C:1937  00 E8				add	al,ch
020C:1939  FC					cld				; Clear direction
020C:193A  00 D8				add	al,bl
020C:193C  00 E9				add	cl,ch
020C:193E  96					xchg	si,ax
020C:193F  00 EB				add	bl,ch
020C:1941  10 B4 0C06				adc	byte ptr ds:[0C06h][si],dh	; (020C:0C06=0)
020C:1945  4B02			data_219	dw	4B02h
020C:1947  42					inc	dx
020C:1948  00 EB				add	bl,ch
020C:194A  0C 00				or	al,0
020C:194C  00					db	0
020C:194D  00					db	0
020C:194E  00					db	0
020C:194F  00 00				add	[bx+si],al
020C:1951  00 E8				add	al,ch
020C:1953  E2 00				loop	locloop_144		; Loop if cx > 0


020C:1955			locloop_144:
020C:1955  F2					db	0F2h
020C:1956  00 EB				add	bl,ch
020C:1958  907D			data_220	dw	907Dh
020C:195A  10EB			data_221	dw	10EBh
020C:195C  06B4			data_222	dw	6B4h
020C:195E  020C			data_223	dw	20Ch
020C:1960  424B			data_224	dw	424Bh			; Data table (indexed access)
020C:1962  EB00			data_226	dw	0EB00h
020C:1964  0C 00				or	al,0
020C:1966  00					db	0
020C:1967  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 52

020C:1968  00					db	0
020C:1969  00 00				add	[bx+si],al
020C:196B  00 E8				add	al,ch
020C:196D  C8					db	0C8h
020C:196E  00 0C				add	[si],cl
020C:1970  01 EB				add	bx,bp
020C:1972  63					db	63h
020C:1973  90					nop
020C:1974  EB 10				jmp	short loc_146		; (1986)
020C:1976  B4 06				mov	ah,6
020C:1978  0C 02				or	al,2
020C:197A  4B					dec	bx
020C:197B  42					inc	dx
020C:197C  00 EB				add	bl,ch
020C:197E  0C 00				or	al,0
020C:1980  00					db	0
020C:1981  00					db	0
020C:1982  00					db	0
020C:1983  00 00				add	[bx+si],al
020C:1985  00 E8				add	al,ch
020C:1987  AE					scasb				; Scan es:[di] for al
020C:1988  00 26 EB01				add	data_914,ah		; (020C:EB01=2Fh)
020C:198C  49					dec	cx
020C:198D  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:198E			sub_23		proc	near
020C:198E  1E					push	ds
020C:198F  50					push	ax
020C:1990  B8 0040				mov	ax,40h
020C:1993  8E D8				mov	ds,ax
020C:1995  9F					lahf				; Load ah from flags
020C:1996  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020C:199C  75 0C				jnz	loc_148			; Jump if not zero
020C:199E  F0			data_228	db	0F0h
020C:199F  81 26 0314 FDFF			and	word ptr ds:[314h],0FDFFh	; (0040:0314=3200h)
020C:19A5			loc_147:
020C:19A5  9E					sahf				; Store ah into flags
020C:19A6  58					pop	ax
020C:19A7  1F					pop	ds
020C:19A8  EB 03				jmp	short loc_149		; (19AD)
020C:19AA			loc_148:
020C:19AA  FA					cli				; Disable interrupts
020C:19AB  EB F8				jmp	short loc_147		; (19A5)
020C:19AD			loc_149:
020C:19AD  C3					retn
				sub_23		endp

							                        ;* No entry point to code
020C:19AE  1E					push	ds
020C:19AF  50					push	ax
020C:19B0  B8 0040				mov	ax,40h
020C:19B3  8E D8				mov	ds,ax
020C:19B5  9F					lahf				; Load ah from flags
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 53

020C:19B6  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020C:19BC  75 14				jnz	loc_151			; Jump if not zero
020C:19BE  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020C:19C4  75 0C				jnz	loc_151			; Jump if not zero
020C:19C6  F0> 81 0E 0314 0200	                           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020C:19CD			loc_150:
020C:19CD  9E					sahf				; Store ah into flags
020C:19CE  58					pop	ax
020C:19CF  1F					pop	ds
020C:19D0  EB 03				jmp	short loc_152		; (19D5)
020C:19D2			loc_151:
020C:19D2  FB			data_230	db	0FBh
020C:19D3  EB F8				jmp	short loc_150		; (19CD)
020C:19D5			loc_152:
020C:19D5  C3					retn
020C:19D6			loc_153:
020C:19D6  1E					push	ds
020C:19D7  50					push	ax
020C:19D8  B8 0040				mov	ax,40h
020C:19DB  8E D8				mov	ds,ax
020C:19DD  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020C:19E3  75 4F				jnz	loc_161			; Jump if not zero
020C:19E5  55					push	bp
020C:19E6  8B EC				mov	bp,sp
020C:19E8  8B 46 0A				mov	ax,[bp+0Ah]
020C:19EB  5D					pop	bp
020C:19EC  A9 0100				test	ax,100h
020C:19EF  75 43				jnz	loc_161			; Jump if not zero
020C:19F1  A9 0200				test	ax,200h
020C:19F4  2274			data_232	dw	2274h
020C:19F6  F0> 81 0E 0314 0200	                           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020C:19FD  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020C:1A03  75 2F				jnz	loc_161			; Jump if not zero
020C:1A05			loc_154:
020C:1A05  86 E0				xchg	ah,al
020C:1A07  FC					cld				; Clear direction
020C:1A08  A8 04				test	al,4
020C:1A0A  75 25				jnz	loc_160			; Jump if not zero
020C:1A0C			loc_155:
020C:1A0C  A8 08				test	al,8
020C:1A0E  75 11				jnz	loc_158			; Jump if not zero
020C:1A10  70 19				jo	loc_159			; Jump if overflow=1
020C:1A12			loc_156:
020C:1A12  9E					sahf				; Store ah into flags
020C:1A13  58					pop	ax
020C:1A14  1F					pop	ds
020C:1A15  CA 0002				retf	2			; Return far
020C:1A18			loc_157:
020C:1A18  F0> 81 26 0314 FDFF	                           lock	and	word ptr ds:[314h],0FDFFh	; (020C:0314=3231h)
020C:1A1F  EB E4				jmp	short loc_154		; (1A05)
020C:1A21			loc_158:
020C:1A21  70 EF				jo	loc_156			; Jump if overflow=1
020C:1A23  50					push	ax
020C:1A24  B0 7F				mov	al,7Fh
020C:1A26  04 02				add	al,2
020C:1A28  58					pop	ax
020C:1A29  EB E7				jmp	short loc_156		; (1A12)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 54

020C:1A2B			loc_159:
020C:1A2B  50					push	ax
020C:1A2C  32 C0				xor	al,al			; Zero register
020C:1A2E  58					pop	ax
020C:1A2F  EB E1				jmp	short loc_156		; (1A12)
020C:1A31			loc_160:
020C:1A31  FD					std				; Set direction flag
020C:1A32  EB D8				jmp	short loc_155		; (1A0C)
020C:1A34			loc_161:
020C:1A34  58					pop	ax
020C:1A35  1F					pop	ds
020C:1A36  CF					iret				; Interrupt return

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:1A37			sub_24		proc	near
020C:1A37  50					push	ax
020C:1A38  55					push	bp
020C:1A39  06					push	es
020C:1A3A  2E: 8E 06 000A			mov	es,word ptr cs:[0Ah]	; (020C:000A=272Dh)
020C:1A3F  2E: 8B 2E 0010			mov	bp,word ptr cs:[10h]	; (020C:0010=1FBFh)
020C:1A44  B0 01				mov	al,1
020C:1A46  26: 86 46 00				xchg	es:[bp],al
020C:1A4A  3C 00				cmp	al,0
020C:1A4C  75 51				jne	loc_163			; Jump if not equal
020C:1A4E  2E: 83 2E 0010 08			sub	word ptr cs:[10h],8	; (020C:0010=1FBFh)
020C:1A54			loc_162:
020C:1A54  26: 89 66 02				mov	es:[bp+2],sp
020C:1A58  26: 8C 56 04				mov	es:[bp+4],ss
020C:1A5C  8B C5				mov	ax,bp
020C:1A5E  26: 8B 6E 06				mov	bp,es:[bp+6]
020C:1A62  26: 39 46 00				cmp	es:[bp],ax
020C:1A66  75 44				jne	loc_165			; Jump if not equal
020C:1A68  55					push	bp
020C:1A69  8B EC				mov	bp,sp
020C:1A6B  8B 46 08				mov	ax,[bp+8]
020C:1A6E  5D					pop	bp
020C:1A6F  06					push	es
020C:1A70  17					pop	ss
020C:1A71  8B E5				mov	sp,bp
020C:1A73  8B E8				mov	bp,ax
020C:1A75  2E: 8B 6E 00				mov	bp,cs:[bp]
020C:1A79  9C					pushf				; Push flags
020C:1A7A  2E: FF 5E 00				call	dword ptr cs:[bp]	;*
020C:1A7E  8B EC				mov	bp,sp
020C:1A80  26: 8B 6E 00				mov	bp,es:[bp]
020C:1A84  26: 8E 56 04				mov	ss,es:[bp+4]
020C:1A88  26: 8B 66 02				mov	sp,es:[bp+2]
020C:1A8C  C626			data_236	dw	0C626h
020C:1A8E  46					inc	si
020C:1A8F  00 00				add	[bx+si],al
020C:1A91  2E: 89 2E 0010			mov	word ptr cs:[10h],bp	; (020C:0010=1FBFh)
020C:1A96  07					pop	es
020C:1A97  5D					pop	bp
020C:1A98  58					pop	ax
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 55

020C:1A99  83 C4 02				add	sp,2
020C:1A9C  E9 FF37				jmp	loc_153			; (19D6)
020C:1A9F			loc_163:
020C:1A9F  3C 01				cmp	al,1
020C:1AA1  74 04				je	loc_164			; Jump if equal
020C:1AA3  26: 86 46 00				xchg	es:[bp],al
020C:1AA7			loc_164:
020C:1AA7  E8 0012				call	sub_25			; (1ABC)
020C:1AAA  EB A8				jmp	short loc_162		; (1A54)
020C:1AAC			loc_165:
020C:1AAC  2E: 3B 2E 000C			cmp	bp,word ptr cs:[0Ch]	; (020C:000C=9028h)
020C:1AB1  72 F4				jb	loc_164			; Jump if below
020C:1AB3  8B E8				mov	bp,ax
020C:1AB5  26: C6 46 00 03			mov	byte ptr es:[bp],3
020C:1ABA  EB EB				jmp	short loc_164		; (1AA7)
				sub_24		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:1ABC			sub_25		proc	near
020C:1ABC  2E: 8B 2E 000E			mov	bp,word ptr cs:[0Eh]	; (020C:000E=0A02Bh)
020C:1AC1			loc_166:
020C:1AC1  26: 80 7E 00 00			cmp	byte ptr es:[bp],0
020C:1AC6  75 12				jne	loc_168			; Jump if not equal
020C:1AC8  B0 01				mov	al,1
020C:1ACA  26: 86 46 00				xchg	es:[bp],al
020C:1ACE  3C 00				cmp	al,0
020C:1AD0  74 14				je	loc_169			; Jump if equal
020C:1AD2  3C 01				cmp	al,1
020C:1AD4  74 04				je	loc_168			; Jump if equal
020C:1AD6  26: 88 46 00				mov	es:[bp],al
020C:1ADA			loc_168:
020C:1ADA  2E: 3B 2E 000C			cmp	bp,word ptr cs:[0Ch]	; (020C:000C=9028h)
020C:1ADF  74 06				je	loc_170			; Jump if equal
020C:1AE1  83 ED 08				sub	bp,8
020C:1AE4  EB DB				jmp	short loc_166		; (1AC1)
020C:1AE6			loc_169:
020C:1AE6  C3					retn
020C:1AE7			loc_170:
020C:1AE7  E8 FEA4				call	sub_23			; (198E)

020C:1AEA			locloop_171:
020C:1AEA  B0 FF				mov	al,0FFh
020C:1AEC  E6 21				out	21h,al			; port 21h, 8259-1 int comands
020C:1AEE  E6 A1				out	0A1h,al			; port 0A1h  al = 0FFh, inhibit interr
020C:1AF0  8C CE				mov	si,cs
020C:1AF2  8E DE				mov	ds,si
020C:1AF4  BE 02CB				mov	si,2CBh
020C:1AF7  50					push	ax
020C:1AF8  1E					push	ds
020C:1AF9  B8 0070				mov	ax,70h
020C:1AFC  8E D8				mov	ds,ax
020C:1AFE  F6 06 0337 01			test	byte ptr ds:[337h],1	; (0070:0337=0)
020C:1B03  1F					pop	ds
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 56

020C:1B04  58					pop	ax
020C:1B05  74 05				jz	loc_172			; Jump if zero
020C:1B07  9A 0070:0338		;*		call	far ptr sub_1		;*(0070:0338)
020C:1B07  9A					db	9Ah
020C:1B08  0338 0070				dw	338h, 70h
020C:1B0C			loc_172:
020C:1B0C  AC					lodsb				; String [si] to al
020C:1B0D  3C 24				cmp	al,24h			; '$'
020C:1B0F  74 08				je	loc_174			; Jump if equal
020C:1B11  B3 07				mov	bl,7
020C:1B13  B4 0E				mov	ah,0Eh
020C:1B15  CD 10				int	10h			; Video display   ah=functn 0Eh
										;  write char al, teletype mode
020C:1B17  EB F3				jmp	short loc_172		; (1B0C)
020C:1B19			loc_174:
020C:1B19  EB FE				jmp	short loc_174		; (1B19)
				sub_25		endp

020C:1B1B  0D 070A				or	ax,70Ah
020C:1B1E  0D 8F0A				or	ax,8F0Ah
020C:1B21  A5					movsw				; Mov [si] to es:[di]
020C:1B22  E0 A5		;*		loopnz	locloop_167		;*Loop if zf=0, cx>0

020C:1B22  E0 A5				db	0E0h,0A5h
020C:1B24  AF					scasw				; Scan es:[di] for ax
020C:1B25  AE					scasb				; Scan es:[di] for al
020C:1B26  AB					stosw				; Store ax to es:[di]
020C:1B27  AD					lodsw				; String [si] to ax
020C:1B28  A5					movsw				; Mov [si] to es:[di]
020C:1B29  AD					lodsw				; String [si] to ax
020C:1B2A  A8 A5				test	al,0A5h
020C:1B2C  20 A2 E3AD				and	[bp+si-1C53h],ah
020C:1B30  E2 E0		;*		loop	locloop_173		;*Loop if cx > 0

020C:1B30  E2 E0				db	0E2h,0E0h
020C:1B32  A5					movsw				; Mov [si] to es:[di]
020C:1B33  AD					lodsw				; String [si] to ax
020C:1B34  AD					lodsw				; String [si] to ax
020C:1B35  A5					movsw				; Mov [si] to es:[di]
020C:1B36  A3 20AE				mov	data_366,ax		; (020C:20AE=2020h)
020C:1B39  E1 E2		;*		loopz	locloop_175		;*Loop if zf=1, cx>0

020C:1B39  E1 E2				db	0E1h,0E2h
020C:1B3B  A5					movsw				; Mov [si] to es:[di]
020C:1B3C  AA					stosb				; Store al to es:[di]
020C:1B3D  A0 0A0D				mov	al,byte ptr ds:[0A0Dh]	; (020C:0A0D=0)
020C:1B40  91					xchg	cx,ax
020C:1B41  A8 E1				test	al,0E1h
020C:1B43  E2 A5				loop	locloop_171		; Loop if cx > 0

020C:1B45  AC					lodsb				; String [si] to al
020C:1B46  A0 AE20				mov	al,data_865		; (020C:AE20=0C7h)
020C:1B49  E1 E2		;*		loopz	locloop_176		;*Loop if zf=1, cx>0

020C:1B49  E1 E2				db	0E1h,0E2h
020C:1B4B  A0 AEAD				mov	al,data_868		; (020C:AEAD=0EBh)
020C:1B4E  A2 A5AB				mov	data_840,al		; (020C:A5AB=0C2h)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 57

020C:1B51  AD					lodsw				; String [si] to ax
020C:1B52  A0 0A0D				mov	al,byte ptr ds:[0A0Dh]	; (020C:0A0D=0)
020C:1B55  24 07				and	al,7
020C:1B57  00 09				add	[bx+di],cl
020C:1B59  69					db	69h
020C:1B5A  00 00				add	[bx+si],al
020C:1B5C  06					push	es
020C:1B5D  00 06 0000				add	byte ptr ds:[0],al	; (020C:0000=28h)
020C:1B61  00					db	0
020C:1B62  00					db	0
020C:1B63  00 00				add	[bx+si],al
020C:1B65  00 C6				add	dh,al
020C:1B67  0007[00]				db	7 dup (0)
020C:1B6E  46					inc	si
020C:1B6F  01 00				add	[bx+si],ax
020C:1B71  00					db	0
020C:1B72  00					db	0
020C:1B73  00 00				add	[bx+si],al
020C:1B75  00 C6				add	dh,al
020C:1B77  01 00				add	[bx+si],ax
020C:1B79  00					db	0
020C:1B7A  00					db	0
020C:1B7B  00 00				add	[bx+si],al
020C:1B7D  00 46 02				add	[bp+2],al
020C:1B80  00					db	0
020C:1B81  00					db	0
020C:1B82  00					db	0
020C:1B83  00 00				add	[bx+si],al
020C:1B85  00 C6				add	dh,al
020C:1B87  02 00				add	al,[bx+si]
020C:1B89  00					db	0
020C:1B8A  00					db	0
020C:1B8B  00 00				add	[bx+si],al
020C:1B8D  00 46 03				add	[bp+3],al
020C:1B90  00					db	0
020C:1B91  00					db	0
020C:1B92  00					db	0
020C:1B93  00 00				add	[bx+si],al
020C:1B95  00 C6				add	dh,al
020C:1B97  03 00				add	ax,[bx+si]
020C:1B99  00					db	0
020C:1B9A  00					db	0
020C:1B9B  00 00				add	[bx+si],al
020C:1B9D  00 46 04				add	[bp+4],al
020C:1BA0  00 00				add	[bx+si],al
020C:1BA2  06					push	es
020C:1BA3  06					push	es
020C:1BA4  FB					sti				; Enable interrupts
020C:1BA5  8D					db	8Dh
020C:1BA6  C6 04 00				mov	byte ptr [si],0
020C:1BA9  00FD[00]				db	253 dup (0)
020C:1CA6  08 00				or	[bx+si],al
020C:1CA8  0017[00]				db	23 dup (0)
020C:1CBF  0000			data_240	dw	0
020C:1CC1  0000			data_241	dw	0
020C:1CC3  00					db	0
020C:1CC4  0000			data_242	dw	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 58

020C:1CC6  0000			data_243	dw	0
020C:1CC8  00					db	0
020C:1CC9  00			data_244	db	0
020C:1CCA  00			data_245	db	0
020C:1CCB  00			data_246	db	0
020C:1CCC  0000			data_247	dw	0
020C:1CCE  0000			data_248	dw	0
020C:1CD0  0000			data_249	dw	0
020C:1CD2  0000			data_250	dw	0
020C:1CD4  00			data_251	db	0
020C:1CD5  00					db	0
020C:1CD6  00					db	0
020C:1CD7  00			data_252	db	0
020C:1CD8  00			data_253	db	0
020C:1CD9  00			data_254	db	0
020C:1CDA  00					db	0
020C:1CDB  00					db	0
020C:1CDC  00			data_255	db	0
020C:1CDD  00					db	0
020C:1CDE  00			data_256	db	0
020C:1CDF  00			data_257	db	0
020C:1CE0  00					db	0
020C:1CE1  00			data_258	db	0
020C:1CE2  00			data_259	db	0
020C:1CE3  00			data_260	db	0
020C:1CE4  0000			data_261	dw	0
020C:1CE6  00			data_262	db	0
020C:1CE7  00			data_263	db	0
020C:1CE8  00			data_264	db	0
020C:1CE9  0000			data_265	dw	0
020C:1CEB  0000			data_266	dw	0
020C:1CED  0000			data_267	dw	0
020C:1CEF  00					db	0
020C:1CF0  0000			data_268	dw	0
020C:1CF2  0000			data_269	dw	0
020C:1CF4  0000			data_270	dw	0
020C:1CF6  00					db	0
020C:1CF7  00					db	0
020C:1CF8  0000			data_271	dw	0
020C:1CFA  0000			data_272	dw	0
020C:1CFC  0000			data_273	dw	0
020C:1CFE  0000			data_274	dw	0
020C:1D00  0000			data_275	dw	0
020C:1D02  0000			data_276	dw	0
020C:1D04  0000			data_277	dw	0
020C:1D06  0000			data_278	dw	0
020C:1D08  0000			data_279	dw	0
020C:1D0A  0000			data_280	dw	0
020C:1D0C  00					db	0
020C:1D0D  00					db	0
020C:1D0E  0000			data_281	dw	0
020C:1D10  0000			data_282	dw	0
020C:1D12  00					db	0
020C:1D13  00			data_283	db	0
020C:1D14  00					db	0
020C:1D15  00					db	0
020C:1D16  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 59

020C:1D17  00					db	0
020C:1D18  0000			data_284	dw	0
020C:1D1A  00					db	0
020C:1D1B  00					db	0
020C:1D1C  0000			data_285	dw	0
020C:1D1E  00			data_286	db	0
020C:1D1F  00					db	0
020C:1D20  00			data_287	db	0
020C:1D21  00			data_288	db	0
020C:1D22  00			data_289	db	0
020C:1D23  00			data_290	db	0
020C:1D24  00			data_291	db	0
020C:1D25  1000			data_292	dw	1000h
020C:1D27  0000			data_293	dw	0
020C:1D29  00			data_295	db	0
020C:1D2A  0000			data_296	dw	0
020C:1D2C  0000			data_297	dw	0
020C:1D2E  0000			data_298	dw	0
020C:1D30  0000			data_299	dw	0
020C:1D32  0000			data_300	dw	0
020C:1D34  0000			data_301	dw	0
020C:1D36  0000			data_302	dw	0
020C:1D38  0000			data_303	dw	0
020C:1D3A  0000			data_304	dw	0
020C:1D3C  0000			data_305	dw	0
020C:1D3E  0000			data_306	dw	0
020C:1D40  0000			data_307	dw	0
020C:1D42  00					db	0
020C:1D43  00					db	0
020C:1D44  00			data_308	db	0
020C:1D45  00			data_309	db	0
020C:1D46  00			data_310	db	0
020C:1D47  00			data_311	db	0
020C:1D48  0000			data_312	dw	0
020C:1D4A  0000			data_313	dw	0
020C:1D4C  00					db	0
020C:1D4D  00					db	0
020C:1D4E  00					db	0
020C:1D4F  00					db	0
020C:1D50  00					db	0
020C:1D51  00					db	0
020C:1D52  00					db	0
020C:1D53  00					db	0
020C:1D54  00					db	0
020C:1D55  00					db	0
020C:1D56  00					db	0
020C:1D57  00					db	0
020C:1D58  00					db	0
020C:1D59  00					db	0
020C:1D5A  00			data_314	db	0
020C:1D5B  00			data_315	db	0
020C:1D5C  00			data_316	db	0
020C:1D5D  00			data_317	db	0
020C:1D5E  00			data_318	db	0
020C:1D5F  00			data_319	db	0
020C:1D60  00			data_320	db	0
020C:1D61  00			data_321	db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 60

020C:1D62  00			data_322	db	0
020C:1D63  00			data_323	db	0
020C:1D64  00			data_324	db	0
020C:1D65  00			data_325	db	0
020C:1D66  0000			data_326	dw	0
020C:1D68  0000			data_327	dw	0
020C:1D6A  0000			data_328	dw	0
020C:1D6C  0000			data_329	dw	0
020C:1D6E  0000			data_330	dw	0
020C:1D70  0000			data_331	dw	0
020C:1D72  00			data_332	db	0
020C:1D73  0000			data_333	dw	0
020C:1D75  0000			data_334	dw	0
020C:1D77  00			data_335	db	0
020C:1D78  00			data_336	db	0
020C:1D79  00					db	0
020C:1D7A  00					db	0
020C:1D7B  00					db	0
020C:1D7C  00					db	0
020C:1D7D  00					db	0
020C:1D7E  00					db	0
020C:1D7F  00					db	0
020C:1D80  00					db	0
020C:1D81  00					db	0
020C:1D82  00					db	0
020C:1D83  00					db	0
020C:1D84  00					db	0
020C:1D85  00					db	0
020C:1D86  00					db	0
020C:1D87  00					db	0
020C:1D88  00					db	0
020C:1D89  00					db	0
020C:1D8A  00					db	0
020C:1D8B  00					db	0
020C:1D8C  00					db	0
020C:1D8D  00					db	0
020C:1D8E  00					db	0
020C:1D8F  00					db	0
020C:1D90  00					db	0
020C:1D91  00					db	0
020C:1D92  00					db	0
020C:1D93  00					db	0
020C:1D94  00					db	0
020C:1D95  00					db	0
020C:1D96  00					db	0
020C:1D97  00					db	0
020C:1D98  00					db	0
020C:1D99  00					db	0
020C:1D9A  00					db	0
020C:1D9B  00					db	0
020C:1D9C  00					db	0
020C:1D9D  00					db	0
020C:1D9E  00					db	0
020C:1D9F  00					db	0
020C:1DA0  00					db	0
020C:1DA1  00					db	0
020C:1DA2  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 61

020C:1DA3  00 00				add	[bx+si],al
020C:1DA5  00 18				add	[bx+si],bl
020C:1DA7  00					db	0
020C:1DA8  007E[00]				db	126 dup (0)
020C:1E26  20 00				and	[bx+si],al
020C:1E28  0061[00]				db	97 dup (0)
020C:1E89  00			data_339	db	0
020C:1E8A  00					db	0
020C:1E8B  0000 0000		data_340	dd	00000h
020C:1E8F  00					db	0
020C:1E90  00					db	0
020C:1E91  0000			data_341	dw	0
020C:1E93  0000			data_342	dw	0
020C:1E95  00					db	0
020C:1E96  00					db	0
020C:1E97  00					db	0
020C:1E98  00					db	0
020C:1E99  00					db	0
020C:1E9A  00			data_343	db	0
020C:1E9B  00					db	0
020C:1E9C  00					db	0
020C:1E9D  00					db	0
020C:1E9E  00					db	0
020C:1E9F  00					db	0
020C:1EA0  00					db	0
020C:1EA1  00					db	0
020C:1EA2  00					db	0
020C:1EA3  00 00				add	[bx+si],al
020C:1EA5  00 28				add	[bx+si],ch
020C:1EA7  00					db	0
020C:1EA8  0046[00]				db	70 dup (0)
020C:1EEE  0000 0000		data_345	dd	00000h			; Data table (indexed access)
020C:1EF2  00					db	0
020C:1EF3  00					db	0
020C:1EF4  00					db	0
020C:1EF5  00					db	0
020C:1EF6  00					db	0
020C:1EF7  00					db	0
020C:1EF8  00					db	0
020C:1EF9  00					db	0
020C:1EFA  00					db	0
020C:1EFB  00			data_346	db	0
020C:1EFC  00					db	0
020C:1EFD  00			data_347	db	0
020C:1EFE  00			data_348	db	0
020C:1EFF  00					db	0
020C:1F00  00					db	0
020C:1F01  00					db	0
020C:1F02  00					db	0
020C:1F03  00					db	0
020C:1F04  00					db	0
020C:1F05  00					db	0
020C:1F06  00					db	0
020C:1F07  00					db	0
020C:1F08  00					db	0
020C:1F09  00					db	0
020C:1F0A  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 62

020C:1F0B  00					db	0
020C:1F0C  00					db	0
020C:1F0D  00					db	0
020C:1F0E  00					db	0
020C:1F0F  00					db	0
020C:1F10  00					db	0
020C:1F11  00					db	0
020C:1F12  00					db	0
020C:1F13  00					db	0
020C:1F14  00					db	0
020C:1F15  00					db	0
020C:1F16  00					db	0
020C:1F17  00					db	0
020C:1F18  00					db	0
020C:1F19  00					db	0
020C:1F1A  00					db	0
020C:1F1B  00					db	0
020C:1F1C  00					db	0
020C:1F1D  00					db	0
020C:1F1E  00					db	0
020C:1F1F  00					db	0
020C:1F20  00					db	0
020C:1F21  00					db	0
020C:1F22  00					db	0
020C:1F23  00 00				add	[bx+si],al
020C:1F25  00 30				add	[bx+si],dh
020C:1F27  00					db	0
020C:1F28  003C[00]				db	60 dup (0)
020C:1F64  0000			data_350	dw	0
020C:1F66  00					db	0
020C:1F67  00					db	0
020C:1F68  0000			data_351	dw	0
020C:1F6A  00			data_352	db	0
020C:1F6B  00			data_353	db	0
020C:1F6C  00			data_354	db	0
020C:1F6D  00			data_355	db	0
020C:1F6E  0000			data_356	dw	0
020C:1F70  00					db	0
020C:1F71  00					db	0
020C:1F72  00					db	0
020C:1F73  00					db	0
020C:1F74  00					db	0
020C:1F75  00					db	0
020C:1F76  00					db	0
020C:1F77  00					db	0
020C:1F78  00					db	0
020C:1F79  00					db	0
020C:1F7A  00					db	0
020C:1F7B  00					db	0
020C:1F7C  00					db	0
020C:1F7D  00					db	0
020C:1F7E  00					db	0
020C:1F7F  00					db	0
020C:1F80  00					db	0
020C:1F81  00					db	0
020C:1F82  00					db	0
020C:1F83  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 63

020C:1F84  00					db	0
020C:1F85  00					db	0
020C:1F86  00					db	0
020C:1F87  00					db	0
020C:1F88  00					db	0
020C:1F89  00					db	0
020C:1F8A  00					db	0
020C:1F8B  00					db	0
020C:1F8C  00					db	0
020C:1F8D  00					db	0
020C:1F8E  00					db	0
020C:1F8F  00					db	0
020C:1F90  00					db	0
020C:1F91  00					db	0
020C:1F92  00					db	0
020C:1F93  00					db	0
020C:1F94  00					db	0
020C:1F95  00					db	0
020C:1F96  00					db	0
020C:1F97  00					db	0
020C:1F98  00					db	0
020C:1F99  00					db	0
020C:1F9A  00					db	0
020C:1F9B  00					db	0
020C:1F9C  00					db	0
020C:1F9D  00					db	0
020C:1F9E  00					db	0
020C:1F9F  00					db	0
020C:1FA0  00					db	0
020C:1FA1  00					db	0
020C:1FA2  00					db	0
020C:1FA3  00 00				add	[bx+si],al
020C:1FA5  00 38				add	[bx+si],bh
020C:1FA7  00					db	0
020C:1FA8  006C[00]				db	108 dup (0)
020C:2014  01 91 9101				add	data_812[bx+di],dx	; (020C:9101=0C614h)
020C:2018  FB					sti				; Enable interrupts
020C:2019  8D					db	8Dh
020C:201A  F3					db	0F3h
020C:201B  03 B7 FB00				add	si,data_923[bx]		; (020C:FB00=8079h)
020C:201F  8D 2E 9102				lea	bp,cs:[9102h]		; Load effective addr
020C:2023  03 46 30				add	ax,[bp+30h]
020C:2026  40					inc	ax
020C:2027  00 04				add	[si],al
020C:2029  00 C3				add	bl,al
020C:202B  3C 00				cmp	al,0
020C:202D  00 06 4D00				add	data_750,al		; (020C:4D00=26h)
020C:2031  10 04				adc	[si],al
020C:2033  B5 00				mov	ch,0
020C:2035  00 06 4300				add	data_677,al		; (020C:4300=8Bh)
020C:2039  4F					dec	di
020C:203A  4D					dec	bp
020C:203B  4D					dec	bp
020C:203C  41					inc	cx
020C:203D  4E					dec	si
020C:203E  44					inc	sp
020C:203F  00 CD				add	ch,cl
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 64

020C:2041  20 FF				and	bh,bh
020C:2043  9F					lahf				; Load ah from flags
020C:2044  00 9A FEF0				add	[bp+si-110h],bl
020C:2048  1D 7FF0				sbb	ax,7FF0h
020C:204B  01 10				add	[bx+si],dx
020C:204D  04 4B				add	al,4Bh			; 'K'
020C:204F  01 10				add	[bx+si],dx
020C:2051  04 56				add	al,56h			; 'V'
020C:2053  01 10				add	[bx+si],dx
020C:2055  04 10				add	al,10h
020C:2057  04 01				add	al,1
020C:2059  01 01				add	[bx+di],ax
020C:205B  00 02				add	[bp+si],al
020C:205D  000F[FF]				db	15 dup (0FFh)
020C:206C  CE					into				; Int 4 on overflow
020C:206D  04 FA				add	al,0FAh
020C:206F  05 0410				add	ax,410h
020C:2072  14 00				adc	al,0
020C:2074  18 00				sbb	[bx+si],al
020C:2076  10 04				adc	[si],al
020C:2078  FF					db	0FFh
020C:2079  FF					db	0FFh
020C:207A  FF					db	0FFh
020C:207B  FF 00				inc	word ptr [bx+si]
020C:207D  00 00				add	[bx+si],al
020C:207F  00 05				add	[di],al
020C:2081  000F[00]				db	15 dup (0)
020C:2090  CD 21				int	21h			; ??INT Non-standard interrupt
020C:2092  CB					retf				; Return far
020C:2093  000A[00]				db	10 dup (0)
020C:209D  20 20 20				db	 20h, 20h, 20h

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:20A0			sub_26		proc	near
020C:20A0  20			data_363	db	20h			; Data table (indexed access)
020C:20A1  20 20				and	[bx+si],ah
020C:20A3  20 20				and	[bx+si],ah
020C:20A5  2020			data_364	dw	2020h			; Data table (indexed access)
020C:20A7  20 00				and	[bx+si],al
020C:20A9  00					db	0
020C:20AA  00 00				add	[bx+si],al
020C:20AC  00 20				add	[bx+si],ah
020C:20AE  2020			data_366	dw	2020h
020C:20B0  0008[20]				db	8 dup (20h)
020C:20B8  0009[00]				db	9 dup (0)
020C:20C1  0D 2020				or	ax,2020h
020C:20C4  20 53 45				and	[bp+di+45h],dl
020C:20C7  54					push	sp
020C:20C8  20 42 4C				and	[bp+si+4Ch],al
020C:20CB  41					inc	cx
020C:20CC  53					push	bx
020C:20CD  54					push	sp
020C:20CE  45					inc	bp
020C:20CF  52					push	dx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 65

020C:20D0  3D 3041				cmp	ax,3041h
020C:20D3  0D A8AD				or	ax,0A8ADh
020C:20D6  A5					movsw				; Mov [si] to es:[di]
020C:20D7  20 A4 EFAB				and	data_919[si],ah		; (020C:EFAB=1Ch)
020C:20DB  20 A1 A7A2				and	data_843[bx+di],ah	; (020C:A7A2=14h)
020C:20DF  AE					scasb				; Scan es:[di] for al
020C:20E0  A2 A3AE				mov	data_833,al		; (020C:A3AE=1Eh)
020C:20E3  AE					scasb				; Scan es:[di] for al
020C:20E4  20 AF E0AE				and	data_896[bx],ch		; (020C:E0AE=45h)
020C:20E8  E2 A0		;*		loop	locloop_177		;*Loop if cx > 0

020C:20E8  E2 A0				db	0E2h,0A0h
020C:20EA  20 A2 AEA2				and	[bp+si-515Eh],ah
020C:20EE  A4					movsb				; Mov [si] to es:[di]
020C:20EF  A0			data_369	db	0A0h
020C:20F0  2D EBA2				sub	ax,0EBA2h
020C:20F3  A2 A4AE				mov	byte ptr data_838,al	; (020C:A4AE=14h)
020C:20F6  A0 5320				mov	al,data_765		; (020C:5320=3Eh)
020C:20F9  42					inc	dx
020C:20FA  2C 20				sub	al,20h			; ' '
020C:20FC  AD					lodsw				; String [si] to ax
020C:20FD  A0 E0AF				mov	al,data_897		; (020C:E0AF=6)
020C:2100  A8 AC				test	al,0ACh
020C:2102  A5					movsw				; Mov [si] to es:[di]
020C:2103  E0 3A				loopnz	locloop_181		; Loop if zf=0, cx>0

020C:2105  0D 0DEC				or	ax,0DECh
020C:2108  E0 EB		;*		loopnz	locloop_180		;*Loop if zf=0, cx>0

020C:2108  E0 EB				db	0E0h,0EBh
020C:210A  A5					movsw				; Mov [si] to es:[di]
020C:210B  0D 0000				or	ax,0
020C:210E  0018[00]				db	24 dup (0)
020C:2126  0000			data_372	dw	0
020C:2128  0000			data_373	dw	0
020C:212A  0000			data_374	dw	0
020C:212C  00					db	0
020C:212D  00					db	0
020C:212E  00					db	0
020C:212F  00					db	0
020C:2130  00					db	0
020C:2131  00					db	0
020C:2132  00					db	0
020C:2133  00					db	0
020C:2134  00					db	0
020C:2135  00					db	0
020C:2136  00					db	0
020C:2137  00					db	0
020C:2138  00					db	0
020C:2139  00					db	0
020C:213A  00					db	0
020C:213B  00					db	0
020C:213C  00					db	0
020C:213D  00 00				add	[bx+si],al

020C:213F			locloop_181:
020C:213F  00 E9				add	cl,ch
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 66

020C:2141  4D					dec	bp
020C:2142  17					pop	ss
020C:2143  00 17				add	[bx],dl
020C:2145  64					db	64h
020C:2146  FF					db	0FFh
020C:2147  FF 37				push	word ptr [bx]
020C:2149  5E					pop	si
020C:214A  FF					db	0FFh
020C:214B  FF F5		;*		push	bp
020C:214B  FF F5				db	0FFh,0F5h
020C:214D  FF5C			data_375	dw	0FF5Ch
020C:214F  24FF			data_376	dw	24FFh
020C:2151  61			data_377	db	61h
020C:2152  FF			data_378	db	0FFh
020C:2153  FF					db	0FFh
020C:2154  5CE9			data_379	dw	5CE9h
020C:2156  FFFF			data_380	dw	0FFFFh
020C:2158  5F63			data_381	dw	5F63h
020C:215A  FFFF			data_382	dw	0FFFFh
020C:215C  6101			data_383	dw	6101h
020C:215E  FFFF			data_384	dw	0FFFFh
020C:2160  5E6E			data_385	dw	5E6Eh
020C:2162  FFFF			data_386	dw	0FFFFh
020C:2164  645A			data_387	dw	645Ah
020C:2166  FFFF			data_388	dw	0FFFFh
020C:2168  5F82			data_389	dw	5F82h
020C:216A  FFFF			data_390	dw	0FFFFh
020C:216C  64D3			data_391	dw	64D3h
020C:216E  FF			data_392	db	0FFh
020C:216F  FF			data_393	db	0FFh
020C:2170  AF			data_394	db	0AFh
020C:2171  00 DB				add	bl,bl
020C:2173  02			data_396	db	2
020C:2174  FB01			data_397	dw	0FB01h
020C:2176  E8			data_398	db	0E8h
020C:2177  0064			data_399	dw	64h
020C:2179  0E1E			data_400	dw	0E1Eh
020C:217B  2E			data_401	db	2Eh
020C:217C  2EFF			data_402	dw	2EFFh
020C:217E  0104			data_403	dw	104h
020C:2180  E8FB			data_404	dw	0E8FBh
020C:2182  0059			data_405	dw	59h
020C:2184  0E1E			data_406	dw	0E1Eh
020C:2186  FF2E			data_407	dw	0FF2Eh
020C:2188  082E			data_408	dw	82Eh
020C:218A  FB01			data_409	dw	0FB01h
020C:218C  4EE8			data_410	dw	4EE8h
020C:218E  1E00			data_411	dw	1E00h
020C:2190  2E0E			data_412	dw	2E0Eh
020C:2192  2EFF			data_413	dw	2EFFh
020C:2194  010C			data_414	dw	10Ch
020C:2196  E8FB			data_415	dw	0E8FBh
020C:2198  0043			data_416	dw	43h
020C:219A  0E1E			data_417	dw	0E1Eh
020C:219C  FF2E			data_418	dw	0FF2Eh
020C:219E  2E: 10 01				adc	cs:[bx+di],al
020C:21A1			loc_182:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 67

020C:21A1  E8 0039				call	sub_28			; (21DD)
020C:21A4  0E1E			data_420	dw	0E1Eh
020C:21A6  2E: FF 2E 0114			jmp	dword ptr cs:[114h]	; (020C:0114=0C0Bh)
				sub_26		endp

							                        ;* No entry point to code
020C:21AB  E8 002F				call	sub_28			; (21DD)
020C:21AE  1E					push	ds
020C:21AF  0E					push	cs
020C:21B0  2E: FF 2E 0118			jmp	dword ptr cs:[118h]	; (020C:0118=0)
							                        ;* No entry point to code
020C:21B5  E8 0025				call	sub_28			; (21DD)
020C:21B8  1E					push	ds
020C:21B9  0E					push	cs
020C:21BA  2E: FF 2E 011C			jmp	dword ptr cs:[11Ch]	; (020C:011C=145Dh)
020C:21BF			loc_183:
020C:21BF  E8 001B				call	sub_28			; (21DD)
020C:21C2  1E					push	ds
020C:21C3  0E					push	cs
020C:21C4  2E: FF 2E 0120			jmp	dword ptr cs:[120h]	; (020C:0120=0A3BAh)
							                        ;* No entry point to code
020C:21C9  E8 0011				call	sub_28			; (21DD)
020C:21CC  1E					push	ds
020C:21CD  0E					push	cs
020C:21CE  2E: FF 2E 0124			jmp	dword ptr cs:[124h]	; (020C:0124=201h)
							                        ;* No entry point to code
020C:21D3  E8 0007				call	sub_28			; (21DD)
020C:21D6  1E					push	ds
020C:21D7  0E					push	cs
020C:21D8  2E: FF 2E 0128			jmp	dword ptr cs:[128h]	; (020C:0128=1405h)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:21DD			sub_28		proc	near
020C:21DD  9C					pushf				; Push flags
020C:21DE  50					push	ax
020C:21DF  2E: 80 3E 0134 00			cmp	byte ptr cs:[134h],0	; (020C:0134=0)
020C:21E5  74 08				je	loc_184			; Jump if equal
020C:21E7  E8 000D				call	sub_29			; (21F7)
020C:21EA  73 03				jnc	loc_184			; Jump if carry=0
020C:21EC  E8 001B				call	sub_30			; (220A)
020C:21EF			loc_184:
020C:21EF  58					pop	ax
020C:21F0  9D					popf				; Pop flags
020C:21F1  C3					retn
				sub_28		endp

020C:21F2  EA 0410:0135		;*		jmp	far ptr loc_2724	;*(0410:0135)
020C:21F2  EA					db	0EAh
020C:21F3  0135 0410				dw	135h, 410h

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 68

020C:21F7			sub_29		proc	near
020C:21F7  53					push	bx
020C:21F8  50					push	ax
020C:21F9  B4 07				mov	ah,7
020C:21FB  2E: FF 1E 0130			call	dword ptr cs:[130h]	; (020C:0130=3E3Dh)
020C:2200  0B C0				or	ax,ax			; Zero ?
020C:2202  58					pop	ax
020C:2203  5B					pop	bx
020C:2204  75 02				jnz	loc_185			; Jump if not zero
020C:2206  F9					stc				; Set carry flag
020C:2207  C3					retn
020C:2208			loc_185:
020C:2208  F8					clc				; Clear carry flag
020C:2209  C3					retn
				sub_29		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:220A			sub_30		proc	near
020C:220A  53					push	bx
020C:220B  50					push	ax
020C:220C  B4 05				mov	ah,5
020C:220E  2E: FF 1E 0130			call	dword ptr cs:[130h]	; (020C:0130=3E3Dh)
020C:2213  0B C0				or	ax,ax			; Zero ?
020C:2215  74 03				jz	loc_186			; Jump if zero
020C:2217  58					pop	ax
020C:2218  5B					pop	bx
020C:2219  C3					retn
020C:221A			loc_186:
020C:221A  EB FE				jmp	short loc_186		; (221A)
				sub_30		endp

							                        ;* No entry point to code
020C:221C  CD 21				int	21h			; DOS Services  ah=function 1Dh
										;  obsolete CP/M function
020C:221E  FA					cli				; Disable interrupts
020C:221F  0E					push	cs
020C:2220  17					pop	ss
020C:2221  BC 0612				mov	sp,612h
020C:2224  FB					sti				; Enable interrupts
020C:2225  0E					push	cs
020C:2226  1F					pop	ds
020C:2227  9C					pushf				; Push flags
020C:2228  50					push	ax
020C:2229  2E: A0 0614				mov	al,byte ptr cs:[614h]	; (020C:0614=2Eh)
020C:222D  A8 80				test	al,80h
020C:222F  74 07				jz	loc_187			; Jump if zero
020C:2231  24 7F				and	al,7Fh
020C:2233  2E: FF 1E 012C			call	dword ptr cs:[12Ch]	; (020C:012C=3A39h)
020C:2238			loc_187:
020C:2238  2E: 80 26 0614 7F			and	byte ptr cs:[614h],7Fh	; (020C:0614=2Eh)
020C:223E  58					pop	ax
020C:223F  9D					popf				; Pop flags
020C:2240  E9 FF5E				jmp	loc_182			; (21A1)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 69

							                        ;* No entry point to code
020C:2243  02 00				add	al,[bx+si]
020C:2245  00 01				add	[bx+di],al
020C:2247  09 02				or	[bp+si],ax
020C:2249  41					inc	cx
020C:224A  02 00				add	al,[bx+si]
020C:224C  00 02				add	[bp+si],al
020C:224E  10 02				adc	[bp+si],al
020C:2250  0009[00]				db	9 dup (0)
020C:2259  02 22				add	ah,[bp+si]
020C:225B  02 03				add	al,[bp+di]
020C:225D  30 02				xor	[bp+si],al
020C:225F  03 2E 0002				add	bp,word ptr ds:[2]	; (020C:0002=10h)
020C:2263  00					db	0
020C:2264  000F[00]				db	15 dup (0)
020C:2273  01 09				add	[bx+di],cx
020C:2275  02 02				add	al,[bp+si]
020C:2277  5A					pop	dx
020C:2278  02 01				add	al,[bx+di]
020C:227A  3C 02				cmp	al,2
020C:227C  43					inc	bx
020C:227D  02 7C 04				add	bh,[si+4]
020C:2280  000A[00]				db	10 dup (0)
020C:228A  00			data_425	db	0
020C:228B  10 04				adc	[si],al
020C:228D  7F 01				jg	loc_188			; Jump if >
020C:228F  10 04				adc	[si],al
020C:2291  0007[00]				db	7 dup (0)
020C:2298  43					inc	bx
020C:2299  3A 5C 57				cmp	bl,[si+57h]
020C:229C  49					dec	cx
020C:229D  4E					dec	si
020C:229E  44					inc	sp
020C:229F  4F					dec	di
020C:22A0  57					push	di
020C:22A1  53					push	bx
020C:22A2  5C					pop	sp
020C:22A3  53					push	bx
020C:22A4  59					pop	cx
020C:22A5  53					push	bx
020C:22A6  54					push	sp
020C:22A7  45					inc	bp
020C:22A8  4D					dec	bp
020C:22A9  33 32				xor	si,[bp+si]
020C:22AB  5C					pop	sp
020C:22AC  43					inc	bx
020C:22AD  4D4F			data_427	dw	4D4Fh
020C:22AF  4D					dec	bp
020C:22B0  41					inc	cx
020C:22B1  444E			data_428	dw	444Eh
020C:22B3  432E			data_429	dw	432Eh
020C:22B5  4F					dec	di
020C:22B6  4D					dec	bp
020C:22B7  00			data_430	db	0
020C:22B8  0000			data_431	dw	0
020C:22BA  00					db	0
020C:22BB  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 70

020C:22BC  00					db	0
020C:22BD  0000			data_432	dw	0
020C:22BF  00					db	0
020C:22C0  00					db	0
020C:22C1  00					db	0
020C:22C2  00					db	0
020C:22C3  00					db	0
020C:22C4  00					db	0
020C:22C5  00					db	0
020C:22C6  00					db	0
020C:22C7  00					db	0
020C:22C8  00					db	0
020C:22C9  00					db	0
020C:22CA  00					db	0
020C:22CB  00					db	0
020C:22CC  00					db	0
020C:22CD  00					db	0
020C:22CE  00					db	0
020C:22CF  00					db	0
020C:22D0  00					db	0
020C:22D1  00					db	0
020C:22D2  00					db	0
020C:22D3  00					db	0
020C:22D4  00					db	0
020C:22D5  00 00				add	[bx+si],al
020C:22D7  00 77 02				add	[bx+2],dh
020C:22DA  2C 01				sub	al,1
020C:22DC			loc_189:
020C:22DC  B4 95				mov	ah,95h
020C:22DE  01 00				add	[bx+si],ax
020C:22E0  00 03				add	[bp+di],al
020C:22E2  FF 9F 1EEE				call	data_345[bx]		;*(020C:1EEE=0)
020C:22E6  01 00				add	[bx+si],ax
020C:22E8  03 00				add	ax,[bx+si]
020C:22EA  01			data_433	db	1
020C:22EB  00			data_434	db	0
020C:22EC  0101			data_435	dw	101h
020C:22EE  0001			data_436	dw	1
020C:22F0  0001			data_437	dw	1
020C:22F2  0000			data_438	dw	0
020C:22F4  FF			data_439	db	0FFh
020C:22F5  FF			data_440	db	0FFh
020C:22F6  00			data_441	db	0
020C:22F7  0000			data_442	dw	0
020C:22F9  00			data_443	db	0
020C:22FA  00					db	0
020C:22FB  00			data_444	db	0
020C:22FC  00			data_445	db	0
020C:22FD  00			data_446	db	0
020C:22FE  00			data_447	db	0
020C:22FF  00			data_448	db	0
020C:2300  0000			data_449	dw	0
020C:2302  3104			data_451	dw	3104h
020C:2304  A70B			data_452	dw	0A70Bh
020C:2306  00			data_453	db	0
020C:2307  00			data_454	db	0
020C:2308  00			data_455	db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 71

020C:2309  00 00				add	[bx+si],al
020C:230B  0CE7			data_457	dw	0CE7h
020C:230D  A7			data_458	db	0A7h
020C:230E  0000			data_459	dw	0
020C:2310  0000			data_460	dw	0
020C:2312  00			data_461	db	0
020C:2313  00					db	0
020C:2314  0000			data_462	dw	0
020C:2316  00					db	0
020C:2317  00					db	0
020C:2318  0000			data_463	dw	0
020C:231A  00					db	0
020C:231B  00					db	0
020C:231C  0000			data_464	dw	0
020C:231E  00					db	0
020C:231F  00					db	0
020C:2320  0000			data_465	dw	0
020C:2322  0000			data_466	dw	0
020C:2324  0000			data_467	dw	0
020C:2326  00					db	0
020C:2327  00					db	0
020C:2328  0000			data_468	dw	0
020C:232A  00					db	0
020C:232B  00					db	0
020C:232C  0000			data_469	dw	0
020C:232E  00					db	0
020C:232F  00					db	0
020C:2330  00					db	0
020C:2331  00					db	0
020C:2332  0000			data_470	dw	0
020C:2334  0000			data_471	dw	0
020C:2336  0000			data_472	dw	0
020C:2338  0000			data_473	dw	0
020C:233A  0000			data_474	dw	0
020C:233C  00					db	0
020C:233D  00					db	0
020C:233E  00					db	0
020C:233F  00					db	0
020C:2340  00					db	0
020C:2341  00					db	0
020C:2342  00			data_475	db	0
020C:2343  00					db	0
020C:2344  00			data_476	db	0
020C:2345  00			data_477	db	0
020C:2346  00			data_478	db	0
020C:2347  00					db	0
020C:2348  00			data_479	db	0
020C:2349  00			data_480	db	0
020C:234A  0000			data_481	dw	0
020C:234C  00			data_482	db	0
020C:234D  00			data_483	db	0
020C:234E  00			data_484	db	0
020C:234F  00			data_485	db	0
020C:2350  00					db	0
020C:2351  00					db	0
020C:2352  00					db	0
020C:2353  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 72

020C:2354  00					db	0
020C:2355  00					db	0
020C:2356  00					db	0
020C:2357  00					db	0
020C:2358  00					db	0
020C:2359  00					db	0
020C:235A  00					db	0
020C:235B  00					db	0
020C:235C  00					db	0
020C:235D  00					db	0
020C:235E  00					db	0
020C:235F  00					db	0
020C:2360  00					db	0
020C:2361  00					db	0
020C:2362  00					db	0
020C:2363  00 00				add	[bx+si],al
020C:2365  00 01				add	[bx+di],al
020C:2367  00 00				add	[bx+si],al
020C:2369  00 01				add	[bx+di],al
020C:236B  00					db	0
020C:236C  0007[00]				db	7 dup (0)
020C:2373  1E					push	ds
020C:2374  06					push	es
020C:2375  0E					push	cs
020C:2376  1F					pop	ds
020C:2377  8B 16 22BD				mov	dx,data_432		; (020C:22BD=0)
020C:237B  A1 22B1				mov	ax,data_428		; (020C:22B1=444Eh)
020C:237E  8B 1E 22AD				mov	bx,data_427		; (020C:22AD=4D4Fh)
020C:2382  8B 0E 22B3				mov	cx,data_429		; (020C:22B3=432Eh)
020C:2386  50					push	ax
020C:2387  53					push	bx
020C:2388  51					push	cx
020C:2389  8C DB				mov	bx,ds
020C:238B  8E C3				mov	es,bx
020C:238D  8B 1E 0593				mov	bx,word ptr ds:[593h]	; (020C:0593=3)
020C:2391  B4 4A				mov	ah,4Ah
020C:2393  CD 21				int	21h			; DOS Services  ah=function 4Ah
										;  change memory allocation
										;   bx=bytes/16, es=mem segment
020C:2395  80 3E 02B0 01			cmp	byte ptr ds:[2B0h],1	; (020C:02B0=1Dh)
020C:239A  75 33				jne	loc_190			; Jump if not equal
020C:239C  83 3E 0256 00			cmp	word ptr ds:[256h],0	; (020C:0256=0)
020C:23A1  74 2C				je	loc_190			; Jump if equal
020C:23A3  BB 0007				mov	bx,7
020C:23A6  B4 48				mov	ah,48h
020C:23A8  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020C:23AA  72 23				jc	loc_190			; Jump if carry Set
020C:23AC  8E C0				mov	es,ax
020C:23AE  33 FF				xor	di,di			; Zero register
020C:23B0  33 F6				xor	si,si			; Zero register
020C:23B2  1E					push	ds
020C:23B3  8E 1E 0256				mov	ds,word ptr ds:[256h]	; (020C:0256=0)
020C:23B7  B9 0021				mov	cx,21h
020C:23BA  83 C1 40				add	cx,40h
020C:23BD  FC					cld				; Clear direction
020C:23BE  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 73

020C:23C0  1F					pop	ds
020C:23C1  8C C1				mov	cx,es
020C:23C3  8E 06 0256				mov	es,word ptr ds:[256h]	; (020C:0256=0)
020C:23C7  B4 49				mov	ah,49h
020C:23C9  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020C:23CB  89 0E 0256				mov	word ptr ds:[256h],cx	; (020C:0256=0)
020C:23CF			loc_190:
020C:23CF  59					pop	cx
020C:23D0  5B					pop	bx
020C:23D1  5D					pop	bp
020C:23D2  B4 48				mov	ah,48h
020C:23D4  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020C:23D6  72 41				jc	loc_191			; Jump if carry Set
020C:23D8  A3 0458				mov	word ptr ds:[458h],ax	; (020C:0458=0C40Eh)
020C:23DB  A3 002C				mov	word ptr ds:[2Ch],ax	; (020C:002C=3A39h)
020C:23DE  8E C0				mov	es,ax
020C:23E0  80 3E 02B0 01			cmp	byte ptr ds:[2B0h],1	; (020C:02B0=1Dh)
020C:23E5  75 34				jne	loc_192			; Jump if not equal
020C:23E7  53					push	bx
020C:23E8  BB 0000				mov	bx,0
020C:23EB  C4					db	0C4h
020C:23EC  C4 54 0F				les	dx,dword ptr [si+0Fh]	; Load seg:offset ptr
020C:23EF  8B C3				mov	ax,bx
020C:23F1  5B					pop	bx
020C:23F2  3D 0000				cmp	ax,0
020C:23F5  74 24				je	loc_192			; Jump if equal
020C:23F7  03 D8				add	bx,ax
020C:23F9  B4 49				mov	ah,49h
020C:23FB  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020C:23FD  B4 48				mov	ah,48h
020C:23FF  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020C:2401  72 75				jc	loc_195			; Jump if carry Set
020C:2403  A3 0458				mov	word ptr ds:[458h],ax	; (020C:0458=0C40Eh)
020C:2406  A3 002C				mov	word ptr ds:[2Ch],ax	; (020C:002C=3A39h)
020C:2409  8E C0				mov	es,ax
020C:240B  89 1E 22AD				mov	data_427,bx		; (020C:22AD=4D4Fh)
020C:240F  53					push	bx
020C:2410  C4					db	0C4h
020C:2411  C4 54 0F				les	dx,dword ptr [si+0Fh]	; Load seg:offset ptr
020C:2414  58					pop	ax
020C:2415  3B D8				cmp	bx,ax
020C:2417  76 0D				jbe	loc_193			; Jump if below or =
020C:2419			loc_191:
020C:2419  EB 5D				jmp	short loc_195		; (2478)
020C:241B			loc_192:
020C:241B  1E					push	ds
020C:241C  8E DD				mov	ds,bp
020C:241E  33 F6				xor	si,si			; Zero register
020C:2420  8B FE				mov	di,si
020C:2422  FC					cld				; Clear direction
020C:2423  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:2425  1F					pop	ds
020C:2426			loc_193:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 74

020C:2426  80 3E 228A 00			cmp	data_425,0		; (020C:228A=0)
020C:242B  75 06				jne	loc_194			; Jump if not equal
020C:242D  8E			data_488	db	8Eh			; Data table (indexed access)
020C:242E  C5			data_489	db	0C5h			; Data table (indexed access)
020C:242F  B4 49				mov	ah,49h
020C:2431  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020C:2433			loc_194:
020C:2433  C6 06 029E 01			mov	byte ptr ds:[29Eh],1	; (020C:029E=0)
020C:2438  06					push	es
020C:2439  BE 2760				mov	si,2760h
020C:243C  BF 0000				mov	di,0
020C:243F  B9 A4AD				mov	cx,0A4ADh
020C:2442  BB FFFF				mov	bx,0FFFFh
020C:2445  B4 48				mov	ah,48h
020C:2447  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020C:2449  3B DA				cmp	bx,dx
020C:244B  72 2B				jb	loc_195			; Jump if below
020C:244D  B4 48				mov	ah,48h
020C:244F  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020C:2451  72 25				jc	loc_195			; Jump if carry Set
020C:2453  50					push	ax
020C:2454  03 C3				add	ax,bx
020C:2456  2B C2				sub	ax,dx
020C:2458  A3 029C				mov	word ptr ds:[29Ch],ax	; (020C:029C=0)
020C:245B  8E C0				mov	es,ax
020C:245D  58					pop	ax
020C:245E  03 F1				add	si,cx
020C:2460  4E					dec	si
020C:2461  03 F9				add	di,cx
020C:2463  4F					dec	di
020C:2464  FD					std				; Set direction flag
020C:2465  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:2467  FC					cld				; Clear direction
020C:2468  8E C0				mov	es,ax
020C:246A  B4 49				mov	ah,49h
020C:246C  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020C:246E  C6 06 0330 00			mov	byte ptr ds:[330h],0	; (020C:0330=61h)
020C:2473  07					pop	es
020C:2474  1F					pop	ds
020C:2475  E9 FD47				jmp	loc_183			; (21BF)
020C:2478			loc_195:
020C:2478  E9 1DC0				jmp	loc_470			; (423B)
020C:247B  0019[00]				db	25 dup (0)
020C:2494  33 03				xor	ax,[bp+di]
020C:2496  82 03 CE				add	byte ptr [bp+di],0CEh
020C:2499  04 80				add	al,80h
020C:249B  00 10				add	[bx+si],dl
020C:249D  04 5C				add	al,5Ch			; '\'
020C:249F  00 10				add	[bx+si],dl
020C:24A1  04 6C				add	al,6Ch			; 'l'
020C:24A3  00 10				add	[bx+si],dl
020C:24A5  04 93				add	al,93h
020C:24A7  01 10				add	[bx+si],dx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 75

020C:24A9  04 00				add	al,0
020C:24AB  10 2F				adc	[bx],ch
020C:24AD  5C					pop	sp
020C:24AE  DC					db	0DCh
020C:24AF  01 10				add	[bx+si],dx
020C:24B1  04 6B				add	al,6Bh			; 'k'
020C:24B3  01 10				add	[bx+si],dx
020C:24B5  04 00				add	al,0
020C:24B7  00 14				add	[si],dl
020C:24B9  05 0000				add	ax,0
020C:24BC  43 3A 5C 44 4F 43			db	'C:\DOCUME~1\9335~1\LOCALS~1\TEMP'
020C:24C2  55 4D 45 7E 31 5C
020C:24C8  39 33 33 35 7E 31
020C:24CE  5C 4C 4F 43 41 4C
020C:24D4  53 7E 31 5C 54 45
020C:24DA  4D 50
020C:24DC  5C 52 41 52 24			db	'\RAR$'
020C:24E1  45 58 31 33 2E 34			db	'EX13.485\SRCER700\SR.EXE'
020C:24E7  38 35 5C 53 52 43
020C:24ED  45 52 37 30 30 5C
020C:24F3  53 52 2E 45 58 45
020C:24F9  001E[00]				db	30 dup (0)
020C:2517  00			data_493	db	0
020C:2518  00			data_494	db	0
020C:2519  00					db	0
020C:251A  00					db	0
020C:251B  00					db	0
020C:251C  00					db	0
020C:251D  00					db	0
020C:251E  00					db	0
020C:251F  00					db	0
020C:2520  00					db	0
020C:2521  00					db	0
020C:2522  00					db	0
020C:2523  00					db	0
020C:2524  00					db	0
020C:2525  00					db	0
020C:2526  00					db	0
020C:2527  00					db	0
020C:2528  00					db	0
020C:2529  00					db	0
020C:252A  00					db	0
020C:252B  00					db	0
020C:252C  00					db	0
020C:252D  00					db	0
020C:252E  00					db	0
020C:252F  00					db	0
020C:2530  00					db	0
020C:2531  00					db	0
020C:2532  00					db	0
020C:2533  00					db	0
020C:2534  00					db	0
020C:2535  00					db	0
020C:2536  00					db	0
020C:2537  00					db	0
020C:2538  00					db	0
020C:2539  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 76

020C:253A  00					db	0
020C:253B  00					db	0
020C:253C  00					db	0
020C:253D  00					db	0
020C:253E  00					db	0
020C:253F  00					db	0
020C:2540  00					db	0
020C:2541  00					db	0
020C:2542  00					db	0
020C:2543  00					db	0
020C:2544  00					db	0
020C:2545  00					db	0
020C:2546  00					db	0
020C:2547  00					db	0
020C:2548  00					db	0
020C:2549  00					db	0
020C:254A  00					db	0
020C:254B  00					db	0
020C:254C  00					db	0
020C:254D  00					db	0
020C:254E  00					db	0
020C:254F  00					db	0
020C:2550  00					db	0
020C:2551  00					db	0
020C:2552  00					db	0
020C:2553  00					db	0
020C:2554  00					db	0
020C:2555  00					db	0
020C:2556  00					db	0
020C:2557  00					db	0
020C:2558  00					db	0
020C:2559  00					db	0
020C:255A  00					db	0
020C:255B  00					db	0
020C:255C  00					db	0
020C:255D  00					db	0
020C:255E  00					db	0
020C:255F  00					db	0
020C:2560  00					db	0
020C:2561  00					db	0
020C:2562  00					db	0
020C:2563  00					db	0
020C:2564  00					db	0
020C:2565  00					db	0
020C:2566  00					db	0
020C:2567  00					db	0
020C:2568  00					db	0
020C:2569  00					db	0
020C:256A  00					db	0
020C:256B  00					db	0
020C:256C  00					db	0
020C:256D  00					db	0
020C:256E  00					db	0
020C:256F  00					db	0
020C:2570  00					db	0
020C:2571  00					db	0
020C:2572  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 77

020C:2573  00					db	0
020C:2574  00					db	0
020C:2575  00					db	0
020C:2576  00					db	0
020C:2577  00					db	0
020C:2578  00					db	0
020C:2579  00					db	0
020C:257A  00					db	0
020C:257B  00					db	0
020C:257C  00					db	0
020C:257D  00					db	0
020C:257E  00					db	0
020C:257F  00					db	0
020C:2580  00					db	0
020C:2581  00					db	0
020C:2582  00					db	0
020C:2583  00					db	0
020C:2584  00					db	0
020C:2585  00					db	0
020C:2586  00					db	0
020C:2587  00					db	0
020C:2588  00					db	0
020C:2589  00					db	0
020C:258A  00					db	0
020C:258B  00					db	0
020C:258C  00					db	0
020C:258D  00					db	0
020C:258E  00					db	0
020C:258F  00					db	0
020C:2590  00					db	0
020C:2591  00					db	0
020C:2592  00					db	0
020C:2593  00					db	0
020C:2594  00					db	0
020C:2595  00					db	0
020C:2596  00					db	0
020C:2597  00					db	0
020C:2598  00					db	0
020C:2599  00					db	0
020C:259A  00					db	0
020C:259B  00					db	0
020C:259C  00					db	0
020C:259D  00					db	0
020C:259E  00					db	0
020C:259F  00					db	0
020C:25A0  00					db	0
020C:25A1  00					db	0
020C:25A2  00					db	0
020C:25A3  00					db	0
020C:25A4  00					db	0
020C:25A5  00					db	0
020C:25A6  00					db	0
020C:25A7  00					db	0
020C:25A8  00					db	0
020C:25A9  00					db	0
020C:25AA  00					db	0
020C:25AB  00					db	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 78

020C:25AC  00					db	0
020C:25AD  00					db	0
020C:25AE  00					db	0
020C:25AF  00					db	0
020C:25B0  00					db	0
020C:25B1  00					db	0
020C:25B2  00					db	0
020C:25B3  00					db	0
020C:25B4  00					db	0
020C:25B5  00					db	0
020C:25B6  00					db	0
020C:25B7  00					db	0
020C:25B8  00					db	0
020C:25B9  00					db	0
020C:25BA  00					db	0
020C:25BB  00					db	0
020C:25BC  00					db	0
020C:25BD  00					db	0
020C:25BE  00					db	0
020C:25BF  00					db	0
020C:25C0  00					db	0
020C:25C1  00					db	0
020C:25C2  00					db	0
020C:25C3  00					db	0
020C:25C4  00					db	0
020C:25C5  00					db	0
020C:25C6  00					db	0
020C:25C7  00					db	0
020C:25C8  00					db	0
020C:25C9  00					db	0
020C:25CA  00 00				add	[bx+si],al

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:25CC			sub_32		proc	near
020C:25CC  00 66 00				add	[bp],ah
020C:25CF  DB					db	0DBh
020C:25D0  02 46 0B				add	al,[bp+0Bh]
020C:25D3  B5 00				mov	ch,0
020C:25D5  0042[00]				db	66 dup (0)
020C:2617  63					db	63h
020C:2618  0D 0094				or	ax,94h
020C:261B  00 00				add	[bx+si],al
020C:261D  00 E7				add	bh,ah
020C:261F  0C C5				or	al,0C5h
020C:2621  22 0C				and	cl,[si]
020C:2623  94					xchg	sp,ax
020C:2624  EA 1322:EA22		;*		jmp	far ptr loc_2725	;*(1322:EA22)
				sub_32		endp

020C:2624  EA					db	0EAh
020C:2625  EA22 1322				dw	0EA22h, 1322h
							                        ;* No entry point to code
020C:2629  07					pop	es
020C:262A  00 07				add	[bx],al
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 79

020C:262C  DB					db	0DBh
020C:262D  02 01				add	al,[bx+di]
020C:262F  00 DB				add	bl,bl
020C:2631  02 47 01				add	al,[bx+1]
020C:2634  DB					db	0DBh

020C:2635			locloop_197:
020C:2635  02 24				add	ah,[si]
020C:2637  25 95B4				and	ax,95B4h
020C:263A  00 3E 9AAF				add	data_816,bh		; (020C:9AAF=91h)
020C:263E  10 04				adc	[si],al
020C:2640  00 00				add	[bx+si],al
020C:2642  00 01				add	[bx+di],al
020C:2644  00 01				add	[bx+di],al
020C:2646  81 00 0410				add	word ptr [bx+si],410h
020C:264A  10 04				adc	[si],al
020C:264C  DE					db	0DEh
020C:264D  01 10				add	[bx+si],dx
020C:264F  04 46				add	al,46h			; 'F'
020C:2651  32 00				xor	al,[bx+si]
020C:2653  00 00				add	[bx+si],al
020C:2655  41					inc	cx
020C:2656  52					push	dx
020C:2657  49					dec	cx
020C:2658  46					inc	si
020C:2659  59					pop	cx
020C:265A  4E					dec	si
020C:265B  0C 41				or	al,41h			; 'A'
020C:265D  62					db	62h
020C:265E  6F					db	6Fh
020C:265F  72 74				jc	loc_209			; Jump if carry Set
020C:2661  20 28				and	[bx+si],ch
020C:2663  E1 E2		;*		loopz	locloop_199		;*Loop if zf=1, cx>0

020C:2663  E1 E2				db	0E1h,0E2h
020C:2665  AE					scasb				; Scan es:[di] for al
020C:2666  AF					scasw				; Scan es:[di] for ax
020C:2667  29 10				sub	[bx+si],dx
020C:2669  2C 20				sub	al,20h			; ' '
020C:266B			loc_200:
020C:266B  52					push	dx
020C:266C  65					db	65h
020C:266D  74 72				jz	loc_210			; Jump if zero
020C:266F  79 20				jns	loc_203			; Jump if not sign
020C:2671  28 AF A2AE				sub	data_831[bx],ch		; (020C:A2AE=4)
020C:2675  E2 AE		;*		loop	locloop_196		;*Loop if cx > 0

020C:2675  E2 AE				db	0E2h,0AEh
020C:2677  E0 29				loopnz	locloop_205		; Loop if zf=0, cx>0

020C:2679  12 2C				adc	ch,[si]
020C:267B  20 49 67				and	[bx+di+67h],cl
020C:267E  6E					db	6Eh
020C:267F  6F					db	6Fh
020C:2680  6572 2820		data_496	dw	6572h, 2820h
020C:2684  AF					scasw				; Scan es:[di] for ax
020C:2685  E0 AE				loopnz	locloop_197		; Loop if zf=0, cx>0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 80


020C:2687  AF					scasw				; Scan es:[di] for ax
020C:2688  E3 E1				jcxz	loc_200			; Jump if cx=0
020C:268A  AA					stosb				; Store al to es:[di]
020C:268B  29 0E 202C				sub	word ptr ds:[202Ch],cx	; (020C:202C=0)
020C:268F  46					inc	si
020C:2690  61					db	61h
020C:2691			loc_203:
020C:2691  69					db	69h
020C:2692  6C					db	6Ch
020C:2693  20 28				and	[bx+si],ch
020C:2695  E1 A1		;*		loopz	locloop_198		;*Loop if zf=1, cx>0

020C:2695  E1 A1				db	0E1h,0A1h
020C:2697  E0 AE		;*		loopnz	locloop_199		;*Loop if zf=0, cx>0

020C:2697  E0 AE				db	0E0h,0AEh
020C:2699  E1 29				loopz	locloop_208		; Loop if zf=1, cx>0

020C:269B  01 3F				add	[bx],di
020C:269D  07					pop	es
020C:269E  E7 E2				out	0E2h,ax			; port 0E2h ??I/O Non-standard
020C:26A0  A5					movsw				; Mov [si] to es:[di]
020C:26A1  AD					lodsw				; String [si] to ax

020C:26A2			locloop_205:
020C:26A2  A8 A5				test	al,0A5h

020C:26A4			locloop_207:
020C:26A4  00 07				add	[bx],al
020C:26A6  A7					cmpsw				; Cmp [si] to es:[di]
020C:26A7  A0 A8AF				mov	al,data_849		; (020C:A8AF=64h)
020C:26AA  E1 EC		;*		loopz	locloop_204		;*Loop if zf=1, cx>0

020C:26AA  E1 EC				db	0E1h,0ECh
020C:26AC  00 0D				add	[di],cl
020C:26AE  20 25				and	[di],ah
020C:26B0  31 20				xor	[bx+si],sp
020C:26B2  A4					movsb				; Mov [si] to es:[di]
020C:26B3  A8 E1				test	al,0E1h
020C:26B5  AA					stosb				; Store al to es:[di]
020C:26B6  20 25				and	[di],ah
020C:26B8  32 0D				xor	cl,[di]
020C:26BA  0A 13				or	dl,[bp+di]
020C:26BC  20 25				and	[di],ah
020C:26BE  31 20				xor	[bx+si],sp
020C:26C0  E3 E1		;*		jcxz	loc_206			;*Jump if cx=0
020C:26C0  E3 E1				db	0E3h,0E1h
020C:26C2  E2 E0				loop	locloop_207		; Loop if cx > 0


020C:26C4			locloop_208:
020C:26C4  AE					scasb				; Scan es:[di] for al
020C:26C5  A9 E2E1				test	ax,0E2E1h
020C:26C8  A2 20AE				mov	byte ptr data_366,al	; (020C:20AE=20h)
020C:26CB  25 0D32				and	ax,0D32h
020C:26CE  0A 27				or	ah,[bx]
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 81

020C:26D0  82 E1 E2				and	cl,0E2h
020C:26D3  A0 ECA2				mov	al,data_917		; (020C:ECA2=88h)
020C:26D6  E2 A5		;*		loop	locloop_201		;*Loop if cx > 0

020C:26D6  E2 A5				db	0E2h,0A5h
020C:26D8  20 E2				and	dl,ah
020C:26DA  AE					scasb				; Scan es:[di] for al
020C:26DB  AC					lodsb				; String [si] to al
020C:26DC  20 25				and	[di],ah
020C:26DE  31 2C				xor	[si],bp
020C:26E0  20 E1				and	cl,ah
020C:26E2  A5					movsw				; Mov [si] to es:[di]
020C:26E3  E0 A8		;*		loopnz	locloop_202		;*Loop if zf=0, cx>0

020C:26E3  E0 A8				db	0E0h,0A8h

020C:26E5			locloop_211:
020C:26E5  A9 EBAD				test	ax,0EBADh
020C:26E8  A9 AD20				test	ax,0AD20h
020C:26EB  AE					scasb				; Scan es:[di] for al
020C:26EC  AC					lodsb				; String [si] to al
020C:26ED  A5					movsw				; Mov [si] to es:[di]
020C:26EE  E0 20				loopnz	locloop_213		; Loop if zf=0, cx>0

020C:26F0  25 2D32				and	ax,2D32h
020C:26F3  25 0D33				and	ax,0D33h
020C:26F6  0A 37				or	dh,[bx]

020C:26F8			locloop_212:
020C:26F8  88 E1				mov	cl,ah
020C:26FA  AF					scasw				; Scan es:[di] for ax
020C:26FB  AE					scasb				; Scan es:[di] for al
020C:26FC  E0 E7				loopnz	locloop_211		; Loop if zf=0, cx>0

020C:26FE  A5					movsw				; Mov [si] to es:[di]
020C:26FF  AD					lodsw				; String [si] to ax
020C:2700  A0 E220				mov	al,data_902		; (020C:E220=8Bh)
020C:2703  A0 ABA1				mov	al,data_856		; (020C:ABA1=2)
020C:2706  A8 E6				test	al,0E6h
020C:2708  A0 E020				mov	al,data_894		; (020C:E020=3Ch)
020C:270B  A0 ACA7				mov	al,data_860		; (020C:ACA7=0A4h)
020C:270E  A5					movsw				; Mov [si] to es:[di]
020C:270F  E9 ADA5				jmp	loc_2209		; (D4B7)
							                        ;* No entry point to code
020C:2712  A8 EF				test	al,0EFh
020C:2714  20 E4				and	ah,ah
020C:2716  A0 ABA9				mov	al,data_858		; (020C:ABA9=26h)
020C:2719  AE					scasb				; Scan es:[di] for al
020C:271A  A2 2820				mov	data_498,al		; (020C:2820=0ADh)
020C:271D  46					inc	si
020C:271E  41					inc	cx
020C:271F  54					push	sp
020C:2720  29 20				sub	[bx+si],sp
020C:2722  AD					lodsw				; String [si] to ax
020C:2723  A0 A420				mov	al,data_835		; (020C:A420=0B1h)
020C:2726  A8 E1				test	al,0E1h
020C:2728  AA					stosb				; Store al to es:[di]
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 82

020C:2729  A5					movsw				; Mov [si] to es:[di]
020C:272A  20 25				and	[di],ah
020C:272C  31 0D				xor	[di],cx
020C:272E  0A 1A				or	bl,[bp+si]
020C:2730  8D A5 E0AF				lea	sp,cs:[0E0AFh][di]	; Load effective addr
020C:2734  A0 A8A2				mov	al,data_845		; (020C:A8A2=1)
020C:2737  AB					stosw				; Store ax to es:[di]
020C:2738  EC					in	al,dx			; port 2828h ??I/O Non-standard
020C:2739  AD					lodsw				; String [si] to ax
020C:273A  EB A9				jmp	short locloop_211	; (26E5)
020C:273C  20 43 4F				and	[bp+di+4Fh],al
020C:273F  4D					dec	bp
020C:2740  4D					dec	bp
020C:2741  41					inc	cx
020C:2742  4E					dec	si
020C:2743  44					inc	sp
020C:2744  2E					db	2Eh
020C:2745  43					inc	bx
020C:2746  4F					dec	di
020C:2747  4D					dec	bp
020C:2748  0D 220A				or	ax,220Ah
020C:274B  82 E1 E2				and	cl,0E2h
020C:274E  A0 ECA2				mov	al,data_917		; (020C:ECA2=88h)
020C:2751  E2 A5				loop	locloop_212		; Loop if cx > 0

020C:2753  20 A4 E1A8				and	data_900[si],ah		; (020C:E1A8=80h)
020C:2757  AA					stosb				; Store al to es:[di]
020C:2758  20 E1				and	cl,ah
020C:275A  20 25				and	[di],ah
020C:275C  31 20				xor	[bx+si],sp
020C:275E  A2 A420				mov	data_835,al		; (020C:A420=0B1h)
020C:2761  A8 E1				test	al,0E1h
020C:2763  AA					stosb				; Store al to es:[di]
020C:2764  AE					scasb				; Scan es:[di] for al
020C:2765  A2 A4AE				mov	byte ptr data_838,al	; (020C:A4AE=14h)
020C:2768  20 25				and	[di],ah
020C:276A  32 0D				xor	cl,[di]
020C:276C			loc_219:
020C:276C  0A 1A				or	bl,[bp+si]
020C:276E  8D A0 ACA6				lea	sp,cs:[0ACA6h][bx+si]	; Load effective addr
020C:2772  A8 E2				test	al,0E2h
020C:2774  A5					movsw				; Mov [si] to es:[di]
020C:2775  20 AB A1EE				and	[bp+di-5E12h],ch
020C:2779  E3 EE		;*		jcxz	loc_218			;*Jump if cx=0
020C:2779  E3 EE				db	0E3h,0EEh
020C:277B  20 AA A0AB				and	[bp+si-5F55h],ch
020C:277F  A2 E8A8				mov	data_908,al		; (020C:E8A8=91h)
020C:2782  E3 2E				jcxz	loc_222			; Jump if cx=0
020C:2784  2E					db	2Eh
020C:2785  2E					db	2Eh
020C:2786  0D 390A				or	ax,390Ah
020C:2789  0D 8F0A				or	ax,8F0Ah
020C:278C  E0 A5		;*		loopnz	locloop_215		;*Loop if zf=0, cx>0

020C:278C  E0 A5				db	0E0h,0A5h
020C:278E  AA					stosb				; Store al to es:[di]
020C:278F  E0 A0		;*		loopnz	locloop_214		;*Loop if zf=0, cx>0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 83


020C:278F  E0 A0				db	0E0h,0A0h
020C:2791  E2 A8		;*		loop	locloop_216		;*Loop if cx > 0

020C:2791  E2 A8				db	0E2h,0A8h
020C:2793  E2 EC		;*		loop	locloop_220		;*Loop if cx > 0

020C:2793  E2 EC				db	0E2h,0ECh
020C:2795  20 A2 AFEB				and	[bp+si-5015h],ah
020C:2799  AE					scasb				; Scan es:[di] for al
020C:279A  AB					stosw				; Store ax to es:[di]
020C:279B  AD					lodsw				; String [si] to ax
020C:279C  A5					movsw				; Mov [si] to es:[di]
020C:279D  AD					lodsw				; String [si] to ax
020C:279E  A8 A5				test	al,0A5h
020C:27A0  20 AF AAA0				and	data_854[bx],ch		; (020C:AAA0=0F6h)
020C:27A4  A5					movsw				; Mov [si] to es:[di]
020C:27A5  E2 AD		;*		loop	locloop_217		;*Loop if cx > 0

020C:27A5  E2 AD				db	0E2h,0ADh
020C:27A7  AE					scasb				; Scan es:[di] for al
020C:27A8  A3 20AE				mov	data_366,ax		; (020C:20AE=2020h)
020C:27AB  A7					cmpsw				; Cmp [si] to es:[di]
020C:27AC  A0 A0A4				mov	al,data_822		; (020C:A0A4=6)
020C:27AF  AD					lodsw				; String [si] to ax
020C:27B0  A8 EF				test	al,0EFh
020C:27B2			loc_222:
020C:27B2  20 5B 59				and	[bp+di+59h],bl
020C:27B5  28 A4 29A0				sub	data_505[si],ah		; (020C:29A0=0AAh)

020C:27B9			locloop_223:
020C:27B9  2F					das				; Decimal adjust
020C:27BA  4E					dec	si
020C:27BB  28 AD E2A5				sub	data_903[di],ch		; (020C:E2A5=47h)
020C:27BF  29 5D 3F				sub	[di+3Fh],bx
020C:27C2  19 8D 20A5				sbb	data_364[di],cx		; (020C:20A5=2020h)
020C:27C6  E3 A4				jcxz	loc_219			; Jump if cx=0
020C:27C8  A0 E2A5				mov	al,data_903		; (020C:E2A5=47h)
020C:27CB  E1 EF		;*		loopz	locloop_224		;*Loop if zf=1, cx>0

020C:27CB  E1 EF				db	0E1h,0EFh
020C:27CD  20 A2 AFEB				and	[bp+si-5015h],ah
020C:27D1  AE					scasb				; Scan es:[di] for al

020C:27D2			locloop_226:
020C:27D2  AB					stosw				; Store ax to es:[di]
020C:27D3  AD					lodsw				; String [si] to ax
020C:27D4  A8 E2				test	al,0E2h
020C:27D6  EC					in	al,dx			; port 2828h ??I/O Non-standard
020C:27D7  20 25				and	[di],ah
020C:27D9  31 0D				xor	[di],cx

020C:27DB			locloop_227:
020C:27DB  0A 14				or	dl,[si]

020C:27DD			locloop_228:
020C:27DD  8E					db	8Eh
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 84

020C:27DE  E8 A1A8				call	sub_139			; (C989)
020C:27E1  AA					stosb				; Store al to es:[di]
020C:27E2  A0 A220				mov	al,data_827		; (020C:A220=0C0h)
020C:27E5  20 45 58				and	[di+58h],al

020C:27E8			locloop_229:
020C:27E8  45					inc	bp
020C:27E9  2D A0E4				sub	ax,0A0E4h
020C:27EC  A9 A5AB				test	ax,0A5ABh
020C:27EF  0D 210A				or	ax,210Ah
020C:27F2  8F					db	8Fh
020C:27F3  E0 AE		;*		loopnz	locloop_221		;*Loop if zf=0, cx>0

020C:27F3  E0 AE				db	0E0h,0AEh
020C:27F5  A3 A0E0				mov	data_824,ax		; (020C:A0E0=0E47h)
020C:27F8  AC					lodsb				; String [si] to al
020C:27F9  AC					lodsb				; String [si] to al
020C:27FA  A0 AD20				mov	al,data_862		; (020C:AD20=0CCh)
020C:27FD  A5					movsw				; Mov [si] to es:[di]
020C:27FE  20 E3				and	bl,ah
020C:2800  AC					lodsb				; String [si] to al
020C:2801  A5					movsw				; Mov [si] to es:[di]
020C:2802  E9 A5A0				jmp	loc_2121		; (CDA5)
020C:2805  E2 E1				loop	locloop_229		; Loop if cx > 0

020C:2807  EF					out	dx,ax			; port 2828h ??I/O Non-standard
020C:2808			loc_230:
020C:2808  20 A2 AF20				and	[bp+si-50E0h],ah
020C:280C  A0 EFAC				mov	al,data_920		; (020C:EFAC=0)
020C:280F  E2 A8				loop	locloop_223		; Loop if cx > 0

020C:2811  0D 230A				or	ax,230Ah
020C:2814  0D 8D0A				or	ax,8D0Ah
020C:2817  A5					movsw				; Mov [si] to es:[di]
020C:2818  E2 20				loop	locloop_235		; Loop if cx > 0

020C:281A  E1 A2		;*		loopz	locloop_225		;*Loop if zf=1, cx>0

020C:281A  E1 A2				db	0E1h,0A2h
020C:281C  AE					scasb				; Scan es:[di] for al
020C:281D  A1 A4AE				mov	ax,data_838		; (020C:A4AE=0B014h)
020C:2820  AD			data_498	db	0ADh
020C:2821  EB E5				jmp	short loc_230		; (2808)
							                        ;* No entry point to code
020C:2823  20 A4 E1A5				and	data_899[si],ah		; (020C:E1A5=1)
020C:2827  AA					stosb				; Store al to es:[di]
020C:2828  E0 A8				loopnz	locloop_226		; Loop if zf=0, cx>0

020C:282A  AF					scasw				; Scan es:[di] for ax
020C:282B  E2 AE				loop	locloop_227		; Loop if cx > 0

020C:282D  E0 AE				loopnz	locloop_228		; Loop if zf=0, cx>0


020C:282F			locloop_233:
020C:282F  A2 E420				mov	data_906,al		; (020C:E420=0C6h)
020C:2832  A0 ABA9				mov	al,data_858		; (020C:ABA9=26h)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 85

020C:2835  AE					scasb				; Scan es:[di] for al
020C:2836  A2 AD24				mov	data_863,al		; (020C:AD24=26h)
020C:2839  A5					movsw				; Mov [si] to es:[di]

020C:283A			locloop_235:
020C:283A  AF					scasw				; Scan es:[di] for ax
020C:283B  E0 A0				loopnz	locloop_228		; Loop if zf=0, cx>0

020C:283D  A2 ABA8				mov	data_857,al		; (020C:ABA8=0)
020C:2840  EC					in	al,dx			; port 2828h ??I/O Non-standard
020C:2841  AD					lodsw				; String [si] to ax
020C:2842  A0 20EF				mov	al,data_369		; (020C:20EF=0A0h)
020C:2845  AA					stosb				; Store al to es:[di]
020C:2846  AE					scasb				; Scan es:[di] for al

020C:2847			locloop_236:
020C:2847  AC					lodsb				; String [si] to al
020C:2848  A0 A4AD				mov	al,data_837		; (020C:A4AD=91h)
020C:284B  A0 A820				mov	al,data_844		; (020C:A820=75h)
020C:284E  AB					stosw				; Store ax to es:[di]
020C:284F  A8 20				test	al,20h			; ' '
020C:2851  A8 AC				test	al,0ACh
020C:2853  EF					out	dx,ax			; port 2828h ??I/O Non-standard
020C:2854  20 E4				and	ah,ah

020C:2856			locloop_237:
020C:2856  A0 ABA9				mov	al,data_858		; (020C:ABA9=26h)
020C:2859  A0 0A0D				mov	al,byte ptr ds:[0A0Dh]	; (020C:0A0D=0)
020C:285C  0C 8D				or	al,8Dh
020C:285E  A5					movsw				; Mov [si] to es:[di]
020C:285F  E2 20				loop	locloop_240		; Loop if cx > 0

020C:2861  A4					movsb				; Mov [si] to es:[di]
020C:2862  AE					scasb				; Scan es:[di] for al
020C:2863  E1 E2				loopz	locloop_236		; Loop if zf=1, cx>0

020C:2865  E3 AF		;*		jcxz	loc_231			;*Jump if cx=0
020C:2865  E3 AF				db	0E3h,0AFh
020C:2867  A0 1D20				mov	al,data_287		; (020C:1D20=0)
020C:286A  0D 8E0A				or	ax,8E0Ah
020C:286D  E8 A1A8				call	sub_140			; (CA18)
020C:2870  AA					stosb				; Store al to es:[di]
020C:2871  A0 AF20				mov	al,data_870		; (020C:AF20=0CAh)
020C:2874  E0 A8		;*		loopnz	locloop_232		;*Loop if zf=0, cx>0

020C:2874  E0 A8				db	0E0h,0A8h
020C:2876  20 A2 A4EB				and	[bp+si-5B15h],ah
020C:287A  A5					movsw				; Mov [si] to es:[di]
020C:287B  AB					stosw				; Store ax to es:[di]
020C:287C  A5					movsw				; Mov [si] to es:[di]

020C:287D			locloop_238:
020C:287D  AD					lodsw				; String [si] to ax

020C:287E			locloop_239:
020C:287E  A8 A8				test	al,0A8h
020C:2880  20 AF ACA0				and	data_859[bx],ch		; (020C:ACA0=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 86

020C:2884  EF					out	dx,ax			; port 2828h ??I/O Non-standard
020C:2885  E2 A8				loop	locloop_233		; Loop if cx > 0

020C:2887  39 0D				cmp	[di],cx
020C:2889  0A 8D 20A5				or	cl,byte ptr data_364[di]	; (020C:20A5=20h)
020C:288D  E3 A4		;*		jcxz	loc_234			;*Jump if cx=0
020C:288D  E3 A4				db	0E3h,0A4h
020C:288F  A0 E2A5				mov	al,data_903		; (020C:E2A5=47h)

020C:2892			locloop_242:
020C:2892  E1 EF		;*		loopz	locloop_241		;*Loop if zf=1, cx>0

020C:2892  E1 EF				db	0E1h,0EFh
020C:2894  20 A7 A3A0				and	data_832[bx],ah		; (020C:A3A0=49h)
020C:2898  E0 E3				loopnz	locloop_238		; Loop if zf=0, cx>0

020C:289A  A7					cmpsw				; Cmp [si] to es:[di]
020C:289B  A8 E2				test	al,0E2h
020C:289D  EC					in	al,dx			; port 2828h ??I/O Non-standard
020C:289E  20 43 4F				and	[bp+di+4Fh],al
020C:28A1  4D					dec	bp
020C:28A2  4D					dec	bp

020C:28A3			locloop_244:
020C:28A3  41					inc	cx

020C:28A4			locloop_245:
020C:28A4  4E					dec	si
020C:28A5  44					inc	sp
020C:28A6  2E					db	2Eh
020C:28A7  43					inc	bx
020C:28A8  4F					dec	di
020C:28A9  4D					dec	bp
020C:28AA  2C 20				sub	al,20h			; ' '
020C:28AC  E1 A8				loopz	locloop_237		; Loop if zf=1, cx>0

020C:28AE  E1 E2				loopz	locloop_242		; Loop if zf=1, cx>0

020C:28B0  A5					movsw				; Mov [si] to es:[di]
020C:28B1  AC					lodsb				; String [si] to al
020C:28B2  A0 AE20				mov	al,data_865		; (020C:AE20=0C7h)

020C:28B5			locloop_246:
020C:28B5  E1 E2		;*		loopz	locloop_243		;*Loop if zf=1, cx>0

020C:28B5  E1 E2				db	0E1h,0E2h
020C:28B7  A0 AEAD				mov	al,data_868		; (020C:AEAD=0EBh)
020C:28BA  A2 A5AB				mov	data_840,al		; (020C:A5AB=0C2h)

020C:28BD			locloop_247:
020C:28BD  AD					lodsw				; String [si] to ax
020C:28BE  A0 0A0D				mov	al,byte ptr ds:[0A0Dh]	; (020C:0A0D=0)
020C:28C1  37					aaa				; Ascii adjust
020C:28C2  0D 8D0A				or	ax,8D0Ah
020C:28C5  A5					movsw				; Mov [si] to es:[di]
020C:28C6  20 E3				and	bl,ah
020C:28C8  A4					movsb				; Mov [si] to es:[di]
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 87

020C:28C9  A0 E2A5				mov	al,data_903		; (020C:E2A5=47h)
020C:28CC  E1 EF				loopz	locloop_247		; Loop if zf=1, cx>0


020C:28CE			locloop_249:
020C:28CE  20 A7 AFA0				and	data_871[bx],ah		; (020C:AFA0=0Fh)
020C:28D2  E3 E1				jcxz	locloop_246		; Jump if cx=0

020C:28D4			locloop_250:
020C:28D4  E2 A8				loop	locloop_239		; Loop if cx > 0

020C:28D6  E2 EC		;*		loop	locloop_248		;*Loop if cx > 0

020C:28D6  E2 EC				db	0E2h,0ECh
020C:28D8  20 43 4F				and	[bp+di+4Fh],al
020C:28DB  4D					dec	bp
020C:28DC  4D					dec	bp
020C:28DD  41					inc	cx
020C:28DE  4E					dec	si
020C:28DF  44					inc	sp
020C:28E0  2E					db	2Eh
020C:28E1  43					inc	bx

020C:28E2			locloop_251:
020C:28E2  4F					dec	di
020C:28E3  4D					dec	bp
020C:28E4  2C 20				sub	al,20h			; ' '
020C:28E6  A7					cmpsw				; Cmp [si] to es:[di]
020C:28E7  A0 A5A2				mov	al,data_839		; (020C:A5A2=0)
020C:28EA  E0 E8				loopnz	locloop_250		; Loop if zf=0, cx>0


020C:28EC			locloop_252:
020C:28EC  A5					movsw				; Mov [si] to es:[di]
020C:28ED  AD					lodsw				; String [si] to ax
020C:28EE  A8 A5				test	al,0A5h
020C:28F0  20 E0				and	al,ah
020C:28F2  A0 AEA1				mov	al,data_866		; (020C:AEA1=0Eh)
020C:28F5  E2 EB				loop	locloop_251		; Loop if cx > 0

020C:28F7			loc_253:
020C:28F7  0D 3B0A				or	ax,3B0Ah
020C:28FA  0D 8F0A				or	ax,8F0Ah
020C:28FD  E0 A5				loopnz	locloop_245		; Loop if zf=0, cx>0

020C:28FF  E0 A2				loopnz	locloop_244		; Loop if zf=0, cx>0

020C:2901  A0 20AD				mov	al,byte ptr ds:[20ADh]	; (020C:20AD=20h)
020C:2904  AF					scasw				; Scan es:[di] for ax
020C:2905  E0 AE				loopnz	locloop_246		; Loop if zf=0, cx>0

020C:2907  E6 A5				out	0A5h,al			; port 0A5h ??I/O Non-standard
020C:2909  E1 E1				loopz	locloop_252		; Loop if zf=1, cx>0

020C:290B  20 A2 E0A5				and	[bp+si-1F5Bh],ah
020C:290F  E5 AD				in	ax,0ADh			; port 0ADh ??I/O Non-standard
020C:2911  A5					movsw				; Mov [si] to es:[di]
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 88

020C:2912  A3 20AE				mov	data_366,ax		; (020C:20AE=2020h)
020C:2915  E3 E0				jcxz	loc_253			; Jump if cx=0
020C:2917  AE					scasb				; Scan es:[di] for al
020C:2918  A2 EFAD				mov	data_921,al		; (020C:EFAD=9Ah)
020C:291B  2C 20				sub	al,20h			; ' '
020C:291D  AF					scasw				; Scan es:[di] for ax
020C:291E  E0 AE				loopnz	locloop_249		; Loop if zf=0, cx>0

020C:2920  A4					movsb				; Mov [si] to es:[di]
020C:2921  AE					scasb				; Scan es:[di] for al
020C:2922  AB					stosw				; Store ax to es:[di]
020C:2923  A6					cmpsb				; Cmp [si] to es:[di]
020C:2924  A5					movsw				; Mov [si] to es:[di]

020C:2925			locloop_255:
020C:2925  AD					lodsw				; String [si] to ax
020C:2926  A8 A5				test	al,0A5h
020C:2928  20 AD A2A5				and	data_830[di],ch		; (020C:A2A5=14h)
020C:292C  AE					scasb				; Scan es:[di] for al
020C:292D  A7					cmpsw				; Cmp [si] to es:[di]
020C:292E  AC					lodsb				; String [si] to al
020C:292F  AE					scasb				; Scan es:[di] for al
020C:2930  A6					cmpsb				; Cmp [si] to es:[di]
020C:2931  AD					lodsw				; String [si] to ax
020C:2932  AE					scasb				; Scan es:[di] for al
020C:2933  0D 020A				or	ax,20Ah
020C:2936  0D 580A				or	ax,580Ah
020C:2939  0F			;*		pop	cs			; Dangerous-8088 only
020C:2939  0F					db	0Fh
020C:293A  01 00				add	[bx+si],ax
020C:293C  87 0C				xchg	[si],cx
020C:293E  01 00				add	[bx+si],ax
020C:2940  58					pop	ax
020C:2941			loc_256:
020C:2941  0F			;*		pop	cs			; Dangerous-8088 only
020C:2941  0F					db	0Fh
020C:2942  01 00				add	[bx+si],ax
020C:2944  00					db	0
020C:2945  00 00				add	[bx+si],al
020C:2947  00 89 1001				add	data_134[bx+di],cl	; (020C:1001=75h)
020C:294B  04 17				add	al,17h
020C:294D  8E					db	8Eh
020C:294E  E8 A1A8				call	sub_142			; (CAF9)
020C:2951  AA					stosb				; Store al to es:[di]
020C:2952  A0 A720				mov	al,data_842		; (020C:A720=46h)

020C:2955			locloop_259:
020C:2955  A0			data_499	db	0A0h
020C:2956  E9 E2A8				jmp	$-1D55h
020C:2959  EB 20				jmp	short locloop_264	; (297B)
							                        ;* No entry point to code
020C:295B  AE					scasb				; Scan es:[di] for al
020C:295C  E2 20				loop	$+22h			; Loop if cx > 0

020C:295E  A7					cmpsw				; Cmp [si] to es:[di]
020C:295F  A0 A8AF				mov	al,data_849		; (020C:A8AF=64h)

           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 89

020C:2962			locloop_261:
020C:2962  E1 A8		;*		loopz	locloop_254		;*Loop if zf=1, cx>0

020C:2962  E1 A8				db	0E1h,0A8h
020C:2964  17					pop	ss
020C:2965  8D A5 E0AF				lea	sp,cs:[0E0AFh][di]	; Load effective addr
020C:2969  A0 A8A2				mov	al,data_845		; (020C:A8A2=1)

020C:296C			locloop_262:
020C:296C  AB					stosw				; Store ax to es:[di]
020C:296D  EC					in	al,dx			; port 2828h ??I/O Non-standard
020C:296E			loc_263:
020C:296E  AD					lodsw				; String [si] to ax
020C:296F  AE					scasb				; Scan es:[di] for al
020C:2970  A5					movsw				; Mov [si] to es:[di]
020C:2971  20 E3				and	bl,ah
020C:2973  E1 E2		;*		loopz	locloop_260		;*Loop if zf=1, cx>0

020C:2973  E1 E2				db	0E1h,0E2h
020C:2975  E0 AE				loopnz	locloop_255		; Loop if zf=0, cx>0

020C:2977  A9 E2E1				test	ax,0E2E1h
020C:297A  A2 0EAE				mov	byte ptr ds:[0EAEh],al	; (020C:0EAE=1)
020C:297D  8D A5 20E2				lea	sp,cs:[20E2h][di]	; Load effective addr
020C:2981  A3 E2AE				mov	data_904,ax		; (020C:E2AE=2F9h)
020C:2984  AE					scasb				; Scan es:[di] for al
020C:2985  A2 AEAD				mov	data_868,al		; (020C:AEAD=0EBh)
020C:2988  E1 E2				loopz	locloop_262		; Loop if zf=1, cx>0

020C:298A  A8 20				test	al,20h			; ' '
020C:298C  8D A5 E0AF				lea	sp,cs:[0E0AFh][di]	; Load effective addr
020C:2990  A0 A8A2				mov	al,data_845		; (020C:A8A2=1)
020C:2993  AB					stosw				; Store ax to es:[di]
020C:2994  EC					in	al,dx			; port 2828h ??I/O Non-standard
020C:2995  AD					lodsw				; String [si] to ax
020C:2996  EB A9				jmp	short loc_256		; (2941)
020C:2998  20 A7 AFA0				and	data_871[bx],ah		; (020C:AFA0=0Fh)

020C:299C			locloop_267:
020C:299C  E0 AE		;*		loopnz	locloop_258		;*Loop if zf=0, cx>0

020C:299C  E0 AE				db	0E0h,0AEh
020C:299E  E1 20				loopz	locloop_271		; Loop if zf=1, cx>0

020C:29A0  AA			data_505	db	0AAh			; Data table (indexed access)
020C:29A1			loc_268:
020C:29A1  20 E3				and	bl,ah
020C:29A3  E1 E2		;*		loopz	locloop_265		;*Loop if zf=1, cx>0

020C:29A3  E1 E2				db	0E1h,0E2h
020C:29A5  E0 AE				loopnz	locloop_259		; Loop if zf=0, cx>0

020C:29A7  A9 E2E1				test	ax,0E2E1h
020C:29AA  A2 0FE3				mov	data_133,al		; (020C:0FE3=33h)
020C:29AD  8E					db	8Eh
020C:29AE  E8 A1A8				call	sub_143			; (CB59)
020C:29B1  AA					stosb				; Store al to es:[di]
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 90

020C:29B2  A0 A220				mov	al,data_827		; (020C:A220=0C0h)
020C:29B5  20 A4 ADA0				and	data_864[si],ah		; (020C:ADA0=58h)
020C:29B9  AD					lodsw				; String [si] to ax
020C:29BA  EB E5				jmp	short loc_268		; (29A1)
020C:29BC  2B 8D AFA5				sub	cx,data_872[di]		; (020C:AFA5=3D0Ah)

020C:29C0			locloop_271:
020C:29C0  E0 A0				loopnz	locloop_261		; Loop if zf=0, cx>0

020C:29C2  A2 ABA8				mov	data_857,al		; (020C:ABA8=0)
020C:29C5  EC					in	al,dx			; port 2828h ??I/O Non-standard
020C:29C6  AD					lodsw				; String [si] to ax
020C:29C7  EB A5				jmp	short loc_263		; (296E)
							                        ;* No entry point to code
020C:29C9  20 A0 A3E0				and	data_834[bx+si],ah	; (020C:A3E0=44h)
020C:29CD  E3 AC		;*		jcxz	locloop_264		;*Jump if cx=0
020C:29CD  E3 AC				db	0E3h,0ACh

020C:29CF			locloop_274:
020C:29CF  A5					movsw				; Mov [si] to es:[di]
020C:29D0  AD					lodsw				; String [si] to ax

020C:29D1			locloop_275:
020C:29D1  E2 EB		;*		loop	locloop_270		;*Loop if cx > 0

020C:29D1  E2 EB				db	0E2h,0EBh
020C:29D3  20 A7 AFA0				and	data_871[bx],ah		; (020C:AFA0=0Fh)
020C:29D7  E0 AE		;*		loopnz	locloop_265		;*Loop if zf=0, cx>0

020C:29D7  E0 AE				db	0E0h,0AEh
020C:29D9  E1 A0		;*		loopz	locloop_264		;*Loop if zf=1, cx>0

020C:29D9  E1 A0				db	0E1h,0A0h
020C:29DB  20 AA E320				and	[bp+si-1CE0h],ch
020C:29DF  E1 E2		;*		loopz	locloop_272		;*Loop if zf=1, cx>0

020C:29DF  E1 E2				db	0E1h,0E2h
020C:29E1  E0 AE		;*		loopnz	locloop_266		;*Loop if zf=0, cx>0

020C:29E1  E0 AE				db	0E0h,0AEh
020C:29E3  A9 E2E1				test	ax,0E2E1h
020C:29E6  A2 0DE3				mov	data_130,al		; (020C:0DE3=0EBh)
020C:29E9  8E					db	8Eh
020C:29EA  E8 A1A8				call	sub_144			; (CB95)
020C:29ED  AA					stosb				; Store al to es:[di]
020C:29EE  A0 AF20				mov	al,data_870		; (020C:AF20=0CAh)
020C:29F1  AE					scasb				; Scan es:[di] for al
020C:29F2  A8 E1				test	al,0E1h
020C:29F4  AA					stosb				; Store al to es:[di]
020C:29F5  A0 8D19				mov	al,data_808		; (020C:8D19=3Bh)
020C:29F8  A5					movsw				; Mov [si] to es:[di]
020C:29F9  AF					scasw				; Scan es:[di] for ax
020C:29FA  E0 A0				loopnz	locloop_267		; Loop if zf=0, cx>0


020C:29FC			locloop_276:
020C:29FC  A2 ABA8				mov	data_857,al		; (020C:ABA8=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 91

020C:29FF  EC					in	al,dx			; port 2828h ??I/O Non-standard
020C:2A00  AD					lodsw				; String [si] to ax
020C:2A01  EB A9		;*		jmp	short loc_269		;*(29AC)
020C:2A01  EB A9				db	0EBh,0A9h
							                        ;* No entry point to code
020C:2A03  20 E2				and	dl,ah
020C:2A05  A8 AF				test	al,0AFh
020C:2A07  20 AD E1AE				and	data_901[di],ch		; (020C:E1AE=0FAh)
020C:2A0B  A8 E2				test	al,0E2h
020C:2A0D  A5					movsw				; Mov [si] to es:[di]
020C:2A0E  AB					stosw				; Store ax to es:[di]
020C:2A0F  EF					out	dx,ax			; port 2828h ??I/O Non-standard
020C:2A10  10 91 AAA5				adc	data_855[bx+di],dl	; (020C:AAA5=3)
020C:2A14  E2 AE		;*		loop	locloop_273		;*Loop if cx > 0

020C:2A14  E2 AE				db	0E2h,0AEh
020C:2A16  E0 20				loopnz	locloop_279		; Loop if zf=0, cx>0

020C:2A18  AD					lodsw				; String [si] to ax
020C:2A19  A5					movsw				; Mov [si] to es:[di]
020C:2A1A  20 AD A9A0				and	data_852[di],ch		; (020C:A9A0=0F6h)
020C:2A1E  A4					movsb				; Mov [si] to es:[di]
020C:2A1F  A5					movsw				; Mov [si] to es:[di]
020C:2A20  AD					lodsw				; String [si] to ax
020C:2A21  15 2082				adc	ax,2082h
020C:2A24  AF					scasw				; Scan es:[di] for ax
020C:2A25  E0 A8				loopnz	locloop_274		; Loop if zf=0, cx>0

020C:2A27  AD					lodsw				; String [si] to ax
020C:2A28  E2 A5				loop	locloop_274		; Loop if cx > 0

020C:2A2A  E0 A5				loopnz	locloop_275		; Loop if zf=0, cx>0

020C:2A2C  20 AD E2A5				and	data_903[di],ch		; (020C:E2A5=47h)
020C:2A30  20 A1 ACE3				and	data_861[bx+di],ah	; (020C:ACE3=64h)
020C:2A34  A0 A8A3				mov	al,data_846		; (020C:A8A3=7Fh)
020C:2A37  11 8E A8E8				adc	[bp-5718h],cx
020C:2A3B  A1 A0AA				mov	ax,data_823		; (020C:A0AA=9131h)
020C:2A3E  20 AF A8E0				and	data_850[bx],ch		; (020C:A8E0=36h)
020C:2A42  20 A7 AFA0				and	data_871[bx],ah		; (020C:AFA0=0Fh)
020C:2A46  A8 E1				test	al,0E1h
020C:2A48  A8 11				test	al,11h
020C:2A4A  8E					db	8Eh
020C:2A4B  E8 A1A8				call	sub_145			; (CBF6)

020C:2A4E			locloop_281:
020C:2A4E  AA					stosb				; Store al to es:[di]
020C:2A4F  A0 AF20				mov	al,data_870		; (020C:AF20=0CAh)
020C:2A52  E0 A8				loopnz	locloop_276		; Loop if zf=0, cx>0

020C:2A54  20 E7				and	bh,ah
020C:2A56  E2 A5		;*		loop	locloop_277		;*Loop if cx > 0

020C:2A56  E2 A5				db	0E2h,0A5h
020C:2A58  AD					lodsw				; String [si] to ax
020C:2A59  A8 A8				test	al,0A8h
020C:2A5B  12 8E E9A1				adc	cl,[bp-165Fh]
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 92

020C:2A5F  A8 A9				test	al,0A9h
020C:2A61  20 E1				and	cl,ah
020C:2A63  A1 A9AE				mov	ax,data_853		; (020C:A9AE=2156h)
020C:2A66  20 E1				and	cl,ah
020C:2A68  A8 E1				test	al,0E1h
020C:2A6A  E2 A5		;*		loop	locloop_278		;*Loop if cx > 0

020C:2A6A  E2 A5				db	0E2h,0A5h
020C:2A6C  AC					lodsb				; String [si] to al
020C:2A6D  EB 24				jmp	short loc_287		; (2A93)
020C:2A6F  8D A0 E3E0				lea	sp,cs:[0E3E0h][bx+si]	; Load effective addr
020C:2A73  E8 ADA5				call	sub_146			; (D81B)
020C:2A76  A8 A5				test	al,0A5h
020C:2A78  20 E0				and	al,ah
020C:2A7A  A5					movsw				; Mov [si] to es:[di]

020C:2A7B			locloop_286:
020C:2A7B  A6					cmpsb				; Cmp [si] to es:[di]
020C:2A7C  A8 AC				test	al,0ACh
020C:2A7E  A0 E120				mov	al,data_898		; (020C:E120=6)
020C:2A81  AE					scasb				; Scan es:[di] for al
020C:2A82  A2 A5AC				mov	data_841,al		; (020C:A5AC=2Eh)
020C:2A85  E1 E2		;*		loopz	locloop_283		;*Loop if zf=1, cx>0

020C:2A85  E1 E2				db	0E1h,0E2h
020C:2A87  AD					lodsw				; String [si] to ax
020C:2A88  AE					scasb				; Scan es:[di] for al
020C:2A89  A3 20AE				mov	data_366,ax		; (020C:20AE=2020h)
020C:2A8C  A4					movsb				; Mov [si] to es:[di]
020C:2A8D  AE					scasb				; Scan es:[di] for al
020C:2A8E  E1 E2		;*		loopz	locloop_284		;*Loop if zf=1, cx>0

020C:2A8E  E1 E2				db	0E1h,0E2h
020C:2A90  E3 AF		;*		jcxz	loc_280			;*Jump if cx=0
020C:2A90  E3 AF				db	0E3h,0AFh
020C:2A92  A0 8D14				mov	al,data_807		; (020C:8D14=3Fh)
020C:2A95  A0 E3E0				mov	al,data_905		; (020C:E3E0=1Ch)
020C:2A98  E8 ADA5				call	sub_147			; (D840)
020C:2A9B  A8 A5				test	al,0A5h
020C:2A9D  20 A1 AEAB				and	byte ptr data_867[bx+di],ah	; (020C:AEAB=73h)
020C:2AA1  AA					stosb				; Store al to es:[di]
020C:2AA2  A8 E0				test	al,0E0h
020C:2AA4  AE					scasb				; Scan es:[di] for al
020C:2AA5  A2 A8AA				mov	data_847,al		; (020C:A8AA=1)
020C:2AA8  18 8D AFA5				sbb	byte ptr data_872[di],cl	; (020C:AFA5=0Ah)
020C:2AAC  E0 A0				loopnz	locloop_281		; Loop if zf=0, cx>0

020C:2AAE  A2 ABA8				mov	data_857,al		; (020C:ABA8=0)
020C:2AB1  EC					in	al,dx			; port 2828h ??I/O Non-standard

020C:2AB2			locloop_292:
020C:2AB2  AD					lodsw				; String [si] to ax
020C:2AB3  A0 20EF				mov	al,data_369		; (020C:20EF=0A0h)

020C:2AB6			locloop_293:
020C:2AB6  E1 AC		;*		loopz	locloop_282		;*Loop if zf=1, cx>0

           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 93

020C:2AB6  E1 AC				db	0E1h,0ACh
020C:2AB8  A5					movsw				; Mov [si] to es:[di]
020C:2AB9  AD					lodsw				; String [si] to ax
020C:2ABA  A0 A420				mov	al,data_835		; (020C:A420=0B1h)
020C:2ABD  A8 E1				test	al,0E1h
020C:2ABF  AA					stosb				; Store al to es:[di]
020C:2AC0  A0 8D27				mov	al,data_809		; (020C:8D27=9Dh)
020C:2AC3  A5					movsw				; Mov [si] to es:[di]
020C:2AC4  A4					movsb				; Mov [si] to es:[di]
020C:2AC5  AE					scasb				; Scan es:[di] for al
020C:2AC6  E1 E2		;*		loopz	locloop_289		;*Loop if zf=1, cx>0

020C:2AC6  E1 E2				db	0E1h,0E2h
020C:2AC8  E3 AF		;*		jcxz	loc_285			;*Jump if cx=0
020C:2AC8  E3 AF				db	0E3h,0AFh
020C:2ACA  A5					movsw				; Mov [si] to es:[di]
020C:2ACB  AD					lodsw				; String [si] to ax
020C:2ACC  20 46 43				and	[bp+43h],al
020C:2ACF  42					inc	dx
020C:2AD0  20 28				and	[bx+si],ch
020C:2AD2  A1 AEAB				mov	ax,data_867		; (020C:AEAB=273h)
020C:2AD5  AA					stosb				; Store al to es:[di]
020C:2AD6  20 E3				and	bl,ah

020C:2AD8			locloop_295:
020C:2AD8  AF					scasw				; Scan es:[di] for ax
020C:2AD9  E0 A0				loopnz	locloop_286		; Loop if zf=0, cx>0

020C:2ADB  A2 A5AB				mov	data_840,al		; (020C:A5AB=0C2h)
020C:2ADE  AD					lodsw				; String [si] to ax
020C:2ADF  A8 EF				test	al,0EFh
020C:2AE1  20 E4				and	ah,ah
020C:2AE3  A0 ABA9				mov	al,data_858		; (020C:ABA9=26h)
020C:2AE6  AE					scasb				; Scan es:[di] for al
020C:2AE7  AC					lodsb				; String [si] to al
020C:2AE8  29 19				sub	[bx+di],bx
020C:2AEA  90					nop
020C:2AEB  A5					movsw				; Mov [si] to es:[di]
020C:2AEC  E1 E3		;*		loopz	locloop_294		;*Loop if zf=1, cx>0

020C:2AEC  E1 E3				db	0E1h,0E3h
020C:2AEE  E0 E1		;*		loopnz	locloop_294		;*Loop if zf=0, cx>0

020C:2AEE  E0 E1				db	0E0h,0E1h
020C:2AF0  EB 20				jmp	short loc_300		; (2B12)
020C:2AF2  E1 A8		;*		loopz	locloop_288		;*Loop if zf=1, cx>0

020C:2AF2  E1 A8				db	0E1h,0A8h
020C:2AF4  E1 E2				loopz	locloop_295		; Loop if zf=1, cx>0

020C:2AF6  A5					movsw				; Mov [si] to es:[di]
020C:2AF7  AC					lodsb				; String [si] to al
020C:2AF8  EB 20				jmp	short loc_301		; (2B1A)
020C:2AFA  A8 E1				test	al,0E1h
020C:2AFC  E7 A5				out	0A5h,ax			; port 0A5h ??I/O Non-standard

020C:2AFE			locloop_298:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 94

020C:2AFE  E0 AF		;*		loopnz	locloop_291		;*Loop if zf=0, cx>0

020C:2AFE  E0 AF				db	0E0h,0AFh
020C:2B00  A0 EBAD				mov	al,data_915		; (020C:EBAD=90h)
020C:2B03  8D1E			data_506	dw	8D1Eh			; Data table (indexed access)
020C:2B05  A5					movsw				; Mov [si] to es:[di]
020C:2B06  E1 AE				loopz	locloop_293		; Loop if zf=1, cx>0

020C:2B08  AE					scasb				; Scan es:[di] for al
020C:2B09  E2 A2		;*		loop	locloop_290		;*Loop if cx > 0

020C:2B09  E2 A2				db	0E2h,0A2h

020C:2B0B			locloop_299:
020C:2B0B  A5					movsw				; Mov [si] to es:[di]
020C:2B0C  E2 E1		;*		loop	locloop_296		;*Loop if cx > 0

020C:2B0C  E2 E1				db	0E2h,0E1h
020C:2B0E  E2 A2				loop	locloop_292		; Loop if cx > 0

020C:2B10  A8 A5				test	al,0A5h
020C:2B12			loc_300:
020C:2B12  20 AA A4AE				and	[bp+si-5B52h],ch
020C:2B16  AE					scasb				; Scan es:[di] for al
020C:2B17  A2 E5EB				mov	data_907,al		; (020C:E5EB=0)
020C:2B1A			loc_301:
020C:2B1A  20 E1				and	cl,ah
020C:2B1C  E2 E0				loop	locloop_298		; Loop if cx > 0

020C:2B1E			loc_302:
020C:2B1E  A0 A8AD				mov	al,data_848		; (020C:A8AD=50h)
020C:2B21  E6 1D				out	1Dh,al			; port 1Dh ??I/O Non-standard
020C:2B23  8D A5 AEA4				lea	sp,cs:[0AEA4h][di]	; Load effective addr
020C:2B27  E1 E2				loopz	locloop_299		; Loop if zf=1, cx>0


020C:2B29			locloop_304:
020C:2B29  A0 AEE2				mov	al,data_869		; (020C:AEE2=5Eh)
020C:2B2C  E7 AD				out	0ADh,ax			; port 0ADh ??I/O Non-standard
020C:2B2E  AE					scasb				; Scan es:[di] for al
020C:2B2F  20 A2 A5A2				and	[bp+si-5A5Eh],ah
020C:2B33  A4					movsb				; Mov [si] to es:[di]
020C:2B34  A5					movsw				; Mov [si] to es:[di]
020C:2B35  AD					lodsw				; String [si] to ax
020C:2B36  AD					lodsw				; String [si] to ax
020C:2B37  EB E5				jmp	short loc_302		; (2B1E)
							                        ;* No entry point to code
020C:2B39  20 A4 ADA0				and	data_864[si],ah		; (020C:ADA0=58h)
020C:2B3D  AD					lodsw				; String [si] to ax
020C:2B3E  EB E5		;*		jmp	short loc_303		;*(2B25)
020C:2B3E  EB E5				db	0EBh,0E5h
							                        ;* No entry point to code
020C:2B40  1B 8D A4A5				sbb	cx,data_836[di]		; (020C:A4A5=8BC0h)
020C:2B44  AE					scasb				; Scan es:[di] for al
020C:2B45  E1 E2				loopz	locloop_304		; Loop if zf=1, cx>0

020C:2B47  A0 AEE2				mov	al,data_869		; (020C:AEE2=5Eh)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 95

020C:2B4A  E7 AD				out	0ADh,ax			; port 0ADh ??I/O Non-standard
020C:2B4C  AE					scasb				; Scan es:[di] for al
020C:2B4D  20 AC E1A5				and	data_899[si],ch		; (020C:E1A5=1)
020C:2B51  E2 A0		;*		loop	locloop_297		;*Loop if cx > 0

020C:2B51  E2 A0				db	0E2h,0A0h
020C:2B53  20 AD 20A0				and	data_363[di],ch		; (020C:20A0=20h)
020C:2B57  A4					movsb				; Mov [si] to es:[di]
020C:2B58  A8 E1				test	al,0E1h
020C:2B5A  AA					stosb				; Store al to es:[di]
020C:2B5B  A5					movsw				; Mov [si] to es:[di]
020C:2B5C  0C 09				or	al,9
020C:2B5E  24 09				and	al,9
020C:2B60  3C 09				cmp	al,9
020C:2B62  4B					dec	bx
020C:2B63  09 6C 09				or	[si+9],bp
020C:2B66  7C 09				jl	loc_305			; Jump if <
020C:2B68  A8 09				test	al,9
020C:2B6A  B6 09				mov	dh,9
020C:2B6C  D0 09				ror	byte ptr [bx+di],1	; Rotate
020C:2B6E  E1 09				loopz	locloop_306		; Loop if zf=1, cx>0

020C:2B70  F7					db	0F7h
020C:2B71			loc_305:
020C:2B71  09 09				or	[bx+di],cx
020C:2B73  0A 1B				or	bl,[bp+di]
020C:2B75  0A 2E 530A				or	ch,data_764		; (020C:530A=2Fh)

020C:2B79			locloop_306:
020C:2B79  0A 68 0A				or	ch,[bx+si+0Ah]
020C:2B7C  81 0A 0AA9				or	word ptr [bp+si],0AA9h
020C:2B80  C3					retn
							                        ;* No entry point to code
020C:2B81  0A E2				or	ah,dl
020C:2B83  0A 00				or	al,[bx+si]
020C:2B85  0B 18				or	bx,[bx+si]
020C:2B87  91					xchg	cx,ax
020C:2B88  AB					stosw				; Store ax to es:[di]
020C:2B89  A8 E8				test	al,0E8h
020C:2B8B  AA					stosb				; Store al to es:[di]
020C:2B8C  AE					scasb				; Scan es:[di] for al
020C:2B8D  AC					lodsb				; String [si] to al
020C:2B8E  20 AC 004D				and	byte ptr ds:[4Dh][si],ch	; (020C:004D=82h)
020C:2B92  00 07				add	[bx],al
020C:2B94  00 AF E0A0				add	data_895[bx],ch		; (020C:E0A0=26h)
020C:2B98  A0 A5AC				mov	al,data_841		; (020C:A5AC=2Eh)
020C:2B9B  E2 E0		;*		loop	locloop_307		;*Loop if cx > 0

020C:2B9B  E2 E0				db	0E2h,0E0h
020C:2B9D  AE					scasb				; Scan es:[di] for al
020C:2B9E  A2 0021				mov	byte ptr ds:[21h],al	; (020C:0021=0A3h)
020C:2BA1  01 00				add	[bx+si],ax

020C:2BA3			locloop_308:
020C:2BA3  00					db	0
020C:2BA4  00					db	0
020C:2BA5  00 00				add	[bx+si],al
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 96

020C:2BA7  00 C4				add	ah,al
020C:2BA9  0C 00				or	al,0
020C:2BAB  00 FF				add	bh,bh
020C:2BAD  0013[FF]				db	19 dup (0FFh)
020C:2BC0  43					inc	bx
020C:2BC1  3A 5C 57				cmp	bl,[si+57h]
020C:2BC4  49					dec	cx
020C:2BC5  4E					dec	si
020C:2BC6  44					inc	sp
020C:2BC7  4F					dec	di
020C:2BC8  57					push	di
020C:2BC9  53					push	bx
020C:2BCA  5C					pop	sp
020C:2BCB  54					push	sp
020C:2BCC  45					inc	bp
020C:2BCD  4D					dec	bp
020C:2BCE  50					push	ax
020C:2BCF  5C					pop	sp
020C:2BD0  73 63				jnc	loc_312			; Jump if carry=0
020C:2BD2  73 41				jnc	loc_311			; Jump if carry=0
020C:2BD4  43					inc	bx
020C:2BD5  2E					db	2Eh
020C:2BD6  74 6D				jz	loc_314			; Jump if zero
020C:2BD8  70 00				jo	$+2			; delay for I/O
020C:2BDA  0027[00]				db	39 dup (0)
020C:2C01  E0 A0				loopnz	locloop_308		; Loop if zf=0, cx>0

020C:2C03  AC					lodsb				; String [si] to al
020C:2C04  A5					movsw				; Mov [si] to es:[di]
020C:2C05  E2 E0		;*		loop	locloop_309		;*Loop if cx > 0

020C:2C05  E2 E0				db	0E2h,0E0h
020C:2C07  A0 A220				mov	al,data_827		; (020C:A220=0C0h)
020C:2C0A  EB E5		;*		jmp	short loc_310		;*(2BF1)
020C:2C0A  EB E5				db	0EBh,0E5h
							                        ;* No entry point to code
020C:2C0C  AE					scasb				; Scan es:[di] for al
020C:2C0D  A4					movsb				; Mov [si] to es:[di]
020C:2C0E  A8 E2				test	al,0E2h
020C:2C10  4D					dec	bp
020C:2C11  10 04				adc	[si],al
020C:2C13  45					inc	bp
020C:2C14  00 E0				add	al,ah
020C:2C16  A5					movsw				; Mov [si] to es:[di]
020C:2C17  A4					movsb				; Mov [si] to es:[di]
020C:2C18  A5					movsw				; Mov [si] to es:[di]
020C:2C19  AB					stosw				; Store ax to es:[di]
020C:2C1A  EB 20				jmp	short loc_313		; (2C3C)
020C:2C1C  A4					movsb				; Mov [si] to es:[di]
020C:2C1D  AE					scasb				; Scan es:[di] for al
020C:2C1E  AF					scasw				; Scan es:[di] for ax
020C:2C1F  E3 43				jcxz	loc_315			; Jump if cx=0
020C:2C21  4F 4D 53 50 45 43			db	'OMSPEC=C:\WINDOWS\SYSTEM32\COMMA'
020C:2C27  3D 43 3A 5C 57 49
020C:2C2D  4E 44 4F 57 53 5C
020C:2C33  53 59 53 54 45 4D
020C:2C39  33 32 5C 43 4F 4D
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 97

020C:2C3F  4D 41
020C:2C41  4E 44 2E 43 4F 4D			db	'ND.COM', 0
020C:2C47  00
020C:2C48  41 4C 4C 55 53 45			db	'ALLUSERSPROFILE=C:\DOCUME~1\ALLU'
020C:2C4E  52 53 50 52 4F 46
020C:2C54  49 4C 45 3D 43 3A
020C:2C5A  5C 44 4F 43 55 4D
020C:2C60  45 7E 31 5C 41 4C
020C:2C66  4C 55
020C:2C68  53 45 7E 31 00			db	'SE~1', 0
020C:2C6D  41 50 50 44 41 54			db	'APPDATA=C:\DOCUME~1\9335~1\APPLI'
020C:2C73  41 3D 43 3A 5C 44
020C:2C79  4F 43 55 4D 45 7E
020C:2C7F  31 5C 39 33 33 35
020C:2C85  7E 31 5C 41 50 50
020C:2C8B  4C 49
020C:2C8D  43 7E 31 00				db	'C~1', 0
020C:2C91  43 4C 49 45 4E 54			db	'CLIENTNAME=Console', 0
020C:2C97  4E 41 4D 45 3D 43
020C:2C9D  6F 6E 73 6F 6C 65
020C:2CA3  00
020C:2CA4  43 4F 4D 4D 4F 4E			db	'COMMONPROGRAMFILES=C:\PROGRA~1\C'
020C:2CAA  50 52 4F 47 52 41
020C:2CB0  4D 46 49 4C 45 53
020C:2CB6  3D 43 3A 5C 50 52
020C:2CBC  4F 47 52 41 7E 31
020C:2CC2  5C 43
020C:2CC4  4F 4D 4D 4F 4E 7E			db	'OMMON~1', 0
020C:2CCA  31 00
020C:2CCC  43 4F 4D 50 55 54			db	'COMPUTERNAME=A180', 0
020C:2CD2  45 52 4E 41 4D 45
020C:2CD8  3D 41 31 38 30 00
020C:2CDE  46 50 5F 4E 4F 5F			db	'FP_NO_HOST_CHECK=NO', 0
020C:2CE4  48 4F 53 54 5F 43
020C:2CEA  48 45 43 4B 3D 4E
020C:2CF0  4F 00
020C:2CF2  48 4F 4D 45 44 52			db	'HOMEDRIVE=C:', 0
020C:2CF8  49 56 45 3D 43 3A
020C:2CFE  00
020C:2CFF  48 4F 4D 45 50 41			db	'HOMEPATH=\Documents and Settings'
020C:2D05  54 48 3D 5C 44 6F
020C:2D0B  63 75 6D 65 6E 74
020C:2D11  73 20 61 6E 64 20
020C:2D17  53 65 74 74 69 6E
020C:2D1D  67 73
020C:2D1F  5C 5F				db	'\_'
020C:2D21  FD					std				; Set direction flag
020C:2D22  BF 2DF0				mov	di,2DF0h
020C:2D25  F0> A1 A0A2		                           lock	mov	ax,data_821		; (020C:A0A2=0C610h)
020C:2D29  FF A2 A052				jmp	word ptr [bp+si-5FAEh]	;*
020C:2D2D  00 4C 4F				add	[si+4Fh],cl
020C:2D30  47 4F 4E 53 45 52			db	'GONSERVER=\\A180', 0
020C:2D36  56 45 52 3D 5C 5C
020C:2D3C  41 31 38 30 00
020C:2D41  4E 55 4D 42 45 52			db	'NUMBER_OF_PROCESSORS=4', 0
020C:2D47  5F 4F 46 5F 50 52
020C:2D4D  4F 43 45 53 53 4F
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 98

020C:2D53  52 53 3D 34 00
020C:2D58  4F 53 3D 57 69 6E			db	'OS=Windows_NT', 0
020C:2D5E  64 6F 77 73 5F 4E
020C:2D64  54 00
020C:2D66  50 41 54 48 3D 43			db	'PATH=C:\PROGRA~1\WinRAR;C:\PROGR'
020C:2D6C  3A 5C 50 52 4F 47
020C:2D72  52 41 7E 31 5C 57
020C:2D78  69 6E 52 41 52 3B
020C:2D7E  43 3A 5C 50 52 4F
020C:2D84  47 52
020C:2D86  41 7E 31 5C 50 41			db	'A~1\PARALL'
020C:2D8C  52 41 4C 4C
020C:2D90  317E			data_511	dw	317Eh
020C:2D92  5C					pop	sp
020C:2D93  50					push	ax
020C:2D94  41					inc	cx
020C:2D95  52					push	dx
020C:2D96  41					inc	cx
020C:2D97  4C					dec	sp
020C:2D98  4C					dec	sp
020C:2D99  7E 31				jle	$+33h			; Jump if < or =
020C:2D9B  5C					pop	sp
020C:2D9C  41					inc	cx
020C:2D9D  50					push	ax
020C:2D9E  50					push	ax
020C:2D9F  4C					dec	sp
020C:2DA0  49					dec	cx
020C:2DA1  43					inc	bx
020C:2DA2  7E 31				jle	$+33h			; Jump if < or =
020C:2DA4  3B 43 3A				cmp	ax,[bp+di+3Ah]
020C:2DA7  5C					pop	sp
020C:2DA8  57					push	di
020C:2DA9  49					dec	cx
020C:2DAA  4E					dec	si
020C:2DAB  44					inc	sp
020C:2DAC  4F					dec	di
020C:2DAD  57					push	di
020C:2DAE  53					push	bx
020C:2DAF  5C					pop	sp
020C:2DB0  73 79				jnc	$+7Bh			; Jump if carry=0
020C:2DB2  73 74				jnc	$+76h			; Jump if carry=0
020C:2DB4  65					db	65h
020C:2DB5  6D					db	6Dh
020C:2DB6  33 32				xor	si,[bp+si]
020C:2DB8  3B 43 3A				cmp	ax,[bp+di+3Ah]
020C:2DBB  5C					pop	sp
020C:2DBC  57					push	di
020C:2DBD  49					dec	cx
020C:2DBE  4E					dec	si
020C:2DBF  44					inc	sp
020C:2DC0  4F					dec	di
020C:2DC1  57					push	di
020C:2DC2  53					push	bx
020C:2DC3  3B 43 3A				cmp	ax,[bp+di+3Ah]
020C:2DC6  5C					pop	sp
020C:2DC7  57					push	di
020C:2DC8  49					dec	cx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 99

020C:2DC9  4E					dec	si
020C:2DCA  44					inc	sp
020C:2DCB  4F					dec	di
020C:2DCC  57					push	di
020C:2DCD  53					push	bx
020C:2DCE  5C					pop	sp
020C:2DCF  53					push	bx
020C:2DD0  79 73				jns	$+75h			; Jump if not sign
020C:2DD2  74 65				jz	$+67h			; Jump if zero
020C:2DD4  6D					db	6Dh
020C:2DD5  33 32				xor	si,[bp+si]
020C:2DD7  5C					pop	sp
020C:2DD8  57					push	di
020C:2DD9  62					db	62h
020C:2DDA  65					db	65h
020C:2DDB  6D					db	6Dh
020C:2DDC  00 50 41				add	[bx+si+41h],dl
020C:2DDF  54					push	sp
020C:2DE0  48					dec	ax
020C:2DE1  45					inc	bp
020C:2DE2  58					pop	ax
020C:2DE3  54					push	sp
020C:2DE4  3D 432E				cmp	ax,432Eh
020C:2DE7  4F					dec	di
020C:2DE8  4D					dec	bp
020C:2DE9  3B 2E 5845				cmp	bp,word ptr ds:[5845h]	; (020C:5845=3E8Bh)
020C:2DED  45					inc	bp
020C:2DEE  3B 2E 4142				cmp	bp,word ptr ds:[4142h]	; (020C:4142=0C600h)
020C:2DF2  54					push	sp
020C:2DF3  3B 2E 4D43				cmp	bp,word ptr ds:[4D43h]	; (020C:4D43=0B1E9h)
020C:2DF7  44					inc	sp
020C:2DF8  3B 2E 4256				cmp	bp,word ptr ds:[4256h]	; (020C:4256=20FBh)
020C:2DFC  53					push	bx
020C:2DFD  3B 2E 4256				cmp	bp,word ptr ds:[4256h]	; (020C:4256=20FBh)
020C:2E01  45					inc	bp
020C:2E02  3B 2E 534A				cmp	bp,word ptr ds:[534Ah]	; (020C:534A=5F07h)
020C:2E06  3B 2E 534A				cmp	bp,word ptr ds:[534Ah]	; (020C:534A=5F07h)
020C:2E0A  45					inc	bp
020C:2E0B  3B 2E 5357				cmp	bp,word ptr ds:[5357h]	; (020C:5357=22EAh)
020C:2E0F  46					inc	si
020C:2E10  3B 2E 5357				cmp	bp,word ptr ds:[5357h]	; (020C:5357=22EAh)
020C:2E14  48					dec	ax
020C:2E15  00 50 52				add	[bx+si+52h],dl
020C:2E18  4F					dec	di
020C:2E19  43					inc	bx
020C:2E1A  45					inc	bp
020C:2E1B  53					push	bx
020C:2E1C  53					push	bx
020C:2E1D  4F					dec	di
020C:2E1E  52					push	dx
020C:2E1F  5F					pop	di
020C:2E20  41					inc	cx
020C:2E21  52					push	dx
020C:2E22  43					inc	bx
020C:2E23  48					dec	ax
020C:2E24  49					dec	cx
020C:2E25  54					push	sp
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 100

020C:2E26  45					inc	bp
020C:2E27  43					inc	bx
020C:2E28  54					push	sp
020C:2E29  55					push	bp
020C:2E2A  52					push	dx
020C:2E2B  45					inc	bp
020C:2E2C  3D 3878				cmp	ax,3878h
020C:2E2F  36: 00 50 52				add	ss:[bx+si+52h],dl
020C:2E33  4F					dec	di
020C:2E34  43					inc	bx
020C:2E35  45					inc	bp
020C:2E36  53					push	bx
020C:2E37  53					push	bx
020C:2E38  4F					dec	di
020C:2E39  52					push	dx
020C:2E3A  5F					pop	di
020C:2E3B  49					dec	cx
020C:2E3C  44					inc	sp
020C:2E3D  45					inc	bp
020C:2E3E  4E					dec	si
020C:2E3F  54					push	sp
020C:2E40  49					dec	cx
020C:2E41  46					inc	si
020C:2E42  49					dec	cx
020C:2E43  45					inc	bp
020C:2E44  52					push	dx
020C:2E45  3D 3878				cmp	ax,3878h
020C:2E48  36					db	36h
020C:2E49  20 46 61				and	[bp+61h],al
020C:2E4C  6D					db	6Dh
020C:2E4D  69					db	69h
020C:2E4E  6C					db	6Ch
020C:2E4F  79 20				jns	$+22h			; Jump if not sign
020C:2E51  36: 20 4D 6F				and	ss:[di+6Fh],cl
020C:2E55  64					db	64h
020C:2E56  65					db	65h
020C:2E57  6C					db	6Ch
020C:2E58  20 31				and	[bx+di],dh
020C:2E5A  32 36 5320				xor	dh,data_765		; (020C:5320=3Eh)
020C:2E5E  74 65				jz	$+67h			; Jump if zero
020C:2E60  70 70				jo	$+72h			; Jump if overflow=1
020C:2E62  69					db	69h
020C:2E63  6E					db	6Eh
020C:2E64  67					db	67h
020C:2E65  20 35				and	[di],dh
020C:2E67  2C 20				sub	al,20h			; ' '
020C:2E69  47					inc	di
020C:2E6A  65					db	65h
020C:2E6B  6E					db	6Eh
020C:2E6C  75 69				jnz	$+6Bh			; Jump if not zero
020C:2E6E  6E					db	6Eh
020C:2E6F  65					db	65h
020C:2E70  49					dec	cx
020C:2E71  6E					db	6Eh
020C:2E72  74 65				jz	$+67h			; Jump if zero
020C:2E74  6C					db	6Ch
020C:2E75  00 50 52				add	[bx+si+52h],dl
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 101

020C:2E78  4F					dec	di
020C:2E79  43					inc	bx
020C:2E7A  45					inc	bp
020C:2E7B  53					push	bx
020C:2E7C  53					push	bx
020C:2E7D  4F					dec	di
020C:2E7E  52					push	dx
020C:2E7F  5F					pop	di
020C:2E80  4C					dec	sp
020C:2E81  45					inc	bp
020C:2E82  56					push	si
020C:2E83  45					inc	bp
020C:2E84  4C					dec	sp
020C:2E85  3D 0036				cmp	ax,36h
020C:2E88  50					push	ax
020C:2E89  52					push	dx
020C:2E8A  4F					dec	di
020C:2E8B  43					inc	bx
020C:2E8C  45					inc	bp
020C:2E8D  53					push	bx
020C:2E8E  53					push	bx
020C:2E8F  4F					dec	di
020C:2E90  52					push	dx
020C:2E91  5F					pop	di
020C:2E92  52					push	dx
020C:2E93  45					inc	bp
020C:2E94  56					push	si
020C:2E95  49					dec	cx
020C:2E96  53					push	bx
020C:2E97  49					dec	cx
020C:2E98  4F					dec	di
020C:2E99  4E					dec	si
020C:2E9A  3D 6537				cmp	ax,6537h
020C:2E9D  30 35				xor	[di],dh
020C:2E9F  00 50 52				add	[bx+si+52h],dl
020C:2EA2  4F					dec	di
020C:2EA3  47					inc	di
020C:2EA4  52					push	dx
020C:2EA5  41					inc	cx
020C:2EA6  4D					dec	bp
020C:2EA7  46					inc	si
020C:2EA8  49					dec	cx
020C:2EA9  4C					dec	sp
020C:2EAA  45					inc	bp
020C:2EAB  53					push	bx
020C:2EAC  3D 3A43				cmp	ax,3A43h
020C:2EAF  5C					pop	sp
020C:2EB0  50					push	ax
020C:2EB1  52					push	dx
020C:2EB2  4F					dec	di
020C:2EB3  47					inc	di
020C:2EB4  52					push	dx
020C:2EB5  41					inc	cx
020C:2EB6  7E 31				jle	$+33h			; Jump if < or =
020C:2EB8  00 50 52				add	[bx+si+52h],dl
020C:2EBB  4F					dec	di
020C:2EBC  4D					dec	bp
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 102

020C:2EBD  50					push	ax
020C:2EBE  54					push	sp
020C:2EBF  3D 5024				cmp	ax,5024h
020C:2EC2  24 47				and	al,47h			; 'G'
020C:2EC4  00 53 45				add	[bp+di+45h],dl
020C:2EC7  53					push	bx
020C:2EC8  53					push	bx
020C:2EC9  49					dec	cx
020C:2ECA  4F					dec	di
020C:2ECB  4E					dec	si
020C:2ECC  4E					dec	si
020C:2ECD  41					inc	cx
020C:2ECE  4D					dec	bp
020C:2ECF  45					inc	bp
020C:2ED0  3D 6F43				cmp	ax,6F43h
020C:2ED3  6E					db	6Eh
020C:2ED4  73 6F				jnc	$+71h			; Jump if carry=0
020C:2ED6  6C					db	6Ch
020C:2ED7  65					db	65h
020C:2ED8  00 53 59				add	[bp+di+59h],dl
020C:2EDB  5453			data_512	dw	5453h			; Data table (indexed access)
020C:2EDD  45					inc	bp
020C:2EDE  4D					dec	bp
020C:2EDF  44					inc	sp
020C:2EE0  52					push	dx
020C:2EE1  49					dec	cx
020C:2EE2  56					push	si
020C:2EE3  45					inc	bp
020C:2EE4  3D 3A43				cmp	ax,3A43h
020C:2EE7  00 53 59				add	[bp+di+59h],dl
020C:2EEA  53					push	bx
020C:2EEB  54					push	sp
020C:2EEC  45					inc	bp
020C:2EED  4D					dec	bp
020C:2EEE  52					push	dx
020C:2EEF  4F					dec	di
020C:2EF0  4F					dec	di
020C:2EF1  54					push	sp
020C:2EF2  3D 3A43				cmp	ax,3A43h
020C:2EF5  5C					pop	sp
020C:2EF6  57					push	di
020C:2EF7  49					dec	cx
020C:2EF8  4E					dec	si
020C:2EF9  44					inc	sp
020C:2EFA  4F					dec	di
020C:2EFB  57					push	di
020C:2EFC  53					push	bx
020C:2EFD  00 54 45				add	[si+45h],dl
020C:2F00  4D					dec	bp
020C:2F01  50					push	ax
020C:2F02  3D 3A43				cmp	ax,3A43h
020C:2F05  5C					pop	sp
020C:2F06  57					push	di
020C:2F07  49					dec	cx
020C:2F08  4E					dec	si
020C:2F09  44					inc	sp
020C:2F0A  4F					dec	di
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 103

020C:2F0B  57					push	di
020C:2F0C  53					push	bx
020C:2F0D  5C					pop	sp
020C:2F0E  54					push	sp
020C:2F0F  45					inc	bp
020C:2F10  4D					dec	bp
020C:2F11  50					push	ax
020C:2F12  00 54 4D				add	[si+4Dh],dl
020C:2F15  50					push	ax
020C:2F16  3D 3A43				cmp	ax,3A43h
020C:2F19  5C					pop	sp
020C:2F1A  57					push	di
020C:2F1B  49					dec	cx
020C:2F1C  4E					dec	si
020C:2F1D  44					inc	sp
020C:2F1E  4F					dec	di
020C:2F1F  57					push	di
020C:2F20  53					push	bx
020C:2F21  5C					pop	sp
020C:2F22  54					push	sp
020C:2F23  45					inc	bp
020C:2F24  4D					dec	bp
020C:2F25  50					push	ax
020C:2F26  00 55 53				add	[di+53h],dl
020C:2F29  45					inc	bp
020C:2F2A  52					push	dx
020C:2F2B  44					inc	sp
020C:2F2C  4F					dec	di
020C:2F2D  4D					dec	bp
020C:2F2E  41					inc	cx
020C:2F2F  49					dec	cx
020C:2F30  4E					dec	si
020C:2F31  3D 3141				cmp	ax,3141h
020C:2F34  38 30				cmp	[bx+si],dh
020C:2F36  00 55 53				add	[di+53h],dl
020C:2F39  45					inc	bp
020C:2F3A  52					push	dx
020C:2F3B  4E					dec	si
020C:2F3C  41					inc	cx
020C:2F3D  4D					dec	bp
020C:2F3E  45					inc	bp
020C:2F3F  3D FD5F				cmp	ax,0FD5Fh
020C:2F42  BF 2DF0				mov	di,2DF0h
020C:2F45  F0> A1 A0A2		                           lock	mov	ax,data_821		; (020C:A0A2=0C610h)
020C:2F49  FF A2 A052				jmp	word ptr [bp+si-5FAEh]	;*
020C:2F4D  00 55 53				add	[di+53h],dl
020C:2F50  45 52 50 52 4F 46			db	'ERPROFILE=C:\DOCUME~1\9335~1', 0
020C:2F56  49 4C 45 3D 43 3A
020C:2F5C  5C 44 4F 43 55 4D
020C:2F62  45 7E 31 5C 39 33
020C:2F68  33 35 7E 31 00
020C:2F6D  42 4C 41 53 54 45			db	'BLASTER=A220 I5 D1 P330 T3'
020C:2F73  52 3D 41 32 32 30
020C:2F79  20 49 35 20 44 31
020C:2F7F  20 50 33 33 30 20
020C:2F85  54 33
020C:2F87  00 00				add	[bx+si],al
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 104

020C:2F89  EB 20				jmp	short loc_317		; (2FAB)
							                        ;* No entry point to code
020C:2F8B  AD					lodsw				; String [si] to ax
020C:2F8C  A5					movsw				; Mov [si] to es:[di]
020C:2F8D  20 E3				and	bl,ah
020C:2F8F  E1 E2		;*		loopz	locloop_316		;*Loop if zf=1, cx>0

020C:2F8F  E1 E2				db	0E1h,0E2h
020C:2F91  A0 AEAD				mov	al,data_868		; (020C:AEAD=0EBh)
020C:2F94  A2 A5AB				mov	data_840,al		; (020C:A5AB=0C2h)
020C:2F97  AD					lodsw				; String [si] to ax
020C:2F98  0C9D			data_514	dw	0C9Dh
020C:2F9A  0CB2			data_515	dw	0CB2h
020C:2F9C  C1			data_516	db	0C1h
020C:2F9D  D00C			data_517	dw	0D00Ch
020C:2F9F  ED0C			data_518	dw	0ED0Ch
020C:2FA1  0C			data_519	db	0Ch
020C:2FA2  0CFA			data_520	dw	0CFAh
020C:2FA4  12 0D				adc	cl,[di]
020C:2FA6  0D35			data_521	dw	0D35h
020C:2FA8  0D49			data_522	dw	0D49h
020C:2FAA  0D69			data_523	dw	0D69h
020C:2FAC  0D91			data_524	dw	0D91h
020C:2FAE  0DA5			data_525	dw	0DA5h
020C:2FB0  0DC3			data_526	dw	0DC3h
020C:2FB2  0000			data_527	dw	0
020C:2FB4  0DD7			data_528	dw	0DD7h
020C:2FB6  0DEE			data_529	dw	0DEEh
020C:2FB8  0E0E			data_530	dw	0E0Eh
020C:2FBA  0E20			data_532	dw	0E20h
020C:2FBC  0C			data_533	db	0Ch
020C:2FBD  09 24				or	[si],sp
020C:2FBF  09 3C				or	[si],di
020C:2FC1  09 4B 09				or	[bp+di+9],cx
020C:2FC4  6C					db	6Ch
020C:2FC5  09 7C 09				or	[si+9],di
020C:2FC8  A8 09				test	al,9
020C:2FCA  B6 09				mov	dh,9
020C:2FCC  D0 09				ror	byte ptr [bx+di],1	; Rotate
020C:2FCE  E1 09				loopz	locloop_319		; Loop if zf=1, cx>0

020C:2FD0  F7					db	0F7h
020C:2FD1			loc_318:
020C:2FD1  09 09				or	[bx+di],cx
020C:2FD3  0A 1B				or	bl,[bp+di]
020C:2FD5  0A 2E 530A				or	ch,data_764		; (020C:530A=2Fh)

020C:2FD9			locloop_319:
020C:2FD9  0A 68 0A				or	ch,[bx+si+0Ah]
020C:2FDC  81 0A 0AA9				or	word ptr [bp+si],0AA9h
020C:2FE0  C3					retn
							                        ;* No entry point to code
020C:2FE1  0A E2				or	ah,dl
020C:2FE3  0A 00				or	al,[bx+si]
020C:2FE5  0B 00				or	ax,[bx+si]
020C:2FE7  0022[00]				db	34 dup (0)
020C:3009  0000			data_535	dw	0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 105

020C:300B  0000			data_536	dw	0
020C:300D  00					db	0
020C:300E  00					db	0
020C:300F  00					db	0
020C:3010  00					db	0
020C:3011  00					db	0
020C:3012  00					db	0
020C:3013  00					db	0
020C:3014  00					db	0
020C:3015  00					db	0
020C:3016  00					db	0
020C:3017  00					db	0
020C:3018  00					db	0
020C:3019  00					db	0
020C:301A  00					db	0
020C:301B  00					db	0
020C:301C  00					db	0
020C:301D  00					db	0
020C:301E  00					db	0
020C:301F  00					db	0
020C:3020  00					db	0
020C:3021  00					db	0
020C:3022  00					db	0
020C:3023  00					db	0
020C:3024  00					db	0
020C:3025  00					db	0
020C:3026  00					db	0
020C:3027  00					db	0
020C:3028  00					db	0
020C:3029  00					db	0
020C:302A  00					db	0
020C:302B  00					db	0
020C:302C  00					db	0
020C:302D  00					db	0
020C:302E  00					db	0
020C:302F  00					db	0
020C:3030  00					db	0
020C:3031  00					db	0
020C:3032  00					db	0
020C:3033  00 00				add	[bx+si],al
020C:3035  00 32				add	[bp+si],dh
020C:3037  0E					push	cs
020C:3038  00 00				add	[bx+si],al
020C:303A  42					inc	dx
020C:303B  0E					push	cs
020C:303C  66					db	66h
020C:303D  0E					push	cs
020C:303E  8F					db	8Fh
020C:303F  0E					push	cs
020C:3040  B3 0E				mov	bl,0Eh
020C:3042  CF					iret				; Interrupt return
							                        ;* No entry point to code
020C:3043  0E					push	cs
020C:3044  E3 0E				jcxz	loc_321			; Jump if cx=0
020C:3046  F9					stc				; Set carry flag
020C:3047  0E					push	cs
020C:3048  0E					push	cs
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 106

020C:3049  0F			;*		pop	cs			; Dangerous-8088 only
020C:3049  0F					db	0Fh
020C:304A  2E					db	2Eh
020C:304B  0F			;*		pop	cs			; Dangerous-8088 only
020C:304B  0F					db	0Fh
020C:304C  00					db	0
020C:304D  00 00				add	[bx+si],al
020C:304F  00 BB 07F7				add	[bp+di+7F7h],bh
020C:3053  3C 02				cmp	al,2
020C:3055  74 1B				je	loc_322			; Jump if equal
020C:3057  BB 07B1				mov	bx,7B1h
020C:305A  3C 08				cmp	al,8
020C:305C  74 14				je	loc_322			; Jump if equal
020C:305E  BB 079C				mov	bx,79Ch
020C:3061  3C 0B				cmp	al,0Bh
020C:3063  74 0D				je	loc_322			; Jump if equal
020C:3065  BB 081C				mov	bx,81Ch
020C:3068  3C 05				cmp	al,5
020C:306A  74 06				je	loc_322			; Jump if equal
020C:306C  BB 0782				mov	bx,782h
020C:306F  BE 504D				mov	si,504Dh
020C:3072			loc_322:
020C:3072  05 003B				add	ax,3Bh
020C:3075  8C 06 09EB				mov	word ptr ds:[9EBh],es	; (020C:09EB=74CCh)
020C:3079  72 D5		;*		jc	loc_320			;*Jump if carry Set
020C:3079  72 D5				db	 72h,0D5h
020C:307B  B4 4D				mov	ah,4Dh
020C:307D  CD 21				int	21h			; DOS Services  ah=function 4Dh
										;  get return code info in ax
020C:307F  A3 4F43				mov	data_759,ax		; (020C:4F43=0FB83h)
020C:3082  4D 53 50 45 43 3D			db	'MSPEC=C:\WINDOWS\SYSTEM32\COMMAN'
020C:3088  43 3A 5C 57 49 4E
020C:308E  44 4F 57 53 5C 53
020C:3094  59 53 54 45 4D 33
020C:309A  32 5C 43 4F 4D 4D
020C:30A0  41 4E
020C:30A2  44 2E 43 4F 4D 00			db	'D.COM', 0
020C:30A8  41 4C 4C 55 53 45			db	'ALLUSERSPROFILE=C:\DOCUME~1\ALLU'
020C:30AE  52 53 50 52 4F 46
020C:30B4  49 4C 45 3D 43 3A
020C:30BA  5C 44 4F 43 55 4D
020C:30C0  45 7E 31 5C 41 4C
020C:30C6  4C 55
020C:30C8  53 45 7E 31 00			db	'SE~1', 0
020C:30CD  41 50 50 44 41 54			db	'APPDATA=C:\DOCUME~1\9335~1\APPLI'
020C:30D3  41 3D 43 3A 5C 44
020C:30D9  4F 43 55 4D 45 7E
020C:30DF  31 5C 39 33 33 35
020C:30E5  7E 31 5C 41 50 50
020C:30EB  4C 49
020C:30ED  43 7E 31 00				db	'C~1', 0
020C:30F1  43 4C 49 45 4E 54			db	'CLIENTNAME=Console', 0
020C:30F7  4E 41 4D 45 3D 43
020C:30FD  6F 6E 73 6F 6C 65
020C:3103  00
020C:3104  43 4F 4D 4D 4F 4E			db	'COMMONPROGRAMFILES=C:\PROGRA~1\C'
020C:310A  50 52 4F 47 52 41
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 107

020C:3110  4D 46 49 4C 45 53
020C:3116  3D 43 3A 5C 50 52
020C:311C  4F 47 52 41 7E 31
020C:3122  5C 43
020C:3124  4F 4D 4D 4F 4E 7E			db	'OMMON~1', 0
020C:312A  31 00
020C:312C  43 4F 4D 50 55 54			db	'COMPUTERNAME=A180', 0
020C:3132  45 52 4E 41 4D 45
020C:3138  3D 41 31 38 30 00
020C:313E  46 50 5F 4E 4F 5F			db	'FP_NO_HOST_CHECK=NO', 0
020C:3144  48 4F 53 54 5F 43
020C:314A  48 45 43 4B 3D 4E
020C:3150  4F 00
020C:3152  48 4F 4D 45 44 52			db	'HOMEDRIVE=C:', 0
020C:3158  49 56 45 3D 43 3A
020C:315E  00
020C:315F  48 4F 4D 45 50 41			db	'HOMEPATH=\Documents and Settings'
020C:3165  54 48 3D 5C 44 6F
020C:316B  63 75 6D 65 6E 74
020C:3171  73 20 61 6E 64 20
020C:3177  53 65 74 74 69 6E
020C:317D  67 73
020C:317F  5C 5F				db	'\_'
020C:3181  FD					std				; Set direction flag
020C:3182  BF 2DF0				mov	di,2DF0h
020C:3185  F0> A1 A0A2		                           lock	mov	ax,data_821		; (020C:A0A2=0C610h)
020C:3189  FF A2 A052				jmp	word ptr [bp+si-5FAEh]	;*
020C:318D  00 4C 4F				add	[si+4Fh],cl
020C:3190  47 4F 4E 53 45 52	data_538	db	'GONSERVER=\\A180', 0
020C:3196  56 45 52 3D 5C 5C
020C:319C  41 31 38 30 00
020C:31A1  4E 55 4D 42 45 52			db	'NUMBER_OF_PROCESSORS=4', 0
020C:31A7  5F 4F 46 5F 50 52
020C:31AD  4F 43 45 53 53 4F
020C:31B3  52 53 3D 34 00
020C:31B8  4F 53 3D 57 69 6E			db	'OS=Windows_NT', 0
020C:31BE  64 6F 77 73 5F 4E
020C:31C4  54 00
020C:31C6  50 41 54 48 3D 43			db	'PATH=C:\PROGRA~1\WinRAR;C:\PROGR'
020C:31CC  3A 5C 50 52 4F 47
020C:31D2  52 41 7E 31 5C 57
020C:31D8  69 6E 52 41 52 3B
020C:31DE  43 3A 5C 50 52 4F
020C:31E4  47 52
020C:31E6  41 7E 31 5C 50 41			db	'A~1\PARALL~1\PARALL~1\APPLIC~1;C'
020C:31EC  52 41 4C 4C 7E 31
020C:31F2  5C 50 41 52 41 4C
020C:31F8  4C 7E 31 5C 41 50
020C:31FE  50 4C 49 43 7E 31
020C:3204  3B 43
020C:3206  3A 5C 57 49 4E 44			db	':\WINDOWS\system32;C:\WINDOWS;C:'
020C:320C  4F 57 53 5C 73 79
020C:3212  73 74 65 6D 33 32
020C:3218  3B 43 3A 5C 57 49
020C:321E  4E 44 4F 57 53 3B
020C:3224  43 3A
020C:3226  5C 57 49 4E 44 4F			db	'\WINDOWS\System32\Wbem', 0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 108

020C:322C  57 53 5C 53 79 73
020C:3232  74 65 6D 33 32 5C
020C:3238  57 62 65 6D 00
020C:323D  50 41 54 48 45 58			db	'PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS'
020C:3243  54 3D 2E 43 4F 4D
020C:3249  3B 2E 45 58 45 3B
020C:324F  2E 42 41 54 3B 2E
020C:3255  43 4D 44 3B 2E 56
020C:325B  42 53
020C:325D  3B 2E 56 42 45 3B			db	';.VBE;.JS;.JSE;.WSF;.WSH', 0
020C:3263  2E 4A 53 3B 2E 4A
020C:3269  53 45 3B 2E 57 53
020C:326F  46 3B 2E 57 53 48
020C:3275  00
020C:3276  50 52 4F 43 45 53			db	'PROCESSOR_ARCHITECTURE=x86', 0
020C:327C  53 4F 52 5F 41 52
020C:3282  43 48 49 54 45 43
020C:3288  54 55 52 45 3D 78
020C:328E  38 36 00
020C:3291  50 52 4F 43 45 53			db	'PROCESSOR_IDENTIFIER=x86 Family '
020C:3297  53 4F 52 5F 49 44
020C:329D  45 4E 54 49 46 49
020C:32A3  45 52 3D 78 38 36
020C:32A9  20 46 61 6D 69 6C
020C:32AF  79 20
020C:32B1  36 20 4D 6F 64 65			db	'6 Model 126 Stepping 5, GenuineI'
020C:32B7  6C 20 31 32 36 20
020C:32BD  53 74 65 70 70 69
020C:32C3  6E 67 20 35 2C 20
020C:32C9  47 65 6E 75 69 6E
020C:32CF  65 49
020C:32D1  6E 74 65 6C 00			db	'ntel', 0
020C:32D6  50 52 4F 43 45 53			db	'PROCESSOR_LEVEL=6', 0
020C:32DC  53 4F 52 5F 4C 45
020C:32E2  56 45 4C 3D 36 00
020C:32E8  50 52 4F 43 45 53			db	'PROCESSOR_REVISION=7e05', 0
020C:32EE  53 4F 52 5F 52 45
020C:32F4  56 49 53 49 4F 4E
020C:32FA  3D 37 65 30 35 00
020C:3300  50 52 4F 47 52 41			db	'PROGRAMFILES=C:\PROGRA~1', 0
020C:3306  4D 46 49 4C 45 53
020C:330C  3D 43 3A 5C 50 52
020C:3312  4F 47 52 41 7E 31
020C:3318  00
020C:3319  50 52 4F 4D 50 54			db	'PROMPT=$'
020C:331F  3D 24
020C:3321  50 24				db	'P$'
020C:3323  47 00				db	'G', 0
020C:3325  53 45 53 53 49 4F			db	'SESSIONNAME=Console', 0
020C:332B  4E 4E 41 4D 45 3D
020C:3331  43 6F 6E 73 6F 6C
020C:3337  65 00
020C:3339  53 59 53 54 45 4D			db	'SYSTEMDRIVE=C:', 0
020C:333F  44 52 49 56 45 3D
020C:3345  43 3A 00
020C:3348  53 59 53 54 45 4D			db	'SYSTEMROOT=C:\WINDOWS', 0
020C:334E  52 4F 4F 54 3D 43
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 109

020C:3354  3A 5C 57 49 4E 44
020C:335A  4F 57 53 00
020C:335E  54 45 4D 50 3D 43			db	'TEMP=C:\WINDOWS\TEMP', 0
020C:3364  3A 5C 57 49 4E 44
020C:336A  4F 57 53 5C 54 45
020C:3370  4D 50 00
020C:3373  54 4D 50 3D 43 3A			db	'TMP=C:\WINDOWS\TEMP', 0
020C:3379  5C 57 49 4E 44 4F
020C:337F  57 53 5C 54 45 4D
020C:3385  50 00
020C:3387  55 53 45 52 44 4F			db	'USERDOMAIN=A180', 0
020C:338D  4D 41 49 4E 3D 41
020C:3393  31 38 30 00
020C:3397  55 53 45 52 4E 41			db	'USERNAME=_'
020C:339D  4D 45 3D 5F
020C:33A1  FD					std				; Set direction flag
020C:33A2  BF 2DF0				mov	di,2DF0h
020C:33A5  F0> A1 A0A2		                           lock	mov	ax,data_821		; (020C:A0A2=0C610h)
020C:33A9  FF A2 A052				jmp	word ptr [bp+si-5FAEh]	;*
020C:33AD  00 55 53				add	[di+53h],dl
020C:33B0  45 52 50 52 4F 46			db	'ERPROFILE=C:\DOCUME~1\9335~1', 0
020C:33B6  49 4C 45 3D 43 3A
020C:33BC  5C 44 4F 43 55 4D
020C:33C2  45 7E 31 5C 39 33
020C:33C8  33 35 7E 31 00
020C:33CD  42 4C 41 53 54 45			db	'BLASTER=A220 I5 D1 P330 T3'
020C:33D3  52 3D 41 32 32 30
020C:33D9  20 49 35 20 44 31
020C:33DF  20 50 33 33 30 20
020C:33E5  54 33
020C:33E7  00 00				add	[bx+si],al
020C:33E9  01 00				add	[bx+si],ax
020C:33EB  43 3A 5C 44 4F 43			db	'C:\DOCUME~1\9335~1\LOCALS~1\TEMP'
020C:33F1  55 4D 45 7E 31 5C
020C:33F7  39 33 33 35 7E 31
020C:33FD  5C 4C 4F 43 41 4C
020C:3403  53 7E 31 5C 54 45
020C:3409  4D 50
020C:340B  5C 52 41 52 24			db	'\RAR$'
020C:3410  45 58 31 33 2E 34			db	'EX13.485\SRCER700\SR.EXE', 0
020C:3416  38 35 5C 53 52 43
020C:341C  45 52 37 30 30 5C
020C:3422  53 52 2E 45 58 45
020C:3428  00
020C:3429  33 C9				xor	cx,cx			; Zero register
020C:342B  B8 4200				mov	ax,4200h
020C:342E  CD 21				int	21h			; DOS Services  ah=function 42h
										;  move file ptr, bx=file handle
										;   al=method, cx,dx=offset
020C:3430  5A					pop	dx
020C:3431  50					push	ax
020C:3432  05 9AAF				add	ax,9AAFh
020C:3435  1E					push	ds
020C:3436  8E 1E 5253				mov	ds,data_763		; (020C:5253=4816h)
020C:343A  00 00				add	[bx+si],al
020C:343C  01 B4 CD3F				add	word ptr ds:[0CD3Fh][si],si	; (4816:CD3F=0FFFFh)
020C:3440  CD 20				int	20h			; DOS program terminate
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 110

020C:3442  FF 9F 9A00				call	dword ptr ds:[9A00h][bx]	;*(4816:9A00=0FFFFh)
020C:3446  F0					db	0F0h
020C:3447  FE					db	0FEh
020C:3448  1D DEF0				sbb	ax,0DEF0h
020C:344B  01 10				add	[bx+si],dx
020C:344D  04 4B				add	al,4Bh			; 'K'
020C:344F  01 10				add	[bx+si],dx
020C:3451  04 56				add	al,56h			; 'V'
020C:3453  01 10				add	[bx+si],dx
020C:3455  04 10				add	al,10h
020C:3457  04 01				add	al,1
020C:3459  01 01				add	[bx+di],ax
020C:345B  00 02				add	[bp+si],al
020C:345D  000F[03]				db	15 dup (3)
020C:346C  14 05				adc	al,5
020C:346E  0C 03				or	al,3
020C:3470  09 21				or	[bx+di],sp
020C:3472  14 00				adc	al,0
020C:3474  18 00				sbb	[bx+si],al
020C:3476  50					push	ax
020C:3477  05 FFFF				add	ax,0FFFFh
020C:347A  FF					db	0FFh
020C:347B  FF 00				inc	word ptr [bx+si]
020C:347D  00 00				add	[bx+si],al
020C:347F  00 05				add	[di],al
020C:3481  000F[00]				db	15 dup (0)
020C:3490  CD 21				int	21h			; ??INT Non-standard interrupt
020C:3492  CB					retf				; Return far
020C:3493  000A[00]				db	10 dup (0)
020C:349D  000B[20]				db	11 dup (20h)
020C:34A8  00					db	0
020C:34A9  00					db	0
020C:34AA  00 00				add	[bx+si],al
020C:34AC  00 20				add	[bx+si],ah
020C:34AE  000A[20]				db	10 dup (20h)
020C:34B8  0009[00]				db	9 dup (0)
020C:34C1  0D 2020				or	ax,2020h
020C:34C4  20 53 45				and	[bp+di+45h],dl
020C:34C7  54					push	sp
020C:34C8  20 42 4C				and	[bp+si+4Ch],al
020C:34CB  41					inc	cx
020C:34CC  53					push	bx
020C:34CD  54					push	sp
020C:34CE  45					inc	bp
020C:34CF  52					push	dx
020C:34D0  3D 3041				cmp	ax,3041h
020C:34D3  0D A8AD				or	ax,0A8ADh
020C:34D6  A5					movsw				; Mov [si] to es:[di]
020C:34D7  20 A4 EFAB				and	data_919[si],ah		; (020C:EFAB=1Ch)
020C:34DB  20 A1 A7A2				and	data_843[bx+di],ah	; (020C:A7A2=14h)
020C:34DF  AE					scasb				; Scan es:[di] for al
020C:34E0  A2 A3AE				mov	data_833,al		; (020C:A3AE=1Eh)
020C:34E3  AE					scasb				; Scan es:[di] for al
020C:34E4  20 AF E0AE				and	data_896[bx],ch		; (020C:E0AE=45h)
020C:34E8  E2 A0		;*		loop	locloop_323		;*Loop if cx > 0

020C:34E8  E2 A0				db	0E2h,0A0h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 111

020C:34EA  20 A2 AEA2				and	[bp+si-515Eh],ah
020C:34EE  A4					movsb				; Mov [si] to es:[di]
020C:34EF  A0 A22D				mov	al,data_828		; (020C:A22D=75h)
020C:34F2  EB A2		;*		jmp	short loc_324		;*(3496)
020C:34F2  EB A2				db	0EBh,0A2h
020C:34F4  AE					scasb				; Scan es:[di] for al

020C:34F5			locloop_325:
020C:34F5  A4					movsb				; Mov [si] to es:[di]
020C:34F6  A0 5320				mov	al,data_765		; (020C:5320=3Eh)
020C:34F9  42					inc	dx
020C:34FA  2C 20				sub	al,20h			; ' '
020C:34FC  AD					lodsw				; String [si] to ax
020C:34FD  A0 E0AF				mov	al,data_897		; (020C:E0AF=6)
020C:3500  A8 AC				test	al,0ACh
020C:3502  A5					movsw				; Mov [si] to es:[di]
020C:3503  E0 3A				loopnz	locloop_326		; Loop if zf=0, cx>0

020C:3505  0D 0DEC				or	ax,0DECh
020C:3508  E0 EB				loopnz	locloop_325		; Loop if zf=0, cx>0

020C:350A  A5					movsw				; Mov [si] to es:[di]
020C:350B  0D 0000				or	ax,0
020C:350E  0032[00]				db	50 dup (0)
020C:3540  53 6F 75 72 63 65			db	'Sourcer - V Communications, Inc.'
020C:3546  72 20 2D 20 56 20
020C:354C  43 6F 6D 6D 75 6E
020C:3552  69 63 61 74 69 6F
020C:3558  6E 73 2C 20 49 6E
020C:355E  63 2E
020C:3560  20 43 6F 70 79 72			db	' Copyright 1988-1997  By: Frank '
020C:3566  69 67 68 74 20 31
020C:356C  39 38 38 2D 31 39
020C:3572  39 37 20 20 42 79
020C:3578  3A 20 46 72 61 6E
020C:357E  6B 20
020C:3580  76 61 6E 20 47 69			db	'van Gilluwe (03/31/97,12:34:29) '
020C:3586  6C 6C 75 77 65 20
020C:358C  28 30 33 2F 33 31
020C:3592  2F 39 37 2C 31 32
020C:3598  3A 33 34 3A 32 39
020C:359E  29 20
020C:35A0  56 37 2E 30 30 20			db	'V7.00 s/n SW601745-XBIOF'
020C:35A6  73 2F 6E 20 53 57
020C:35AC  36 30 31 37 34 35
020C:35B2  2D 58 42 49 4F 46
020C:35B8  9E					sahf				; Store ah into flags
020C:35B9  A3 9E9D				mov	data_817,ax		; (020C:9E9D=3202h)
020C:35BC  A7			data_561	db	0A7h
020C:35BD  9D					popf				; Pop flags
020C:35BE  9E					sahf				; Store ah into flags
020C:35BF  A5					movsw				; Mov [si] to es:[di]
020C:35C0  6D					db	6Dh
020C:35C1  6A					db	6Ah
020C:35C2  0C D9				or	al,0D9h
020C:35C4  EF					out	dx,ax			; port 1, DMA-1 bas&cnt ch 0
020C:35C5  F2					db	0F2h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 112

020C:35C6  EB 1F				jmp	short loc_327		; (35E7)
020C:35C8  C0					db	0C0h
							                        ;* No entry point to code
020C:35C9  5E					pop	si
020C:35CA  D3 D4				rcl	sp,cl			; Rotate thru carry
020C:35CC  CF					iret				; Interrupt return
							                        ;* No entry point to code
020C:35CD  CE					into				; Int 4 on overflow
020C:35CE  C5 0E 2260				lds	cx,dword ptr ds:[2260h]	; (020C:2260=22Eh) Load seg:offset ptr
020C:35D2  3E: 09 56 6E				or	ds:[bp+6Eh],dx
020C:35D6  07					pop	es
020C:35D7  31 62 1C				xor	[bp+si+1Ch],sp
020C:35DA  43					inc	bx
020C:35DB  56					push	si
020C:35DC  79 41				jns	loc_329			; Jump if not sign
020C:35DE  19 0F				sbb	[bx],cx
020C:35E0  38 61 4B				cmp	[bx+di+4Bh],ah
020C:35E3  0A 6A 76				or	ch,[bp+si+76h]
020C:35E6  7B 3E				jnp	loc_330			; Jump if not parity
020C:35E8  1E					push	ds
020C:35E9  12 64 1E				adc	ah,[si+1Eh]
020C:35EC  6F					db	6Fh
020C:35ED  04 33				add	al,33h			; '3'
020C:35EF  7D 0F				jge	loc_328			; Jump if > or =
020C:35F1  4D					dec	bp
020C:35F2  2F					das				; Decimal adjust
020C:35F3  000D[00]				db	13 dup (0)
020C:3600			loc_328:
020C:3600  50					push	ax
020C:3601  05 1B25				add	ax,1B25h
020C:3604  00 00				add	[bx+si],al
020C:3606  46					inc	si
020C:3607  32 00				xor	al,[bx+si]
020C:3609  2E: 8C 06 00C0			mov	word ptr cs:[0C0h],es	; (020C:00C0=325Eh)
020C:360E  E8 3F17				call	sub_78			; (7528)
020C:3611  9A 7C45:54C4		;*		call	far ptr sub_275		;*(7C45:54C4)
020C:3611  9A					db	9Ah
020C:3612  54C4 7C45				dw	54C4h, 7C45h
020C:3616  9A 7C45:5B60		;*		call	far ptr sub_278		;*(7C45:5B60)
020C:3616  9A					db	9Ah
020C:3617  5B60 7C45				dw	5B60h, 7C45h
020C:361B  B4 03				mov	ah,3
020C:361D  32 FF				xor	bh,bh			; Zero register
020C:361F			loc_329:
020C:361F  9A 1491:3220		;*		call	far ptr sub_187		;*(1491:3220)
020C:361F  9A					db	9Ah
020C:3620  3220 1491				dw	3220h, 1491h
020C:3624  89 0E 1D75				mov	word ptr ds:[1D75h],cx	; (0000:1D75=0)
020C:3628  9A 7C45:5A18		;*		call	far ptr sub_277		;*(7C45:5A18)
020C:3628  9A					db	9Ah
020C:3629  5A18 7C45				dw	5A18h, 7C45h
020C:362D  3C 03				cmp	al,3
020C:362F  72 06				jb	loc_331			; Jump if below
020C:3631  C7 06 1D4A 0020			mov	word ptr ds:[1D4Ah],20h	; (0000:1D4A=18h)
020C:3637			loc_331:
020C:3637  E8 3E9A				call	sub_77			; (74D4)
020C:363A  E8 821B				call	sub_131			; (B858)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 113

020C:363D  BE 0080				mov	si,80h
020C:3640  E8 438D				call	sub_84			; (79D0)
020C:3643  2E: A1 00C0				mov	ax,word ptr cs:[0C0h]	; (020C:00C0=325Eh)
020C:3647  A3 4453				mov	word ptr ds:[4453h],ax	; (0000:4453=21CDh)
020C:364A  BF 5808				mov	di,5808h
020C:364D  03 FE				add	di,si
020C:364F  B8 7C45				mov	ax,7C45h
020C:3652  8E C0				mov	es,ax
020C:3654  26: 80 85 0100 CD			add	byte ptr es:[100h][di],0CDh	; (7C45:0100=0FFh)
020C:365A  C6 06 178A 00			mov	byte ptr ds:[178Ah],0	; (0000:178A=0C8h)
020C:365F  83 3E 1321 00			cmp	word ptr ds:[1321h],0	; (0000:1321=0)
020C:3664  74 14				je	loc_332			; Jump if equal
020C:3666  BE 1321				mov	si,1321h
020C:3669  8B C6				mov	ax,si
020C:366B  05 0004				add	ax,4
020C:366E  A3 3FDC				mov	word ptr ds:[3FDCh],ax	; (0000:3FDC=0)
020C:3671  E8 0730				call	sub_34			; (3DA4)
020C:3674  72 04				jc	loc_332			; Jump if carry Set
020C:3676  89 16 131F				mov	word ptr ds:[131Fh],dx	; (0000:131F=0)
020C:367A			loc_332:
020C:367A  B9 0072				mov	cx,72h
020C:367D  81			data_564	db	81h
020C:367E  E9			data_565	db	0E9h
020C:367F  65					db	65h
020C:3680  00 BF 01C5				add	byte ptr ds:[1C5h][bx],bh	; (0000:01C5=25h)
020C:3684  BE 0065				mov	si,65h
020C:3687  B8 0560				mov	ax,560h
020C:368A  8E D8				mov	ds,ax
020C:368C  E8 435F				call	sub_90			; (79EE)
020C:368F  FC					cld				; Clear direction
020C:3690  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:3692  E8 433B				call	sub_84			; (79D0)
020C:3695  9A 7C45:5928		;*		call	far ptr sub_276		;*(7C45:5928)
020C:3695  9A					db	9Ah
020C:3696  5928 7C45				dw	5928h, 7C45h
020C:369A  B6 00				mov	dh,0
020C:369C  E8 2519				call	sub_50			; (5BB8)
020C:369F  B4 01				mov	ah,1
020C:36A1  9A 1491:3A3C		;*		call	far ptr sub_195		;*(1491:3A3C)
020C:36A1  9A					db	9Ah
020C:36A2  3A3C 1491				dw	3A3Ch, 1491h
020C:36A6  BF 1141				mov	di,1141h
020C:36A9  81 EF 1023				sub	di,1023h
020C:36AD  9A 1491:0984		;*		call	far ptr sub_168		;*(1491:0984)
020C:36AD  9A					db	9Ah
020C:36AE  0984 1491				dw	984h, 1491h
020C:36B2  8C C8				mov	ax,cs
020C:36B4  50					push	ax
020C:36B5  B8 5B90				mov	ax,5B90h
020C:36B8  A3 46E8				mov	word ptr ds:[46E8h],ax	; (ss:46E8=0C33Fh)
020C:36BB  E8 4351				call	sub_94			; (7A0F)
020C:36BE  A3 46EA				mov	word ptr ds:[46EAh],ax	; (ss:46EA=2E52h)
020C:36C1  58					pop	ax
020C:36C2  FF 1E 46E8				call	dword ptr ds:[46E8h]	; (ss:46E8=0C33Fh)
020C:36C6  80 3E 1799 02			cmp	byte ptr ds:[1799h],2	; (ss:1799=0DAh)
020C:36CB  74 07				je	loc_333			; Jump if equal
020C:36CD  80 3E 1795 01			cmp	byte ptr ds:[1795h],1	; (ss:1795=8Bh)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 114

020C:36D2  75 42				jne	loc_334			; Jump if not equal
020C:36D4			loc_333:
020C:36D4  E8 4317				call	sub_90			; (79EE)
020C:36D7  BF 00E8				mov	di,0E8h
020C:36DA  B0 2A				mov	al,2Ah			; '*'
020C:36DC  B9 0029				mov	cx,29h
020C:36DF  FC					cld				; Clear direction
020C:36E0  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:36E2  BF 0188				mov	di,188h
020C:36E5  B9 0029				mov	cx,29h
020C:36E8  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:36EA  BE 006F				mov	si,6Fh
020C:36ED  BF 0138				mov	di,138h
020C:36F0  B9 0027				mov	cx,27h
020C:36F3  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:36F5  8B 1E 1326				mov	bx,word ptr ds:[1326h]	; (ss:1326=82h)
020C:36F9  A0 1209				mov	al,byte ptr ds:[1209h]	; (ss:1209=0FDh)
020C:36FC  88 47 59				mov	[bx+59h],al
020C:36FF  88 47 46				mov	[bx+46h],al
020C:3702  88 47 5B				mov	[bx+5Bh],al
020C:3705  B0 07				mov	al,7
020C:3707  88 47 57				mov	[bx+57h],al
020C:370A  88 47 58				mov	[bx+58h],al
020C:370D  88 47 5A				mov	[bx+5Ah],al
020C:3710  88 47 42				mov	[bx+42h],al
020C:3713  88 47 45				mov	[bx+45h],al
020C:3716			loc_334:
020C:3716  9A 1491:319C		;*		call	far ptr sub_185		;*(1491:319C)
020C:3716  9A					db	9Ah
020C:3717  319C 1491				dw	319Ch, 1491h
020C:371B  E8 23E2				call	sub_49			; (5B00)
020C:371E  E8 7F3F				call	sub_129			; (B660)
020C:3721  80 3E 1795 01			cmp	byte ptr ds:[1795h],1	; (ss:1795=8Bh)
020C:3726  75 14				jne	loc_335			; Jump if not equal
020C:3728  53					push	bx
020C:3729  8B 1E 1326				mov	bx,word ptr ds:[1326h]	; (ss:1326=82h)
020C:372D  C6 47 41 07				mov	byte ptr [bx+41h],7
020C:3731  C6 06 1207 07			mov	byte ptr ds:[1207h],7	; (ss:1207=32h)
020C:3736  C6 06 1208 07			mov	byte ptr ds:[1208h],7	; (ss:1208=0EDh)
020C:373B  5B					pop	bx
020C:373C			loc_335:
020C:373C  9A 1491:BC50		;*		call	far ptr sub_270		;*(1491:BC50)
020C:373C  9A					db	9Ah
020C:373D  BC50 1491				dw	0BC50h, 1491h
020C:3741  80 3E 2FBC 00			cmp	byte ptr ds:[2FBCh],0	; (ss:2FBC=72h)
020C:3746  74 42				je	loc_337			; Jump if equal
020C:3748  BF 2FBC				mov	di,2FBCh
020C:374B  B0 00				mov	al,0
020C:374D  9A 1491:2C28		;*		call	far ptr sub_179		;*(1491:2C28)
020C:374D  9A					db	9Ah
020C:374E  2C28 1491				dw	2C28h, 1491h
020C:3752  9A 1491:2CB0		;*		call	far ptr sub_180		;*(1491:2CB0)
020C:3752  9A					db	9Ah
020C:3753  2CB0 1491				dw	2CB0h, 1491h
020C:3757  A2 1F6B				mov	byte ptr ds:[1F6Bh],al	; (ss:1F6B=0B9h)
020C:375A  3C 00				cmp	al,0
020C:375C  74 2C				je	loc_337			; Jump if equal
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 115

020C:375E  50					push	ax
020C:375F  57					push	di
020C:3760  BE 2FBC				mov	si,2FBCh
020C:3763  BF 1E9A				mov	di,1E9Ah
020C:3766  8B CB				mov	cx,bx
020C:3768  FC					cld				; Clear direction
020C:3769  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:376B  5F					pop	di
020C:376C  4F					dec	di
020C:376D  9A 1491:BB80		;*		call	far ptr sub_269		;*(1491:BB80)
020C:376D  9A					db	9Ah
020C:376E  BB80 1491				dw	0BB80h, 1491h
020C:3772  58					pop	ax
020C:3773  83 FB 0C				cmp	bx,0Ch
020C:3776  77 0D				ja	loc_336			; Jump if above
020C:3778  3C 01				cmp	al,1
020C:377A  74 22				je	loc_339			; Jump if equal
020C:377C  80 3E 3248 01			cmp	byte ptr ds:[3248h],1	; (ss:3248=0FDh)
020C:3781  75 10				jne	loc_338			; Jump if not equal
020C:3783  EB 4D				jmp	short loc_343		; (37D2)
020C:3785			loc_336:
020C:3785  C6 06 1F6B 00			mov	byte ptr ds:[1F6Bh],0	; (ss:1F6B=0B9h)
020C:378A			loc_337:
020C:378A  80 3E 3248 01			cmp	byte ptr ds:[3248h],1	; (ss:3248=0FDh)
020C:378F  75 02				jne	loc_338			; Jump if not equal
020C:3791  EB 4E				jmp	short loc_345		; (37E1)
020C:3793			loc_338:
020C:3793  BD 2FBC				mov	bp,2FBCh
020C:3796  BE 323A				mov	si,323Ah
020C:3799  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:3799  9A					db	9Ah
020C:379A  67E0 1491				dw	67E0h, 1491h
020C:379E			loc_339:
020C:379E  B4 2A				mov	ah,2Ah			; '*'
020C:37A0  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:37A0  9A					db	9Ah
020C:37A1  2F70 1491				dw	2F70h, 1491h
020C:37A5  E8 21A4				call	sub_43			; (594C)
020C:37A8  BA 2FBC				mov	dx,2FBCh
020C:37AB  B4 3D				mov	ah,3Dh			; '='
020C:37AD  B0 00				mov	al,0
020C:37AF  B9 0000				mov	cx,0
020C:37B2  CD 21				int	21h			; DOS Services  ah=function 3Dh
										;  open file, al=mode,name@ds:dx
020C:37B4  A3 3009				mov	word ptr ds:[3009h],ax	; (ss:3009=7520h)
020C:37B7  73 12				jnc	loc_342			; Jump if carry=0
020C:37B9  80 3E 1F6B 01			cmp	byte ptr ds:[1F6Bh],1	; (ss:1F6B=0B9h)
020C:37BE  77 09				ja	loc_341			; Jump if above
020C:37C0  75 05				jnz	loc_340			; Jump if not zero
020C:37C2  B3 01				mov	bl,1
020C:37C4  E9 3A0F				jmp	loc_1068		; (71D6)
020C:37C7			loc_340:
020C:37C7  EB 18				jmp	short loc_345		; (37E1)
020C:37C9			loc_341:
020C:37C9  EB 07				jmp	short loc_343		; (37D2)
020C:37CB			loc_342:
020C:37CB  9A 1491:0C30		;*		call	far ptr sub_173		;*(1491:0C30)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 116

020C:37CB  9A					db	9Ah
020C:37CC  0C30 1491				dw	0C30h, 1491h
020C:37D0  EB 0F				jmp	short loc_345		; (37E1)
020C:37D2			loc_343:
020C:37D2  E8 610F				call	sub_113			; (98E4)
020C:37D5  72 07				jc	loc_344			; Jump if carry Set
020C:37D7  9A 1491:55BC		;*		call	far ptr sub_213		;*(1491:55BC)
020C:37D7  9A					db	9Ah
020C:37D8  55BC 1491				dw	55BCh, 1491h
020C:37DC  EB 03				jmp	short loc_345		; (37E1)
020C:37DE			loc_344:
020C:37DE  E9 3B43				jmp	loc_1077		; (7324)
020C:37E1			loc_345:
020C:37E1  C6 06 178A 01			mov	byte ptr ds:[178Ah],1	; (ss:178A=8Ah)
020C:37E6  8A 26 1F6A				mov	ah,byte ptr ds:[1F6Ah]	; (ss:1F6A=0)
020C:37EA  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:37EA  9A					db	9Ah
020C:37EB  2F70 1491				dw	2F70h, 1491h
020C:37EF  E8 215A				call	sub_43			; (594C)
020C:37F2  80 3E 3E27 01			cmp	byte ptr ds:[3E27h],1	; (ss:3E27=0B4h)
020C:37F7  75 08				jne	loc_346			; Jump if not equal
020C:37F9  C6 06 3E27 00			mov	byte ptr ds:[3E27h],0	; (ss:3E27=0B4h)
020C:37FE  E9 112F				jmp	loc_563			; (4930)
020C:3801			loc_346:
020C:3801  E8 41EA				call	sub_90			; (79EE)
020C:3804  2E: 80 3E 00C8 01			cmp	byte ptr cs:[0C8h],1	; (020C:00C8=6)
020C:380A  74 20				je	loc_350			; Jump if equal
020C:380C  B4 07				mov	ah,7
020C:380E  CD 21				int	21h			; DOS Services  ah=function 07h
										;  get keybd char al, no echo
020C:3810  3C 00				cmp	al,0
020C:3812  75 0D				jne	loc_348			; Jump if not equal
020C:3814  B4 07				mov	ah,7
020C:3816  CD 21				int	21h			; DOS Services  ah=function 07h
										;  get keybd char al, no echo
020C:3818  3C 3B				cmp	al,3Bh			; ';'
020C:381A  75 03				jne	loc_347			; Jump if not equal
020C:381C  E9 1BFE				jmp	loc_683			; (541D)
020C:381F			loc_347:
020C:381F  EB 3B				jmp	short loc_353		; (385C)
020C:3821			loc_348:
020C:3821  3C 3F				cmp	al,3Fh			; '?'
020C:3823  75 03				jne	loc_349			; Jump if not equal
020C:3825  E9 1BF5				jmp	loc_683			; (541D)
020C:3828			loc_349:
020C:3828  3C 1B				cmp	al,1Bh
020C:382A  75 03				jne	loc_351			; Jump if not equal
020C:382C			loc_350:
020C:382C  E9 1952				jmp	loc_652			; (5181)
020C:382F			loc_351:
020C:382F  3C 2B				cmp	al,2Bh			; '+'
020C:3831  75 03				jne	loc_352			; Jump if not equal
020C:3833  E9 1D73				jmp	loc_703			; (55A9)
020C:3836			loc_352:
020C:3836  3C 80				cmp	al,80h
020C:3838  73 E5				jae	loc_347			; Jump if above or =
020C:383A  A8 40				test	al,40h			; '@'
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 117

020C:383C  74 E1				jz	loc_347			; Jump if zero
020C:383E  24 5F				and	al,5Fh			; '_'
020C:3840  B9 3FA7				mov	cx,3FA7h
020C:3843  81 E9 3F8E				sub	cx,3F8Eh
020C:3847  BF 3F8E				mov	di,3F8Eh
020C:384A  FC					cld				; Clear direction
020C:384B  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020C:384D  E3 0D				jcxz	loc_353			; Jump if cx=0
020C:384F  4F					dec	di
020C:3850  81 EF 3F8E				sub	di,3F8Eh
020C:3854  D1 E7				shl	di,1			; Shift w/zeros fill
020C:3856  81 C7 3FA7				add	di,3FA7h
020C:385A  FF 25				jmp	word ptr [di]		;*
020C:385C			loc_353:
020C:385C  9A 1491:3108		;*		call	far ptr sub_183		;*(1491:3108)
020C:385C  9A					db	9Ah
020C:385D  3108 1491				dw	3108h, 1491h
020C:3861  EB 9E				jmp	short loc_346		; (3801)
							                        ;* No entry point to code
020C:3863  E8 245A				call	sub_51			; (5CC0)
020C:3866  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020C:386A  B4 22				mov	ah,22h			; '"'
020C:386C  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:386C  9A					db	9Ah
020C:386D  2F70 1491				dw	2F70h, 1491h
020C:3871  E8 20D8				call	sub_43			; (594C)
020C:3874  FF 36 3D1D				push	word ptr ds:[3D1Dh]	; (ss:3D1D=7400h)
020C:3878  C6 06 3D1C 01			mov	byte ptr ds:[3D1Ch],1	; (ss:3D1C=3Fh)
020C:387D			loc_354:
020C:387D  BE 0631				mov	si,631h
020C:3880  B9 0BD1				mov	cx,0BD1h
020C:3883  81 E9 0631				sub	cx,631h
020C:3887  80 3E 3D1C 01			cmp	byte ptr ds:[3D1Ch],1	; (ss:3D1C=3Fh)
020C:388C  74 0A				je	loc_356			; Jump if equal
020C:388E  BE 0BD1				mov	si,0BD1h
020C:3891  B9 1171				mov	cx,1171h
020C:3894  81 E9 0BD1				sub	cx,0BD1h
020C:3898			loc_356:
020C:3898  80 3E 1329 01			cmp	byte ptr ds:[1329h],1	; (ss:1329=36h)
020C:389D  75 26				jne	loc_359			; Jump if not equal
020C:389F  B4 02				mov	ah,2
020C:38A1  32 FF				xor	bh,bh			; Zero register
020C:38A3  BA 0500				mov	dx,500h
020C:38A6  9A 1491:3220		;*		call	far ptr sub_187		;*(1491:3220)
020C:38A6  9A					db	9Ah
020C:38A7  3220 1491				dw	3220h, 1491h
020C:38AB  49					dec	cx
020C:38AC  E8 4142				call	sub_91			; (79F1)

020C:38AF			locloop_357:
020C:38AF  33 ED				xor	bp,bp			; Zero register
020C:38B1  26: 8A 14				mov	dl,es:[si]
020C:38B4  80 FA F4				cmp	dl,0F4h
020C:38B7  72 02				jb	loc_358			; Jump if below
020C:38B9  B2 20				mov	dl,20h			; ' '
020C:38BB			loc_358:
020C:38BB  9A 1491:0840		;*		call	far ptr sub_165		;*(1491:0840)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 118

020C:38BB  9A					db	9Ah
020C:38BC  0840 1491				dw	840h, 1491h
020C:38C0  46					inc	si
020C:38C1  E2 EC				loop	locloop_357		; Loop if cx > 0

020C:38C3  EB 72				jmp	short loc_368		; (3937)
020C:38C5			loc_359:
020C:38C5  E8 20D0				call	sub_45			; (5998)
020C:38C8  8E 06 131B				mov	es,word ptr ds:[131Bh]	; (ss:131B=444Fh)
020C:38CC  BF 0320				mov	di,320h
020C:38CF  03 3E 131D				add	di,word ptr ds:[131Dh]	; (ss:131D=7501h)
020C:38D3  E8 40FD				call	sub_85			; (79D3)
020C:38D6  B7 07				mov	bh,7
020C:38D8  FC					cld				; Clear direction

020C:38D9			locloop_360:
020C:38D9  8A DF				mov	bl,bh
020C:38DB  80 3C FE				cmp	byte ptr [si],0FEh
020C:38DE  75 0F				jne	loc_363			; Jump if not equal
020C:38E0  80 FF 07				cmp	bh,7
020C:38E3  75 04				jne	loc_361			; Jump if not equal
020C:38E5  B7 0F				mov	bh,0Fh
020C:38E7  EB 02				jmp	short loc_362		; (38EB)
020C:38E9			loc_361:
020C:38E9  B7 07				mov	bh,7
020C:38EB			loc_362:
020C:38EB  8A DF				mov	bl,bh
020C:38ED  EB 0F				jmp	short loc_364		; (38FE)
020C:38EF			loc_363:
020C:38EF  80 3C F4				cmp	byte ptr [si],0F4h
020C:38F2  72 15				jb	loc_365			; Jump if below
020C:38F4  1E					push	ds
020C:38F5  E8 40D8				call	sub_84			; (79D0)
020C:38F8  8A 1E 1207				mov	bl,byte ptr ds:[1207h]	; (ss:1207=32h)
020C:38FC  1F					pop	ds
020C:38FD  FC					cld				; Clear direction
020C:38FE			loc_364:
020C:38FE  B0 20				mov	al,20h			; ' '
020C:3900  AA					stosb				; Store al to es:[di]
020C:3901  46					inc	si
020C:3902  26: 88 1D				mov	es:[di],bl
020C:3905  47					inc	di
020C:3906  49					dec	cx
020C:3907  EB 0E				jmp	short loc_366		; (3917)
020C:3909			loc_365:
020C:3909  80 3C 80				cmp	byte ptr [si],80h
020C:390C  72 09				jb	loc_366			; Jump if below
020C:390E  1E					push	ds
020C:390F  E8 40BE				call	sub_84			; (79D0)
020C:3912  8A 1E 1206				mov	bl,byte ptr ds:[1206h]	; (ss:1206=4Eh)
020C:3916  1F					pop	ds
020C:3917			loc_366:
020C:3917  AC					lodsb				; String [si] to al
020C:3918  1E					push	ds
020C:3919  E8 40B4				call	sub_84			; (79D0)
020C:391C  80 3E 1799 02			cmp	byte ptr ds:[1799h],2	; (ss:1799=0DAh)
020C:3921  75 0C				jne	loc_367			; Jump if not equal
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 119

020C:3923  3C 80				cmp	al,80h
020C:3925  72 08				jb	loc_367			; Jump if below
020C:3927  53					push	bx
020C:3928  BB 17B6				mov	bx,17B6h
020C:392B  2C 80				sub	al,80h
020C:392D  D7					xlat				; al=[al+[bx]] table
020C:392E  5B					pop	bx
020C:392F			loc_367:
020C:392F  1F					pop	ds
020C:3930  AA					stosb				; Store al to es:[di]
020C:3931  26: 88 1D				mov	es:[di],bl
020C:3934  47					inc	di
020C:3935  E2 A2				loop	locloop_360		; Loop if cx > 0

020C:3937			loc_368:
020C:3937  E8 4096				call	sub_84			; (79D0)
020C:393A  E8 2087				call	sub_46			; (59C4)
020C:393D  BD 3D18				mov	bp,3D18h
020C:3940  80 3E 3D1C 01			cmp	byte ptr ds:[3D1Ch],1	; (ss:3D1C=3Fh)
020C:3945  74 03				je	loc_369			; Jump if equal
020C:3947  BD 3D1D				mov	bp,3D1Dh
020C:394A			loc_369:
020C:394A  3E: 8B 5E 00				mov	bx,ds:[bp]
020C:394E  E8 2797				call	sub_59			; (60E8)
020C:3951			loc_370:
020C:3951  B4 07				mov	ah,7
020C:3953  CD 21				int	21h			; DOS Services  ah=function 07h
										;  get keybd char al, no echo
020C:3955  3C 00				cmp	al,0
020C:3957  75 0E				jne	loc_371			; Jump if not equal
020C:3959  B4 07				mov	ah,7
020C:395B  CD 21				int	21h			; DOS Services  ah=function 07h
										;  get keybd char al, no echo
020C:395D  3C 49				cmp	al,49h			; 'I'
020C:395F  74 39				je	loc_376			; Jump if equal
020C:3961  3C 51				cmp	al,51h			; 'Q'
020C:3963  74 35				je	loc_376			; Jump if equal
020C:3965  EB 20				jmp	short loc_373		; (3987)
020C:3967			loc_371:
020C:3967  3C 31				cmp	al,31h			; '1'
020C:3969  74 1F				je	loc_374			; Jump if equal
020C:396B  3C 32				cmp	al,32h			; '2'
020C:396D  74 23				je	loc_375			; Jump if equal
020C:396F  24 5F				and	al,5Fh			; '_'
020C:3971  3C 41				cmp	al,41h			; 'A'
020C:3973  72 12				jb	loc_373			; Jump if below
020C:3975  80 3E 3D1C 01			cmp	byte ptr ds:[3D1Ch],1	; (ss:3D1C=3Fh)
020C:397A  74 07				je	loc_372			; Jump if equal
020C:397C  3C 4D				cmp	al,4Dh			; 'M'
020C:397E  76 2D				jbe	loc_378			; Jump if below or =
020C:3980  E9 00C2				jmp	loc_383			; (3A45)
020C:3983			loc_372:
020C:3983  3C 5A				cmp	al,5Ah			; 'Z'
020C:3985  76 26				jbe	loc_378			; Jump if below or =
020C:3987			loc_373:
020C:3987  E9 00BB				jmp	loc_383			; (3A45)
020C:398A			loc_374:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 120

020C:398A  C6 06 3D1C 01			mov	byte ptr ds:[3D1Ch],1	; (ss:3D1C=3Fh)
020C:398F  E9 FEEB				jmp	loc_354			; (387D)
020C:3992			loc_375:
020C:3992  C6 06 3D1C 02			mov	byte ptr ds:[3D1Ch],2	; (ss:3D1C=3Fh)
020C:3997  E9 FEE3				jmp	loc_354			; (387D)
020C:399A			loc_376:
020C:399A  FE 06 3D1C				inc	byte ptr ds:[3D1Ch]	; (ss:3D1C=3Fh)
020C:399E  80 3E 3D1C 03			cmp	byte ptr ds:[3D1Ch],3	; (ss:3D1C=3Fh)
020C:39A3  72 05				jb	loc_377			; Jump if below
020C:39A5  C6 06 3D1C 01			mov	byte ptr ds:[3D1Ch],1	; (ss:3D1C=3Fh)
020C:39AA			loc_377:
020C:39AA  E9 FED0				jmp	loc_354			; (387D)
020C:39AD			loc_378:
020C:39AD  3C 50				cmp	al,50h			; 'P'
020C:39AF  77 29				ja	loc_379			; Jump if above
020C:39B1  2C 41				sub	al,41h			; 'A'
020C:39B3  BB 8000				mov	bx,8000h
020C:39B6  8A C8				mov	cl,al
020C:39B8  D3 CB				ror	bx,cl			; Rotate
020C:39BA  3E: 8B 56 00				mov	dx,ds:[bp]
020C:39BE  8B CA				mov	cx,dx
020C:39C0  23 D3				and	dx,bx
020C:39C2  F7 D2				not	dx
020C:39C4  23 D3				and	dx,bx
020C:39C6  F7 D3				not	bx
020C:39C8  23 CB				and	cx,bx
020C:39CA  0B CA				or	cx,dx
020C:39CC  F7 06 3D0F 0002			test	word ptr ds:[3D0Fh],2	; (ss:3D0F=263Ah)
020C:39D2  75 62				jnz	loc_381			; Jump if not zero
020C:39D4  3E: 89 4E 00				mov	ds:[bp],cx
020C:39D8  EB 61				jmp	short loc_382		; (3A3B)
020C:39DA			loc_379:
020C:39DA  3C 54				cmp	al,54h			; 'T'
020C:39DC  77 2F				ja	loc_380			; Jump if above
020C:39DE  80 3E 22FF 00			cmp	byte ptr ds:[22FFh],0	; (ss:22FF=0BEh)
020C:39E3  74 51				je	loc_381			; Jump if equal
020C:39E5  2C 51				sub	al,51h			; 'Q'
020C:39E7  B3 04				mov	bl,4
020C:39E9  8A C8				mov	cl,al
020C:39EB  D2 CB				ror	bl,cl			; Rotate
020C:39ED  8A 16 3D78				mov	dl,byte ptr ds:[3D78h]	; (ss:3D78=0E4h)
020C:39F1  8A CA				mov	cl,dl
020C:39F3  22 D3				and	dl,bl
020C:39F5  F6 D2				not	dl
020C:39F7  22 D3				and	dl,bl
020C:39F9  F6 D3				not	bl
020C:39FB  22 CB				and	cl,bl
020C:39FD  0A CA				or	cl,dl
020C:39FF  F7 06 3D0F 0002			test	word ptr ds:[3D0Fh],2	; (ss:3D0F=263Ah)
020C:3A05  75 2F				jnz	loc_381			; Jump if not zero
020C:3A07  88 0E 3D78				mov	byte ptr ds:[3D78h],cl	; (ss:3D78=0E4h)
020C:3A0B  EB 2E				jmp	short loc_382		; (3A3B)
020C:3A0D			loc_380:
020C:3A0D  2C 55				sub	al,55h			; 'U'
020C:3A0F  BB 0080				mov	bx,80h
020C:3A12  8A C8				mov	cl,al
020C:3A14  D3 CB				ror	bx,cl			; Rotate
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 121

020C:3A16  8B 16 3D1A				mov	dx,word ptr ds:[3D1Ah]	; (ss:3D1A=0E3Eh)
020C:3A1A  8B CA				mov	cx,dx
020C:3A1C  23 D3				and	dx,bx
020C:3A1E  F7 D2				not	dx
020C:3A20  23 D3				and	dx,bx
020C:3A22  F7 D3				not	bx
020C:3A24  23 CB				and	cx,bx
020C:3A26  0B CA				or	cx,dx
020C:3A28  F7 06 3D0F 0002			test	word ptr ds:[3D0Fh],2	; (ss:3D0F=263Ah)
020C:3A2E  75 06				jnz	loc_381			; Jump if not zero
020C:3A30  89 0E 3D1A				mov	word ptr ds:[3D1Ah],cx	; (ss:3D1A=0E3Eh)
020C:3A34  EB 05				jmp	short loc_382		; (3A3B)
020C:3A36			loc_381:
020C:3A36  9A 1491:3108		;*		call	far ptr sub_183		;*(1491:3108)
020C:3A36  9A					db	9Ah
020C:3A37  3108 1491				dw	3108h, 1491h
020C:3A3B			loc_382:
020C:3A3B  3E: 8B 5E 00				mov	bx,ds:[bp]
020C:3A3F  E8 26A6				call	sub_59			; (60E8)
020C:3A42  E9 FF0C				jmp	loc_370			; (3951)
020C:3A45			loc_383:
020C:3A45  58					pop	ax
020C:3A46  33 06 3D1D				xor	ax,word ptr ds:[3D1Dh]	; (ss:3D1D=7400h)
020C:3A4A  A9 0020				test	ax,20h
020C:3A4D  74 42				jz	loc_387			; Jump if zero
020C:3A4F  A1 3D1D				mov	ax,word ptr ds:[3D1Dh]	; (ss:3D1D=7400h)
020C:3A52  E8 3F8D				call	sub_87			; (79E2)
020C:3A55  BF 0000				mov	di,0
020C:3A58			loc_384:
020C:3A58  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020C:3A5C  74 1B				je	loc_386			; Jump if equal
020C:3A5E  26: F6 45 0B 01			test	byte ptr es:[di+0Bh],1
020C:3A63  75 0F				jnz	loc_385			; Jump if not zero
020C:3A65  26: 80 65 0E AF			and	byte ptr es:[di+0Eh],0AFh
020C:3A6A  A9 0020				test	ax,20h
020C:3A6D  74 05				jz	loc_385			; Jump if zero
020C:3A6F  26: 80 4D 0E 40			or	byte ptr es:[di+0Eh],40h	; '@'
020C:3A74			loc_385:
020C:3A74  83 C7 19				add	di,19h
020C:3A77  EB DF				jmp	short loc_384		; (3A58)
020C:3A79			loc_386:
020C:3A79  A9 0020				test	ax,20h
020C:3A7C  74 13				jz	loc_387			; Jump if zero
020C:3A7E  F7 06 1D48 01E0			test	word ptr ds:[1D48h],1E0h	; (ss:1D48=0F718h)
020C:3A84  75 0B				jnz	loc_387			; Jump if not zero
020C:3A86  C7 06 1D48 0020			mov	word ptr ds:[1D48h],20h	; (ss:1D48=0F718h)
020C:3A8C  B6 00				mov	dh,0
020C:3A8E  E8 2127				call	sub_50			; (5BB8)
020C:3A91			loc_387:
020C:3A91  E8 2254				call	sub_52			; (5CE8)
020C:3A94  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020C:3A98  C6 47 67 00				mov	byte ptr [bx+67h],0
020C:3A9C  C6 06 178A 01			mov	byte ptr ds:[178Ah],1	; (ss:178A=8Ah)
020C:3AA1  E8 2724				call	sub_61			; (61C8)
020C:3AA4  8A 26 1F6A				mov	ah,byte ptr ds:[1F6Ah]	; (ss:1F6A=0)
020C:3AA8  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:3AA8  9A					db	9Ah
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 122

020C:3AA9  2F70 1491				dw	2F70h, 1491h
020C:3AAD  E8 1E9C				call	sub_43			; (594C)
020C:3AB0  A0 178F				mov	al,byte ptr ds:[178Fh]	; (ss:178F=0E3h)
020C:3AB3  F6 06 3D78 07			test	byte ptr ds:[3D78h],7	; (ss:3D78=0E4h)
020C:3AB8  74 0C				jz	loc_388			; Jump if zero
020C:3ABA  80 3E 178F 0A			cmp	byte ptr ds:[178Fh],0Ah	; (ss:178F=0E3h)
020C:3ABF  73 05				jae	loc_388			; Jump if above or =
020C:3AC1  B0 0A				mov	al,0Ah
020C:3AC3  E8 2A1A				call	sub_68			; (64E0)
020C:3AC6			loc_388:
020C:3AC6  E8 26AF				call	sub_60			; (6178)
020C:3AC9  E9 FD35				jmp	loc_346			; (3801)
							                        ;* No entry point to code
020C:3ACC  E8 21F1				call	sub_51			; (5CC0)
020C:3ACF  C6 47 52 00				mov	byte ptr [bx+52h],0
020C:3AD3  C6 47 39 0F				mov	byte ptr [bx+39h],0Fh
020C:3AD7  C6 47 79 0F				mov	byte ptr [bx+79h],0Fh
020C:3ADB  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020C:3ADF  E8 1D3E				call	sub_42			; (5820)
020C:3AE2  B4 02				mov	ah,2
020C:3AE4  32 FF				xor	bh,bh			; Zero register
020C:3AE6  BA 1313				mov	dx,1313h
020C:3AE9  9A 1491:3220		;*		call	far ptr sub_187		;*(1491:3220)
020C:3AE9  9A					db	9Ah
020C:3AEA  3220 1491				dw	3220h, 1491h
020C:3AEE  E8 25E7				call	sub_58			; (60D8)
020C:3AF1  B1 04				mov	cl,4
020C:3AF3  B3 02				mov	bl,2
020C:3AF5  BE 0699				mov	si,699h
020C:3AF8  9A 1491:06C0		;*		call	far ptr sub_162		;*(1491:06C0)
020C:3AF8  9A					db	9Ah
020C:3AF9  06C0 1491				dw	6C0h, 1491h
020C:3AFD  3C 1B				cmp	al,1Bh
020C:3AFF  75 03				jne	loc_389			; Jump if not equal
020C:3B01  E9 00AD				jmp	loc_395			; (3BB1)
020C:3B04			loc_389:
020C:3B04  80 F9 00				cmp	cl,0
020C:3B07  74 03				je	loc_390			; Jump if equal
020C:3B09  E9 00A0				jmp	loc_394			; (3BAC)
020C:3B0C			loc_390:
020C:3B0C  B9 0080				mov	cx,80h
020C:3B0F  BF 0699				mov	di,699h
020C:3B12  E8 024B				call	sub_33			; (3D60)
020C:3B15  72 03				jc	loc_391			; Jump if carry Set
020C:3B17  E9 0092				jmp	loc_394			; (3BAC)
020C:3B1A			loc_391:
020C:3B1A  89 16 1CC1				mov	word ptr ds:[1CC1h],dx	; (ss:1CC1=1E5h)
020C:3B1E  B2 3A				mov	dl,3Ah			; ':'
020C:3B20  9A 1491:0840		;*		call	far ptr sub_165		;*(1491:0840)
020C:3B20  9A					db	9Ah
020C:3B21  0840 1491				dw	840h, 1491h
020C:3B25  B1 04				mov	cl,4
020C:3B27  B3 02				mov	bl,2
020C:3B29  BE 069E				mov	si,69Eh
020C:3B2C  9A 1491:06C0		;*		call	far ptr sub_162		;*(1491:06C0)
020C:3B2C  9A					db	9Ah
020C:3B2D  06C0 1491				dw	6C0h, 1491h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 123

020C:3B31  3C 1B				cmp	al,1Bh
020C:3B33  74 7C				je	loc_395			; Jump if equal
020C:3B35  80 F9 00				cmp	cl,0
020C:3B38  75 72				jne	loc_394			; Jump if not equal
020C:3B3A  B9 0080				mov	cx,80h
020C:3B3D  BF 069E				mov	di,69Eh
020C:3B40  E8 021D				call	sub_33			; (3D60)
020C:3B43  73 67				jnc	loc_394			; Jump if carry=0
020C:3B45  E8 3E9A				call	sub_87			; (79E2)
020C:3B48  26: 89 16 0002			mov	word ptr es:[2],dx	; (444F:0002=5)
020C:3B4D  26: 89 16 0017			mov	word ptr es:[17h],dx	; (444F:0017=501h)
020C:3B52  26: 83 3E 0006 FF			cmp	word ptr es:[6],0FFFFh	; (444F:0006=0)
020C:3B58  75 07				jne	loc_392			; Jump if not equal
020C:3B5A  26: C7 06 0004 0000			mov	word ptr es:[4],0	; (444F:0004=2)
020C:3B61			loc_392:
020C:3B61  A1 1CC1				mov	ax,word ptr ds:[1CC1h]	; (ss:1CC1=1E5h)
020C:3B64  26: A3 0000				mov	word ptr es:[0],ax	; (444F:0000=120h)
020C:3B68  26: A3 0015				mov	word ptr es:[15h],ax	; (444F:0015=2020h)
020C:3B6C  26: A3 0006				mov	word ptr es:[6],ax	; (444F:0006=0)
020C:3B70  26: A3 0008				mov	word ptr es:[8],ax	; (444F:0008=6Ah)
020C:3B74  26: C6 06 000E 00			mov	byte ptr es:[0Eh],0	; (444F:000E=0Fh)
020C:3B7A  26: 83 3E 000A FF			cmp	word ptr es:[0Ah],0FFFFh	; (444F:000A=939h)
020C:3B80  75 19				jne	loc_393			; Jump if not equal
020C:3B82  26: C7 06 000A 0000			mov	word ptr es:[0Ah],0	; (444F:000A=939h)
020C:3B89  26: C7 06 000C 0041			mov	word ptr es:[0Ch],41h	; (444F:000C=0)
020C:3B90  80 3E 1CD9 00			cmp	byte ptr ds:[1CD9h],0	; (ss:1CD9=0)
020C:3B95  77 04				ja	loc_393			; Jump if above
020C:3B97  FE 06 1CD9				inc	byte ptr ds:[1CD9h]	; (ss:1CD9=0)
020C:3B9B			loc_393:
020C:3B9B  E8 3E50				call	sub_90			; (79EE)
020C:3B9E  E8 32FF				call	sub_74			; (6EA0)
020C:3BA1  8A 26 1F6A				mov	ah,byte ptr ds:[1F6Ah]	; (ss:1F6A=0)
020C:3BA5  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:3BA5  9A					db	9Ah
020C:3BA6  2F70 1491				dw	2F70h, 1491h
020C:3BAA  EB 05				jmp	short loc_395		; (3BB1)
020C:3BAC			loc_394:
020C:3BAC  9A 1491:3108		;*		call	far ptr sub_183		;*(1491:3108)
020C:3BAC  9A					db	9Ah
020C:3BAD  3108 1491				dw	3108h, 1491h
020C:3BB1			loc_395:
020C:3BB1  E8 2440				call	sub_55			; (5FF4)
020C:3BB4  E8 2131				call	sub_52			; (5CE8)
020C:3BB7  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020C:3BBB  C6 47 79 07				mov	byte ptr [bx+79h],7
020C:3BBF  C6 47 67 00				mov	byte ptr [bx+67h],0
020C:3BC3  E8 2506				call	sub_57			; (60CC)
020C:3BC6  E8 1D83				call	sub_43			; (594C)
020C:3BC9  E9 FC35				jmp	loc_346			; (3801)
							                        ;* No entry point to code
020C:3BCC  8A 36 1F6D				mov	dh,byte ptr ds:[1F6Dh]	; (ss:1F6D=0)
020C:3BD0  FE C6				inc	dh
020C:3BD2  A0 178F				mov	al,byte ptr ds:[178Fh]	; (ss:178F=0E3h)
020C:3BD5  80 FE 07				cmp	dh,7
020C:3BD8  76 08				jbe	loc_396			; Jump if below or =
020C:3BDA  B6 01				mov	dh,1
020C:3BDC  3C 09				cmp	al,9
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 124

020C:3BDE  75 02				jne	loc_396			; Jump if not equal
020C:3BE0  B0 04				mov	al,4
020C:3BE2			loc_396:
020C:3BE2  88 36 1F6D				mov	byte ptr ds:[1F6Dh],dh	; (ss:1F6D=0)
020C:3BE6  80 FE 01				cmp	dh,1
020C:3BE9  76 06				jbe	loc_397			; Jump if below or =
020C:3BEB  3C 04				cmp	al,4
020C:3BED  75 02				jne	loc_397			; Jump if not equal
020C:3BEF  B0 12				mov	al,12h
020C:3BF1			loc_397:
020C:3BF1  9A 1491:08F0		;*		call	far ptr sub_167		;*(1491:08F0)
020C:3BF1  9A					db	9Ah
020C:3BF2  08F0 1491				dw	8F0h, 1491h
020C:3BF6  E8 28E7				call	sub_68			; (64E0)
020C:3BF9  9A 1491:31D8		;*		call	far ptr sub_186		;*(1491:31D8)
020C:3BF9  9A					db	9Ah
020C:3BFA  31D8 1491				dw	31D8h, 1491h
020C:3BFE  E8 23F3				call	sub_55			; (5FF4)
020C:3C01  E8 1D48				call	sub_43			; (594C)
020C:3C04  E9			data_568	db	0E9h
020C:3C05  FA			data_569	db	0FAh
020C:3C06  FB			data_570	db	0FBh
020C:3C07  E8			data_571	db	0E8h
020C:3C08  B6			data_572	db	0B6h
020C:3C09  20			data_573	db	20h
020C:3C0A  C6			data_574	db	0C6h
020C:3C0B  47					inc	di
020C:3C0C  52					push	dx
020C:3C0D  07					pop	es
020C:3C0E  C6 47 3C 0F				mov	byte ptr [bx+3Ch],0Fh
020C:3C12  C6 47 4F 0F				mov	byte ptr [bx+4Fh],0Fh
020C:3C16  C6 06 066E 20			mov	byte ptr ds:[66Eh],20h	; (ss:066E=31h) ' '
020C:3C1B  B4 1E				mov	ah,1Eh
020C:3C1D  BA 1238				mov	dx,1238h
020C:3C20  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:3C20  9A					db	9Ah
020C:3C21  2F70 1491				dw	2F70h, 1491h
020C:3C25  3C 00				cmp	al,0
020C:3C27  74 0B				je	loc_398			; Jump if equal
020C:3C29  8A D0				mov	dl,al
020C:3C2B  80 EA 41				sub	dl,41h			; 'A'
020C:3C2E  8A DA				mov	bl,dl
020C:3C30  B4 0E				mov	ah,0Eh
020C:3C32  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020C:3C34			loc_398:
020C:3C34  B4 19				mov	ah,19h
020C:3C36  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020C:3C38  A2 1D78				mov	byte ptr ds:[1D78h],al	; (ss:1D78=6)
020C:3C3B  04 61				add	al,61h			; 'a'
020C:3C3D  A2 066E				mov	byte ptr ds:[66Eh],al	; (ss:066E=31h)
020C:3C40  E8 1EBD				call	sub_49			; (5B00)
020C:3C43  8A 16 1D77				mov	dl,byte ptr ds:[1D77h]	; (ss:1D77=0C6h)
020C:3C47  B4 0E				mov	ah,0Eh
020C:3C49  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 125

020C:3C4B  E8 209A				call	sub_52			; (5CE8)
020C:3C4E  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020C:3C52  C6 47 4F 07				mov	byte ptr [bx+4Fh],7
020C:3C56  8A 26 1F6A				mov	ah,byte ptr ds:[1F6Ah]	; (ss:1F6A=0)
020C:3C5A  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:3C5A  9A					db	9Ah
020C:3C5B  2F70 1491				dw	2F70h, 1491h
020C:3C5F  E8 246A				call	sub_57			; (60CC)
020C:3C62  E8 1CE7				call	sub_43			; (594C)
020C:3C65  E9 FB99				jmp	loc_346			; (3801)
							                        ;* No entry point to code
020C:3C68  E8 2055				call	sub_51			; (5CC0)
020C:3C6B  C6 47 52 00				mov	byte ptr [bx+52h],0
020C:3C6F  C6 47 3A 0F				mov	byte ptr [bx+3Ah],0Fh
020C:3C73  C6 47 7A 0F				mov	byte ptr [bx+7Ah],0Fh
020C:3C77  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020C:3C7B  80 0E 176A 02			or	byte ptr ds:[176Ah],2	; (ss:176A=0FEh)
020C:3C80  E8 2371				call	sub_55			; (5FF4)
020C:3C83  E8 1B9A				call	sub_42			; (5820)
020C:3C86  B4 02				mov	ah,2
020C:3C88  32 FF				xor	bh,bh			; Zero register
020C:3C8A  BA 1418				mov	dx,1418h
020C:3C8D  9A 1491:3220		;*		call	far ptr sub_187		;*(1491:3220)
020C:3C8D  9A					db	9Ah
020C:3C8E  3220 1491				dw	3220h, 1491h
020C:3C92  E8 2443				call	sub_58			; (60D8)
020C:3C95  B1 04				mov	cl,4
020C:3C97  B3 02				mov	bl,2
020C:3C99  BE 06EE				mov	si,6EEh
020C:3C9C  9A 1491:06C0		;*		call	far ptr sub_162		;*(1491:06C0)
020C:3C9C  9A					db	9Ah
020C:3C9D  06C0 1491				dw	6C0h, 1491h
020C:3CA1  3C 1B				cmp	al,1Bh
020C:3CA3  74 73				je	loc_402			; Jump if equal
020C:3CA5  80 F9 00				cmp	cl,0
020C:3CA8  75 69				jne	loc_401			; Jump if not equal
020C:3CAA  B9 0080				mov	cx,80h
020C:3CAD  BF 06EE				mov	di,6EEh
020C:3CB0  E8 00AD				call	sub_33			; (3D60)
020C:3CB3  73 5E				jnc	loc_401			; Jump if carry=0
020C:3CB5  E8 3D2A				call	sub_87			; (79E2)
020C:3CB8  26: 89 16 0004			mov	word ptr es:[4],dx	; (013A:0004=0)
020C:3CBD  26: 83 3E 0000 FF			cmp	word ptr es:[0],0FFFFh	; (013A:0000=0)
020C:3CC3  75 38				jne	loc_400			; Jump if not equal
020C:3CC5  33 C0				xor	ax,ax			; Zero register
020C:3CC7  26: A3 0000				mov	word ptr es:[0],ax	; (013A:0000=0)
020C:3CCB  26: A3 0002				mov	word ptr es:[2],ax	; (013A:0002=0)
020C:3CCF  26: A3 0000				mov	word ptr es:[0],ax	; (013A:0000=0)
020C:3CD3  26: A3 0006				mov	word ptr es:[6],ax	; (013A:0006=0)
020C:3CD7  26: A3 0008				mov	word ptr es:[8],ax	; (013A:0008=0)
020C:3CDB  26: A2 000E				mov	byte ptr es:[0Eh],al	; (013A:000E=0)
020C:3CDF  26: 83 3E 000A FF			cmp	word ptr es:[0Ah],0FFFFh	; (013A:000A=0)
020C:3CE5  75 0B				jne	loc_399			; Jump if not equal
020C:3CE7  26: A3 000A				mov	word ptr es:[0Ah],ax	; (013A:000A=0)
020C:3CEB  26: C7 06 000C 0041			mov	word ptr es:[0Ch],41h	; (013A:000C=0)
020C:3CF2			loc_399:
020C:3CF2  80 3E 1CD9 00			cmp	byte ptr ds:[1CD9h],0	; (ss:1CD9=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 126

020C:3CF7  77 04				ja	loc_400			; Jump if above
020C:3CF9  FE 06 1CD9				inc	byte ptr ds:[1CD9h]	; (ss:1CD9=0)
020C:3CFD			loc_400:
020C:3CFD  C6			data_578	db	0C6h
020C:3CFE  06			data_579	db	6
020C:3CFF  6A					db	6Ah
020C:3D00  17			data_580	db	17h
020C:3D01  E801			data_581	dw	0E801h
020C:3D03  3CE9			data_582	dw	3CE9h
020C:3D05  E8			data_583	db	0E8h
020C:3D06  98			data_584	db	98h
020C:3D07  31			data_585	db	31h
020C:3D08  268A			data_586	dw	268Ah
020C:3D0A  6A					db	6Ah
020C:3D0B  1F			data_587	db	1Fh
020C:3D0C  9A			data_588	db	9Ah
020C:3D0D  70			data_589	db	70h
020C:3D0E  2F					das				; Decimal adjust
020C:3D0F  1491			data_590	dw	1491h
020C:3D11  EB 0D				jmp	short loc_403		; (3D20)
020C:3D13			loc_401:
020C:3D13  9A 1491:3108		;*		call	far ptr sub_183		;*(1491:3108)
020C:3D13  9A					db	9Ah
020C:3D14  3108 1491				dw	3108h, 1491h
020C:3D18			loc_402:
020C:3D18  2680			data_594	dw	2680h
020C:3D1A  176A			data_595	dw	176Ah
020C:3D1C  FD			data_596	db	0FDh
020C:3D1D  D4E8			data_597	dw	0D4E8h
020C:3D1F  E822			data_598	dw	0E822h
020C:3D21  1FC5			data_599	dw	1FC5h
020C:3D23  47C6			data_600	dw	47C6h
020C:3D25  52			data_601	db	52h
020C:3D26  C60F			data_602	dw	0C60Fh
020C:3D28  7A47			data_603	dw	7A47h
020C:3D2A  C607			data_604	dw	0C607h
020C:3D2C  6747			data_605	dw	6747h
020C:3D2E  E800			data_606	dw	0E800h
020C:3D30  239A			data_607	dw	239Ah
020C:3D32  17E8			data_608	dw	17E8h
020C:3D34  E91C			data_609	dw	0E91Ch
020C:3D36  FAC9			data_610	dw	0FAC9h
020C:3D38  B3E8			data_611	dw	0B3E8h
020C:3D3A  B03C			data_612	dw	0B03Ch
020C:3D3C  8041			data_613	dw	8041h
020C:3D3E  FF3E			data_614	dw	0FF3Eh
020C:3D40  0122			data_615	dw	122h
020C:3D42  0274			data_616	dw	274h
020C:3D44  4CB0			data_617	dw	4CB0h
020C:3D46			loc_404:
020C:3D46  B3E8			data_618	dw	0B3E8h
020C:3D48  9A03			data_619	dw	9A03h
020C:3D4A  319C			data_620	dw	319Ch
020C:3D4C  1491			data_621	dw	1491h
020C:3D4E  FBE8			data_622	dw	0FBE8h
020C:3D50  E91B			data_623	dw	0E91Bh
020C:3D52  FAAD			data_624	dw	0FAADh
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 127

020C:3D54  00 00		data_625	db	0, 0
020C:3D56  00			data_626	db	0
020C:3D57  0000			data_627	dw	0
020C:3D59  00					db	0
020C:3D5A  00					db	0
020C:3D5B  0000			data_628	dw	0
020C:3D5D  00 00				add	[bx+si],al
020C:3D5F  00 53 32				add	[bp+di+32h],dl
020C:3D62  DB					db	0DBh
020C:3D63  33 D2				xor	dx,dx			; Zero register
020C:3D65			loc_405:
020C:3D65  80			data_629	db	80h
020C:3D66  04FB			data_630	dw	4FBh
020C:3D68  73 32				jnc	loc_408			; Jump if carry=0
020C:3D6A  058A			data_631	dw	58Ah
020C:3D6C  403C			data_632	dw	403Ch
020C:3D6E  0C72			data_633	dw	0C72h
020C:3D70  24 DF				and	al,0DFh
020C:3D72  2C 41				sub	al,41h			; 'A'
020C:3D74  3C 06				cmp	al,6
020C:3D76  73 1F				jae	loc_407			; Jump if above or =
020C:3D78  04			data_634	db	4
020C:3D79  0A EB				or	ch,bl
020C:3D7B  06					push	es
020C:3D7C			loc_406:
020C:3D7C  2C 30				sub	al,30h			; '0'
020C:3D7E  3C 09				cmp	al,9
020C:3D80  77 15				ja	loc_407			; Jump if above
020C:3D82  E432			data_637	dw	0E432h
020C:3D84  FE			data_638	db	0FEh
020C:3D85  51C3			data_639	dw	51C3h
020C:3D87  04B1			data_640	dw	4B1h
020C:3D89  E2D3			data_641	dw	0E2D3h
020C:3D8B  59			data_642	db	59h
020C:3D8C  03			data_643	db	3
020C:3D8D  9AD0			data_644	dw	9AD0h
020C:3D8F  40					inc	ax
020C:3D90  06			data_645	db	6
020C:3D91  91					xchg	cx,ax
020C:3D92  14 73				adc	al,73h			; 's'
020C:3D94  D0 EB				shr	bl,1			; Shift w/zeros fill
020C:3D96  08 80 01FB				or	byte ptr ds:[1FBh][bx+si],al	; (ss:01FB=5Bh)
020C:3D9A  72 03				jc	loc_409			; Jump if carry Set
020C:3D9C			loc_408:
020C:3D9C  F9					stc				; Set carry flag
020C:3D9D  EB 01				jmp	short loc_410		; (3DA0)
020C:3D9F			loc_409:
020C:3D9F  F8					clc				; Clear carry flag
020C:3DA0			loc_410:
020C:3DA0  5B					pop	bx
020C:3DA1  C3					retn
020C:3DA2  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 128

020C:3DA4			sub_34		proc	near
020C:3DA4  56					push	si
020C:3DA5			loc_411:
020C:3DA5  80 3C 20				cmp	byte ptr [si],20h	; ' '
020C:3DA8  74 0A				je	loc_412			; Jump if equal
020C:3DAA  80 3C 09				cmp	byte ptr [si],9
020C:3DAD  74 05				je	loc_412			; Jump if equal
020C:3DAF  80 3C 3D				cmp	byte ptr [si],3Dh	; '='
020C:3DB2  75 09				jne	loc_413			; Jump if not equal
020C:3DB4			loc_412:
020C:3DB4  46					inc	si
020C:3DB5  3B 36 3FDC				cmp	si,word ptr ds:[3FDCh]	; (0000:3FDC=0)
020C:3DB9  76 EA				jbe	loc_411			; Jump if below or =
020C:3DBB  EB 5D				jmp	short loc_420		; (3E1A)
020C:3DBD			loc_413:
020C:3DBD  33 D2				xor	dx,dx			; Zero register
020C:3DBF  B5 04				mov	ch,4
020C:3DC1  8A CD				mov	cl,ch
020C:3DC3			loc_414:
020C:3DC3  8A 04				mov	al,[si]
020C:3DC5  3C 40				cmp	al,40h			; '@'
020C:3DC7  72 0C				jb	loc_415			; Jump if below
020C:3DC9  24 DF				and	al,0DFh
020C:3DCB  2C 41				sub	al,41h			; 'A'
020C:3DCD  3C 06				cmp	al,6
020C:3DCF  73 24				jae	loc_419			; Jump if above or =
020C:3DD1  04 0A				add	al,0Ah
020C:3DD3  EB 06				jmp	short loc_416		; (3DDB)
020C:3DD5			loc_415:
020C:3DD5  2C 30				sub	al,30h			; '0'
020C:3DD7  3C 09				cmp	al,9
020C:3DD9  77 1A				ja	loc_419			; Jump if above
020C:3DDB			loc_416:
020C:3DDB  32 E4				xor	ah,ah			; Zero register
020C:3DDD  03 D0				add	dx,ax
020C:3DDF  D3 C2				rol	dx,cl			; Rotate
020C:3DE1  FE CD				dec	ch
020C:3DE3  80 FD 00				cmp	ch,0
020C:3DE6  74 07				je	loc_417			; Jump if equal
020C:3DE8  46					inc	si
020C:3DE9  3B 36 3FDC				cmp	si,word ptr ds:[3FDCh]	; (0000:3FDC=0)
020C:3DED  76 D4				jbe	loc_414			; Jump if below or =
020C:3DEF			loc_417:
020C:3DEF  46					inc	si
020C:3DF0			loc_418:
020C:3DF0  D3 CA				ror	dx,cl			; Rotate
020C:3DF2  58					pop	ax
020C:3DF3  F8					clc				; Clear carry flag
020C:3DF4  C3					retn
020C:3DF5			loc_419:
020C:3DF5  80 FD 04				cmp	ch,4
020C:3DF8  74 20				je	loc_420			; Jump if equal
020C:3DFA  8A 04				mov	al,[si]
020C:3DFC  3C 20				cmp	al,20h			; ' '
020C:3DFE  74 F0				je	loc_418			; Jump if equal
020C:3E00  3C 09				cmp	al,9
020C:3E02  74 EC				je	loc_418			; Jump if equal
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 129

020C:3E04  3C 00				cmp	al,0
020C:3E06  74 E8				je	loc_418			; Jump if equal
020C:3E08  3C 2C				cmp	al,2Ch			; ','
020C:3E0A  74 E4				je	loc_418			; Jump if equal
020C:3E0C  3C 3A				cmp	al,3Ah			; ':'
020C:3E0E  74 E0				je	loc_418			; Jump if equal
020C:3E10  3C 3B				cmp	al,3Bh			; ';'
020C:3E12  74 DC				je	loc_418			; Jump if equal
020C:3E14  24 DF				and	al,0DFh
020C:3E16  3C 48				cmp	al,48h			; 'H'
020C:3E18  74 D6				je	loc_418			; Jump if equal
020C:3E1A			loc_420:
020C:3E1A  F9					stc				; Set carry flag
020C:3E1B  5E					pop	si
020C:3E1C  C3					retn
				sub_34		endp

020C:3E1D  00 00				add	[bx+si],al
020C:3E1F  00 BA 8005				add	[bp+si-7FFBh],bh
020C:3E23  BB 0590				mov	bx,590h
020C:3E26  E8 E327		;*		call	sub_27			;*(2150)
020C:3E26  E8 27 E3				db	0E8h, 27h,0E3h
020C:3E29  C3					retn
020C:3E2A  00					db	0
020C:3E2B  00					db	0
020C:3E2C  00					db	0
020C:3E2D  00 00				add	[bx+si],al
020C:3E2F  00 F7				add	bh,dh
020C:3E31  06					push	es
020C:3E32  0F			;*		pop	cs			; Dangerous-8088 only
020C:3E32  0F					db	0Fh
020C:3E33  3D 0002				cmp	ax,2
020C:3E36  75 31				jne	loc_423			; Jump if not equal
020C:3E38			loc_421:
020C:3E38  8A 04				mov	al,[si]
020C:3E3A  8A E0				mov	ah,al
020C:3E3C  3C 00				cmp	al,0
020C:3E3E  74 29				je	loc_423			; Jump if equal
020C:3E40  24 5F				and	al,5Fh			; '_'
020C:3E42  3C 41				cmp	al,41h			; 'A'
020C:3E44  72 23				jb	loc_423			; Jump if below
020C:3E46  3C 4D				cmp	al,4Dh			; 'M'
020C:3E48  77 1F				ja	loc_423			; Jump if above
020C:3E4A  2C 41				sub	al,41h			; 'A'
020C:3E4C  BB 8000				mov	bx,8000h
020C:3E4F  8A C8				mov	cl,al
020C:3E51  D3 CB				ror	bx,cl			; Rotate
020C:3E53  8B 16 3D1D				mov	dx,data_597		; (020C:3D1D=0D4E8h)
020C:3E57  0B D3				or	dx,bx
020C:3E59  F6 C4 20				test	ah,20h			; ' '
020C:3E5C  74 04				jz	loc_422			; Jump if zero
020C:3E5E  F7 D3				not	bx
020C:3E60  23 D3				and	dx,bx
020C:3E62			loc_422:
020C:3E62  89 16 3D1D				mov	data_597,dx		; (020C:3D1D=0D4E8h)
020C:3E66  46					inc	si
020C:3E67  EB CF				jmp	short loc_421		; (3E38)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 130

020C:3E69			loc_423:
020C:3E69  C3					retn
							                        ;* No entry point to code
020C:3E6A  87 DB				xchg	bx,bx
020C:3E6C  F7 06 3D0F 0002			test	data_590,2		; (020C:3D0F=1491h)
020C:3E72  74 02				jz	loc_425			; Jump if zero
020C:3E74			loc_424:
020C:3E74  EB 7B				jmp	short loc_432		; (3EF1)
020C:3E76			loc_425:
020C:3E76  8A 04				mov	al,[si]
020C:3E78  8A E0				mov	ah,al
020C:3E7A  3C 00				cmp	al,0
020C:3E7C  74 F6				je	loc_424			; Jump if equal
020C:3E7E  24 5F				and	al,5Fh			; '_'
020C:3E80  3C 41				cmp	al,41h			; 'A'
020C:3E82  72 F0				jb	loc_424			; Jump if below
020C:3E84  3C 5A				cmp	al,5Ah			; 'Z'
020C:3E86  77 EC				ja	loc_424			; Jump if above
020C:3E88  3C 50				cmp	al,50h			; 'P'
020C:3E8A  77 1E				ja	loc_427			; Jump if above
020C:3E8C  2C 41				sub	al,41h			; 'A'
020C:3E8E  BB 8000				mov	bx,8000h
020C:3E91  8A C8				mov	cl,al
020C:3E93  D3 CB				ror	bx,cl			; Rotate
020C:3E95  8B 16 3D18				mov	dx,data_594		; (020C:3D18=2680h)
020C:3E99  0B D3				or	dx,bx
020C:3E9B  F6 C4 20				test	ah,20h			; ' '
020C:3E9E  74 04				jz	loc_426			; Jump if zero
020C:3EA0  F7 D3				not	bx
020C:3EA2  23 D3				and	dx,bx
020C:3EA4			loc_426:
020C:3EA4  89 16 3D18				mov	data_594,dx		; (020C:3D18=2680h)
020C:3EA8  44EB			data_647	dw	44EBh
020C:3EAA			loc_427:
020C:3EAA  3C 54				cmp	al,54h			; 'T'
020C:3EAC  77 24				ja	loc_429			; Jump if above
020C:3EAE  80 3E 22FF 00			cmp	data_448,0		; (020C:22FF=0)
020C:3EB3  74 39				je	loc_431			; Jump if equal
020C:3EB5  2C 51				sub	al,51h			; 'Q'
020C:3EB7  B3 04				mov	bl,4
020C:3EB9  8A C8				mov	cl,al
020C:3EBB  D2 CB				ror	bl,cl			; Rotate
020C:3EBD  8A 16 3D78				mov	dl,data_634		; (020C:3D78=4)
020C:3EC1  0A D3				or	dl,bl
020C:3EC3  F6 C4 20				test	ah,20h			; ' '
020C:3EC6  74 04				jz	loc_428			; Jump if zero
020C:3EC8  F6 D3				not	bl
020C:3ECA  22 D3				and	dl,bl
020C:3ECC			loc_428:
020C:3ECC  88 16 3D78				mov	data_634,dl		; (020C:3D78=4)
020C:3ED0  77 1C				ja	loc_431			; Jump if above
020C:3ED2			loc_429:
020C:3ED2  2C 55				sub	al,55h			; 'U'
020C:3ED4  BB 0080				mov	bx,80h
020C:3ED7  8A C8				mov	cl,al
020C:3ED9  D3 CB				ror	bx,cl			; Rotate
020C:3EDB  8B 16 3D1A				mov	dx,data_595		; (020C:3D1A=176Ah)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 131

020C:3EDF  0B D3				or	dx,bx
020C:3EE1  F6 C4 20				test	ah,20h			; ' '
020C:3EE4  74 04				jz	loc_430			; Jump if zero
020C:3EE6  F7 D3				not	bx
020C:3EE8  23 D3				and	dx,bx
020C:3EEA			loc_430:
020C:3EEA  89 16 3D1A				mov	data_595,dx		; (020C:3D1A=176Ah)
020C:3EEE			loc_431:
020C:3EEE  46					inc	si
020C:3EEF  EB 85				jmp	short loc_425		; (3E76)
020C:3EF1			loc_432:
020C:3EF1  A0 178F				mov	al,data_194		; (020C:178F=0)
020C:3EF4  F6 06 3D78 07			test	data_634,7		; (020C:3D78=4)
020C:3EF9  74 0C				jz	loc_433			; Jump if zero
020C:3EFB  80 3E 178F 0A			cmp	data_194,0Ah		; (020C:178F=0)
020C:3F00  73 05				jae	loc_433			; Jump if above or =
020C:3F02  B0 0A				mov	al,0Ah
020C:3F04  E8 25D9				call	sub_68			; (64E0)
020C:3F07			loc_433:
020C:3F07  E8 226E				call	sub_60			; (6178)
020C:3F0A  F7 06 3D18 0002			test	data_594,2		; (020C:3D18=2680h)
020C:3F10  74 07				jz	loc_434			; Jump if zero
020C:3F12  B0 01				mov	al,1
020C:3F14  9A 1491:6C90		;*		call	far ptr sub_229		;*(1491:6C90)
020C:3F14  9A					db	9Ah
020C:3F15  6C90 1491				dw	6C90h, 1491h
020C:3F19			loc_434:
020C:3F19  C3					retn
							                        ;* No entry point to code
020C:3F1A  87 DB				xchg	bx,bx
020C:3F1C  80 3E 444F 01			cmp	byte ptr data_679,1	; (020C:444F=83h)
020C:3F21  75 07				jne	loc_435			; Jump if not equal
020C:3F23  C6 06 3F0E 12			mov	byte ptr ds:[3F0Eh],12h	; (020C:3F0E=2)
020C:3F28  EB 28				jmp	short loc_437		; (3F52)
020C:3F2A			loc_435:
020C:3F2A  89 36 3FDC				mov	data_668,si		; (020C:3FDC=880Eh)
020C:3F2E  8B 1E 3EA8				mov	bx,data_647		; (020C:3EA8=44EBh)
020C:3F32  01 1E 3FDC				add	data_668,bx		; (020C:3FDC=880Eh)
020C:3F36  E8 FE6B				call	sub_34			; (3DA4)
020C:3F39  72 12				jc	loc_436			; Jump if carry Set
020C:3F3B  E8 3AD7				call	sub_95			; (7A15)
020C:3F3E  3B D0				cmp	dx,ax
020C:3F40  72 0B				jb	loc_436			; Jump if below
020C:3F42  89 16 1CCE				mov	data_248,dx		; (020C:1CCE=0)
020C:3F46  2E: 89 16 3F78			mov	cs:data_655,dx		; (020C:3F78=0C4FEh)
020C:3F4B  EB 05				jmp	short loc_437		; (3F52)
020C:3F4D			loc_436:
020C:3F4D  C6 06 3F0E 31			mov	byte ptr ds:[3F0Eh],31h	; (020C:3F0E=2) '1'
020C:3F52			loc_437:
020C:3F52  C3					retn
							                        ;* No entry point to code
020C:3F53  90					nop
020C:3F54  B4 01				mov	ah,1
020C:3F56  3C 46				cmp	al,46h			; 'F'
020C:3F58  74 74				je	loc_439			; Jump if equal
020C:3F5A  FE C4				inc	ah
020C:3F5C  3C 43				cmp	al,43h			; 'C'
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 132

020C:3F5E  74 6E				je	loc_439			; Jump if equal
020C:3F60  FE C4				inc	ah
020C:3F62  3C 45				cmp	al,45h			; 'E'
020C:3F64  74 68				je	loc_439			; Jump if equal
020C:3F66  FE C4				inc	ah
020C:3F68  3C 5A				cmp	al,5Ah			; 'Z'
020C:3F6A  74 71				je	loc_441			; Jump if equal
020C:3F6C  FE C4				inc	ah
020C:3F6E  3C 44				cmp	al,44h			; 'D'
020C:3F70  74			data_650	db	74h
020C:3F71  6B			data_651	db	6Bh
020C:3F72  C4FE			data_652	dw	0C4FEh
020C:3F74  4F3C			data_653	dw	4F3Ch
020C:3F76  6574			data_654	dw	6574h
020C:3F78  C4FE			data_655	dw	0C4FEh
020C:3F7A  533C			data_656	dw	533Ch
020C:3F7C  5F74			data_657	dw	5F74h
020C:3F7E  C4FE			data_658	dw	0C4FEh
020C:3F80  573C			data_659	dw	573Ch
020C:3F82  5974			data_660	dw	5974h
020C:3F84  C4FE			data_661	dw	0C4FEh
020C:3F86  4E3C			data_662	dw	4E3Ch
020C:3F88  5374			data_663	dw	5374h
020C:3F8A  C4FE			data_664	dw	0C4FEh
020C:3F8C  503C			data_665	dw	503Ch
020C:3F8E  4075			data_666	dw	4075h
020C:3F90  2E			data_667	db	2Eh
020C:3F91  FF 36 3F74				push	data_653		; (020C:3F74=4F3Ch)
020C:3F95  1E					push	ds
020C:3F96  E8 3A31				call	sub_83			; (79CA)
020C:3F99  C6 06 7048 00			mov	byte ptr data_798,0	; (020C:7048=5Eh)
020C:3F9E  C6 06 706E 00			mov	byte ptr data_799,0	; (020C:706E=0CBh)
020C:3FA3  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:3FA8  9C					pushf				; Push flags
020C:3FA9  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:3FAE  5A					pop	dx
020C:3FAF  8E DA				mov	ds,dx
020C:3FB1  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:3FB6  5A					pop	dx
020C:3FB7  75 0A				jnz	loc_438			; Jump if not zero
020C:3FB9  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:3FBE  74 03				je	loc_438			; Jump if equal
020C:3FC0  E8 3EED				call	sub_97			; (7EB0)
020C:3FC3			loc_438:
020C:3FC3  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:3FC8  9D					popf				; Pop flags
020C:3FC9  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:3FCE			loc_439:
020C:3FCE  EB 0D				jmp	short loc_441		; (3FDD)
020C:3FD0			loc_440:
020C:3FD0  FE C4				inc	ah
020C:3FD2  3C 4C				cmp	al,4Ch			; 'L'
020C:3FD4  74 07				je	loc_441			; Jump if equal
020C:3FD6  C6 06 3F0E 09			mov	byte ptr ds:[3F0Eh],9	; (020C:3F0E=2)
020C:3FDB  EB 0E				jmp	short loc_442		; (3FEB)
020C:3FDD			loc_441:
020C:3FDD  88 26 1F6D				mov	data_355,ah		; (020C:1F6D=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 133

020C:3FE1  9A 1491:08F0		;*		call	far ptr sub_167		;*(1491:08F0)
020C:3FE1  9A					db	9Ah
020C:3FE2  08F0 1491				dw	8F0h, 1491h
020C:3FE6  9A 1491:31D8		;*		call	far ptr sub_186		;*(1491:31D8)
020C:3FE6  9A					db	9Ah
020C:3FE7  31D8 1491				dw	31D8h, 1491h
020C:3FEB			loc_442:
020C:3FEB  C3					retn
							                        ;* No entry point to code
020C:3FEC  3C 41				cmp	al,41h			; 'A'
020C:3FEE  72 2C				jb	loc_443			; Jump if below
020C:3FF0  3C 5A				cmp	al,5Ah			; 'Z'
020C:3FF2  77 28				ja	loc_443			; Jump if above
020C:3FF4  8A D0				mov	dl,al
020C:3FF6  80 EA 41				sub	dl,41h			; 'A'
020C:3FF9  8A DA				mov	bl,dl
020C:3FFB  B4 19				mov	ah,19h
020C:3FFD  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020C:3FFF  50					push	ax
020C:4000  B4 0E				mov	ah,0Eh
020C:4002  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020C:4004  B4 19				mov	ah,19h
020C:4006  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020C:4008  A2 1D78				mov	data_336,al		; (020C:1D78=0)
020C:400B  04 61				add	al,61h			; 'a'
020C:400D  A2 066E				mov	byte ptr ds:[66Eh],al	; (020C:066E=0Eh)
020C:4010  E8 1AED				call	sub_49			; (5B00)
020C:4013  58					pop	ax
020C:4014  8A D0				mov	dl,al
020C:4016  B4 0E				mov	ah,0Eh
020C:4018  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020C:401A  EB 05				jmp	short loc_444		; (4021)
020C:401C			loc_443:
020C:401C  C6 06 3F0E 09			mov	byte ptr ds:[3F0Eh],9	; (020C:3F0E=2)
020C:4021			loc_444:
020C:4021  C3					retn
							                        ;* No entry point to code
020C:4022  87 DB				xchg	bx,bx
020C:4024  80 3E 444F 01			cmp	byte ptr data_679,1	; (020C:444F=83h)
020C:4029  75 08				jne	loc_445			; Jump if not equal
020C:402B  C6 06 3F0E 12			mov	byte ptr ds:[3F0Eh],12h	; (020C:3F0E=2)
020C:4030  E9 00C8				jmp	loc_458			; (40FB)
020C:4033			loc_445:
020C:4033  89 36 3FDC				mov	word ptr ds:[3FDCh],si	; (020C:3FDC=880Eh)
020C:4037  8B 1E 3EA8				mov	bx,data_647		; (020C:3EA8=44EBh)
020C:403B  01 1E 3FDC				add	word ptr ds:[3FDCh],bx	; (020C:3FDC=880Eh)
020C:403F  33 DB				xor	bx,bx			; Zero register
020C:4041  81 3C 4E49				cmp	word ptr [si],4E49h
020C:4045  75 16				jne	loc_447			; Jump if not equal
020C:4047  83 C6 03				add	si,3
020C:404A  E8 FD57				call	sub_34			; (3DA4)
020C:404D  72 0B				jc	loc_446			; Jump if carry Set
020C:404F  88 16 46DF				mov	data_723,dl		; (020C:46DF=32h)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 134

020C:4053  C6 06 46DD 02			mov	byte ptr data_721,2	; (020C:46DD=33h)
020C:4058  EB 31				jmp	short loc_450		; (408B)
020C:405A			loc_446:
020C:405A  E9 0099				jmp	loc_457			; (40F6)
020C:405D			loc_447:
020C:405D  3C 55				cmp	al,55h			; 'U'
020C:405F  75 07				jne	loc_448			; Jump if not equal
020C:4061  C6 06 46DD 04			mov	byte ptr data_721,4	; (020C:46DD=33h)
020C:4066  EB 23				jmp	short loc_450		; (408B)
020C:4068			loc_448:
020C:4068  C7 06 46E0 0000			mov	data_724,0		; (020C:46E0=8AC9h)
020C:406E  E8 FD33				call	sub_34			; (3DA4)
020C:4071  72 E7				jc	loc_446			; Jump if carry Set
020C:4073  80 3C 3A				cmp	byte ptr [si],3Ah	; ':'
020C:4076  75 0A				jne	loc_449			; Jump if not equal
020C:4078  46					inc	si
020C:4079  89 16 46E0				mov	data_724,dx		; (020C:46E0=8AC9h)
020C:407D  E8 FD24				call	sub_34			; (3DA4)
020C:4080  72 74				jc	loc_457			; Jump if carry Set
020C:4082			loc_449:
020C:4082  89 16 46E2				mov	data_725,dx		; (020C:46E2=801Ch)
020C:4086  C6 06 46DD 08			mov	byte ptr data_721,8	; (020C:46DD=33h)
020C:408B			loc_450:
020C:408B  3B 36 3FDC				cmp	si,word ptr ds:[3FDCh]	; (020C:3FDC=880Eh)
020C:408F  73 6A				jae	loc_458			; Jump if above or =
020C:4091  80 3C 2C				cmp	byte ptr [si],2Ch	; ','
020C:4094  74 03				je	loc_451			; Jump if equal
020C:4096  46					inc	si
020C:4097  EB F2				jmp	short loc_450		; (408B)
020C:4099			loc_451:
020C:4099  46					inc	si
020C:409A  3B 36 3FDC				cmp	si,word ptr ds:[3FDCh]	; (020C:3FDC=880Eh)
020C:409E  73 5B				jae	loc_458			; Jump if above or =
020C:40A0  80 3C 41				cmp	byte ptr [si],41h	; 'A'
020C:40A3  74 20				je	loc_452			; Jump if equal
020C:40A5  80 3C 55				cmp	byte ptr [si],55h	; 'U'
020C:40A8  74 22				je	loc_453			; Jump if equal
020C:40AA  80 3C 53				cmp	byte ptr [si],53h	; 'S'
020C:40AD  74 24				je	loc_454			; Jump if equal
020C:40AF  80 3C 44				cmp	byte ptr [si],44h	; 'D'
020C:40B2  74 26				je	loc_455			; Jump if equal
020C:40B4  80 3C 52				cmp	byte ptr [si],52h	; 'R'
020C:40B7  74 2F				je	loc_456			; Jump if equal
020C:40B9  80 3C 56				cmp	byte ptr [si],56h	; 'V'
020C:40BC  75 DB				jne	loc_451			; Jump if not equal
020C:40BE  80 0E 46DD 40			or	byte ptr data_721,40h	; (020C:46DD=33h) '@'
020C:40C3  EB C6				jmp	short loc_450		; (408B)
020C:40C5			loc_452:
020C:40C5  80 0E 46DD 01			or	byte ptr data_721,1	; (020C:46DD=33h)
020C:40CA  EB BF				jmp	short loc_450		; (408B)
020C:40CC			loc_453:
020C:40CC  80 0E 46DD 10			or	byte ptr data_721,10h	; (020C:46DD=33h)
020C:40D1  EB B8				jmp	short loc_450		; (408B)
020C:40D3			loc_454:
020C:40D3  80 0E 46DD 20			or	byte ptr data_721,20h	; (020C:46DD=33h) ' '
020C:40D8  EB B1				jmp	short loc_450		; (408B)
020C:40DA			loc_455:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 135

020C:40DA  F6 06 46DD 08			test	byte ptr data_721,8	; (020C:46DD=33h)
020C:40DF  74 15				jz	loc_457			; Jump if zero
020C:40E1  80 0E 46DE 04			or	byte ptr data_722,4	; (020C:46DE=0DBh)
020C:40E6  EB A3				jmp	short loc_450		; (408B)
020C:40E8			loc_456:
020C:40E8  F6 06 46DD 08			test	byte ptr data_721,8	; (020C:46DD=33h)
020C:40ED  74 07				jz	loc_457			; Jump if zero
020C:40EF  80 0E 46DE 0C			or	byte ptr data_722,0Ch	; (020C:46DE=0DBh)
020C:40F4  EB 95				jmp	short loc_450		; (408B)
020C:40F6			loc_457:
020C:40F6  C6 06 3F0E 09			mov	byte ptr ds:[3F0Eh],9	; (020C:3F0E=2)
020C:40FB			loc_458:
020C:40FB  C3					retn

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:40FC			sub_36		proc	near
020C:40FC  50					push	ax
020C:40FD  BF 036A				mov	di,36Ah
020C:4100  B9 0009				mov	cx,9
020C:4103  B0 2E				mov	al,2Eh			; '.'
020C:4105  FC					cld				; Clear direction
020C:4106  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020C:4108  4F					dec	di
020C:4109  58					pop	ax
020C:410A  3C 4C				cmp	al,4Ch			; 'L'
020C:410C  74 0C				je	loc_459			; Jump if equal
020C:410E  3C 41				cmp	al,41h			; 'A'
020C:4110  74 0B				je	loc_460			; Jump if equal
020C:4112  C6 06 3F0E 09			mov	byte ptr ds:[3F0Eh],9	; (020C:3F0E=2)
020C:4117  E9 0117				jmp	loc_469			; (4231)
020C:411A			loc_459:
020C:411A  E9 009B				jmp	loc_465			; (41B8)
020C:411D			loc_460:
020C:411D  F6 06 1547 80			test	data_169,80h		; (020C:1547=0)
020C:4122  75 05				jnz	loc_461			; Jump if not zero
020C:4124  C6 06 1547 02			mov	data_169,2		; (020C:1547=0)
020C:4129			loc_461:
020C:4129  C6 06 22FF 00			mov	data_448,0		; (020C:22FF=0)
020C:412E  9A 1491:2B90		;*		call	far ptr sub_177		;*(1491:2B90)
020C:412E  9A					db	9Ah
020C:412F  2B90 1491				dw	2B90h, 1491h
020C:4133  8B 1E 1326				mov	bx,data_160		; (020C:1326=0)
020C:4137  C6 47 30 00				mov	byte ptr [bx+30h],0
020C:413B  C6 47 33 00				mov	byte ptr [bx+33h],0
020C:413F  C6 47 34 00				mov	byte ptr [bx+34h],0
020C:4143  C6 47 65 00				mov	byte ptr [bx+65h],0
020C:4147  C6 47 66 00				mov	byte ptr [bx+66h],0
020C:414B  C6 47 69 00				mov	byte ptr [bx+69h],0
020C:414F  C6 47 6A 00				mov	byte ptr [bx+6Ah],0
020C:4153  C6 47 6B 00				mov	byte ptr [bx+6Bh],0
020C:4157  C6 47 6C 00				mov	byte ptr [bx+6Ch],0
020C:415B  C6 47 70 00				mov	byte ptr [bx+70h],0
020C:415F  C6 47 71 00				mov	byte ptr [bx+71h],0
020C:4163  C6 47 7B 00				mov	byte ptr [bx+7Bh],0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 136

020C:4167  C6 47 4A 00				mov	byte ptr [bx+4Ah],0
020C:416B  C6 06 3D78 00			mov	data_634,0		; (020C:3D78=4)
020C:4170  B9 0010				mov	cx,10h
020C:4173  BF 13F5				mov	di,13F5h
020C:4176  A0 13F0				mov	al,data_166		; (020C:13F0=0)

020C:4179			locloop_462:
020C:4179  3A 05				cmp	al,[di]
020C:417B  74 05				je	loc_463			; Jump if equal
020C:417D  83 C7 11				add	di,11h
020C:4180  E2 F7				loop	locloop_462		; Loop if cx > 0

020C:4182			loc_463:
020C:4182  81 7D 01 4F4E			cmp	word ptr [di+1],4F4Eh
020C:4187  75 1D				jne	loc_464			; Jump if not equal
020C:4189  BF 13F5				mov	di,13F5h
020C:418C  81 C7 00FF				add	di,0FFh
020C:4190  8B 45 0D				mov	ax,[di+0Dh]
020C:4193  A3 13F1				mov	data_167,ax		; (020C:13F1=0)
020C:4196  8A 05				mov	al,[di]
020C:4198  A2 13F0				mov	data_166,al		; (020C:13F0=0)
020C:419B  8B 45 0B				mov	ax,[di+0Bh]
020C:419E  A3 13F3				mov	data_168,ax		; (020C:13F3=0)
020C:41A1  9A 1491:319C		;*		call	far ptr sub_185		;*(1491:319C)
020C:41A1  9A					db	9Ah
020C:41A2  319C 1491				dw	319Ch, 1491h
020C:41A6			loc_464:
020C:41A6  80 26 22FC FE			and	data_445,0FEh		; (020C:22FC=0)
020C:41AB  32 C0				xor	al,al			; Zero register
020C:41AD  9A 1491:0A94		;*		call	far ptr sub_170		;*(1491:0A94)
020C:41AD  9A					db	9Ah
020C:41AE  0A94 1491				dw	0A94h, 1491h
020C:41B2  C6 47 48 00				mov	byte ptr [bx+48h],0
020C:41B6  EB 65				jmp	short loc_468		; (421D)
020C:41B8			loc_465:
020C:41B8  F6 06 1547 80			test	data_169,80h		; (020C:1547=0)
020C:41BD  75 05				jnz	loc_466			; Jump if not zero
020C:41BF  C6 06 1547 00			mov	data_169,0		; (020C:1547=0)
020C:41C4			loc_466:
020C:41C4  C6 06 22FF 01			mov	data_448,1		; (020C:22FF=0)
020C:41C9  9A 1491:2B90		;*		call	far ptr sub_177		;*(1491:2B90)
020C:41C9  9A					db	9Ah
020C:41CA  2B90 1491				dw	2B90h, 1491h
020C:41CE  A0 1209				mov	al,data_140		; (020C:1209=0)
020C:41D1  8B 1E 1326				mov	bx,data_160		; (020C:1326=0)
020C:41D5  C6 47 30 0F				mov	byte ptr [bx+30h],0Fh
020C:41D9  C6 47 33 0F				mov	byte ptr [bx+33h],0Fh
020C:41DD  C6 47 34 0F				mov	byte ptr [bx+34h],0Fh
020C:41E1  88 47 65				mov	[bx+65h],al
020C:41E4  C6 47 66 07				mov	byte ptr [bx+66h],7
020C:41E8  C6 47 69 07				mov	byte ptr [bx+69h],7
020C:41EC  C6 47 6A 07				mov	byte ptr [bx+6Ah],7
020C:41F0  C6 47 6B 07				mov	byte ptr [bx+6Bh],7
020C:41F4  C6 47 6C 07				mov	byte ptr [bx+6Ch],7
020C:41F8  88 47 70				mov	[bx+70h],al
020C:41FB  C6 47 71 07				mov	byte ptr [bx+71h],7
020C:41FF  C6 47 7B 07				mov	byte ptr [bx+7Bh],7
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 137

020C:4203  F6 06 22FB 01			test	data_444,1		; (020C:22FB=0)
020C:4208  75 04				jnz	loc_467			; Jump if not zero
020C:420A  C6 47 4A 07				mov	byte ptr [bx+4Ah],7
020C:420E			loc_467:
020C:420E  E8			data_673	db	0E8h
020C:420F  67			data_674	db	67h
020C:4210  1F			data_675	db	1Fh
020C:4211  80 0E 22FC 01			or	data_445,1		; (020C:22FC=0)
020C:4216  B0 01				mov	al,1
020C:4218  9A 1491:0A94		;*		call	far ptr sub_170		;*(1491:0A94)
020C:4218  9A					db	9Ah
020C:4219  0A94 1491				dw	0A94h, 1491h
020C:421D			loc_468:
020C:421D  E8 1764				call	sub_44			; (5984)
020C:4220  BF 1EFD				mov	di,1EFDh
020C:4223  B9 003F				mov	cx,3Fh
020C:4226  B0 2E				mov	al,2Eh			; '.'
020C:4228  FC					cld				; Clear direction
020C:4229  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020C:422B  4F					dec	di
020C:422C  9A 1491:2B90		;*		call	far ptr sub_177		;*(1491:2B90)
020C:422C  9A					db	9Ah
020C:422D  2B90 1491				dw	2B90h, 1491h
020C:4231			loc_469:
020C:4231  C3					retn
				sub_36		endp

							                        ;* No entry point to code
020C:4232  87 DB				xchg	bx,bx
020C:4234  C6 06 3E27 01			mov	byte ptr ds:[3E27h],1	; (020C:3E27=27h)
020C:4239  C3					retn
020C:423A  87 DB				xchg	bx,bx
020C:423C  8B 1E 3EA8				mov	bx,data_647		; (020C:3EA8=44EBh)
020C:4240  80 3E 22FF 00			cmp	data_448,0		; (020C:22FF=0)
020C:4245  74 1B				je	loc_472			; Jump if equal
020C:4247  BF 0378				mov	di,378h
020C:424A  B9 0021				mov	cx,21h
020C:424D  B0 20				mov	al,20h			; ' '
020C:424F  FC					cld				; Clear direction
020C:4250  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:4252  B9 0020				mov	cx,20h
020C:4255  83 FB 20				cmp	bx,20h
020C:4258  77 02				ja	loc_471			; Jump if above
020C:425A  8B CB				mov	cx,bx
020C:425C			loc_471:
020C:425C  BF 0378				mov	di,378h
020C:425F  FC					cld				; Clear direction
020C:4260  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:4262			loc_472:
020C:4262  C3					retn
							                        ;* No entry point to code
020C:4263  90					nop
020C:4264  8B 1E 3EA8				mov	bx,data_647		; (020C:3EA8=44EBh)
020C:4268  83 FB 00				cmp	bx,0
020C:426B  75 07				jne	loc_473			; Jump if not equal
020C:426D  C6 06 3F0E 09			mov	byte ptr ds:[3F0Eh],9	; (020C:3F0E=2)
020C:4272  EB 78				jmp	short loc_480		; (42EC)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 138

020C:4274			loc_473:
020C:4274  80 3C 3F				cmp	byte ptr [si],3Fh	; '?'
020C:4277  74 1C				je	loc_474			; Jump if equal
020C:4279  8B FE				mov	di,si
020C:427B  B0 00				mov	al,0
020C:427D  9A 1491:2C28		;*		call	far ptr sub_179		;*(1491:2C28)
020C:427D  9A					db	9Ah
020C:427E  2C28 1491				dw	2C28h, 1491h
020C:4282  9A 1491:2CB0		;*		call	far ptr sub_180		;*(1491:2CB0)
020C:4282  9A					db	9Ah
020C:4283  2CB0 1491				dw	2CB0h, 1491h
020C:4287  A2 1F6B				mov	data_353,al		; (020C:1F6B=0)
020C:428A  3C 01				cmp	al,1
020C:428C  77 10				ja	loc_475			; Jump if above
020C:428E  C6 06 3F0E 09			mov	byte ptr ds:[3F0Eh],9	; (020C:3F0E=2)
020C:4293  EB 57				jmp	short loc_480		; (42EC)
020C:4295			loc_474:
020C:4295  80 3E 1F6B 01			cmp	data_353,1		; (020C:1F6B=0)
020C:429A  77 24				ja	loc_476			; Jump if above
020C:429C  EB 5A				jmp	short loc_481		; (42F8)
020C:429E			loc_475:
020C:429E  BF 1E9A				mov	di,1E9Ah
020C:42A1  B9 0060				mov	cx,60h
020C:42A4  B0 00				mov	al,0
020C:42A6  FC					cld				; Clear direction
020C:42A7  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:42A9  BF 0649				mov	di,649h
020C:42AC  B9 000C				mov	cx,0Ch
020C:42AF  B0 20				mov	al,20h			; ' '
020C:42B1  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:42B3  BF 1E9A				mov	di,1E9Ah
020C:42B6  8B CB				mov	cx,bx
020C:42B8  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:42BA  4F					dec	di
020C:42BB  9A 1491:BB80		;*		call	far ptr sub_269		;*(1491:BB80)
020C:42BB  9A					db	9Ah
020C:42BC  BB80 1491				dw	0BB80h, 1491h
020C:42C0			loc_476:
020C:42C0  80 3E 1CCA 03			cmp	data_245,3		; (020C:1CCA=0)
020C:42C5  75 05				jne	loc_477			; Jump if not equal
020C:42C7  C6 06 1CCA 04			mov	data_245,4		; (020C:1CCA=0)
020C:42CC			loc_477:
020C:42CC  E8 5615				call	sub_113			; (98E4)
020C:42CF  73 05				jnc	loc_478			; Jump if carry=0
020C:42D1  A2 3F0E				mov	byte ptr ds:[3F0Eh],al	; (020C:3F0E=2)
020C:42D4  EB 16				jmp	short loc_480		; (42EC)
020C:42D6			loc_478:
020C:42D6  C6 06 444F 01			mov	byte ptr data_679,1	; (020C:444F=83h)
020C:42DB  80 3E 178C 01			cmp	data_192,1		; (020C:178C=0)
020C:42E0  74 05				je	loc_479			; Jump if equal
020C:42E2  B0 0A				mov	al,0Ah
020C:42E4  E8 21F9				call	sub_68			; (64E0)
020C:42E7			loc_479:
020C:42E7  9A 1491:0B54		;*		call	far ptr sub_171		;*(1491:0B54)
020C:42E7  9A					db	9Ah
020C:42E8  0B54 1491				dw	0B54h, 1491h
020C:42EC			loc_480:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 139

020C:42EC  E8 36FF				call	sub_90			; (79EE)
020C:42EF  51					push	cx
020C:42F0  B4 2A				mov	ah,2Ah			; '*'
020C:42F2  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:42F2  9A					db	9Ah
020C:42F3  2F70 1491				dw	2F70h, 1491h
020C:42F7  59					pop	cx
020C:42F8			loc_481:
020C:42F8  C3					retn
							                        ;* No entry point to code
020C:42F9  87 DB				xchg	bx,bx
020C:42FB  90					nop
020C:42FC  89 36 3FDC				mov	word ptr ds:[3FDCh],si	; (020C:3FDC=880Eh)
020C:4300  8B			data_677	db	8Bh
020C:4301  1E					push	ds
020C:4302  A8 3E				test	al,3Eh			; '>'
020C:4304  01 1E 3FDC				add	word ptr ds:[3FDCh],bx	; (020C:3FDC=880Eh)
020C:4308  E8 FA99				call	sub_34			; (3DA4)
020C:430B  72 2B				jc	loc_482			; Jump if carry Set
020C:430D  89 16 2302				mov	data_451,dx		; (020C:2302=3104h)
020C:4311  89 16 2304				mov	data_452,dx		; (020C:2304=0A70Bh)
020C:4315  83 26 2304 E7			and	data_452,0FFE7h		; (020C:2304=0A70Bh)
020C:431A  88 36 420B				mov	byte ptr ds:[420Bh],dh	; (020C:420B=47h)
020C:431E  F7 06 2302 0002			test	data_451,2		; (020C:2302=3104h)
020C:4324  74 17				jz	loc_483			; Jump if zero
020C:4326  BF 2092				mov	di,2092h
020C:4329  83 EF 03				sub	di,3
020C:432C  B9 0004				mov	cx,4
020C:432F  2B F9				sub	di,cx
020C:4331  B0 58				mov	al,58h			; 'X'
020C:4333  FC					cld				; Clear direction
020C:4334  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:4336  EB 05				jmp	short loc_483		; (433D)
020C:4338			loc_482:
020C:4338  C6 06 3F0E 09			mov	byte ptr ds:[3F0Eh],9	; (020C:3F0E=2)
020C:433D			loc_483:
020C:433D  C3					retn
							                        ;* No entry point to code
020C:433E  87 DB				xchg	bx,bx
020C:4340  80 3E 444F 01			cmp	byte ptr data_679,1	; (020C:444F=83h)
020C:4345  75 07				jne	loc_484			; Jump if not equal
020C:4347  C6 06 3F0E 12			mov	byte ptr ds:[3F0Eh],12h	; (020C:3F0E=2)
020C:434C  EB 2B				jmp	short loc_487		; (4379)
020C:434E			loc_484:
020C:434E  B4 01				mov	ah,1
020C:4350  3C 46				cmp	al,46h			; 'F'
020C:4352  74 16				je	loc_485			; Jump if equal
020C:4354  FE C4				inc	ah
020C:4356  3C 42				cmp	al,42h			; 'B'
020C:4358  74 10				je	loc_485			; Jump if equal
020C:435A  FE C4				inc	ah
020C:435C  3C 44				cmp	al,44h			; 'D'
020C:435E  74 0A				je	loc_485			; Jump if equal
020C:4360  2C 31				sub	al,31h			; '1'
020C:4362  3C 02				cmp	al,2
020C:4364  77 0E				ja	loc_486			; Jump if above
020C:4366  FE C0				inc	al
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 140

020C:4368  8A E0				mov	ah,al
020C:436A			loc_485:
020C:436A  88 26 1CCA				mov	data_245,ah		; (020C:1CCA=0)
020C:436E  88 26 1CCB				mov	data_246,ah		; (020C:1CCB=0)
020C:4372  EB 05				jmp	short loc_487		; (4379)
020C:4374			loc_486:
020C:4374  C6 06 3F0E 09			mov	byte ptr ds:[3F0Eh],9	; (020C:3F0E=2)
020C:4379			loc_487:
020C:4379  C3					retn
							                        ;* No entry point to code
020C:437A  87 DB				xchg	bx,bx
020C:437C  32 E4				xor	ah,ah			; Zero register
020C:437E  3C 44				cmp	al,44h			; 'D'
020C:4380  74 1D				je	loc_488			; Jump if equal
020C:4382  FE C4				inc	ah
020C:4384  3C 5A				cmp	al,5Ah			; 'Z'
020C:4386  74 17				je	loc_488			; Jump if equal
020C:4388  FE C4				inc	ah
020C:438A  3C 53				cmp	al,53h			; 'S'
020C:438C  74 11				je	loc_488			; Jump if equal
020C:438E  FE C4				inc	ah
020C:4390  3C 4C				cmp	al,4Ch			; 'L'
020C:4392  74 0B				je	loc_488			; Jump if equal
020C:4394  3C 4E				cmp	al,4Eh			; 'N'
020C:4396  74 07				je	loc_488			; Jump if equal
020C:4398  C6 06 3F0E 09			mov	byte ptr ds:[3F0Eh],9	; (020C:3F0E=2)
020C:439D  EB 0A				jmp	short loc_489		; (43A9)
020C:439F			loc_488:
020C:439F  88 26 163F				mov	data_174,ah		; (020C:163F=0)
020C:43A3  E8 1E22				call	sub_61			; (61C8)
020C:43A6  E8 03EF				call	sub_38			; (4798)
020C:43A9			loc_489:
020C:43A9  C3					retn
							                        ;* No entry point to code
020C:43AA  87 DB				xchg	bx,bx
020C:43AC  3C 41				cmp	al,41h			; 'A'
020C:43AE  75 07				jne	loc_490			; Jump if not equal
020C:43B0  80 0E 1D5C 80			or	data_316,80h		; (020C:1D5C=0)
020C:43B5  EB 0E				jmp	short loc_491		; (43C5)
020C:43B7			loc_490:
020C:43B7  80 26 1D5C 7F			and	data_316,7Fh		; (020C:1D5C=0)
020C:43BC  8A 44 01				mov	al,[si+1]
020C:43BF  24 5F				and	al,5Fh			; '_'
020C:43C1  3C 4E				cmp	al,4Eh			; 'N'
020C:43C3  74 08				je	loc_492			; Jump if equal
020C:43C5			loc_491:
020C:43C5  C6 06 1D5A 00			mov	data_314,0		; (020C:1D5A=0)
020C:43CA  E9 02BA				jmp	loc_528			; (4687)
020C:43CD			loc_492:
020C:43CD  C6 06 1D5A 01			mov	data_314,1		; (020C:1D5A=0)
020C:43D2  E9 02B2				jmp	loc_528			; (4687)
							                        ;* No entry point to code
020C:43D5  87 DB				xchg	bx,bx
020C:43D7  90					nop
020C:43D8  A0 3D90				mov	al,data_645		; (020C:3D90=6)
020C:43DB  24 DF				and	al,0DFh
020C:43DD  3C 41				cmp	al,41h			; 'A'
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 141

020C:43DF  75 1F				jne	loc_493			; Jump if not equal
020C:43E1  8B 1E 1326				mov	bx,data_160		; (020C:1326=0)
020C:43E5  C6 06 22FB 00			mov	data_444,0		; (020C:22FB=0)
020C:43EA  C6 47 4A 07				mov	byte ptr [bx+4Ah],7
020C:43EE  8A 44 01				mov	al,[si+1]
020C:43F1  24 5F				and	al,5Fh			; '_'
020C:43F3  3C 46				cmp	al,46h			; 'F'
020C:43F5  74 09				je	loc_493			; Jump if equal
020C:43F7  C6 06 22FB 01			mov	data_444,1		; (020C:22FB=0)
020C:43FC  C6 47 4A 00				mov	byte ptr [bx+4Ah],0
020C:4400			loc_493:
020C:4400  C3					retn
							                        ;* No entry point to code
020C:4401  87 DB				xchg	bx,bx
020C:4403  90					nop
020C:4404  8B 1E 3EA8				mov	bx,data_647		; (020C:3EA8=44EBh)
020C:4408  83 FB 00				cmp	bx,0
020C:440B  75 08				jne	loc_494			; Jump if not equal
020C:440D  C6 06 3F0E 09			mov	byte ptr ds:[3F0Eh],9	; (020C:3F0E=2)
020C:4412  E9 00A1				jmp	loc_501			; (44B6)
020C:4415			loc_494:
020C:4415  FC					cld				; Clear direction
020C:4416  BF 1EFD				mov	di,1EFDh
020C:4419  B9 0029				mov	cx,29h
020C:441C  B0 00				mov	al,0
020C:441E  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:4420  BF 036A				mov	di,36Ah
020C:4423  B9 000C				mov	cx,0Ch
020C:4426  B0 20				mov	al,20h			; ' '
020C:4428  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:442A  BF 1EFD				mov	di,1EFDh
020C:442D  8B CB				mov	cx,bx

020C:442F			locloop_495:
020C:442F  80 3C 2E				cmp	byte ptr [si],2Eh	; '.'
020C:4432  75 11				jne	loc_496			; Jump if not equal
020C:4434  8B 44 01				mov	ax,[si+1]
020C:4437  0D 6060				or	ax,6060h
020C:443A  3D 6D74				cmp	ax,6D74h
020C:443D  75 09				jne	loc_497			; Jump if not equal
020C:443F  FE 06 22FE				inc	data_447		; (020C:22FE=0)
020C:4443  EB 03				jmp	short loc_497		; (4448)
020C:4445			loc_496:
020C:4445  A4					movsb				; Mov [si] to es:[di]
020C:4446  E2 E7				loop	locloop_495		; Loop if cx > 0

020C:4448			loc_497:
020C:4448  2B D9				sub	bx,cx
020C:444A  9A 1491:2B90		;*		call	far ptr sub_177		;*(1491:2B90)
020C:444A  9A					db	9Ah
020C:444B  2B90 1491				dw	2B90h, 1491h
020C:444F  83			data_679	db	83h
020C:4450  C3					retn
020C:4451  4704			data_680	dw	4704h
020C:4453  CB8B			data_681	dw	0CB8Bh
020C:4455			loc_498:
020C:4455  8A 05				mov	al,[di]
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 142

020C:4457  3C 3A				cmp	al,3Ah			; ':'
020C:4459  74 0D				je	loc_499			; Jump if equal
020C:445B  3C 5C				cmp	al,5Ch			; '\'
020C:445D  74 09				je	loc_499			; Jump if equal
020C:445F  83 F9 01				cmp	cx,1
020C:4462  76 06				jbe	loc_500			; Jump if below or =
020C:4464  49					dec	cx
020C:4465  4F					dec	di
020C:4466  EB ED				jmp	short loc_498		; (4455)
020C:4468			loc_499:
020C:4468  47					inc	di
020C:4469  41					inc	cx
020C:446A			loc_500:
020C:446A  2B D9				sub	bx,cx
020C:446C  8B CB				mov	cx,bx
020C:446E  41					inc	cx
020C:446F  83 F9 0C				cmp	cx,0Ch
020C:4472  77 42				ja	loc_501			; Jump if above
020C:4474  8B F7				mov	si,di
020C:4476  BF 036A				mov	di,36Ah
020C:4479  FC					cld				; Clear direction
020C:447A  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:447C  80 3E 1EFE 3A			cmp	data_348,3Ah		; (020C:1EFE=0) ':'
020C:4481  75 33				jne	loc_501			; Jump if not equal
020C:4483  A0 1EFD				mov	al,data_347		; (020C:1EFD=0)
020C:4486  24 5F				and	al,5Fh			; '_'
020C:4488  3C 41				cmp	al,41h			; 'A'
020C:448A  72 2A				jb	loc_501			; Jump if below
020C:448C  3C 5A				cmp	al,5Ah			; 'Z'
020C:448E  77 26				ja	loc_501			; Jump if above
020C:4490  8A D0				mov	dl,al
020C:4492  80 EA 41				sub	dl,41h			; 'A'
020C:4495  8A DA				mov	bl,dl
020C:4497  B4 19				mov	ah,19h
020C:4499  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020C:449B  50					push	ax
020C:449C  B4 0E				mov	ah,0Eh
020C:449E  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020C:44A0  B4 19				mov	ah,19h
020C:44A2  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020C:44A4  A2 1D78				mov	data_336,al		; (020C:1D78=0)
020C:44A7  04 61				add	al,61h			; 'a'
020C:44A9  A2 066E				mov	byte ptr ds:[66Eh],al	; (020C:066E=0Eh)
020C:44AC  E8 1651				call	sub_49			; (5B00)
020C:44AF  58					pop	ax
020C:44B0  8A D0				mov	dl,al
020C:44B2  B4 0E				mov	ah,0Eh
020C:44B4  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020C:44B6			loc_501:
020C:44B6  C3			data_682	db	0C3h
020C:44B7  90			data_683	db	90h
020C:44B8  2C 32				sub	al,32h			; '2'
020C:44BA  3C 07				cmp	al,7
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 143

020C:44BC  77 0E				ja	loc_502			; Jump if above
020C:44BE  04 02				add	al,2
020C:44C0  D0 E0				shl	al,1			; Shift w/zeros fill
020C:44C2  E8 201B				call	sub_68			; (64E0)
020C:44C5  C6 06 178C 01			mov	data_192,1		; (020C:178C=0)
020C:44CA  EB 05				jmp	short loc_503		; (44D1)
020C:44CC			loc_502:
020C:44CC  C6 06 3F0E 09			mov	byte ptr ds:[3F0Eh],9	; (020C:3F0E=2)
020C:44D1			loc_503:
020C:44D1  C3					retn
							                        ;* No entry point to code
020C:44D2  87 DB				xchg	bx,bx
020C:44D4  8B 1E 3EA8				mov	bx,data_647		; (020C:3EA8=44EBh)
020C:44D8  32 E4				xor	ah,ah			; Zero register
020C:44DA  3C 45				cmp	al,45h			; 'E'
020C:44DC  74 13				je	loc_504			; Jump if equal
020C:44DE  FE C4				inc	ah
020C:44E0  3C 4A				cmp	al,4Ah			; 'J'
020C:44E2  74 0D				je	loc_504			; Jump if equal
020C:44E4  FE C4				inc	ah
020C:44E6  3C 55				cmp	al,55h			; 'U'
020C:44E8  74 07				je	loc_504			; Jump if equal
020C:44EA  C6 06 3F0E 09			mov	byte ptr ds:[3F0Eh],9	; (020C:3F0E=2)
020C:44EF  EB 13				jmp	short loc_505		; (4504)
020C:44F1			loc_504:
020C:44F1  88 26 4210				mov	data_675,ah		; (020C:4210=1Fh)
020C:44F5  83 0E 3D18 02			or	data_594,2		; (020C:3D18=2680h)
020C:44FA  FC80			data_687	dw	0FC80h
020C:44FC  01			data_688	db	1
020C:44FD  0575			data_689	dw	575h
020C:44FF  749A			data_690	dw	749Ah
020C:4501  6F			data_691	db	6Fh
020C:4502  1491			data_692	dw	1491h
020C:4504			loc_505:
020C:4504  C3			data_693	db	0C3h
020C:4505  DB87			data_694	dw	0DB87h
020C:4507  8B90			data_695	dw	8B90h
020C:4509  1E			data_696	db	1Eh
020C:450A  A8			data_697	db	0A8h
020C:450B  323E			data_698	dw	323Eh
020C:450D  3CE4			data_699	dw	3CE4h
020C:450F  744E			data_700	dw	744Eh
020C:4511  FE3E			data_701	dw	0FE3Eh
020C:4513  C4			data_702	db	0C4h
020C:4514  3C 44				cmp	al,44h			; 'D'
020C:4516  74 38				je	loc_507			; Jump if equal
020C:4518  FE C4				inc	ah
020C:451A  3C 49				cmp	al,49h			; 'I'
020C:451C  74			data_703	db	74h
020C:451D  32			data_704	db	32h
020C:451E  B4			data_705	db	0B4h
020C:451F  3C04			data_706	dw	3C04h
020C:4521  4F			data_707	db	4Fh
020C:4522  74 2C				jz	loc_507			; Jump if zero
020C:4524  B4 07				mov	ah,7
020C:4526  3C 41				cmp	al,41h			; 'A'
020C:4528  74 26				je	loc_507			; Jump if equal
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 144

020C:452A  3C 45				cmp	al,45h			; 'E'
020C:452C  75 2B				jne	loc_508			; Jump if not equal
020C:452E			loc_506:
020C:452E  46					inc	si
020C:452F  4B					dec	bx
020C:4530  74 27				jz	loc_508			; Jump if zero
020C:4532  80 3C 20				cmp	byte ptr [si],20h	; ' '
020C:4535  75 F7				jne	loc_506			; Jump if not equal
020C:4537  46					inc	si
020C:4538  4B					dec	bx
020C:4539  74 1E				jz	loc_508			; Jump if zero
020C:453B  B4 06				mov	ah,6
020C:453D  80 3C 44				cmp	byte ptr [si],44h	; 'D'
020C:4540  74 0E				je	loc_507			; Jump if equal
020C:4542  FE CC				dec	ah
020C:4544  80 3C 49				cmp	byte ptr [si],49h	; 'I'
020C:4547  74 07				je	loc_507			; Jump if equal
020C:4549  B4 03				mov	ah,3
020C:454B  80 3C 4F				cmp	byte ptr [si],4Fh	; 'O'
020C:454E  75 09				jne	loc_508			; Jump if not equal
020C:4550			loc_507:
020C:4550  88 26 1700				mov	byte ptr ds:[1700h],ah	; (020C:1700=41h)
020C:4554  E8 1D15				call	sub_62			; (626C)
020C:4557  EB 05				jmp	short loc_509		; (455E)
020C:4559			loc_508:
020C:4559  C6 06 3F0E 09			mov	byte ptr ds:[3F0Eh],9	; (020C:3F0E=2)
020C:455E			loc_509:
020C:455E  C3					retn
							                        ;* No entry point to code
020C:455F  90					nop
020C:4560  80 3E 22FF 00			cmp	data_448,0		; (020C:22FF=0)
020C:4565  74 28				je	loc_512			; Jump if equal
020C:4567  8A			data_708	db	8Ah
020C:4568  E0			data_709	db	0E0h
020C:4569  80 FC 4F				cmp	ah,4Fh			; 'O'
020C:456C  74 1A				je	loc_511			; Jump if equal
020C:456E  C6 06 22FC 01			mov	data_445,1		; (020C:22FC=0)
020C:4573  B0 01				mov	al,1
020C:4575  80 FC 4E				cmp	ah,4Eh			; 'N'
020C:4578  74 07				je	loc_510			; Jump if equal
020C:457A  80 0E 22FC 02			or	data_445,2		; (020C:22FC=0)
020C:457F  EB 0E				jmp	short loc_512		; (458F)
020C:4581			loc_510:
020C:4581  80 0E 22FC 08			or	data_445,8		; (020C:22FC=0)
020C:4586  EB 07				jmp	short loc_512		; (458F)
020C:4588			loc_511:
020C:4588  80 26 22FC FE			and	data_445,0FEh		; (020C:22FC=0)
020C:458D  32 C0				xor	al,al			; Zero register
020C:458F			loc_512:
020C:458F  C3					retn
							                        ;* No entry point to code
020C:4590  BF 13F5				mov	di,13F5h
020C:4593  8A 05				mov	al,[di]
020C:4595  A2 13F0				mov	data_166,al		; (020C:13F0=0)
020C:4598  33 ED				xor	bp,bp			; Zero register
020C:459A  8D 55 0B				lea	dx,[di+0Bh]		; Load effective addr
020C:459D  8D 4D 01				lea	cx,[di+1]		; Load effective addr
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 145

020C:45A0  2B D1				sub	dx,cx
020C:45A2  8B CA				mov	cx,dx
020C:45A4  33 DB				xor	bx,bx			; Zero register
020C:45A6  56					push	si

020C:45A7			locloop_513:
020C:45A7  8A 04				mov	al,[si]
020C:45A9  3C 00				cmp	al,0
020C:45AB  74 3E				je	loc_518			; Jump if equal
020C:45AD  3C 20				cmp	al,20h			; ' '
020C:45AF  74 04				je	loc_514			; Jump if equal
020C:45B1  3C 09				cmp	al,9
020C:45B3  75 03				jne	loc_515			; Jump if not equal
020C:45B5			loc_514:
020C:45B5  46					inc	si
020C:45B6  EB EF				jmp	short locloop_513	; (45A7)
020C:45B8			loc_515:
020C:45B8  81 39 582E				cmp	word ptr [bx+di],582Eh
020C:45BC  75 0B				jne	loc_516			; Jump if not equal
020C:45BE  3C 30				cmp	al,30h			; '0'
020C:45C0  72 18				jb	loc_517			; Jump if below
020C:45C2  3C 39				cmp	al,39h			; '9'
020C:45C4  77 03				ja	loc_516			; Jump if above
020C:45C6  46					inc	si
020C:45C7  EB 2D				jmp	short loc_519		; (45F6)
020C:45C9			loc_516:
020C:45C9  38 41 01				cmp	[bx+di+1],al
020C:45CC  75 0C				jne	loc_517			; Jump if not equal
020C:45CE  43					inc	bx
020C:45CF  46					inc	si
020C:45D0  80 79 01 20				cmp	byte ptr [bx+di+1],20h	; ' '
020C:45D4  74 20				je	loc_519			; Jump if equal
020C:45D6  E2 CF				loop	locloop_513		; Loop if cx > 0

020C:45D8  E3 1C				jcxz	loc_519			; Jump if cx=0
020C:45DA			loc_517:
020C:45DA  5E					pop	si
020C:45DB  56					push	si
020C:45DC  45					inc	bp
020C:45DD  83 FD 10				cmp	bp,10h
020C:45E0  73 09				jae	loc_518			; Jump if above or =
020C:45E2  8B CA				mov	cx,dx
020C:45E4  83 C7 11				add	di,11h
020C:45E7  33 DB				xor	bx,bx			; Zero register
020C:45E9  EB BC				jmp	short locloop_513	; (45A7)
020C:45EB			loc_518:
020C:45EB  5E					pop	si
020C:45EC  B4 36				mov	ah,36h			; '6'
020C:45EE  C6 06 2306 18			mov	data_453,18h		; (020C:2306=0)
020C:45F3  E9 2E91				jmp	loc_1091		; (7487)
020C:45F6			loc_519:
020C:45F6  8B 45 0D				mov	ax,[di+0Dh]
020C:45F9  A3 13F1				mov	data_167,ax		; (020C:13F1=0)
020C:45FC  8A 05				mov	al,[di]
020C:45FE  A2 13F0				mov	data_166,al		; (020C:13F0=0)
020C:4601  8B 45 0B				mov	ax,[di+0Bh]
020C:4604  A3 13F3				mov	data_168,ax		; (020C:13F3=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 146

020C:4607			loc_520:
020C:4607  8A 04				mov	al,[si]
020C:4609  3C 00				cmp	al,0
020C:460B  74 26				je	loc_523			; Jump if equal
020C:460D  3C 2C				cmp	al,2Ch			; ','
020C:460F  74 03				je	loc_521			; Jump if equal
020C:4611  46					inc	si
020C:4612  EB F3				jmp	short loc_520		; (4607)
020C:4614			loc_521:
020C:4614  8A 04				mov	al,[si]
020C:4616  3C 00				cmp	al,0
020C:4618  74 19				je	loc_523			; Jump if equal
020C:461A  B4 80				mov	ah,80h
020C:461C  3C 46				cmp	al,46h			; 'F'
020C:461E  74 0F				je	loc_522			; Jump if equal
020C:4620  FE C4				inc	ah
020C:4622  3C 53				cmp	al,53h			; 'S'
020C:4624  74 09				je	loc_522			; Jump if equal
020C:4626  FE C4				inc	ah
020C:4628  3C 42				cmp	al,42h			; 'B'
020C:462A  74 03				je	loc_522			; Jump if equal
020C:462C  46					inc	si
020C:462D  EB E5				jmp	short loc_521		; (4614)
020C:462F			loc_522:
020C:462F  88 26 1547				mov	data_169,ah		; (020C:1547=0)
020C:4633			loc_523:
020C:4633  9A 1491:319C		;*		call	far ptr sub_185		;*(1491:319C)
020C:4633  9A					db	9Ah
020C:4634  319C 1491				dw	319Ch, 1491h
020C:4638  E8 1349				call	sub_44			; (5984)
020C:463B  5E					pop	si
020C:463C  C3					retn
							                        ;* No entry point to code
020C:463D  87 DB				xchg	bx,bx
020C:463F  90					nop
020C:4640  8B 04				mov	ax,[si]
020C:4642  8A 5C 02				mov	bl,[si+2]
020C:4645  BF 3EAA				mov	di,3EAAh
020C:4648			loc_524:
020C:4648  3B 05				cmp	ax,[di]
020C:464A  75 05				jne	loc_525			; Jump if not equal
020C:464C  3A 5D 02				cmp	bl,[di+2]
020C:464F  74 10				je	loc_526			; Jump if equal
020C:4651			loc_525:
020C:4651  83 C7 05				add	di,5
020C:4654  81 FF 3F0E				cmp	di,3F0Eh
020C:4658  72 EE				jb	loc_524			; Jump if below
020C:465A  C6 06 3F0E 09			mov	byte ptr ds:[3F0Eh],9	; (020C:3F0E=2)
020C:465F  EB 76				jmp	short loc_532		; (46D7)
020C:4661			loc_526:
020C:4661  8B 45 03				mov	ax,[di+3]
020C:4664  3D 00F1				cmp	ax,0F1h
020C:4667  74 6E				je	loc_532			; Jump if equal
020C:4669  8B 16 1D48				mov	dx,data_312		; (020C:1D48=0)
020C:466D  3D 00F2				cmp	ax,0F2h
020C:4670  75 0B				jne	loc_527			; Jump if not equal
020C:4672  A1 1D4A				mov	ax,data_313		; (020C:1D4A=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 147

020C:4675  A9 01F0				test	ax,1F0h
020C:4678  74 03				jz	loc_527			; Jump if zero
020C:467A  0D 0008				or	ax,8
020C:467D			loc_527:
020C:467D  A3 1D48				mov	data_312,ax		; (020C:1D48=0)
020C:4680  C6 06 1D5A 00			mov	data_314,0		; (020C:1D5A=0)
020C:4685  EB 27				jmp	short loc_530		; (46AE)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:4687			sub_37		proc	near
020C:4687			loc_528:
020C:4687  A1 1D48				mov	ax,data_312		; (020C:1D48=0)
020C:468A  F6 06 1D5A 3F			test	data_314,3Fh		; (020C:1D5A=0) '?'
020C:468F  74 1D				jz	loc_530			; Jump if zero
020C:4691  C6 06 1D5A 01			mov	data_314,1		; (020C:1D5A=0)
020C:4696  A9 0010				test	ax,10h
020C:4699  74 07				jz	loc_529			; Jump if zero
020C:469B  C6 06 1D5A 02			mov	data_314,2		; (020C:1D5A=0)
020C:46A0  EB 2A				jmp	short loc_531		; (46CC)
020C:46A2			loc_529:
020C:46A2  A9 0020				test	ax,20h
020C:46A5  74 07				jz	loc_530			; Jump if zero
020C:46A7  C6 06 1D5A 04			mov	data_314,4		; (020C:1D5A=0)
020C:46AC  EB 1E				jmp	short loc_531		; (46CC)
020C:46AE			loc_530:
020C:46AE  A9 01C0				test	ax,1C0h
020C:46B1  74 19				jz	loc_531			; Jump if zero
020C:46B3  C6 06 1D5A 0C			mov	data_314,0Ch		; (020C:1D5A=0)
020C:46B8  A9 0040				test	ax,40h
020C:46BB  75 0F				jnz	loc_531			; Jump if not zero
020C:46BD  C6 06 1D5A 14			mov	data_314,14h		; (020C:1D5A=0)
020C:46C2  A9 0080				test	ax,80h
020C:46C5  75 05				jnz	loc_531			; Jump if not zero
020C:46C7  C6 06 1D5A 24			mov	data_314,24h		; (020C:1D5A=0) '$'
020C:46CC			loc_531:
020C:46CC  B6			data_710	db	0B6h
020C:46CD  01			data_711	db	1
020C:46CE  E7E8			data_712	dw	0E7E8h
020C:46D0  14			data_713	db	14h
020C:46D1  C7			data_714	db	0C7h
020C:46D2  6C06			data_715	dw	6C06h
020C:46D4  0021			data_716	dw	21h
020C:46D6  C300			data_717	dw	0C300h
020C:46D8  55			data_718	db	55h
020C:46D9  8B			data_719	db	8Bh
020C:46DA  2E					db	2Eh
020C:46DB  A8 3E				test	al,3Eh			; '>'
020C:46DD  33			data_721	db	33h
020C:46DE  DB			data_722	db	0DBh
020C:46DF  32			data_723	db	32h
020C:46E0  8AC9			data_724	dw	8AC9h
020C:46E2  801C			data_725	dw	801Ch
020C:46E4  EB 30				jmp	short loc_535		; (4716)
020C:46E6  FB80			data_726	dw	0FB80h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 148

020C:46E8  7609 E903		data_727	dw	7609h, 0E903h
020C:46EC  8F			data_729	db	8Fh
020C:46ED  00			data_730	db	0
020C:46EE			loc_533:
020C:46EE  8A C3				mov	al,bl
020C:46F0  46					inc	si
020C:46F1  4D					dec	bp
020C:46F2  FE C1				inc	cl
020C:46F4  8A 1C				mov	bl,[si]
020C:46F6  80 EB 30				sub	bl,30h			; '0'
020C:46F9  80 FB 09				cmp	bl,9
020C:46FC  76 04				jbe	loc_534			; Jump if below or =
020C:46FE  8A D8				mov	bl,al
020C:4700  EB			data_731	db	0EBh
020C:4701  B522			data_732	dw	0B522h
020C:4703  F60A			data_733	dw	0F60Ah
020C:4705  03E5			data_734	dw	3E5h
020C:4707  D8					db	0D8h
020C:4708  46					inc	si
020C:4709  4D					dec	bp
020C:470A  FE C1				inc	cl
020C:470C  8A 14				mov	dl,[si]
020C:470E  80 EA 30				sub	dl,30h			; '0'
020C:4711  80 FA 09				cmp	dl,9
020C:4714  77 0E				ja	loc_536			; Jump if above
020C:4716			loc_535:
020C:4716  46					inc	si
020C:4717  4D					dec	bp
020C:4718  FE C1				inc	cl
020C:471A  8B C3				mov	ax,bx
020C:471C  F6 E5				mul	ch			; ax = reg * al
020C:471E  32 F6				xor	dh,dh			; Zero register
020C:4720  03 C2				add	ax,dx
020C:4722  8B D8				mov	bx,ax
020C:4724			loc_536:
020C:4724  83 FB 00				cmp	bx,0
020C:4727  0B74			data_737	dw	0B74h
020C:4729  FB83			data_738	dw	0FB83h
020C:472B  720A			data_739	dw	720Ah
020C:472D  814F			data_740	dw	814Fh
020C:472F  FFFB			data_741	dw	0FFFBh
020C:4731  00 77 49				add	[bx+49h],dh
020C:4734			loc_537:
020C:4734  88 1E 2301				mov	byte ptr data_449+1,bl	; (020C:2301=0)
020C:4738  80 FB 00				cmp	bl,0
020C:473B  74 11				je	loc_538			; Jump if equal
020C:473D  BF 4B1B				mov	di,4B1Bh
020C:4740  C7 45 FF 2020			mov	word ptr [di-1],2020h
020C:4745  56					push	si
020C:4746  4E					dec	si
020C:4747  32 ED				xor	ch,ch			; Zero register
020C:4749  FD					std				; Set direction flag
020C:474A  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:474C  FC					cld				; Clear direction
020C:474D  5E					pop	si
020C:474E			loc_538:
020C:474E  83 FD 02				cmp	bp,2
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 149

020C:4751  72 2A				jb	loc_541			; Jump if below
020C:4753  83 FD 32				cmp	bp,32h
020C:4756  77 25				ja	loc_541			; Jump if above
020C:4758			loc_539:
020C:4758  80 3C 2C				cmp	byte ptr [si],2Ch	; ','
020C:475B  74 06				je	loc_540			; Jump if equal
020C:475D  4D					dec	bp
020C:475E  74 1D				jz	loc_541			; Jump if zero
020C:4760  46					inc	si
020C:4761  EB F5				jmp	short loc_539		; (4758)
020C:4763			loc_540:
020C:4763  46					inc	si
020C:4764  4D					dec	bp
020C:4765  74 16				jz	loc_541			; Jump if zero
020C:4767  80 3C 20				cmp	byte ptr [si],20h	; ' '
020C:476A  74 F7				je	loc_540			; Jump if equal
020C:476C  80 3C 43				cmp	byte ptr [si],43h	; 'C'
020C:476F  75 0C				jne	loc_541			; Jump if not equal
020C:4771  46					inc	si
020C:4772  8A 04				mov	al,[si]
020C:4774  2C 30				sub	al,30h			; '0'
020C:4776  3C 07				cmp	al,7
020C:4778  77 03				ja	loc_541			; Jump if above
020C:477A  A2 22F9				mov	data_443,al		; (020C:22F9=0)
020C:477D			loc_541:
020C:477D  5D					pop	bp
020C:477E  C3					retn
				sub_37		endp

							                        ;* No entry point to code
020C:477F  90					nop
020C:4780  B4 60				mov	ah,60h			; '`'
020C:4782  B7 60				mov	bh,60h			; '`'
020C:4784  3C 4C				cmp	al,4Ch			; 'L'
020C:4786  74 08				je	loc_542			; Jump if equal
020C:4788  32 FF				xor	bh,bh			; Zero register
020C:478A  3C 52				cmp	al,52h			; 'R'
020C:478C  74 02				je	loc_542			; Jump if equal
020C:478E  32 E4				xor	ah,ah			; Zero register
020C:4790			loc_542:
020C:4790  88 26 22F6				mov	data_441,ah		; (020C:22F6=0)
020C:4794  88 3E 22F7				mov	byte ptr data_442,bh	; (020C:22F7=0)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:4798			sub_38		proc	near
020C:4798  BE 03D0				mov	si,3D0h
020C:479B  BA 0003				mov	dx,3
020C:479E			loc_543:
020C:479E  B9 0016				mov	cx,16h
020C:47A1  E8 2148				call	sub_70			; (68EC)
020C:47A4  83 C6 3A				add	si,3Ah
020C:47A7  4A					dec	dx
020C:47A8  75 F4				jnz	loc_543			; Jump if not zero
020C:47AA  B9 2995				mov	cx,2995h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 150

020C:47AD  81 E9 2350				sub	cx,2350h
020C:47B1  BE 2350				mov	si,2350h
020C:47B4  E8 2135				call	sub_70			; (68EC)
020C:47B7  B9 24C8				mov	cx,24C8h
020C:47BA  81 E9 2350				sub	cx,2350h
020C:47BE  BE 2350				mov	si,2350h
020C:47C1  8A 16 22F6				mov	dl,data_441		; (020C:22F6=0)
020C:47C5  A0 22F7				mov	al,byte ptr data_442	; (020C:22F7=0)
020C:47C8  A2 22F6				mov	data_441,al		; (020C:22F6=0)
020C:47CB  E8 211E				call	sub_70			; (68EC)
020C:47CE  BE 03DB				mov	si,3DBh
020C:47D1  B9 0008				mov	cx,8
020C:47D4  E8 2115				call	sub_70			; (68EC)
020C:47D7  BE 047B				mov	si,47Bh
020C:47DA  B9 0004				mov	cx,4
020C:47DD  E8 210C				call	sub_70			; (68EC)
020C:47E0  88 16 22F6				mov	data_441,dl		; (020C:22F6=0)
020C:47E4  B9 5057				mov	cx,5057h
020C:47E7  81 E9 4C06				sub	cx,4C06h
020C:47EB  BE 4C06				mov	si,4C06h
020C:47EE  E8 20FB				call	sub_70			; (68EC)
020C:47F1  C3					retn
				sub_38		endp

							                        ;* No entry point to code
020C:47F2  87 DB				xchg	bx,bx
020C:47F4  8B 1E 3EA8				mov	bx,data_647		; (020C:3EA8=44EBh)
020C:47F8  80 3E 22FF 00			cmp	data_448,0		; (020C:22FF=0)
020C:47FD  74 35				je	loc_547			; Jump if equal
020C:47FF  83 FB 02				cmp	bx,2
020C:4802  72 0F				jb	loc_544			; Jump if below
020C:4804  8A 44 01				mov	al,[si+1]
020C:4807  B3 07				mov	bl,7
020C:4809  3C 4E				cmp	al,4Eh			; 'N'
020C:480B  74 0D				je	loc_545			; Jump if equal
020C:480D  32 DB				xor	bl,bl			; Zero register
020C:480F  3C 46				cmp	al,46h			; 'F'
020C:4811  74 07				je	loc_545			; Jump if equal
020C:4813			loc_544:
020C:4813  C6 06 3F0E 09			mov	byte ptr ds:[3F0Eh],9	; (020C:3F0E=2)
020C:4818  EB 1A				jmp	short loc_547		; (4834)
020C:481A			loc_545:
020C:481A  88 1E 3D78				mov	data_634,bl		; (020C:3D78=4)
020C:481E  80 FB 00				cmp	bl,0
020C:4821  74 0E				je	loc_546			; Jump if equal
020C:4823  80 3E 178F 0A			cmp	data_194,0Ah		; (020C:178F=0)
020C:4828  73 0A				jae	loc_547			; Jump if above or =
020C:482A  B0 0A				mov	al,0Ah
020C:482C  E8 1CB1				call	sub_68			; (64E0)
020C:482F  EB 03				jmp	short loc_547		; (4834)
020C:4831			loc_546:
020C:4831  E8 1944				call	sub_60			; (6178)
020C:4834			loc_547:
020C:4834  C3					retn
							                        ;* No entry point to code
020C:4835  87 DB				xchg	bx,bx
020C:4837  90					nop
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 151

020C:4838  89 36 3FDC				mov	word ptr ds:[3FDCh],si	; (020C:3FDC=880Eh)
020C:483C  8B 1E 3EA8				mov	bx,data_647		; (020C:3EA8=44EBh)
020C:4840  01 1E 3FDC				add	word ptr ds:[3FDCh],bx	; (020C:3FDC=880Eh)
020C:4844  E8 F55D				call	sub_34			; (3DA4)
020C:4847  72 02				jc	loc_548			; Jump if carry Set
020C:4849  EB 05				jmp	short loc_549		; (4850)
020C:484B			loc_548:
020C:484B  C6 06 3F0E 09			mov	byte ptr ds:[3F0Eh],9	; (020C:3F0E=2)
020C:4850			loc_549:
020C:4850  C3					retn
							                        ;* No entry point to code
020C:4851  87 DB				xchg	bx,bx
020C:4853  90					nop
020C:4854  C6 06 183B 00			mov	data_208,0		; (020C:183B=0)
020C:4859  80 3E 444F 01			cmp	data_679,1		; (020C:444F=83h)
020C:485E  75 08				jne	loc_550			; Jump if not equal
020C:4860  C6 06 3F0E 12			mov	byte ptr ds:[3F0Eh],12h	; (020C:3F0E=2)
020C:4865  E9 0082				jmp	loc_559			; (48EA)
020C:4868			loc_550:
020C:4868  89 36 3FDC				mov	word ptr ds:[3FDCh],si	; (020C:3FDC=880Eh)
020C:486C  8B 1E 3EA8				mov	bx,data_647		; (020C:3EA8=44EBh)
020C:4870  01 1E 3FDC				add	word ptr ds:[3FDCh],bx	; (020C:3FDC=880Eh)
020C:4874  33 DB				xor	bx,bx			; Zero register
020C:4876  81 3C 5856				cmp	word ptr [si],5856h
020C:487A  75 08				jne	loc_551			; Jump if not equal
020C:487C  83 C6 03				add	si,3
020C:487F  C6 06 183B 01			mov	data_208,1		; (020C:183B=0)
020C:4884			loc_551:
020C:4884  E8 F51D				call	sub_34			; (3DA4)
020C:4887  72 5C				jc	loc_558			; Jump if carry Set
020C:4889  80 3C 3A				cmp	byte ptr [si],3Ah	; ':'
020C:488C  75 17				jne	loc_554			; Jump if not equal
020C:488E  46					inc	si
020C:488F  80 3E 183B 01			cmp	data_208,1		; (020C:183B=0)
020C:4894  75 06				jne	loc_552			; Jump if not equal
020C:4896  89			data_744	db	89h
020C:4897  16			data_745	db	16h
020C:4898  64					db	64h
020C:4899  18 EB				sbb	bl,ch
020C:489B  04 89				add	al,89h
020C:489D  97					xchg	di,ax
020C:489E  3C 18				cmp	al,18h
020C:48A0			loc_553:
020C:48A0  E8 F501				call	sub_34			; (3DA4)
020C:48A3  4072			data_746	dw	4072h
020C:48A5			loc_554:
020C:48A5  80			data_747	db	80h
020C:48A6  3E					db	3Eh
020C:48A7  3B 18				cmp	bx,[bx+si]
020C:48A9  01 75 06				add	[di+6],si
020C:48AC  89 16 1866				mov	data_214,dx		; (020C:1866=0CEE8h)
020C:48B0  EB 2D				jmp	short loc_557		; (48DF)
020C:48B2			loc_555:
020C:48B2  89 97 183E				mov	data_210[bx],dx		; (020C:183E=0)
020C:48B6  80 3C 2C				cmp	byte ptr [si],2Ch	; ','
020C:48B9  75 24				jne	loc_557			; Jump if not equal
020C:48BB  46					inc	si
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 152

020C:48BC  E8 F4E5				call	sub_34			; (3DA4)
020C:48BF  72 24				jc	loc_558			; Jump if carry Set
020C:48C1  80 3C 3A				cmp	byte ptr [si],3Ah	; ':'
020C:48C4  75 0A				jne	loc_556			; Jump if not equal
020C:48C6  46					inc	si
020C:48C7  89 97 1840				mov	data_211[bx],dx		; (020C:1840=9153h)
020C:48CB  E8 F4D6				call	sub_34			; (3DA4)
020C:48CE  72 15				jc	loc_558			; Jump if carry Set
020C:48D0			loc_556:
020C:48D0  89 97 1842				mov	data_212[bx],dx		; (020C:1842=7E03h)
020C:48D4  80 3C 3B				cmp	byte ptr [si],3Bh	; ';'
020C:48D7  75 06				jne	loc_557			; Jump if not equal
020C:48D9  46					inc	si
020C:48DA  83 C3 08				add	bx,8
020C:48DD  EB A5				jmp	short loc_551		; (4884)
020C:48DF			loc_557:
020C:48DF  FE 06 183B				inc	data_208		; (020C:183B=0)
020C:48E3  EB 05				jmp	short loc_559		; (48EA)
020C:48E5			loc_558:
020C:48E5  C6 06 3F0E 09			mov	byte ptr ds:[3F0Eh],9	; (020C:3F0E=2)
020C:48EA			loc_559:
020C:48EA  C3					retn
							                        ;* No entry point to code
020C:48EB  90					nop
020C:48EC  2C 30				sub	al,30h			; '0'
020C:48EE  3C 7F				cmp	al,7Fh
020C:48F0  77 03				ja	loc_560			; Jump if above
020C:48F2  A2 22EA				mov	data_433,al		; (020C:22EA=1)
020C:48F5			loc_560:
020C:48F5  C3					retn
							                        ;* No entry point to code
020C:48F6  87 DB				xchg	bx,bx
020C:48F8  AC					lodsb				; String [si] to al
020C:48F9  3C 37				cmp	al,37h			; '7'
020C:48FB  77 24				ja	loc_561			; Jump if above
020C:48FD  72 27				jc	loc_562			; Jump if carry Set
020C:48FF  4B					dec	bx
020C:4900  74 24				jz	loc_562			; Jump if zero
020C:4902  AC					lodsb				; String [si] to al
020C:4903  3C 2E				cmp	al,2Eh			; '.'
020C:4905  75 1F				jne	loc_562			; Jump if not equal
020C:4907  4B					dec	bx
020C:4908  74 1C				jz	loc_562			; Jump if zero
020C:490A  AC					lodsb				; String [si] to al
020C:490B  3C 58				cmp	al,58h			; 'X'
020C:490D  74 17				je	loc_562			; Jump if equal
020C:490F  3C 30				cmp	al,30h			; '0'
020C:4911  77 0E				ja	loc_561			; Jump if above
020C:4913  72 11				jc	loc_562			; Jump if carry Set
020C:4915  4B					dec	bx
020C:4916  74 0E				jz	loc_562			; Jump if zero
020C:4918  AC					lodsb				; String [si] to al
020C:4919  3C 58				cmp	al,58h			; 'X'
020C:491B  74 09				je	loc_562			; Jump if equal
020C:491D  3C 30				cmp	al,30h			; '0'
020C:491F  76 05				jbe	loc_562			; Jump if below or =
020C:4921			loc_561:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 153

020C:4921  90					nop
020C:4922  90					nop
020C:4923  E9 2B47				jmp	loc_1089		; (746D)
020C:4926			loc_562:
020C:4926  C3					retn
020C:4927  0009[00]				db	9 dup (0)
020C:4930			loc_563:
020C:4930  BE 3D39				mov	si,3D39h
020C:4933  80 3E 1F6A 00			cmp	data_352,0		; (020C:1F6A=0)
020C:4938  74 03				je	loc_564			; Jump if equal
020C:493A  E9 EEA4				jmp	loc_345			; (37E1)
020C:493D			loc_564:
020C:493D  B6 01				mov	dh,1
020C:493F  B2 37				mov	dl,37h			; '7'
020C:4941  E8 7520				call	sub_138			; (BE64)
020C:4944  0A F6				or	dh,dh			; Zero ?
020C:4946  74 09				jz	loc_565			; Jump if zero
020C:4948  83 4C D6 04				or	word ptr [si-2Ah],4
020C:494C  B2 25				mov	dl,25h			; '%'
020C:494E  E8 7513				call	sub_138			; (BE64)
020C:4951			loc_565:
020C:4951  A1 3D18				mov	ax,data_594		; (020C:3D18=2680h)
020C:4954  A3 3D12				mov	word ptr ds:[3D12h],ax	; (020C:3D12=9A0Dh)
020C:4957  A1 3D1A				mov	ax,data_595		; (020C:3D1A=176Ah)
020C:495A  A3 3D14				mov	word ptr ds:[3D14h],ax	; (020C:3D14=3108h)
020C:495D  F7 06 1F6E 8000			test	data_356,8000h		; (020C:1F6E=0)
020C:4963  74 40				jz	loc_567			; Jump if zero
020C:4965  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:496A  06					push	es
020C:496B  E8 307A				call	sub_88			; (79E8)
020C:496E  26: C6 06 0220 63			mov	byte ptr es:[220h],63h	; (020C:0220=0) 'c'
020C:4974  26: C6 06 0188 63			mov	byte ptr es:[188h],63h	; (020C:0188=2) 'c'
020C:497A  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:497F  9C					pushf				; Push flags
020C:4980  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:4985  5A					pop	dx
020C:4986  8E C2				mov	es,dx
020C:4988  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:498D  5A					pop	dx
020C:498E  75 0A				jnz	loc_566			; Jump if not zero
020C:4990  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:4995  74 03				je	loc_566			; Jump if equal
020C:4997  E8 3516				call	sub_97			; (7EB0)
020C:499A			loc_566:
020C:499A  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:499F  9D					popf				; Pop flags
020C:49A0  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:49A5			loc_567:
020C:49A5  F7 06 3D18 0002			test	data_594,2		; (020C:3D18=2680h)
020C:49AB  74 07				jz	loc_568			; Jump if zero
020C:49AD  B0 01				mov	al,1
020C:49AF  9A 1491:6C90		;*		call	far ptr sub_229		;*(1491:6C90)
020C:49AF  9A					db	9Ah
020C:49B0  6C90 1491				dw	6C90h, 1491h
020C:49B4			loc_568:
020C:49B4  8A 16 1D78				mov	dl,data_336		; (020C:1D78=0)
020C:49B8  80 C2 61				add	dl,61h			; 'a'
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 154

020C:49BB  88 16 1EFB				mov	data_346,dl		; (020C:1EFB=0)
020C:49BF  BA 320E				mov	dx,320Eh
020C:49C2  B4 1A				mov	ah,1Ah
020C:49C4  CD 21				int	21h			; DOS Services  ah=function 1Ah
										;  set DTA(disk xfer area) ds:dx
020C:49C6  BA 1EFD				mov	dx,1EFDh
020C:49C9  80 3E 1EFE 3A			cmp	data_348,3Ah		; (020C:1EFE=0) ':'
020C:49CE  74 03				je	loc_569			; Jump if equal
020C:49D0  BA 1EFB				mov	dx,1EFBh
020C:49D3			loc_569:
020C:49D3  B9 0000				mov	cx,0
020C:49D6  B4 4E				mov	ah,4Eh
020C:49D8  CD 21				int	21h			; DOS Services  ah=function 4Eh
										;  find 1st filenam match @ds:dx
020C:49DA  72 29				jc	loc_570			; Jump if carry Set
020C:49DC  E8 12E1				call	sub_51			; (5CC0)
020C:49DF  A0 1208				mov	al,data_139		; (020C:1208=0)
020C:49E2  88 47 52				mov	[bx+52h],al
020C:49E5  B4 19				mov	ah,19h
020C:49E7  BA 174B				mov	dx,174Bh
020C:49EA  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:49EA  9A					db	9Ah
020C:49EB  2F70 1491				dw	2F70h, 1491h
020C:49EF  3C 59				cmp	al,59h			; 'Y'
020C:49F1  74 12				je	loc_570			; Jump if equal
020C:49F3  8A 16 1D77				mov	dl,data_335		; (020C:1D77=0)
020C:49F7  B4 0E				mov	ah,0Eh
020C:49F9  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020C:49FB  E8 12EA				call	sub_52			; (5CE8)
020C:49FE  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020C:4A02  E9 EDDC				jmp	loc_345			; (37E1)
020C:4A05			loc_570:
020C:4A05  8B 1E 1326				mov	bx,data_160		; (020C:1326=0)
020C:4A09  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020C:4A0D  E8 16BC				call	sub_57			; (60CC)
020C:4A10  E8 2FDB				call	sub_90			; (79EE)
020C:4A13  B9 000C				mov	cx,0Ch
020C:4A16  BE 036A				mov	si,36Ah
020C:4A19  BF 204E				mov	di,204Eh

020C:4A1C			locloop_571:
020C:4A1C  80 3C 00				cmp	byte ptr [si],0
020C:4A1F  74 09				je	loc_572			; Jump if equal
020C:4A21  80 3C 20				cmp	byte ptr [si],20h	; ' '
020C:4A24  74 04				je	loc_572			; Jump if equal
020C:4A26  FC					cld				; Clear direction
020C:4A27  A4					movsb				; Mov [si] to es:[di]
020C:4A28  E2 F2				loop	locloop_571		; Loop if cx > 0

020C:4A2A			loc_572:
020C:4A2A  BB 3CE1				mov	bx,3CE1h
020C:4A2D  B9 0020				mov	cx,20h
020C:4A30  BE 0378				mov	si,378h
020C:4A33  BF 205E				mov	di,205Eh
020C:4A36  FC					cld				; Clear direction
020C:4A37  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 155

020C:4A39  F7 47 2E 0002			test	word ptr [bx+2Eh],2
020C:4A3E  74 03				jz	loc_573			; Jump if zero
020C:4A40  E9 2968				jmp	loc_1083		; (73AB)
020C:4A43			loc_573:
020C:4A43  F7 06 3D1A 0020			test	data_595,20h		; (020C:3D1A=176Ah)
020C:4A49  75 0A				jnz	loc_574			; Jump if not zero
020C:4A4B  C6 06 588D 2A			mov	byte ptr data_773,2Ah	; (020C:588D=0A4h) '*'
020C:4A50  C6 06 5AC4 2A			mov	byte ptr data_774,2Ah	; (020C:5AC4=0B4h) '*'
020C:4A55			loc_574:
020C:4A55  B9 FFFF				mov	cx,0FFFFh
020C:4A58  E8 2FBA				call	sub_95			; (7A15)
020C:4A5B  8B D8				mov	bx,ax
020C:4A5D  E8 2FAF				call	sub_94			; (7A0F)
020C:4A60  3B C3				cmp	ax,bx
020C:4A62  77 40				ja	loc_576			; Jump if above
020C:4A64  83 3E 1CD0 00			cmp	data_249,0		; (020C:1CD0=0)
020C:4A69  75 41				jne	loc_577			; Jump if not equal
020C:4A6B  8B 1E 1791				mov	bx,data_196		; (020C:1791=0)
020C:4A6F  8C C8				mov	ax,cs
020C:4A71  2D 0010				sub	ax,10h
020C:4A74  06					push	es
020C:4A75  8E C0				mov	es,ax
020C:4A77  B4 4A				mov	ah,4Ah
020C:4A79  CD 21				int	21h			; DOS Services  ah=function 4Ah
										;  change memory allocation
										;   bx=bytes/16, es=mem segment
020C:4A7B  07					pop	es
020C:4A7C  73 06				jnc	loc_575			; Jump if carry=0
020C:4A7E  B8 0008				mov	ax,8
020C:4A81  E9 28A0				jmp	loc_1077		; (7324)
020C:4A84			loc_575:
020C:4A84  B9 FFFF				mov	cx,0FFFFh
020C:4A87  8C CB				mov	bx,cs
020C:4A89  83 EB 10				sub	bx,10h
020C:4A8C  2B C3				sub	ax,bx
020C:4A8E  8B 1E 1791				mov	bx,data_196		; (020C:1791=0)
020C:4A92  2B D8				sub	bx,ax
020C:4A94  81 FB 1000				cmp	bx,1000h
020C:4A98  73 0A				jae	loc_576			; Jump if above or =
020C:4A9A  8B CB				mov	cx,bx
020C:4A9C  D1 E1				shl	cx,1			; Shift w/zeros fill
020C:4A9E  D1 E1				shl	cx,1			; Shift w/zeros fill
020C:4AA0  D1 E1				shl	cx,1			; Shift w/zeros fill
020C:4AA2  D1 E1				shl	cx,1			; Shift w/zeros fill
020C:4AA4			loc_576:
020C:4AA4  89 0E 3D7D				mov	word ptr ds:[3D7Dh],cx	; (020C:3D7D=3C30h)
020C:4AA8  D1 E9				shr	cx,1			; Shift w/zeros fill
020C:4AAA  EB 24				jmp	short loc_579		; (4AD0)
020C:4AAC			loc_577:
020C:4AAC  E8 2F60				call	sub_94			; (7A0F)
020C:4AAF  8B 0E 1CD0				mov	cx,data_249		; (020C:1CD0=0)
020C:4AB3  2B C8				sub	cx,ax
020C:4AB5  81 F9 1000				cmp	cx,1000h
020C:4AB9  76 03				jbe	loc_578			; Jump if below or =
020C:4ABB  B9 1000				mov	cx,1000h
020C:4ABE			loc_578:
020C:4ABE  D1 E1				shl	cx,1			; Shift w/zeros fill
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 156

020C:4AC0  D1 E1				shl	cx,1			; Shift w/zeros fill
020C:4AC2  D1 E1				shl	cx,1			; Shift w/zeros fill
020C:4AC4  89 0E 3D7D				mov	word ptr ds:[3D7Dh],cx	; (020C:3D7D=3C30h)
020C:4AC8  FF 0E 3D7D				dec	word ptr ds:[3D7Dh]	; (020C:3D7D=3C30h)
020C:4ACC  D1 26 3D7D				shl	word ptr ds:[3D7Dh],1	; (020C:3D7D=3C30h) Shift w/zeros fill
020C:4AD0			loc_579:
020C:4AD0  E8 2F1E				call	sub_91			; (79F1)
020C:4AD3  B8 FFFF				mov	ax,0FFFFh
020C:4AD6  33 FF				xor	di,di			; Zero register
020C:4AD8  FC					cld				; Clear direction
020C:4AD9  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020C:4ADB  E8 2F10				call	sub_90			; (79EE)
020C:4ADE  B4 2C				mov	ah,2Ch
020C:4AE0  CD 21				int	21h			; DOS Services  ah=function 2Ch
										;  get time, cx=hrs/min, dx=sec
020C:4AE2  89 0E 3D6C				mov	data_632,cx		; (020C:3D6C=403Ch)
020C:4AE6  89 16 3D6E				mov	data_633,dx		; (020C:3D6E=0C72h)
020C:4AEA  E8 11D3				call	sub_51			; (5CC0)
020C:4AED  A0 1207				mov	al,data_138		; (020C:1207=0)
020C:4AF0  88 47 4C				mov	[bx+4Ch],al
020C:4AF3  C6 47 4E 07				mov	byte ptr [bx+4Eh],7
020C:4AF7  C6 47 3F 00				mov	byte ptr [bx+3Fh],0
020C:4AFB  C6 47 40 00				mov	byte ptr [bx+40h],0
020C:4AFF  C6 47 56 00				mov	byte ptr [bx+56h],0
020C:4B03  C6 47 70 00				mov	byte ptr [bx+70h],0
020C:4B07  C6 47 71 00				mov	byte ptr [bx+71h],0
020C:4B0B  C6 47 72 00				mov	byte ptr [bx+72h],0
020C:4B0F  C6 47 73 00				mov	byte ptr [bx+73h],0
020C:4B13  C6 47 74 00				mov	byte ptr [bx+74h],0
020C:4B17  C6 47 75 00				mov	byte ptr [bx+75h],0
020C:4B1B  C6 47 34 00				mov	byte ptr [bx+34h],0
020C:4B1F  C6 47 35 00				mov	byte ptr [bx+35h],0
020C:4B23  C6 47 36 00				mov	byte ptr [bx+36h],0
020C:4B27  E8 314E				call	sub_96			; (7C78)
020C:4B2A  80 3E 44B6 00			cmp	data_682,0		; (020C:44B6=0C3h)
020C:4B2F  74 4B				je	loc_583			; Jump if equal
020C:4B31  BE 0000				mov	si,0
020C:4B34  E8 2EAB				call	sub_87			; (79E2)
020C:4B37  33 D2				xor	dx,dx			; Zero register
020C:4B39  B1 04				mov	cl,4
020C:4B3B			loc_580:
020C:4B3B  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020C:4B3F  74 11				je	loc_581			; Jump if equal
020C:4B41  26: 8B 44 04				mov	ax,es:[si+4]
020C:4B45  26: 2B 44 02				sub	ax,es:[si+2]
020C:4B49  D3 E8				shr	ax,cl			; Shift w/zeros fill
020C:4B4B  03 D0				add	dx,ax
020C:4B4D  83 C6 19				add	si,19h
020C:4B50  EB E9				jmp	short loc_580		; (4B3B)
020C:4B52			loc_581:
020C:4B52  81 FA 0400				cmp	dx,400h
020C:4B56  72 24				jb	loc_583			; Jump if below
020C:4B58  D1 EA				shr	dx,1			; Shift w/zeros fill
020C:4B5A  BE 0000				mov	si,0
020C:4B5D  26: 03 14				add	dx,es:[si]
020C:4B60  32 C9				xor	cl,cl			; Zero register
020C:4B62			loc_582:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 157

020C:4B62  83 C6 19				add	si,19h
020C:4B65  FE C1				inc	cl
020C:4B67  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020C:4B6B  74 0F				je	loc_583			; Jump if equal
020C:4B6D  26: 3B 14				cmp	dx,es:[si]
020C:4B70  72 F0				jb	loc_582			; Jump if below
020C:4B72  26: 8B 04				mov	ax,es:[si]
020C:4B75  A3 3D82				mov	data_637,ax		; (020C:3D82=0E432h)
020C:4B78  88 0E 3D84				mov	data_638,cl		; (020C:3D84=0FEh)
020C:4B7C			loc_583:
020C:4B7C  C7 06 178D 0010			mov	data_193,10h		; (020C:178D=0)
020C:4B82  9A 1491:3388		;*		call	far ptr sub_190		;*(1491:3388)
020C:4B82  9A					db	9Ah
020C:4B83  3388 1491				dw	3388h, 1491h
020C:4B87  B4 05				mov	ah,5
020C:4B89  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:4B89  9A					db	9Ah
020C:4B8A  2F70 1491				dw	2F70h, 1491h
020C:4B8E  8A 1E 1CDC				mov	bl,data_255		; (020C:1CDC=0)
020C:4B92  FE CB				dec	bl
020C:4B94  BA FFFF				mov	dx,0FFFFh
020C:4B97  BE 0000				mov	si,0
020C:4B9A  E8 2E45				call	sub_87			; (79E2)
020C:4B9D  32 FF				xor	bh,bh			; Zero register
020C:4B9F			loc_584:
020C:4B9F  81 FE 30F1				cmp	si,30F1h
020C:4BA3  73 08				jae	loc_585			; Jump if above or =
020C:4BA5  26: 8B 04				mov	ax,es:[si]
020C:4BA8  3D FFFF				cmp	ax,0FFFFh
020C:4BAB  75 02				jne	loc_586			; Jump if not equal
020C:4BAD			loc_585:
020C:4BAD  EB 65				jmp	short loc_597		; (4C14)
020C:4BAF			loc_586:
020C:4BAF  26: F6 44 0B 40			test	byte ptr es:[si+0Bh],40h	; '@'
020C:4BB4  74 02				jz	loc_587			; Jump if zero
020C:4BB6  FE C7				inc	bh
020C:4BB8			loc_587:
020C:4BB8  BF 30F1				mov	di,30F1h
020C:4BBB  32 C9				xor	cl,cl			; Zero register
020C:4BBD			loc_588:
020C:4BBD  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020C:4BC1  74 0F				je	loc_589			; Jump if equal
020C:4BC3  26: 3B 05				cmp	ax,es:[di]
020C:4BC6  74 12				je	loc_591			; Jump if equal
020C:4BC8  83 C7 02				add	di,2
020C:4BCB  FE C1				inc	cl
020C:4BCD  80 F9 FA				cmp	cl,0FAh
020C:4BD0  72 EB				jb	loc_588			; Jump if below
020C:4BD2			loc_589:
020C:4BD2  3B C2				cmp	ax,dx
020C:4BD4  74 02				je	loc_590			; Jump if equal
020C:4BD6  FE C3				inc	bl
020C:4BD8			loc_590:
020C:4BD8  8A CB				mov	cl,bl
020C:4BDA			loc_591:
020C:4BDA  88 0E 1CE2				mov	data_259,cl		; (020C:1CE2=0)
020C:4BDE  28 3E 1CE2				sub	data_259,bh		; (020C:1CE2=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 158

020C:4BE2  80 F9 19				cmp	cl,19h
020C:4BE5  77 07				ja	loc_592			; Jump if above
020C:4BE7  80 C1 41				add	cl,41h			; 'A'
020C:4BEA  B5 20				mov	ch,20h			; ' '
020C:4BEC  EB 13				jmp	short loc_595		; (4C01)
020C:4BEE			loc_592:
020C:4BEE  B5 41				mov	ch,41h			; 'A'
020C:4BF0			loc_593:
020C:4BF0  80 E9 1A				sub	cl,1Ah
020C:4BF3  80 F9 19				cmp	cl,19h
020C:4BF6  76 04				jbe	loc_594			; Jump if below or =
020C:4BF8  FE C5				inc	ch
020C:4BFA  EB F4				jmp	short loc_593		; (4BF0)
020C:4BFC			loc_594:
020C:4BFC  80 C1 41				add	cl,41h			; 'A'
020C:4BFF  86 CD				xchg	cl,ch
020C:4C01			loc_595:
020C:4C01  26: F7 44 0C 8000			test	word ptr es:[si+0Ch],8000h
020C:4C07  75 04				jnz	loc_596			; Jump if not zero
020C:4C09  26: 89 4C 0C				mov	es:[si+0Ch],cx
020C:4C0D			loc_596:
020C:4C0D  8B D0				mov	dx,ax
020C:4C0F  83 C6 19				add	si,19h
020C:4C12  EB 8B				jmp	short loc_584		; (4B9F)
020C:4C14			loc_597:
020C:4C14  BE 0000				mov	si,0
020C:4C17			loc_598:
020C:4C17  BF 0000				mov	di,0
020C:4C1A  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020C:4C1E  75 03				jne	loc_599			; Jump if not equal
020C:4C20  E9 0111				jmp	loc_613			; (4D34)
020C:4C23			loc_599:
020C:4C23  26: F6 44 0B 01			test	byte ptr es:[si+0Bh],1
020C:4C28  75 05				jnz	loc_601			; Jump if not zero
020C:4C2A			loc_600:
020C:4C2A  83 C6 19				add	si,19h
020C:4C2D  EB E8				jmp	short loc_598		; (4C17)
020C:4C2F			loc_601:
020C:4C2F  26: 8B 04				mov	ax,es:[si]
020C:4C32  26: 8B 5C 02				mov	bx,es:[si+2]
020C:4C36  26: 8B 4C 04				mov	cx,es:[si+4]
020C:4C3A			loc_602:
020C:4C3A  26: F6 45 0B 01			test	byte ptr es:[di+0Bh],1
020C:4C3F  74 0B				jz	loc_605			; Jump if zero
020C:4C41			loc_603:
020C:4C41  83 C7 19				add	di,19h
020C:4C44			loc_604:
020C:4C44  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020C:4C48  75 F0				jne	loc_602			; Jump if not equal
020C:4C4A  EB DE				jmp	short loc_600		; (4C2A)
020C:4C4C			loc_605:
020C:4C4C  26: 3B 05				cmp	ax,es:[di]
020C:4C4F  75 F0				jne	loc_603			; Jump if not equal
020C:4C51  26: 3B 4D 02				cmp	cx,es:[di+2]
020C:4C55  72 EA				jb	loc_603			; Jump if below
020C:4C57  26: 3B 5D 04				cmp	bx,es:[di+4]
020C:4C5B  77 E4				ja	loc_603			; Jump if above
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 159

020C:4C5D  26: 3B 5D 02				cmp	bx,es:[di+2]
020C:4C61  76 15				jbe	loc_606			; Jump if below or =
020C:4C63  26: 3B 4D 04				cmp	cx,es:[di+4]
020C:4C67  72 47				jb	loc_610			; Jump if below
020C:4C69  8B D3				mov	dx,bx
020C:4C6B  4A					dec	dx
020C:4C6C  26: 3B 55 02				cmp	dx,es:[di+2]
020C:4C70  74 1B				je	loc_608			; Jump if equal
020C:4C72  26: 89 55 04				mov	es:[di+4],dx
020C:4C76  EB C9				jmp	short loc_603		; (4C41)
020C:4C78			loc_606:
020C:4C78  26: 3B 4D 04				cmp	cx,es:[di+4]
020C:4C7C  73 0F				jae	loc_608			; Jump if above or =
020C:4C7E			loc_607:
020C:4C7E  8B D1				mov	dx,cx
020C:4C80  42					inc	dx
020C:4C81  26: 3B 55 04				cmp	dx,es:[di+4]
020C:4C85  74 06				je	loc_608			; Jump if equal
020C:4C87  26: 89 55 02				mov	es:[di+2],dx
020C:4C8B  EB B4				jmp	short loc_603		; (4C41)
020C:4C8D			loc_608:
020C:4C8D  06					push	es
020C:4C8E  1F					pop	ds
020C:4C8F  56					push	si
020C:4C90  57					push	di
020C:4C91  8B F7				mov	si,di
020C:4C93  83 C6 19				add	si,19h
020C:4C96  B9 30F1				mov	cx,30F1h
020C:4C99  2B CE				sub	cx,si
020C:4C9B  FC					cld				; Clear direction
020C:4C9C  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:4C9E  5F					pop	di
020C:4C9F  5E					pop	si
020C:4CA0  E8 2D2D				call	sub_84			; (79D0)
020C:4CA3  3B F7				cmp	si,di
020C:4CA5  72 03				jb	loc_609			; Jump if below
020C:4CA7  83 EE 19				sub	si,19h
020C:4CAA			loc_609:
020C:4CAA  FE 0E 1CD9				dec	data_254		; (020C:1CD9=0)
020C:4CAE  EB 94				jmp	short loc_604		; (4C44)
020C:4CB0			loc_610:
020C:4CB0  8B D3				mov	dx,bx
020C:4CB2  4A					dec	dx
020C:4CB3  26: 3B 55 02				cmp	dx,es:[di+2]
020C:4CB7  74 C5				je	loc_607			; Jump if equal
020C:4CB9  26: 87 55 04				xchg	es:[di+4],dx
020C:4CBD  80 3E 1CD9 FA			cmp	data_254,0FAh		; (020C:1CD9=0)
020C:4CC2  73 6D				jae	loc_612			; Jump if above or =
020C:4CC4  56					push	si
020C:4CC5  53					push	bx
020C:4CC6  50					push	ax
020C:4CC7  B8 0019				mov	ax,19h
020C:4CCA  8A 1E 1CD9				mov	bl,data_254		; (020C:1CD9=0)
020C:4CCE  F6 E3				mul	bl			; ax = reg * al
020C:4CD0  05 0000				add	ax,0
020C:4CD3  8B F0				mov	si,ax
020C:4CD5  8B D9				mov	bx,cx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 160

020C:4CD7  43					inc	bx
020C:4CD8  3B DA				cmp	bx,dx
020C:4CDA  74 53				je	loc_611			; Jump if equal
020C:4CDC  26: 89 5C 02				mov	es:[si+2],bx
020C:4CE0  58					pop	ax
020C:4CE1  26: 89 04				mov	es:[si],ax
020C:4CE4  26: 89 54 04				mov	es:[si+4],dx
020C:4CE8  26: 8B 55 06				mov	dx,es:[di+6]
020C:4CEC  26: 89 54 06				mov	es:[si+6],dx
020C:4CF0  26: 8B 55 08				mov	dx,es:[di+8]
020C:4CF4  26: 89 54 08				mov	es:[si+8],dx
020C:4CF8  26: 8B 55 0A				mov	dx,es:[di+0Ah]
020C:4CFC  26: 89 54 0A				mov	es:[si+0Ah],dx
020C:4D00  26			data_750	db	26h
020C:4D01  8B 55 0C				mov	dx,[di+0Ch]
020C:4D04  26: 89 54 0C				mov	es:[si+0Ch],dx
020C:4D08  26: 8A 55 0E				mov	dl,es:[di+0Eh]
020C:4D0C  80 E2 BF				and	dl,0BFh
020C:4D0F  26: 88 54 0E				mov	es:[si+0Eh],dl
020C:4D13  26: 8B 55 0F				mov	dx,es:[di+0Fh]
020C:4D17  26: 89 54 0F				mov	es:[si+0Fh],dx
020C:4D1B  26: 8B 55 11				mov	dx,es:[di+11h]
020C:4D1F  26: 89 54 11				mov	es:[si+11h],dx
020C:4D23  26: 8B 55 13				mov	dx,es:[di+13h]
020C:4D27  26: 89 54 13				mov	es:[si+13h],dx
020C:4D2B  FE 06 1CD9				inc	data_254		; (020C:1CD9=0)
020C:4D2F			loc_611:
020C:4D2F  5B					pop	bx
020C:4D30  5E					pop	si
020C:4D31			loc_612:
020C:4D31  E9 FF0D				jmp	loc_603			; (4C41)
020C:4D34			loc_613:
020C:4D34  E8 D369				call	sub_26			; (20A0)
020C:4D37  E8 2CA8				call	sub_87			; (79E2)
020C:4D3A  8A 16 1CD9				mov	dl,data_254		; (020C:1CD9=0)
020C:4D3E  80 FA 01				cmp	dl,1
020C:4D41  77 03				ja	loc_615			; Jump if above
020C:4D43			loc_614:
020C:4D43  B1E9					dw	0B1E9h
020C:4D45  00 BF 0000				add	byte ptr ds:[0][bx],bh	; (020C:0000=28h)
020C:4D49  32 F6				xor	dh,dh			; Zero register
020C:4D4B			loc_616:
020C:4D4B  F7 06 1F6E 1000			test	data_356,1000h		; (020C:1F6E=0)
020C:4D51  F075			data_751	dw	0F075h
020C:4D53  26			data_752	db	26h
020C:4D54  F6 45 0B 01				test	byte ptr [di+0Bh],1
020C:4D58  75 E9				jnz	loc_614			; Jump if not zero
020C:4D5A  26: 80 7D 0A 03			cmp	byte ptr es:[di+0Ah],3
020C:4D5F  74 63				je	loc_618			; Jump if equal
020C:4D61  26: 8B 4D 04				mov	cx,es:[di+4]
020C:4D65  26: 4D2B		data_753	dw	4D2Bh
020C:4D68  02			data_755	db	2
020C:4D69  83 F9 64				cmp	cx,64h
020C:4D6C  72 56				jb	loc_618			; Jump if below
020C:4D6E  E8 2C5F				call	sub_84			; (79D0)
020C:4D71  26: 8B 05				mov	ax,es:[di]
020C:4D74  3B 06 1CE9				cmp	ax,data_265		; (020C:1CE9=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 161

020C:4D78  74 4A				je	loc_618			; Jump if equal
020C:4D7A  8E D8				mov	ds,ax
020C:4D7C  26: 8B 75 02				mov	si,es:[di+2]
020C:4D80  56					push	si
020C:4D81  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:4D86  06					push	es
020C:4D87  9A 1491:4B54		;*		call	far ptr sub_201		;*(1491:4B54)
020C:4D87  9A					db	9Ah
020C:4D88  4B54 1491				dw	4B54h, 1491h
020C:4D8C  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:4D91  9C					pushf				; Push flags
020C:4D92  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:4D97  5A					pop	dx
020C:4D98  8E C2				mov	es,dx
020C:4D9A  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:4D9F  5A					pop	dx
020C:4DA0  75 0A				jnz	loc_617			; Jump if not zero
020C:4DA2  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:4DA7  74 03				je	loc_617			; Jump if equal
020C:4DA9  E8 3104				call	sub_97			; (7EB0)
020C:4DAC			loc_617:
020C:4DAC  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:4DB1  9D					popf				; Pop flags
020C:4DB2  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:4DB7  5E					pop	si
020C:4DB8  72 0A				jc	loc_618			; Jump if carry Set
020C:4DBA  FE C6				inc	dh
020C:4DBC  26: 80 4D 0E 80			or	byte ptr es:[di+0Eh],80h
020C:4DC1  26: 8B 1D				mov	bx,es:[di]
020C:4DC4			loc_618:
020C:4DC4  83 C7 19				add	di,19h
020C:4DC7  FE CA				dec	dl
020C:4DC9  75 80				jnz	loc_616			; Jump if not zero
020C:4DCB  E8 2C02				call	sub_84			; (79D0)
020C:4DCE  80 FE 01				cmp	dh,1
020C:4DD1  75 24				jne	loc_621			; Jump if not equal
020C:4DD3  8A 16 1CD9				mov	dl,byte ptr ds:[1CD9h]	; (9C00:1CD9=0Dh)
020C:4DD7  BF 0000				mov	di,0
020C:4DDA			loc_619:
020C:4DDA  26: 80 7D 0A 03			cmp	byte ptr es:[di+0Ah],3
020C:4DDF  74 0F				je	loc_620			; Jump if equal
020C:4DE1  26: F6 45 0E 80			test	byte ptr es:[di+0Eh],80h
020C:4DE6  75 08				jnz	loc_620			; Jump if not zero
020C:4DE8  26: 89 5D 06				mov	es:[di+6],bx
020C:4DEC  26: 89 5D 08				mov	es:[di+8],bx
020C:4DF0			loc_620:
020C:4DF0  83 C7 19				add	di,19h
020C:4DF3  FE CA				dec	dl
020C:4DF5  75 E3				jnz	loc_619			; Jump if not zero
020C:4DF7			loc_621:
020C:4DF7  E8 2BD6				call	sub_84			; (79D0)
020C:4DFA  F6 06 22EA 40			test	byte ptr ds:[22EAh],40h	; (9C00:22EA=0A8h) '@'
020C:4DFF  74 27				jz	loc_623			; Jump if zero
020C:4E01  9A 1491:2BF4		;*		call	far ptr sub_178		;*(1491:2BF4)
020C:4E01  9A					db	9Ah
020C:4E02  2BF4 1491				dw	2BF4h, 1491h
020C:4E06  C6 06 22FF 00			mov	byte ptr ds:[22FFh],0	; (9C00:22FF=2Ch)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 162

020C:4E0B  9A 1491:8E30		;*		call	far ptr sub_261		;*(1491:8E30)
020C:4E0B  9A					db	9Ah
020C:4E0C  8E30 1491				dw	8E30h, 1491h
020C:4E10  8B 1E 3009				mov	bx,word ptr ds:[3009h]	; (9C00:3009=3C7Ch)
020C:4E14  E8 58B1				call	sub_115			; (A6C8)
020C:4E17  80 3E 1790 01			cmp	byte ptr ds:[1790h],1	; (9C00:1790=0ADh)
020C:4E1C  75 07				jne	loc_622			; Jump if not equal
020C:4E1E  8B 1E 3009				mov	bx,word ptr ds:[3009h]	; (9C00:3009=3C7Ch)
020C:4E22  E8 58A3				call	sub_115			; (A6C8)
020C:4E25			loc_622:
020C:4E25  E9 21D8				jmp	loc_1051		; (7000)
020C:4E28			loc_623:
020C:4E28  9A 1491:7624		;*		call	far ptr sub_241		;*(1491:7624)
020C:4E28  9A					db	9Ah
020C:4E29  7624 1491				dw	7624h, 1491h
020C:4E2D  F7 06 3D1D 1000			test	word ptr ds:[3D1Dh],1000h	; (9C00:3D1D=0)
020C:4E33  75 42				jnz	loc_627			; Jump if not zero
020C:4E35  B2 00				mov	dl,0
020C:4E37			loc_624:
020C:4E37  E8 2BA8				call	sub_87			; (79E2)
020C:4E3A  B8 0019				mov	ax,19h
020C:4E3D  F6 E2				mul	dl			; ax = reg * al
020C:4E3F  05 0000				add	ax,0
020C:4E42  8B D8				mov	bx,ax
020C:4E44  26: 8B 47 0A				mov	ax,es:[bx+0Ah]
020C:4E48  3C 03				cmp	al,3
020C:4E4A  74 23				je	loc_626			; Jump if equal
020C:4E4C  3C 0A				cmp	al,0Ah
020C:4E4E  74 1F				je	loc_626			; Jump if equal
020C:4E50  26: 8B 07				mov	ax,es:[bx]
020C:4E53  26: 8B 7F 02				mov	di,es:[bx+2]
020C:4E57  26: 8B 4F 04				mov	cx,es:[bx+4]
020C:4E5B  8E C0				mov	es,ax
020C:4E5D  2B CF				sub	cx,di
020C:4E5F  81 F9 03E8				cmp	cx,3E8h
020C:4E63  72 03				jb	loc_625			; Jump if below
020C:4E65  B9 03E8				mov	cx,3E8h
020C:4E68			loc_625:
020C:4E68  9A 1491:72F0		;*		call	far ptr sub_238		;*(1491:72F0)
020C:4E68  9A					db	9Ah
020C:4E69  72F0 1491				dw	72F0h, 1491h
020C:4E6D  72 08				jc	loc_627			; Jump if carry Set
020C:4E6F			loc_626:
020C:4E6F  FE C2				inc	dl
020C:4E71  3A 16 1CD9				cmp	dl,byte ptr ds:[1CD9h]	; (9C00:1CD9=0Dh)
020C:4E75  76 C0				jbe	loc_624			; Jump if below or =
020C:4E77			loc_627:
020C:4E77  E8 2B68				call	sub_87			; (79E2)
020C:4E7A  26: A1 0000				mov	ax,word ptr es:[0]	; (1828:0000=0E6BFh)
020C:4E7E  A3 1CF0				mov	word ptr ds:[1CF0h],ax	; (9C00:1CF0=0EFACh)
020C:4E81  E9 907C				jmp	loc_2330		; (DF00)
							                        ;* No entry point to code
020C:4E84  80 3E 22FF 00			cmp	byte ptr ds:[22FFh],0	; (9C00:22FF=2Ch)
020C:4E89  74 5C				je	loc_628			; Jump if equal
020C:4E8B  E8 2B60				call	sub_90			; (79EE)
020C:4E8E  BF 0378				mov	di,378h
020C:4E91  B9 0021				mov	cx,21h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 163

020C:4E94  B0 20				mov	al,20h			; ' '
020C:4E96  FC					cld				; Clear direction
020C:4E97  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:4E99  E8 0E24				call	sub_51			; (5CC0)
020C:4E9C  C6 47 52 00				mov	byte ptr [bx+52h],0
020C:4EA0  C6 47 69 0F				mov	byte ptr [bx+69h],0Fh
020C:4EA4  C6 47 33 0F				mov	byte ptr [bx+33h],0Fh
020C:4EA8  C6 47 66 0F				mov	byte ptr [bx+66h],0Fh
020C:4EAC  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020C:4EB0  E8 096D				call	sub_42			; (5820)
020C:4EB3  B4 02				mov	ah,2
020C:4EB5  32 FF				xor	bh,bh			; Zero register
020C:4EB7  BA 0912				mov	dx,912h
020C:4EBA  9A 1491:3220		;*		call	far ptr sub_187		;*(1491:3220)
020C:4EBA  9A					db	9Ah
020C:4EBB  3220 1491				dw	3220h, 1491h
020C:4EBF  E8 1216				call	sub_58			; (60D8)
020C:4EC2  BE 0378				mov	si,378h
020C:4EC5  B1 20				mov	cl,20h			; ' '
020C:4EC7  B3 01				mov	bl,1
020C:4EC9  9A 1491:06C0		;*		call	far ptr sub_162		;*(1491:06C0)
020C:4EC9  9A					db	9Ah
020C:4ECA  06C0 1491				dw	6C0h, 1491h
020C:4ECE  E8 0E17				call	sub_52			; (5CE8)
020C:4ED1  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020C:4ED5  C6 47 69 07				mov	byte ptr [bx+69h],7
020C:4ED9  C6 47 66 07				mov	byte ptr [bx+66h],7
020C:4EDD  C6 47 67 00				mov	byte ptr [bx+67h],0
020C:4EE1  E8 11E8				call	sub_57			; (60CC)
020C:4EE4  E8 0A65				call	sub_43			; (594C)
020C:4EE7			loc_628:
020C:4EE7  E9 E917				jmp	loc_346			; (3801)
							                        ;* No entry point to code
020C:4EEA  2E: 80 3E 4735 00			cmp	byte ptr cs:[4735h],0	; (020C:4735=1Eh)
020C:4EF0  74 08				je	loc_629			; Jump if equal
020C:4EF2  9A 1491:3108		;*		call	far ptr sub_183		;*(1491:3108)
020C:4EF2  9A					db	9Ah
020C:4EF3  3108 1491				dw	3108h, 1491h
020C:4EF7  E9 E907				jmp	loc_346			; (3801)
020C:4EFA			loc_629:
020C:4EFA  E8 0013				call	sub_39			; (4F10)
020C:4EFD  80 3E 1E9A 00			cmp	byte ptr ds:[1E9Ah],0	; (9C00:1E9A=0E2h)
020C:4F02  74 03				je	loc_630			; Jump if equal
020C:4F04  E8 2D71				call	sub_96			; (7C78)
020C:4F07			loc_630:
020C:4F07  E8 0DDE				call	sub_52			; (5CE8)
020C:4F0A  E8 0A3F				call	sub_43			; (594C)
020C:4F0D  E9 E8F1				jmp	loc_346			; (3801)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:4F10			sub_39		proc	near
020C:4F10  E8 0DAD				call	sub_51			; (5CC0)
020C:4F13  C6 47 53 00				mov	byte ptr [bx+53h],0
020C:4F17  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 164

020C:4F1B  B4 02				mov	ah,2
020C:4F1D  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:4F1D  9A					db	9Ah
020C:4F1E  2F70 1491				dw	2F70h, 1491h
020C:4F22  B4 02				mov	ah,2
020C:4F24  32 FF				xor	bh,bh			; Zero register
020C:4F26  BA 171A				mov	dx,171Ah
020C:4F29  9A 1491:3220		;*		call	far ptr sub_187		;*(1491:3220)
020C:4F29  9A					db	9Ah
020C:4F2A  3220 1491				dw	3220h, 1491h
020C:4F2E  E8 11A7				call	sub_58			; (60D8)
020C:4F31  B1 28				mov	cl,28h			; '('
020C:4F33  B3 01				mov	bl,1
020C:4F35  BE 07E0				mov	si,7E0h
020C:4F38  9A 1491:06C0		;*		call	far ptr sub_162		;*(1491:06C0)
020C:4F38  9A					db	9Ah
020C:4F39  06C0 1491				dw	6C0h, 1491h
020C:4F3D  B3 28				mov	bl,28h			; '('
020C:4F3F  2A D9				sub	bl,cl
020C:4F41  32 FF				xor	bh,bh			; Zero register
020C:4F43  FB83			data_759	dw	0FB83h
020C:4F45  00 75 02				add	[di+2],dh
020C:4F48  EB 64				jmp	short loc_633		; (4FAE)
							                        ;* No entry point to code
020C:4F4A  3C 1B				cmp	al,1Bh
020C:4F4C  75 02				jne	loc_631			; Jump if not equal
020C:4F4E  EB 5E				jmp	short loc_633		; (4FAE)
020C:4F50			loc_631:
020C:4F50  E8 2A9B				call	sub_90			; (79EE)
020C:4F53  BF 07E0				mov	di,7E0h
020C:4F56  B0 20				mov	al,20h			; ' '
020C:4F58  8B CB				mov	cx,bx
020C:4F5A  FC					cld				; Clear direction
020C:4F5B  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020C:4F5D  74 4F				jz	loc_633			; Jump if zero
020C:4F5F  BF 07E0				mov	di,7E0h
020C:4F62  B0 20				mov	al,20h			; ' '
020C:4F64  9A 1491:2C28		;*		call	far ptr sub_179		;*(1491:2C28)
020C:4F64  9A					db	9Ah
020C:4F65  2C28 1491				dw	2C28h, 1491h
020C:4F69  9A 1491:2CB0		;*		call	far ptr sub_180		;*(1491:2CB0)
020C:4F69  9A					db	9Ah
020C:4F6A  2CB0 1491				dw	2CB0h, 1491h
020C:4F6E  A2 1F6B				mov	byte ptr ds:[1F6Bh],al	; (9C00:1F6B=0A0h)
020C:4F71  3C 01				cmp	al,1
020C:4F73  77 0C				ja	loc_632			; Jump if above
020C:4F75  E8 1154				call	sub_57			; (60CC)
020C:4F78  B4 10				mov	ah,10h
020C:4F7A  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:4F7A  9A					db	9Ah
020C:4F7B  2F70 1491				dw	2F70h, 1491h
020C:4F7F  EB 2D				jmp	short loc_633		; (4FAE)
020C:4F81			loc_632:
020C:4F81  BF 1E9A				mov	di,1E9Ah
020C:4F84  B9 0060				mov	cx,60h
020C:4F87  B0 00				mov	al,0
020C:4F89  FC					cld				; Clear direction
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 165

020C:4F8A  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:4F8C  BF 0649				mov	di,649h
020C:4F8F  B9 000C				mov	cx,0Ch
020C:4F92  B0 20				mov	al,20h			; ' '
020C:4F94  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:4F96  BE 07E0				mov	si,7E0h
020C:4F99  BF 1E9A				mov	di,1E9Ah
020C:4F9C  8B CB				mov	cx,bx
020C:4F9E  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:4FA0  4F					dec	di
020C:4FA1  9A 1491:BB80		;*		call	far ptr sub_269		;*(1491:BB80)
020C:4FA1  9A					db	9Ah
020C:4FA2  BB80 1491				dw	0BB80h, 1491h
020C:4FA6  E8 493B				call	sub_113			; (98E4)
020C:4FA9  73 03				jnc	loc_633			; Jump if carry=0
020C:4FAB  E9 2376				jmp	loc_1077		; (7324)
020C:4FAE			loc_633:
020C:4FAE  8A 26 1F6A				mov	ah,byte ptr ds:[1F6Ah]	; (9C00:1F6A=0AFh)
020C:4FB2  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:4FB2  9A					db	9Ah
020C:4FB3  2F70 1491				dw	2F70h, 1491h
020C:4FB7  E8 0D2E				call	sub_52			; (5CE8)
020C:4FBA  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020C:4FBE  C6 47 53 07				mov	byte ptr [bx+53h],7
020C:4FC2  C6 47 67 00				mov	byte ptr [bx+67h],0
020C:4FC6  E8 1103				call	sub_57			; (60CC)
020C:4FC9  E8 0980				call	sub_43			; (594C)
020C:4FCC  C3					retn
				sub_39		endp

							                        ;* No entry point to code
020C:4FCD  80 3E 163D 01			cmp	data_172,1		; (020C:163D=0)
020C:4FD2  75 07				jne	loc_634			; Jump if not equal
020C:4FD4  80 36 163F 01			xor	data_174,1		; (020C:163F=0)
020C:4FD9  EB 09				jmp	short loc_635		; (4FE4)
020C:4FDB			loc_634:
020C:4FDB  FE 06 163F				inc	data_174		; (020C:163F=0)
020C:4FDF  80 26 163F 03			and	data_174,3		; (020C:163F=0)
020C:4FE4			loc_635:
020C:4FE4  E8 11E1				call	sub_61			; (61C8)
020C:4FE7  E8 F7AE				call	sub_38			; (4798)
020C:4FEA  E8 095F				call	sub_43			; (594C)
020C:4FED  E9 E811				jmp	loc_346			; (3801)
							                        ;* No entry point to code
020C:4FF0  F7 06 1D48 01C0			test	data_312,1C0h		; (020C:1D48=0)
020C:4FF6  75 38				jnz	loc_639			; Jump if not zero
020C:4FF8  8A 36 1D5A				mov	dh,data_314		; (020C:1D5A=0)
020C:4FFC  F6 C6 3F				test	dh,3Fh			; '?'
020C:4FFF  74 04				jz	loc_636			; Jump if zero
020C:5001  B6 00				mov	dh,0
020C:5003  EB 45				jmp	short loc_642		; (504A)
020C:5005			loc_636:
020C:5005  F6 06 1D5C 80			test	data_316,80h		; (020C:1D5C=0)
020C:500A  75 07				jnz	loc_637			; Jump if not zero
020C:500C  80 0E 1D5C 80			or	data_316,80h		; (020C:1D5C=0)
020C:5011  EB 3B				jmp	short loc_643		; (504E)
020C:5013			loc_637:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 166

020C:5013  80 26 1D5C 7F			and	data_316,7Fh		; (020C:1D5C=0)
020C:5018  B6 01				mov	dh,1
020C:501A  F7 06 1D48 0010			test	data_312,10h		; (020C:1D48=0)
020C:5020  74 02				jz	loc_638			; Jump if zero
020C:5022  B6 02				mov	dh,2
020C:5024			loc_638:
020C:5024  F7 06 1D48 0020			test	data_312,20h		; (020C:1D48=0)
020C:502A  74 1E				jz	loc_642			; Jump if zero
020C:502C  B6 04				mov	dh,4
020C:502E  EB 1A				jmp	short loc_642		; (504A)
020C:5030			loc_639:
020C:5030  F7 06 1D48 0040			test	data_312,40h		; (020C:1D48=0)
020C:5036  74 04				jz	loc_640			; Jump if zero
020C:5038  B6 0C				mov	dh,0Ch
020C:503A  EB 0E				jmp	short loc_642		; (504A)
020C:503C			loc_640:
020C:503C  F7 06 1D48 0080			test	data_312,80h		; (020C:1D48=0)
020C:5042  74 04				jz	loc_641			; Jump if zero
020C:5044  B6 14				mov	dh,14h
020C:5046  EB 02				jmp	short loc_642		; (504A)
020C:5048			loc_641:
020C:5048  B6 24				mov	dh,24h			; '$'
020C:504A			loc_642:
020C:504A  88 36 1D5A				mov	data_314,dh		; (020C:1D5A=0)
020C:504E			loc_643:
020C:504E  B6 01				mov	dh,1
020C:5050  E8 0B65				call	sub_50			; (5BB8)
020C:5053  E9 E7AB				jmp	loc_346			; (3801)
							                        ;* No entry point to code
020C:5056  80 3E 22FF 01			cmp	data_448,1		; (020C:22FF=0)
020C:505B  75 1C				jne	loc_644			; Jump if not equal
020C:505D  FE 06 22FB				inc	data_444		; (020C:22FB=0)
020C:5061  80 26 22FB 01			and	data_444,1		; (020C:22FB=0)
020C:5066  8B 1E 1326				mov	bx,data_160		; (020C:1326=0)
020C:506A  C6 47 4A 07				mov	byte ptr [bx+4Ah],7
020C:506E  F6 06 22FB 01			test	data_444,1		; (020C:22FB=0)
020C:5073  74 04				jz	loc_644			; Jump if zero
020C:5075  C6 47 4A 00				mov	byte ptr [bx+4Ah],0
020C:5079			loc_644:
020C:5079  E8 08D0				call	sub_43			; (594C)
020C:507C  E9 E782				jmp	loc_346			; (3801)
020C:507F  E8 0C3E				call	sub_51			; (5CC0)
020C:5082  C6 47 68 00				mov	byte ptr [bx+68h],0
020C:5086  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020C:508A  B4 03				mov	ah,3
020C:508C  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:508C  9A					db	9Ah
020C:508D  2F70 1491				dw	2F70h, 1491h
020C:5091  B4 02				mov	ah,2
020C:5093  32 FF				xor	bh,bh			; Zero register
020C:5095  BA 171A				mov	dx,171Ah
020C:5098  9A 1491:3220		;*		call	far ptr sub_187		;*(1491:3220)
020C:5098  9A					db	9Ah
020C:5099  3220 1491				dw	3220h, 1491h
020C:509D  E8 1038				call	sub_58			; (60D8)
020C:50A0  B1 28				mov	cl,28h			; '('
020C:50A2  B3 03				mov	bl,3
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 167

020C:50A4  BE 07E0				mov	si,7E0h
020C:50A7  9A 1491:06C0		;*		call	far ptr sub_162		;*(1491:06C0)
020C:50A7  9A					db	9Ah
020C:50A8  06C0 1491				dw	6C0h, 1491h
020C:50AC  B3 28				mov	bl,28h			; '('
020C:50AE  2A D9				sub	bl,cl
020C:50B0  32 FF				xor	bh,bh			; Zero register
020C:50B2  83 FB 00				cmp	bx,0
020C:50B5  74 13				je	loc_645			; Jump if equal
020C:50B7  3C 1B				cmp	al,1Bh
020C:50B9  74 0F				je	loc_645			; Jump if equal
020C:50BB  E8 2930				call	sub_90			; (79EE)
020C:50BE  BF 07E0				mov	di,7E0h
020C:50C1  B0 20				mov	al,20h			; ' '
020C:50C3  8B CB				mov	cx,bx
020C:50C5  FC					cld				; Clear direction
020C:50C6  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020C:50C8  75 03				jnz	loc_646			; Jump if not zero
020C:50CA			loc_645:
020C:50CA  E9 0086				jmp	loc_650			; (5153)
020C:50CD			loc_646:
020C:50CD  FC					cld				; Clear direction
020C:50CE  BF 1EFD				mov	di,1EFDh
020C:50D1  B9 0029				mov	cx,29h
020C:50D4  B0 00				mov	al,0
020C:50D6  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:50D8  BF 036A				mov	di,36Ah
020C:50DB  B9 000C				mov	cx,0Ch
020C:50DE  B0 20				mov	al,20h			; ' '
020C:50E0  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:50E2  BE 07E0				mov	si,7E0h
020C:50E5  BF 1EFD				mov	di,1EFDh
020C:50E8  8B CB				mov	cx,bx
020C:50EA  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:50EC  9A 1491:2B90		;*		call	far ptr sub_177		;*(1491:2B90)
020C:50EC  9A					db	9Ah
020C:50ED  2B90 1491				dw	2B90h, 1491h
020C:50F1  83 C3 04				add	bx,4
020C:50F4  47					inc	di
020C:50F5  8B CB				mov	cx,bx
020C:50F7			loc_647:
020C:50F7  8A 05				mov	al,[di]
020C:50F9  3C 3A				cmp	al,3Ah			; ':'
020C:50FB  74 0D				je	loc_648			; Jump if equal
020C:50FD  3C 5C				cmp	al,5Ch			; '\'
020C:50FF  74 09				je	loc_648			; Jump if equal
020C:5101  83 F9 01				cmp	cx,1
020C:5104  76 05				jbe	loc_649			; Jump if below or =
020C:5106  49					dec	cx
020C:5107  4F					dec	di
020C:5108  EB ED				jmp	short loc_647		; (50F7)
020C:510A			loc_648:
020C:510A  47					inc	di
020C:510B			loc_649:
020C:510B  2B D9				sub	bx,cx
020C:510D  8B CB				mov	cx,bx
020C:510F  41					inc	cx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 168

020C:5110  F983			data_761	dw	0F983h
020C:5112  770C			data_762	dw	770Ch
020C:5114  3E					db	3Eh
020C:5115  8B F7				mov	si,di
020C:5117  BF 036A				mov	di,36Ah
020C:511A  FC					cld				; Clear direction
020C:511B  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:511D  80 3E 1EFE 3A			cmp	data_348,3Ah		; (020C:1EFE=0) ':'
020C:5122  75 2F				jne	loc_650			; Jump if not equal
020C:5124  A0 1EFD				mov	al,data_347		; (020C:1EFD=0)
020C:5127  24 5F				and	al,5Fh			; '_'
020C:5129  3C 41				cmp	al,41h			; 'A'
020C:512B  72 26				jb	loc_650			; Jump if below
020C:512D  3C 5A				cmp	al,5Ah			; 'Z'
020C:512F  77 22				ja	loc_650			; Jump if above
020C:5131  8A D0				mov	dl,al
020C:5133  80 EA 41				sub	dl,41h			; 'A'
020C:5136  8A DA				mov	bl,dl
020C:5138  B4 0E				mov	ah,0Eh
020C:513A  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020C:513C  B4 19				mov	ah,19h
020C:513E  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020C:5140  A2 1D78				mov	data_336,al		; (020C:1D78=0)
020C:5143  04 61				add	al,61h			; 'a'
020C:5145  A2 066E				mov	byte ptr ds:[66Eh],al	; (020C:066E=0Eh)
020C:5148  E8 09B5				call	sub_49			; (5B00)
020C:514B  8A 16 1D77				mov	dl,data_335		; (020C:1D77=0)
020C:514F  B4 0E				mov	ah,0Eh
020C:5151  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020C:5153			loc_650:
020C:5153  E8 0B92				call	sub_52			; (5CE8)
020C:5156  C6 47 68 07				mov	byte ptr [bx+68h],7
020C:515A  C6 47 67 00				mov	byte ptr [bx+67h],0
020C:515E  8A 26 1F6A				mov	ah,data_352		; (020C:1F6A=0)
020C:5162  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:5162  9A					db	9Ah
020C:5163  2F70 1491				dw	2F70h, 1491h
020C:5167  E8 0F62				call	sub_57			; (60CC)
020C:516A  E8 07DF				call	sub_43			; (594C)
020C:516D  E9 E691				jmp	loc_346			; (3801)
							                        ;* No entry point to code
020C:5170  A0 178F				mov	al,data_194		; (020C:178F=0)
020C:5173  04 02				add	al,2
020C:5175  3C 14				cmp	al,14h
020C:5177  72 02				jb	loc_651			; Jump if below
020C:5179  B0 04				mov	al,4
020C:517B			loc_651:
020C:517B  E8 1362				call	sub_68			; (64E0)
020C:517E  E9 E680				jmp	loc_346			; (3801)
020C:5181			loc_652:
020C:5181  B4 11				mov	ah,11h
020C:5183  E9 2301				jmp	loc_1091		; (7487)
							                        ;* No entry point to code
020C:5186  A0 1700				mov	al,byte ptr ds:[1700h]	; (020C:1700=41h)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 169

020C:5189  BB 1702				mov	bx,1702h
020C:518C  D7					xlat				; al=[al+[bx]] table
020C:518D  A2 1700				mov	byte ptr ds:[1700h],al	; (020C:1700=41h)
020C:5190  E8 10D9				call	sub_62			; (626C)
020C:5193  E8 07B6				call	sub_43			; (594C)
020C:5196  E9 E668				jmp	loc_346			; (3801)
							                        ;* No entry point to code
020C:5199  80 3E 22FF 00			cmp	data_448,0		; (020C:22FF=0)
020C:519E  74 20				je	loc_656			; Jump if equal
020C:51A0  A0 22FC				mov	al,data_445		; (020C:22FC=0)
020C:51A3  A8 01				test	al,1
020C:51A5  74 0C				jz	loc_654			; Jump if zero
020C:51A7  A8 02				test	al,2
020C:51A9  74 04				jz	loc_653			; Jump if zero
020C:51AB  B0 09				mov	al,9
020C:51AD  EB 06				jmp	short loc_655		; (51B5)
020C:51AF			loc_653:
020C:51AF  B0 02				mov	al,2
020C:51B1  EB 02				jmp	short loc_655		; (51B5)
020C:51B3			loc_654:
020C:51B3  B0 03				mov	al,3
020C:51B5			loc_655:
020C:51B5  A2 22FC				mov	data_445,al		; (020C:22FC=0)
020C:51B8  9A 1491:0A94		;*		call	far ptr sub_170		;*(1491:0A94)
020C:51B8  9A					db	9Ah
020C:51B9  0A94 1491				dw	0A94h, 1491h
020C:51BD  E8 078C				call	sub_43			; (594C)
020C:51C0			loc_656:
020C:51C0  E9 E63E				jmp	loc_346			; (3801)
							                        ;* No entry point to code
020C:51C3  BF 13F5				mov	di,13F5h
020C:51C6  A0 13F0				mov	al,data_166		; (020C:13F0=0)
020C:51C9  32 C9				xor	cl,cl			; Zero register
020C:51CB			loc_657:
020C:51CB  3A 05				cmp	al,[di]
020C:51CD  74 0C				je	loc_658			; Jump if equal
020C:51CF  FE C1				inc	cl
020C:51D1  80 F9 10				cmp	cl,10h
020C:51D4  73 05				jae	loc_658			; Jump if above or =
020C:51D6  83 C7 11				add	di,11h
020C:51D9  EB F0				jmp	short loc_657		; (51CB)
020C:51DB			loc_658:
020C:51DB  80 F9 0F				cmp	cl,0Fh
020C:51DE  72 03				jb	loc_659			; Jump if below
020C:51E0  BF 13E4				mov	di,13E4h
020C:51E3			loc_659:
020C:51E3  83 C7 11				add	di,11h
020C:51E6  8B 45 0D				mov	ax,[di+0Dh]
020C:51E9  A3 13F1				mov	data_167,ax		; (020C:13F1=0)
020C:51EC  8A 05				mov	al,[di]
020C:51EE  A2 13F0				mov	data_166,al		; (020C:13F0=0)
020C:51F1  8B 45 0B				mov	ax,[di+0Bh]
020C:51F4  A3 13F3				mov	data_168,ax		; (020C:13F3=0)
020C:51F7  9A 1491:319C		;*		call	far ptr sub_185		;*(1491:319C)
020C:51F7  9A					db	9Ah
020C:51F8  319C 1491				dw	319Ch, 1491h
020C:51FC  E8 074D				call	sub_43			; (594C)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 170

020C:51FF  E9 E5FF				jmp	loc_346			; (3801)
020C:5202  01 00				add	[bx+si],ax
020C:5204  02 00				add	al,[bx+si]
020C:5206  04 00				add	al,0
020C:5208  10 00				adc	[bx+si],al
020C:520A  18 00				sbb	[bx+si],al
020C:520C  20 00				and	[bx+si],al
020C:520E  28 00				sub	[bx+si],al
020C:5210  40					inc	ax
020C:5211  00 48 00		;*		add	[bx+si+0],cl
020C:5211  00 48 00				db	 00h, 48h, 00h
020C:5214  88 00				mov	[bx+si],al
020C:5216  08 01				or	[bx+di],al
020C:5218  00 00				add	[bx+si],al
020C:521A  8B 16 1D48				mov	dx,data_312		; (020C:1D48=0)
020C:521E  B8 0000				mov	ax,0
020C:5221  56					push	si
020C:5222  BE 1CC2				mov	si,1CC2h
020C:5225			loc_660:
020C:5225  2E: 3B 14				cmp	dx,cs:[si]
020C:5228  74 14				je	loc_662			; Jump if equal
020C:522A  46					inc	si
020C:522B  46					inc	si
020C:522C  2E: 83 3C 00				cmp	word ptr cs:[si],0
020C:5230  74 02				je	loc_661			; Jump if equal
020C:5232  EB F1				jmp	short loc_660		; (5225)
020C:5234			loc_661:
020C:5234  BA 0001				mov	dx,1
020C:5237  C6 06 1D5A 00			mov	data_314,0		; (020C:1D5A=0)
020C:523C  4E					dec	si
020C:523D  4E					dec	si
020C:523E			loc_662:
020C:523E  46					inc	si
020C:523F  46					inc	si
020C:5240  2E: 83 3C 00				cmp	word ptr cs:[si],0
020C:5244  75 08				jne	loc_663			; Jump if not equal
020C:5246  BE 1CC2				mov	si,1CC2h
020C:5249  C6 06 1D5A 00			mov	data_314,0		; (020C:1D5A=0)
020C:524E			loc_663:
020C:524E  2E: 8B 14				mov	dx,cs:[si]
020C:5251  5E					pop	si
020C:5252  89 16 1D48				mov	data_312,dx		; (020C:1D48=0)
020C:5256  F6 06 1D5A 3F			test	data_314,3Fh		; (020C:1D5A=0) '?'
020C:525B  74 1F				jz	loc_665			; Jump if zero
020C:525D  C6 06 1D5A 01			mov	data_314,1		; (020C:1D5A=0)
020C:5262  F7 C2 0010				test	dx,10h
020C:5266  74 07				jz	loc_664			; Jump if zero
020C:5268  C6 06 1D5A 02			mov	data_314,2		; (020C:1D5A=0)
020C:526D  EB 0D				jmp	short loc_665		; (527C)
020C:526F			loc_664:
020C:526F  F7 C2 0020				test	dx,20h
020C:5273  74 07				jz	loc_665			; Jump if zero
020C:5275  C6 06 1D5A 04			mov	data_314,4		; (020C:1D5A=0)
020C:527A  EB 25				jmp	short loc_668		; (52A1)
020C:527C			loc_665:
020C:527C  F7 C2 0040				test	dx,40h
020C:5280  74 07				jz	loc_666			; Jump if zero
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 171

020C:5282  C6 06 1D5A 0C			mov	data_314,0Ch		; (020C:1D5A=0)
020C:5287  EB 18				jmp	short loc_668		; (52A1)
020C:5289			loc_666:
020C:5289  F7 C2 0080				test	dx,80h
020C:528D  74 07				jz	loc_667			; Jump if zero
020C:528F  C6 06 1D5A 14			mov	data_314,14h		; (020C:1D5A=0)
020C:5294  EB 0B				jmp	short loc_668		; (52A1)
020C:5296			loc_667:
020C:5296  F7 C2 0100				test	dx,100h
020C:529A  74 05				jz	loc_668			; Jump if zero
020C:529C  C6 06 1D5A 24			mov	data_314,24h		; (020C:1D5A=0) '$'
020C:52A1			loc_668:
020C:52A1  B6 01				mov	dh,1
020C:52A3  E8 0912				call	sub_50			; (5BB8)
020C:52A6  E9 E558				jmp	loc_346			; (3801)
							                        ;* No entry point to code
020C:52A9  80 3E 22F6 00			cmp	data_441,0		; (020C:22F6=0)
020C:52AE  74 13				je	loc_670			; Jump if equal
020C:52B0  80 3E 22F7 00			cmp	byte ptr data_442,0	; (020C:22F7=0)
020C:52B5  75 05				jne	loc_669			; Jump if not equal
020C:52B7  C6 06 22F6 00			mov	data_441,0		; (020C:22F6=0)
020C:52BC			loc_669:
020C:52BC  C6 06 22F7 00			mov	byte ptr data_442,0	; (020C:22F7=0)
020C:52C1  EB 0A				jmp	short loc_671		; (52CD)
020C:52C3			loc_670:
020C:52C3  C6 06 22F6 60			mov	data_441,60h		; (020C:22F6=0) '`'
020C:52C8  C6 06 22F7 60			mov	byte ptr data_442,60h	; (020C:22F7=0) '`'
020C:52CD			loc_671:
020C:52CD  E8 F4C8				call	sub_38			; (4798)
020C:52D0  E8 0679				call	sub_43			; (594C)
020C:52D3  E9 E52B				jmp	loc_346			; (3801)
							                        ;* No entry point to code
020C:52D6  80 3E 22FF 00			cmp	data_448,0		; (020C:22FF=0)
020C:52DB  74 23				je	loc_674			; Jump if equal
020C:52DD  8A 1E 3D78				mov	bl,data_634		; (020C:3D78=4)
020C:52E1  F6 C3 07				test	bl,7
020C:52E4  74 07				jz	loc_672			; Jump if zero
020C:52E6  C6 06 3D78 00			mov	data_634,0		; (020C:3D78=4)
020C:52EB  EB 0D				jmp	short loc_673		; (52FA)
020C:52ED			loc_672:
020C:52ED  80 0E 3D78 07			or	data_634,7		; (020C:3D78=4)
020C:52F2  B0 0A				mov	al,0Ah
020C:52F4  E8 11E9				call	sub_68			; (64E0)
020C:52F7  E9 E507				jmp	loc_346			; (3801)
020C:52FA			loc_673:
020C:52FA  E8 0E7B				call	sub_60			; (6178)
020C:52FD  E9 E501				jmp	loc_346			; (3801)
020C:5300			loc_674:
020C:5300  E9 E559				jmp	loc_353			; (385C)
							                        ;* No entry point to code
020C:5303  E8 09BA				call	sub_51			; (5CC0)
020C:5306  B4 18				mov	ah,18h
020C:5308  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:5308  9A					db	9Ah
020C:5309  2F70 1491				dw	2F70h, 1491h
020C:530D  9A 1491:0800		;*		call	far ptr sub_163		;*(1491:0800)
020C:530D  9A					db	9Ah
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 172

020C:530E  0800 1491				dw	800h, 1491h
020C:5312  2C 30				sub	al,30h			; '0'
020C:5314  3C 7F				cmp	al,7Fh
020C:5316  77 3A				ja	loc_676			; Jump if above
020C:5318  A2 22EA				mov	data_433,al		; (020C:22EA=1)
020C:531B  A8 EB				test	al,0EBh
020C:531D  74 2F				jz	loc_675			; Jump if zero
020C:531F  80 3E 133E 01			cmp	data_163,1		; (020C:133E=0)
020C:5324  74 28				je	loc_675			; Jump if equal
020C:5326  50					push	ax
020C:5327  51					push	cx
020C:5328  57					push	di
020C:5329  06					push	es
020C:532A  1E					push	ds
020C:532B  07					pop	es
020C:532C  B9 001D				mov	cx,1Dh
020C:532F  B0 20				mov	al,20h			; ' '
020C:5331  BF 0708				mov	di,708h
020C:5334  FC					cld				; Clear direction
020C:5335  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:5337  BD 071C				mov	bp,71Ch
020C:533A  A1 3D7D				mov	ax,word ptr ds:[3D7Dh]	; (020C:3D7D=3C30h)
020C:533D  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:533D  9A					db	9Ah
020C:533E  0294 1491				dw	294h, 1491h
020C:5342  8B 3E 1326				mov	di,data_160		; (020C:1326=0)
020C:5346  C6 45 5D 07				mov	byte ptr [di+5Dh],7
020C:534A  5F07					dw	5F07h
020C:534C  59					pop	cx
020C:534D  58					pop	ax
020C:534E			loc_675:
020C:534E  A8 08				test	al,8
020C:5350  75 03				jnz	loc_677			; Jump if not zero
020C:5352			loc_676:
020C:5352  E9 00BF				jmp	loc_682			; (5414)
020C:5355			loc_677:
020C:5355  80 26 22EA F7			and	data_433,0F7h		; (020C:22EA=1)
020C:535A  B4 23				mov	ah,23h			; '#'
020C:535C  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:535C  9A					db	9Ah
020C:535D  2F70 1491				dw	2F70h, 1491h
020C:5361  B4 02				mov	ah,2
020C:5363  32 FF				xor	bh,bh			; Zero register
020C:5365  BA 1710				mov	dx,1710h
020C:5368  9A 1491:3220		;*		call	far ptr sub_187		;*(1491:3220)
020C:5368  9A					db	9Ah
020C:5369  3220 1491				dw	3220h, 1491h
020C:536D  E8 0D68				call	sub_58			; (60D8)
020C:5370  9A 1491:0800		;*		call	far ptr sub_163		;*(1491:0800)
020C:5370  9A					db	9Ah
020C:5371  0800 1491				dw	800h, 1491h
020C:5375  8A D0				mov	dl,al
020C:5377  2C 30				sub	al,30h			; '0'
020C:5379  3C 10				cmp	al,10h
020C:537B  76 03				jbe	loc_678			; Jump if below or =
020C:537D  E9 0094				jmp	loc_682			; (5414)
020C:5380			loc_678:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 173

020C:5380  D0 E0				shl	al,1			; Shift w/zeros fill
020C:5382  A2 22EB				mov	data_434,al		; (020C:22EB=0)
020C:5385  9A 1491:0840		;*		call	far ptr sub_165		;*(1491:0840)
020C:5385  9A					db	9Ah
020C:5386  0840 1491				dw	840h, 1491h
020C:538A  B4 02				mov	ah,2
020C:538C  32 FF				xor	bh,bh			; Zero register
020C:538E  BA 1727				mov	dx,1727h
020C:5391  9A 1491:3220		;*		call	far ptr sub_187		;*(1491:3220)
020C:5391  9A					db	9Ah
020C:5392  3220 1491				dw	3220h, 1491h
020C:5396  B1 04				mov	cl,4
020C:5398  B3 02				mov	bl,2
020C:539A  BE 07ED				mov	si,7EDh
020C:539D  9A 1491:06C0		;*		call	far ptr sub_162		;*(1491:06C0)
020C:539D  9A					db	9Ah
020C:539E  06C0 1491				dw	6C0h, 1491h
020C:53A2  3C 1B				cmp	al,1Bh
020C:53A4  74 6E				je	loc_682			; Jump if equal
020C:53A6  3C 0D				cmp	al,0Dh
020C:53A8  75 19				jne	loc_680			; Jump if not equal
020C:53AA  A1 0699				mov	ax,word ptr ds:[699h]	; (020C:0699=0B050h)
020C:53AD  A3 07ED				mov	word ptr ds:[7EDh],ax	; (020C:07ED=2400h)
020C:53B0  A1 069B				mov	ax,word ptr ds:[69Bh]	; (020C:069B=47Fh)
020C:53B3  A3 07EF				mov	data_112,ax		; (020C:07EF=0C75h)
020C:53B6  B9 0004				mov	cx,4

020C:53B9			locloop_679:
020C:53B9  8A 14				mov	dl,[si]
020C:53BB  46					inc	si
020C:53BC  9A 1491:0840		;*		call	far ptr sub_165		;*(1491:0840)
020C:53BC  9A					db	9Ah
020C:53BD  0840 1491				dw	840h, 1491h
020C:53C1  E2 F6				loop	locloop_679		; Loop if cx > 0

020C:53C3			loc_680:
020C:53C3  80 F9 00				cmp	cl,0
020C:53C6  75 4C				jne	loc_682			; Jump if not equal
020C:53C8  B9 0080				mov	cx,80h
020C:53CB  BF 07ED				mov	di,7EDh
020C:53CE  E8 E98F		;*		call	sub_33			;*(3D60)
020C:53CE  E8 8F E9				db	0E8h, 8Fh,0E9h
020C:53D1  73 41				jnc	loc_682			; Jump if carry=0
020C:53D3  89 16 22EC				mov	data_435,dx		; (020C:22EC=101h)
020C:53D7  B2 3A				mov	dl,3Ah			; ':'
020C:53D9  9A 1491:0840		;*		call	far ptr sub_165		;*(1491:0840)
020C:53D9  9A					db	9Ah
020C:53DA  0840 1491				dw	840h, 1491h
020C:53DE  B1 04				mov	cl,4
020C:53E0  B3 02				mov	bl,2
020C:53E2  BE 07F2				mov	si,7F2h
020C:53E5  9A 1491:06C0		;*		call	far ptr sub_162		;*(1491:06C0)
020C:53E5  9A					db	9Ah
020C:53E6  06C0 1491				dw	6C0h, 1491h
020C:53EA  3C 1B				cmp	al,1Bh
020C:53EC  74 26				je	loc_682			; Jump if equal
020C:53EE  80 F9 00				cmp	cl,0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 174

020C:53F1  75 21				jne	loc_682			; Jump if not equal
020C:53F3  B9 0080				mov	cx,80h
020C:53F6  BF 07F2				mov	di,7F2h
020C:53F9  50					push	ax
020C:53FA  E8 E963		;*		call	sub_33			;*(3D60)
020C:53FA  E8 63 E9				db	0E8h, 63h,0E9h
020C:53FD  58					pop	ax
020C:53FE  73 14				jnc	loc_682			; Jump if carry=0
020C:5400  89 16 22EE				mov	data_436,dx		; (020C:22EE=1)
020C:5404  3C 4D				cmp	al,4Dh			; 'M'
020C:5406  75 07				jne	loc_681			; Jump if not equal
020C:5408  80 0E 22EA 80			or	data_433,80h		; (020C:22EA=1)
020C:540D  EB 05				jmp	short loc_682		; (5414)
020C:540F			loc_681:
020C:540F  80 0E 22EA 08			or	data_433,8		; (020C:22EA=1)
020C:5414			loc_682:
020C:5414  E8 0CB5				call	sub_57			; (60CC)
020C:5417  E8 08CE				call	sub_52			; (5CE8)
020C:541A  E9 E3C4				jmp	loc_345			; (37E1)
020C:541D			loc_683:
020C:541D  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:5422  06					push	es
020C:5423  80 3E 1329 01			cmp	data_162,1		; (020C:1329=0)
020C:5428  75 37				jne	loc_687			; Jump if not equal
020C:542A  B4 02				mov	ah,2
020C:542C  32 FF				xor	bh,bh			; Zero register
020C:542E  BA 0500				mov	dx,500h
020C:5431  9A 1491:3220		;*		call	far ptr sub_187		;*(1491:3220)
020C:5431  9A					db	9Ah
020C:5432  3220 1491				dw	3220h, 1491h
020C:5436  BE 0033				mov	si,33h
020C:5439  B9 0623				mov	cx,623h
020C:543C  81 E9 0033				sub	cx,33h
020C:5440  49					dec	cx
020C:5441  E8 25AD				call	sub_91			; (79F1)

020C:5444			locloop_684:
020C:5444  26: 8A 14				mov	dl,es:[si]
020C:5447  80 EA 23				sub	dl,23h			; '#'
020C:544A  80 FA 23				cmp	dl,23h			; '#'
020C:544D  74 05				je	loc_685			; Jump if equal
020C:544F  80 FA 40				cmp	dl,40h			; '@'
020C:5452  75 02				jne	loc_686			; Jump if not equal
020C:5454			loc_685:
020C:5454  B2 20				mov	dl,20h			; ' '
020C:5456			loc_686:
020C:5456  9A 1491:0840		;*		call	far ptr sub_165		;*(1491:0840)
020C:5456  9A					db	9Ah
020C:5457  0840 1491				dw	840h, 1491h
020C:545B  46					inc	si
020C:545C  E2 E6				loop	locloop_684		; Loop if cx > 0

020C:545E  E9 0115				jmp	loc_701			; (5576)
020C:5461			loc_687:
020C:5461  8E 06 131B				mov	es,data_156		; (020C:131B=0)
020C:5465  BE 0033				mov	si,33h
020C:5468  B9 0623				mov	cx,623h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 175

020C:546B  81 E9 0033				sub	cx,33h
020C:546F  E8 0526				call	sub_45			; (5998)
020C:5472  B7 07				mov	bh,7
020C:5474  8A 16 1206				mov	dl,data_137		; (020C:1206=0)
020C:5478  2E: 80 3E 0083 00			cmp	byte ptr cs:data_46+1,0	; (020C:0083=0)
020C:547E  74 44				je	loc_691			; Jump if equal
020C:5480  53					push	bx
020C:5481  51					push	cx
020C:5482  56					push	si
020C:5483  1E					push	ds
020C:5484  BE 0623				mov	si,623h
020C:5487  BF 0284				mov	di,284h
020C:548A  03 3E 131D				add	di,data_157		; (020C:131D=0)
020C:548E  8A 1E 1206				mov	bl,data_137		; (020C:1206=0)
020C:5492  8A 3E 120A				mov	bh,data_141		; (020C:120A=0)
020C:5496  E8 253A				call	sub_85			; (79D3)
020C:5499  B9 000E				mov	cx,0Eh

020C:549C			locloop_688:
020C:549C  AC					lodsb				; String [si] to al
020C:549D  2C 23				sub	al,23h			; '#'
020C:549F  AA					stosb				; Store al to es:[di]
020C:54A0  26: 88 1D				mov	es:[di],bl
020C:54A3  47					inc	di
020C:54A4  E2 F6				loop	locloop_688		; Loop if cx > 0

020C:54A6  0E					push	cs
020C:54A7  1F					pop	ds
020C:54A8  BE 0083				mov	si,83h
020C:54AB  B9 0030				mov	cx,30h
020C:54AE  B4 A0				mov	ah,0A0h

020C:54B0			locloop_689:
020C:54B0  AC					lodsb				; String [si] to al
020C:54B1  A8 80				test	al,80h
020C:54B3  75 02				jnz	loc_690			; Jump if not zero
020C:54B5  8A C4				mov	al,ah
020C:54B7			loc_690:
020C:54B7  2C 80				sub	al,80h
020C:54B9  AA					stosb				; Store al to es:[di]
020C:54BA  26: 88 3D				mov	es:[di],bh
020C:54BD  47					inc	di
020C:54BE  E2 F0				loop	locloop_689		; Loop if cx > 0

020C:54C0  1F					pop	ds
020C:54C1  5E					pop	si
020C:54C2  59					pop	cx
020C:54C3  5B					pop	bx
020C:54C4			loc_691:
020C:54C4  BF 0320				mov	di,320h
020C:54C7  03 3E 131D				add	di,data_157		; (020C:131D=0)
020C:54CB  E8 2505				call	sub_85			; (79D3)

020C:54CE			locloop_692:
020C:54CE  8A DF				mov	bl,bh
020C:54D0  1E					push	ds
020C:54D1  E8 24FC				call	sub_84			; (79D0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 176

020C:54D4  80 3E 1799 02			cmp	data_201,2		; (020C:1799=0)
020C:54D9  1F					pop	ds
020C:54DA  74 25				jz	loc_695			; Jump if zero
020C:54DC  80 3C 63				cmp	byte ptr [si],63h	; 'c'
020C:54DF  75 06				jne	loc_693			; Jump if not equal
020C:54E1  B7 0F				mov	bh,0Fh
020C:54E3  8A DF				mov	bl,bh
020C:54E5  EB 0E				jmp	short loc_694		; (54F5)
020C:54E7			loc_693:
020C:54E7  80 3C 46				cmp	byte ptr [si],46h	; 'F'
020C:54EA  75 23				jne	loc_696			; Jump if not equal
020C:54EC  1E					push	ds
020C:54ED  E8 24E0				call	sub_84			; (79D0)
020C:54F0  8A 1E 1207				mov	bl,data_138		; (020C:1207=0)
020C:54F4  1F					pop	ds
020C:54F5			loc_694:
020C:54F5  FC					cld				; Clear direction
020C:54F6  B0 20				mov	al,20h			; ' '
020C:54F8  AA					stosb				; Store al to es:[di]
020C:54F9  46					inc	si
020C:54FA  26: 88 1D				mov	es:[di],bl
020C:54FD  47					inc	di
020C:54FE  49					dec	cx
020C:54FF  EB 1C				jmp	short loc_698		; (551D)
020C:5501			loc_695:
020C:5501  81 3C 207C				cmp	word ptr [si],207Ch
020C:5505  74 0D				je	loc_697			; Jump if equal
020C:5507  81 3C 7C7C				cmp	word ptr [si],7C7Ch
020C:550B  74 07				je	loc_697			; Jump if equal
020C:550D  EB 0E				jmp	short loc_698		; (551D)
020C:550F			loc_696:
020C:550F  80 3C A3				cmp	byte ptr [si],0A3h
020C:5512  72 09				jb	loc_698			; Jump if below
020C:5514			loc_697:
020C:5514  1E					push	ds
020C:5515  E8 24B8				call	sub_84			; (79D0)
020C:5518  8A 1E 1206				mov	bl,data_137		; (020C:1206=0)
020C:551C  1F					pop	ds
020C:551D			loc_698:
020C:551D  FC					cld				; Clear direction
020C:551E  50					push	ax
020C:551F  AC					lodsb				; String [si] to al
020C:5520  2C 23				sub	al,23h			; '#'
020C:5522  AA					stosb				; Store al to es:[di]
020C:5523  58					pop	ax
020C:5524  26: 88 1D				mov	es:[di],bl
020C:5527  47					inc	di
020C:5528  E2 A4				loop	locloop_692		; Loop if cx > 0

020C:552A  BE 0001				mov	si,1
020C:552D  B9 001A				mov	cx,1Ah
020C:5530  81 E9 0001				sub	cx,1
020C:5534  BF 016B				mov	di,16Bh
020C:5537  81 EF 0096				sub	di,96h
020C:553B  D1 E7				shl	di,1			; Shift w/zeros fill
020C:553D  1E					push	ds
020C:553E  E8 248F				call	sub_84			; (79D0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 177

020C:5541  03 3E 131D				add	di,data_157		; (020C:131D=0)
020C:5545  1F					pop	ds
020C:5546  FC					cld				; Clear direction

020C:5547			locloop_699:
020C:5547  A4					movsb				; Mov [si] to es:[di]
020C:5548  47					inc	di
020C:5549  E2 FC				loop	locloop_699		; Loop if cx > 0

020C:554B  BE 001A				mov	si,1Ah
020C:554E  B9 001A				mov	cx,1Ah
020C:5551  81 E9 0001				sub	cx,1
020C:5555  BF 016B				mov	di,16Bh
020C:5558  81 EF 0096				sub	di,96h
020C:555C  D1 E7				shl	di,1			; Shift w/zeros fill
020C:555E  81 C7 00A0				add	di,0A0h
020C:5562  1E					push	ds
020C:5563  E8 246A				call	sub_84			; (79D0)
020C:5566  03 3E 131D				add	di,data_157		; (020C:131D=0)
020C:556A  1F					pop	ds
020C:556B  FC					cld				; Clear direction

020C:556C			locloop_700:
020C:556C  A4					movsb				; Mov [si] to es:[di]
020C:556D  47					inc	di
020C:556E  E2 FC				loop	locloop_700		; Loop if cx > 0

020C:5570  E8 245D				call	sub_84			; (79D0)
020C:5573  E8 044E				call	sub_46			; (59C4)
020C:5576			loc_701:
020C:5576  9A 1491:0800		;*		call	far ptr sub_163		;*(1491:0800)
020C:5576  9A					db	9Ah
020C:5577  0800 1491				dw	800h, 1491h
020C:557B  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:5580  9C					pushf				; Push flags
020C:5581  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:5586  5A					pop	dx
020C:5587  8E C2				mov	es,dx
020C:5589  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:558E  5A					pop	dx
020C:558F  75 0A				jnz	loc_702			; Jump if not zero
020C:5591  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:5596  74 03				je	loc_702			; Jump if equal
020C:5598  E8 2915				call	sub_97			; (7EB0)
020C:559B			loc_702:
020C:559B  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:55A0  9D					popf				; Pop flags
020C:55A1  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:55A6  E9 E238				jmp	loc_345			; (37E1)
020C:55A9			loc_703:
020C:55A9  FE 06 1547				inc	data_169		; (020C:1547=0)
020C:55AD  80 3E 1547 03			cmp	data_169,3		; (020C:1547=0)
020C:55B2  72 05				jb	loc_704			; Jump if below
020C:55B4  C6 06 1547 00			mov	data_169,0		; (020C:1547=0)
020C:55B9			loc_704:
020C:55B9  9A 1491:319C		;*		call	far ptr sub_185		;*(1491:319C)
020C:55B9  9A					db	9Ah
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 178

020C:55BA  319C 1491				dw	319Ch, 1491h
020C:55BE  E8 038B				call	sub_43			; (594C)
020C:55C1  E9 E23D				jmp	loc_346			; (3801)
020C:55C4  000C[00]				db	12 dup (0)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:55D0			sub_40		proc	near
020C:55D0  F7 06 2302 0008			test	data_451,8		; (020C:2302=3104h)
020C:55D6  75 03				jnz	loc_705			; Jump if not zero
020C:55D8  E9 0089				jmp	loc_709			; (5664)
020C:55DB			loc_705:
020C:55DB  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:55E1  75 08				jne	loc_706			; Jump if not equal
020C:55E3  2E: 80 3E 4735 00			cmp	byte ptr cs:[4735h],0	; (020C:4735=1Eh)
020C:55E9  74 79				je	loc_709			; Jump if equal
020C:55EB			loc_706:
020C:55EB  50					push	ax
020C:55EC  53					push	bx
020C:55ED  51					push	cx
020C:55EE  52					push	dx
020C:55EF  56					push	si
020C:55F0  57					push	di
020C:55F1  55					push	bp
020C:55F2  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:55F7  1E					push	ds
020C:55F8  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:55FD  06					push	es
020C:55FE  BB 2128				mov	bx,2128h
020C:5601  BA 0007				mov	dx,7
020C:5604  E8 CB49		;*		call	sub_27			;*(2150)
020C:5604  E8 49 CB				db	0E8h, 49h,0CBh
020C:5607  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:560C  9C					pushf				; Push flags
020C:560D  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:5612  5A					pop	dx
020C:5613  8E C2				mov	es,dx
020C:5615  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:561A  5A					pop	dx
020C:561B  75 0A				jnz	loc_707			; Jump if not zero
020C:561D  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:5622  74 03				je	loc_707			; Jump if equal
020C:5624  E8 2889				call	sub_97			; (7EB0)
020C:5627			loc_707:
020C:5627  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:562C  9D					popf				; Pop flags
020C:562D  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:5632  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:5637  9C					pushf				; Push flags
020C:5638  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:563D  5A					pop	dx
020C:563E  8E DA				mov	ds,dx
020C:5640  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:5645  5A					pop	dx
020C:5646  75 0A				jnz	loc_708			; Jump if not zero
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 179

020C:5648  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:564D  74 03				je	loc_708			; Jump if equal
020C:564F  E8 285E				call	sub_97			; (7EB0)
020C:5652			loc_708:
020C:5652  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:5657  9D					popf				; Pop flags
020C:5658  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:565D  5D					pop	bp
020C:565E  5F					pop	di
020C:565F  5E					pop	si
020C:5660  5A					pop	dx
020C:5661  59					pop	cx
020C:5662  5B					pop	bx
020C:5663  58					pop	ax
020C:5664			loc_709:
020C:5664  C3					retn
				sub_40		endp

							                        ;* No entry point to code
020C:5665  87 DB				xchg	bx,bx
020C:5667  90					nop
020C:5668  50					push	ax
020C:5669  53					push	bx
020C:566A  51					push	cx
020C:566B  52					push	dx
020C:566C  56					push	si
020C:566D  57					push	di
020C:566E  55					push	bp
020C:566F  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:5674  1E					push	ds
020C:5675  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:567A  06					push	es
020C:567B  26: 8B 2E 0000			mov	bp,word ptr es:[0]	; (020C:0000=1828h)
020C:5680  BE 0008				mov	si,8
020C:5683  E8 234A				call	sub_84			; (79D0)
020C:5686  83 3E 1D66 06			cmp	data_326,6		; (020C:1D66=0)
020C:568B  76 02				jbe	loc_710			; Jump if below or =
020C:568D  EB 78				jmp	short loc_719		; (5707)
020C:568F			loc_710:
020C:568F  BF 69FB				mov	di,69FBh
020C:5692  BB 2F78				mov	bx,2F78h
020C:5695  26: 8A 44 05				mov	al,es:[si+5]
020C:5699  25 000F				and	ax,0Fh
020C:569C  D7					xlat				; al=[al+[bx]] table
020C:569D  0A C0				or	al,al			; Zero ?
020C:569F  75 04				jnz	loc_711			; Jump if not zero
020C:56A1  26: 8A 44 06				mov	al,es:[si+6]
020C:56A5			loc_711:
020C:56A5  3D 0006				cmp	ax,6
020C:56A8  77 03				ja	loc_712			; Jump if above
020C:56AA  E9 00B8				jmp	loc_722			; (5765)
020C:56AD			loc_712:
020C:56AD  8B C8				mov	cx,ax
020C:56AF  26: 8A 44 05				mov	al,es:[si+5]
020C:56B3  24 0C				and	al,0Ch
020C:56B5  83 FE 08				cmp	si,8
020C:56B8  75 02				jne	loc_713			; Jump if not equal
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 180

020C:56BA  8A D0				mov	dl,al
020C:56BC			loc_713:
020C:56BC  BF 6A0A				mov	di,6A0Ah
020C:56BF  3A C2				cmp	al,dl
020C:56C1  74 03				je	loc_714			; Jump if equal
020C:56C3  E9 009F				jmp	loc_722			; (5765)
020C:56C6			loc_714:
020C:56C6  3C 08				cmp	al,8
020C:56C8  74 0B				je	loc_715			; Jump if equal
020C:56CA  3C 04				cmp	al,4
020C:56CC  74 07				je	loc_715			; Jump if equal
020C:56CE  3C 00				cmp	al,0
020C:56D0  74 03				je	loc_715			; Jump if equal
020C:56D2  E9 0090				jmp	loc_722			; (5765)
020C:56D5			loc_715:
020C:56D5  BF 69DD				mov	di,69DDh
020C:56D8  26: 8B 1C				mov	bx,es:[si]
020C:56DB  26: 8B 44 02				mov	ax,es:[si+2]
020C:56DF  83 FB FF				cmp	bx,0FFFFh
020C:56E2  75 07				jne	loc_716			; Jump if not equal
020C:56E4  3D FFFF				cmp	ax,0FFFFh
020C:56E7  75 02				jne	loc_716			; Jump if not equal
020C:56E9  EB 13				jmp	short loc_718		; (56FE)
020C:56EB			loc_716:
020C:56EB  03 F1				add	si,cx
020C:56ED  26: 3B 1C				cmp	bx,es:[si]
020C:56F0  72 0A				jb	loc_717			; Jump if below
020C:56F2  77 71				ja	loc_722			; Jump if above
020C:56F4  26: 3B 44 02				cmp	ax,es:[si+2]
020C:56F8  76 02				jbe	loc_717			; Jump if below or =
020C:56FA  77 69				ja	loc_722			; Jump if above
020C:56FC			loc_717:
020C:56FC  EB 91				jmp	short loc_710		; (568F)
020C:56FE			loc_718:
020C:56FE  BF 69EC				mov	di,69ECh
020C:5701  03 F1				add	si,cx
020C:5703  3B F5				cmp	si,bp
020C:5705  75 5E				jne	loc_722			; Jump if not equal
020C:5707			loc_719:
020C:5707  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:570C  9C					pushf				; Push flags
020C:570D  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:5712  5A					pop	dx
020C:5713  8E C2				mov	es,dx
020C:5715  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:571A  5A					pop	dx
020C:571B  75 0A				jnz	loc_720			; Jump if not zero
020C:571D  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:5722  74 03				je	loc_720			; Jump if equal
020C:5724  E8 2789				call	sub_97			; (7EB0)
020C:5727			loc_720:
020C:5727  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:572C  9D					popf				; Pop flags
020C:572D  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:5732  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:5737  9C					pushf				; Push flags
020C:5738  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 181

020C:573D  5A					pop	dx
020C:573E  8E DA				mov	ds,dx
020C:5740  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:5745  5A					pop	dx
020C:5746  75 0A				jnz	loc_721			; Jump if not zero
020C:5748  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:574D  74 03				je	loc_721			; Jump if equal
020C:574F  E8 275E				call	sub_97			; (7EB0)
020C:5752			loc_721:
020C:5752  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:5757  9D					popf				; Pop flags
020C:5758  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:575D  5D					pop	bp
020C:575E  5F					pop	di
020C:575F  5E					pop	si
020C:5760  5A					pop	dx
020C:5761  59					pop	cx
020C:5762  5B					pop	bx
020C:5763  58					pop	ax
020C:5764  C3					retn
020C:5765			loc_722:
020C:5765  E8 2262				call	sub_83			; (79CA)
020C:5768  56					push	si
020C:5769  BD 0EE7				mov	bp,0EE7h
020C:576C  80 FA 08				cmp	dl,8
020C:576F  74 0F				je	loc_723			; Jump if equal
020C:5771  80 FA 04				cmp	dl,4
020C:5774  74 0F				je	loc_724			; Jump if equal
020C:5776  80 FA 00				cmp	dl,0
020C:5779  74 0F				je	loc_725			; Jump if equal
020C:577B  BE 69B1				mov	si,69B1h
020C:577E  EB 0F				jmp	short loc_726		; (578F)
020C:5780			loc_723:
020C:5780  BE 69A6				mov	si,69A6h
020C:5783  EB 0A				jmp	short loc_726		; (578F)
020C:5785			loc_724:
020C:5785  BE 6990				mov	si,6990h
020C:5788  EB 05				jmp	short loc_726		; (578F)
020C:578A			loc_725:
020C:578A  BE 699B				mov	si,699Bh
020C:578D  EB 00				jmp	short loc_726		; (578F)
020C:578F			loc_726:
020C:578F  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:578F  9A					db	9Ah
020C:5790  67E0 1491				dw	67E0h, 1491h
020C:5794  BD 0EF2				mov	bp,0EF2h
020C:5797  8C C0				mov	ax,es
020C:5799  2E: 3B 06 3F72			cmp	ax,cs:data_652		; (020C:3F72=0C4FEh)
020C:579E  75 09				jne	loc_727			; Jump if not equal
020C:57A0  BE 69C7				mov	si,69C7h
020C:57A3  A12E			data_769	dw	0A12Eh
020C:57A5  74			data_770	db	74h
020C:57A6  3F					aas				; Ascii adjust
020C:57A7  EB 03				jmp	short loc_728		; (57AC)
020C:57A9			loc_727:
020C:57A9  BE 69D2				mov	si,69D2h
020C:57AC			loc_728:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 182

020C:57AC  50					push	ax
020C:57AD  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:57AD  9A					db	9Ah
020C:57AE  67E0 1491				dw	67E0h, 1491h
020C:57B2  58					pop	ax
020C:57B3  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:57B3  9A					db	9Ah
020C:57B4  0294 1491				dw	294h, 1491h
020C:57B8  5E					pop	si
020C:57B9  8B C6				mov	ax,si
020C:57BB  BD 0F0C				mov	bp,0F0Ch
020C:57BE  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:57BE  9A					db	9Ah
020C:57BF  0294 1491				dw	294h, 1491h
020C:57C3  BD 0F13				mov	bp,0F13h
020C:57C6  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:57CB  1E					push	ds
020C:57CC  E8 21FB				call	sub_83			; (79CA)
020C:57CF  A0 178D				mov	al,byte ptr data_193	; (020C:178D=0)
020C:57D2  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:57D7  9C					pushf				; Push flags
020C:57D8  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:57DD  5A					pop	dx
020C:57DE  8E DA				mov	ds,dx
020C:57E0  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:57E5  5A					pop	dx
020C:57E6  75 0A				jnz	loc_729			; Jump if not zero
020C:57E8  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:57ED  74 03				je	loc_729			; Jump if equal
020C:57EF  E8 26BE				call	sub_97			; (7EB0)
020C:57F2			loc_729:
020C:57F2  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:57F7  9D					popf				; Pop flags
020C:57F8  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:57FD  9A 1491:02A4		;*		call	far ptr sub_157		;*(1491:02A4)
020C:57FD  9A					db	9Ah
020C:57FE  02A4 1491				dw	2A4h, 1491h
020C:5802  8B F7				mov	si,di
020C:5804  BD 0F16				mov	bp,0F16h
020C:5807  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:5807  9A					db	9Ah
020C:5808  67E0 1491				dw	67E0h, 1491h
020C:580C  E8 21BB				call	sub_83			; (79CA)
020C:580F  E9 1C2D				jmp	loc_1086		; (743F)
020C:5812  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:5814			sub_41		proc	near
020C:5814  C3			data_771	db	0C3h
020C:5815  000B[00]				db	11 dup (0)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

020C:5820			sub_42:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 183

020C:5820			loc_730:
020C:5820  80 3E 1794 00			cmp	byte ptr ds:[1794h],0	; (ss:1794=0F0h)
020C:5825  74 01				je	loc_731			; Jump if equal
020C:5827  C3					retn
020C:5828			loc_731:
020C:5828  50					push	ax
020C:5829  53					push	bx
020C:582A  51					push	cx
020C:582B  52					push	dx
020C:582C  55					push	bp
020C:582D  56					push	si
020C:582E  57					push	di
020C:582F  06					push	es
020C:5830  80 3E 1329 01			cmp	byte ptr ds:[1329h],1	; (ss:1329=36h)
020C:5835  74 6B				je	loc_738			; Jump if equal
020C:5837  8B 1E 1326				mov	bx,word ptr ds:[1326h]	; (ss:1326=82h)
020C:583B  8E 06 131B				mov	es,word ptr ds:[131Bh]	; (ss:131B=444Fh)
020C:583F  BE 0096				mov	si,96h
020C:5842  BA 0A36				mov	dx,0A36h
020C:5845  3E8B					dw	3E8Bh
020C:5847  1D E813				sbb	ax,0E813h
020C:584A  4C					dec	sp
020C:584B  01 B9 0866				add	word ptr ds:[866h][bx+di],di	; (ss:0866=203Ch)
020C:584F  80 3E 1799 02			cmp	byte ptr ds:[1799h],2	; (ss:1799=0DAh)
020C:5854  75 03				jne	loc_732			; Jump if not equal
020C:5856  B9 0816				mov	cx,816h
020C:5859			loc_732:
020C:5859  81 E9 0096				sub	cx,96h
020C:585D  FC					cld				; Clear direction

020C:585E			locloop_733:
020C:585E  80 3E 1799 02			cmp	byte ptr ds:[1799h],2	; (ss:1799=0DAh)
020C:5863  75 28				jne	loc_736			; Jump if not equal
020C:5865  81 FE 036A				cmp	si,36Ah
020C:5869  72 12				jb	loc_734			; Jump if below
020C:586B  81 FE 0398				cmp	si,398h
020C:586F  76 1C				jbe	loc_736			; Jump if below or =
020C:5871  81 FE 0649				cmp	si,649h
020C:5875  72 06				jb	loc_734			; Jump if below
020C:5877  81 FE 0655				cmp	si,655h
020C:587B  76 10				jbe	loc_736			; Jump if below or =
020C:587D			loc_734:
020C:587D  AC					lodsb				; String [si] to al
020C:587E  3C 80				cmp	al,80h
020C:5880  72 08				jb	loc_735			; Jump if below
020C:5882  53					push	bx
020C:5883  BB 17B6				mov	bx,17B6h
020C:5886  2C 80				sub	al,80h
020C:5888  D7					xlat				; al=[al+[bx]] table
020C:5889  5B					pop	bx
020C:588A			loc_735:
020C:588A  AA					stosb				; Store al to es:[di]
020C:588B  EB 01				jmp	short loc_737		; (588E)
020C:588D			loc_736:
020C:588D  A4			data_773	db	0A4h
020C:588E			loc_737:
020C:588E  87 D6				xchg	dx,si
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 184

020C:5890  8A 04				mov	al,[si]
020C:5892  87 F2				xchg	si,dx
020C:5894  42					inc	dx
020C:5895  D7					xlat				; al=[al+[bx]] table
020C:5896  26: 88 05				mov	es:[di],al
020C:5899  47					inc	di
020C:589A  E2 C2				loop	locloop_733		; Loop if cx > 0

020C:589C  E8 0125				call	sub_46			; (59C4)
020C:589F  E9 009F				jmp	loc_749			; (5941)
020C:58A2			loc_738:
020C:58A2  33 ED				xor	bp,bp			; Zero register
020C:58A4  80 3E 1795 01			cmp	byte ptr ds:[1795h],1	; (ss:1795=8Bh)
020C:58A9  75 05				jne	loc_739			; Jump if not equal
020C:58AB  E8 0A2A				call	sub_63			; (62D8)
020C:58AE  EB 0A				jmp	short loc_740		; (58BA)
020C:58B0			loc_739:
020C:58B0  B4 03				mov	ah,3
020C:58B2  32 FF				xor	bh,bh			; Zero register
020C:58B4  9A 1491:3220		;*		call	far ptr sub_187		;*(1491:3220)
020C:58B4  9A					db	9Ah
020C:58B5  3220 1491				dw	3220h, 1491h
020C:58B9  52					push	dx
020C:58BA			loc_740:
020C:58BA  B4 02				mov	ah,2
020C:58BC  32 FF				xor	bh,bh			; Zero register
020C:58BE  33 D2				xor	dx,dx			; Zero register
020C:58C0  80 3E 179A 01			cmp	byte ptr ds:[179Ah],1	; (ss:179A=74h)
020C:58C5  75 03				jne	loc_741			; Jump if not equal
020C:58C7  BA 1702				mov	dx,1702h
020C:58CA			loc_741:
020C:58CA  9A 1491:3220		;*		call	far ptr sub_187		;*(1491:3220)
020C:58CA  9A					db	9Ah
020C:58CB  3220 1491				dw	3220h, 1491h
020C:58CF  8B 1E 1326				mov	bx,word ptr ds:[1326h]	; (ss:1326=82h)
020C:58D3  B9 0866				mov	cx,866h
020C:58D6  80 3E 1795 01			cmp	byte ptr ds:[1795h],1	; (ss:1795=8Bh)
020C:58DB  75 03				jne	loc_742			; Jump if not equal
020C:58DD  B9 0816				mov	cx,816h
020C:58E0			loc_742:
020C:58E0  81 E9 0096				sub	cx,96h
020C:58E4  49					dec	cx
020C:58E5  BE 0096				mov	si,96h
020C:58E8  BF 0A36				mov	di,0A36h
020C:58EB  80 3E 179A 01			cmp	byte ptr ds:[179Ah],1	; (ss:179A=74h)
020C:58F0  75 09				jne	locloop_743		; Jump if not equal
020C:58F2  B9 004C				mov	cx,4Ch
020C:58F5  BE 07C8				mov	si,7C8h
020C:58F8  BF 1168				mov	di,1168h

020C:58FB			locloop_743:
020C:58FB  8A 05				mov	al,[di]
020C:58FD  D7					xlat				; al=[al+[bx]] table
020C:58FE  3C 00				cmp	al,0
020C:5900  75 04				jne	loc_744			; Jump if not equal
020C:5902  B2 20				mov	dl,20h			; ' '
020C:5904  EB 11				jmp	short loc_746		; (5917)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 185

020C:5906			loc_744:
020C:5906  3C 0F				cmp	al,0Fh
020C:5908  75 0B				jne	loc_745			; Jump if not equal
020C:590A  C6 06 1796 01			mov	byte ptr ds:[1796h],1	; (ss:1796=0D9h)
020C:590F  9A 1491:0810		;*		call	far ptr sub_164		;*(1491:0810)
020C:590F  9A					db	9Ah
020C:5910  0810 1491				dw	810h, 1491h
020C:5914  45					inc	bp
020C:5915			loc_745:
020C:5915  8A 14				mov	dl,[si]
020C:5917			loc_746:
020C:5917  9A 1491:0840		;*		call	far ptr sub_165		;*(1491:0840)
020C:5917  9A					db	9Ah
020C:5918  0840 1491				dw	840h, 1491h
020C:591C  0B ED				or	bp,bp			; Zero ?
020C:591E  74 07				jz	loc_747			; Jump if zero
020C:5920  9A 1491:0810		;*		call	far ptr sub_164		;*(1491:0810)
020C:5920  9A					db	9Ah
020C:5921  0810 1491				dw	810h, 1491h
020C:5925  33 ED				xor	bp,bp			; Zero register
020C:5927			loc_747:
020C:5927  46					inc	si
020C:5928  47					inc	di
020C:5929  E2 D0				loop	locloop_743		; Loop if cx > 0

020C:592B  80 3E 1795 01			cmp	byte ptr ds:[1795h],1	; (ss:1795=8Bh)
020C:5930  75 05				jne	loc_748			; Jump if not equal
020C:5932  E8 09E3				call	sub_64			; (6318)
020C:5935  EB 0A				jmp	short loc_749		; (5941)
020C:5937			loc_748:
020C:5937  B4 02				mov	ah,2
020C:5939  32 FF				xor	bh,bh			; Zero register
020C:593B  5A					pop	dx
020C:593C  9A 1491:3220		;*		call	far ptr sub_187		;*(1491:3220)
020C:593C  9A					db	9Ah
020C:593D  3220 1491				dw	3220h, 1491h
020C:5941			loc_749:
020C:5941  07					pop	es
020C:5942  5F					pop	di
020C:5943  5E					pop	si
020C:5944  5D					pop	bp
020C:5945  5A					pop	dx
020C:5946  59					pop	cx
020C:5947  5B					pop	bx
020C:5948  58					pop	ax
020C:5949  C3					retn
				sub_41		endp

020C:594A  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:594C			sub_43		proc	near
020C:594C  80 3E 1794 00			cmp	byte ptr ds:[1794h],0	; (ss:1794=0F0h)
020C:5951  74 01				je	loc_750			; Jump if equal
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 186

020C:5953  C3					retn
020C:5954			loc_750:
020C:5954  E8 FEC9				call	sub_42			; (5820)
020C:5957  50					push	ax
020C:5958  53					push	bx
020C:5959  52					push	dx
020C:595A  B4 02				mov	ah,2
020C:595C  32 FF				xor	bh,bh			; Zero register
020C:595E  BA 184F				mov	dx,184Fh
020C:5961  9A 1491:3220		;*		call	far ptr sub_187		;*(1491:3220)
020C:5961  9A					db	9Ah
020C:5962  3220 1491				dw	3220h, 1491h
020C:5966  5A					pop	dx
020C:5967  5B					pop	bx
020C:5968  58					pop	ax
020C:5969  C3					retn
				sub_43		endp

020C:596A  87 DB				xchg	bx,bx
020C:596C			loc_751:
020C:596C  80 3E 1329 01			cmp	data_162,1		; (020C:1329=0)
020C:5971  75 05				jne	loc_752			; Jump if not equal
020C:5973  C6 06 179A 01			mov	data_202,1		; (020C:179A=0)
020C:5978			loc_752:
020C:5978  E8 FFD1				call	sub_43			; (594C)
020C:597B  C6 06 179A 00			mov	data_202,0		; (020C:179A=0)
020C:5980  C3					retn
020C:5981  87 DB				xchg	bx,bx
020C:5983  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:5984			sub_44		proc	near
020C:5984  80 3E 324D 01			cmp	byte ptr ds:[324Dh],1	; (020C:324D=45h)
020C:5989  74 0A				je	loc_753			; Jump if equal
020C:598B  80 3E 324D 15			cmp	byte ptr ds:[324Dh],15h	; (020C:324D=45h)
020C:5990  74 03				je	loc_753			; Jump if equal
020C:5992  E9 FE8B				jmp	loc_730			; (5820)
020C:5995			loc_753:
020C:5995  EB D5				jmp	short loc_751		; (596C)
				sub_44		endp

020C:5997  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:5998			sub_45		proc	near
020C:5998  80 3E 1794 00			cmp	byte ptr ds:[1794h],0	; (ss:1794=0F0h)
020C:599D  74 01				je	loc_754			; Jump if equal
020C:599F  C3					retn
020C:59A0			loc_754:
020C:59A0  80 3E 1328 01			cmp	byte ptr ds:[1328h],1	; (ss:1328=89h)
020C:59A5  74 1C				je	loc_756			; Jump if equal
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 187

020C:59A7  52					push	dx
020C:59A8  BA 03DA				mov	dx,3DAh
020C:59AB			loc_755:
020C:59AB  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
020C:59AC  A8 08				test	al,8
020C:59AE  75 FB				jnz	loc_755			; Jump if not zero
020C:59B0  BA 03D8				mov	dx,3D8h
020C:59B3  1E					push	ds
020C:59B4  33 C0				xor	ax,ax			; Zero register
020C:59B6  8E D8				mov	ds,ax
020C:59B8  A0 0465				mov	al,byte ptr ds:[465h]	; (0000:0465=29h)
020C:59BB  24 F7				and	al,0F7h
020C:59BD  A2 0465				mov	byte ptr ds:[465h],al	; (0000:0465=29h)
020C:59C0  EE					out	dx,al			; port 3D8h, CGA video control
020C:59C1  1F					pop	ds
020C:59C2  5A					pop	dx
020C:59C3			loc_756:
020C:59C3  C3					retn
				sub_45		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:59C4			sub_46		proc	near
020C:59C4  80 3E 1794 00			cmp	byte ptr ds:[1794h],0	; (ss:1794=0F0h)
020C:59C9  74 01				je	loc_757			; Jump if equal
020C:59CB  C3					retn
020C:59CC			loc_757:
020C:59CC  80 3E 1799 02			cmp	byte ptr ds:[1799h],2	; (ss:1799=0DAh)
020C:59D1  75 17				jne	loc_758			; Jump if not equal
020C:59D3  0E					push	cs
020C:59D4  57					push	di
020C:59D5  06					push	es
020C:59D6  B4 FF				mov	ah,0FFh
020C:59D8  B9 07D0				mov	cx,7D0h
020C:59DB  8E 06 131B				mov	es,word ptr ds:[131Bh]	; (ss:131B=444Fh)
020C:59DF  8B 3E 131D				mov	di,word ptr ds:[131Dh]	; (ss:131D=7501h)
020C:59E3  CD 10				int	10h			; Video display   ah=functn FFh
										;  update video buffer   Topview
020C:59E5  07					pop	es
020C:59E6  5F					pop	di
020C:59E7  59					pop	cx
020C:59E8  EB 1B				jmp	short loc_759		; (5A05)
020C:59EA			loc_758:
020C:59EA  80 3E 1328 01			cmp	byte ptr ds:[1328h],1	; (ss:1328=89h)
020C:59EF  74 14				je	loc_759			; Jump if equal
020C:59F1  52					push	dx
020C:59F2  BA 03D8				mov	dx,3D8h
020C:59F5  1E					push	ds
020C:59F6  33 C0				xor	ax,ax			; Zero register
020C:59F8  8E D8				mov	ds,ax
020C:59FA  A0 0465				mov	al,byte ptr ds:[465h]	; (0000:0465=29h)
020C:59FD  0C 08				or	al,8
020C:59FF  A2 0465				mov	byte ptr ds:[465h],al	; (0000:0465=29h)
020C:5A02  EE					out	dx,al			; port 3D8h, CGA video control
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 188

020C:5A03  1F					pop	ds
020C:5A04  5A					pop	dx
020C:5A05			loc_759:
020C:5A05  C3					retn
				sub_46		endp

020C:5A06  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:5A08			sub_47		proc	near
020C:5A08  80 3E 1794 00			cmp	data_197,0		; (020C:1794=0)
020C:5A0D  74 01				je	loc_760			; Jump if equal
020C:5A0F  C3					retn
020C:5A10			loc_760:
020C:5A10  80 3E 1328 01			cmp	data_161,1		; (020C:1328=0)
020C:5A15  75 22				jne	loc_762			; Jump if not equal
020C:5A17  80 3E 1329 01			cmp	data_162,1		; (020C:1329=0)
020C:5A1C  74 1B				je	loc_762			; Jump if equal
020C:5A1E  D1 E7				shl	di,1			; Shift w/zeros fill
020C:5A20  26: 88 25				mov	es:[di],ah
020C:5A23  80 3E 1799 02			cmp	data_201,2		; (020C:1799=0)
020C:5A28  74 03				je	loc_761			; Jump if equal
020C:5A2A  D1 EF				shr	di,1			; Shift w/zeros fill
020C:5A2C  C3					retn
020C:5A2D			loc_761:
020C:5A2D  51					push	cx
020C:5A2E  B4 FF				mov	ah,0FFh
020C:5A30  B9 0001				mov	cx,1
020C:5A33  CD 10				int	10h			; Video display   ah=functn FFh
										;  update video buffer   Topview
020C:5A35  D1 EF				shr	di,1			; Shift w/zeros fill
020C:5A37  59					pop	cx
020C:5A38  C3					retn
020C:5A39			loc_762:
020C:5A39  51					push	cx
020C:5A3A  52					push	dx
020C:5A3B  50					push	ax
020C:5A3C  80 3E 1329 01			cmp	data_162,1		; (020C:1329=0)
020C:5A41  74 20				je	loc_766			; Jump if equal
020C:5A43  D1 E7				shl	di,1			; Shift w/zeros fill
020C:5A45  BA 03DA				mov	dx,3DAh
020C:5A48			loc_763:
020C:5A48  FB					sti				; Enable interrupts
020C:5A49  B5 09				mov	ch,9
020C:5A4B  FA					cli				; Disable interrupts
020C:5A4C  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
020C:5A4D  A8 08				test	al,8
020C:5A4F  75 09				jnz	loc_765			; Jump if not zero
020C:5A51  A8 01				test	al,1
020C:5A53  75 F3				jnz	loc_763			; Jump if not zero
020C:5A55			loc_764:
020C:5A55  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
020C:5A56  84 C5				test	al,ch
020C:5A58  74 FB				jz	loc_764			; Jump if zero
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 189

020C:5A5A			loc_765:
020C:5A5A  FC					cld				; Clear direction
020C:5A5B  8A C4				mov	al,ah
020C:5A5D  AA					stosb				; Store al to es:[di]
020C:5A5E  FB					sti				; Enable interrupts
020C:5A5F  D1 EF				shr	di,1			; Shift w/zeros fill
020C:5A61  EB 33				jmp	short loc_769		; (5A96)
020C:5A63			loc_766:
020C:5A63  80 FC 20				cmp	ah,20h			; ' '
020C:5A66  72 2E				jb	loc_769			; Jump if below
020C:5A68  53					push	bx
020C:5A69  50					push	ax
020C:5A6A  B2 50				mov	dl,50h			; 'P'
020C:5A6C  8B C7				mov	ax,di
020C:5A6E  F6 F2				div	dl			; al, ah rem = ax/reg
020C:5A70  86 C4				xchg	al,ah
020C:5A72  8B D0				mov	dx,ax
020C:5A74  B4 02				mov	ah,2
020C:5A76  32 FF				xor	bh,bh			; Zero register
020C:5A78  9A 1491:3220		;*		call	far ptr sub_187		;*(1491:3220)
020C:5A78  9A					db	9Ah
020C:5A79  3220 1491				dw	3220h, 1491h
020C:5A7D  58					pop	ax
020C:5A7E  80 3E 1796 01			cmp	data_199,1		; (020C:1796=0)
020C:5A83  75 09				jne	loc_767			; Jump if not equal
020C:5A85  8A C4				mov	al,ah
020C:5A87  9A 1491:0870		;*		call	far ptr sub_166		;*(1491:0870)
020C:5A87  9A					db	9Ah
020C:5A88  0870 1491				dw	870h, 1491h
020C:5A8C  EB 07				jmp	short loc_768		; (5A95)
020C:5A8E			loc_767:
020C:5A8E  8A D4				mov	dl,ah
020C:5A90  9A 1491:0840		;*		call	far ptr sub_165		;*(1491:0840)
020C:5A90  9A					db	9Ah
020C:5A91  0840 1491				dw	840h, 1491h
020C:5A95			loc_768:
020C:5A95  5B					pop	bx
020C:5A96			loc_769:
020C:5A96  58					pop	ax
020C:5A97  5A					pop	dx
020C:5A98  59					pop	cx
020C:5A99  C3					retn
				sub_47		endp

020C:5A9A  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:5A9C			sub_48		proc	near
020C:5A9C  80 3E 1794 00			cmp	data_197,0		; (020C:1794=0)
020C:5AA1  74 01				je	loc_770			; Jump if equal
020C:5AA3  C3					retn
020C:5AA4			loc_770:
020C:5AA4  80 3E 1328 01			cmp	data_161,1		; (020C:1328=0)
020C:5AA9  75 25				jne	loc_772			; Jump if not equal
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 190

020C:5AAB  80 3E 1329 01			cmp	data_162,1		; (020C:1329=0)
020C:5AB0  74 1E				je	loc_772			; Jump if equal
020C:5AB2  D1 E7				shl	di,1			; Shift w/zeros fill
020C:5AB4  26: 88 65 01				mov	es:[di+1],ah
020C:5AB8  80 3E 1799 02			cmp	data_201,2		; (020C:1799=0)
020C:5ABD  74 04				je	loc_771			; Jump if equal
020C:5ABF  D1 EF				shr	di,1			; Shift w/zeros fill
020C:5AC1  47					inc	di
020C:5AC2  C3					retn
020C:5AC3			loc_771:
020C:5AC3  51					push	cx
020C:5AC4  B4			data_774	db	0B4h
020C:5AC5  FF					db	0FFh
020C:5AC6  B9 0001				mov	cx,1
020C:5AC9  CD 10				int	10h			; Video display   ah=functn 0Fh
										;  get state, al=mode, bh=page
										;   ah=columns on screen
020C:5ACB  D1 EF				shr	di,1			; Shift w/zeros fill
020C:5ACD  47					inc	di
020C:5ACE  59					pop	cx
020C:5ACF  C3					retn
020C:5AD0			loc_772:
020C:5AD0  51					push	cx
020C:5AD1  52					push	dx
020C:5AD2  50					push	ax
020C:5AD3  80 3E 1329 01			cmp	data_162,1		; (020C:1329=0)
020C:5AD8  74 20				je	loc_776			; Jump if equal
020C:5ADA  D1 E7				shl	di,1			; Shift w/zeros fill
020C:5ADC  47					inc	di
020C:5ADD  BA 03DA				mov	dx,3DAh
020C:5AE0			loc_773:
020C:5AE0  FB					sti				; Enable interrupts
020C:5AE1  B5 09				mov	ch,9
020C:5AE3  FA					cli				; Disable interrupts
020C:5AE4  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
020C:5AE5  A8 08				test	al,8
020C:5AE7  75 09				jnz	loc_775			; Jump if not zero
020C:5AE9  A8 01				test	al,1
020C:5AEB  75 F3				jnz	loc_773			; Jump if not zero
020C:5AED			loc_774:
020C:5AED  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
020C:5AEE  84 C5				test	al,ch
020C:5AF0  74 FB				jz	loc_774			; Jump if zero
020C:5AF2			loc_775:
020C:5AF2  FC					cld				; Clear direction
020C:5AF3  8A C4				mov	al,ah
020C:5AF5  AA					stosb				; Store al to es:[di]
020C:5AF6  FB					sti				; Enable interrupts
020C:5AF7  4F					dec	di
020C:5AF8  D1 EF				shr	di,1			; Shift w/zeros fill
020C:5AFA			loc_776:
020C:5AFA  47					inc	di
020C:5AFB  58					pop	ax
020C:5AFC  5A					pop	dx
020C:5AFD  59					pop	cx
020C:5AFE  C3					retn
				sub_48		endp
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 191


020C:5AFF  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:5B00			sub_49		proc	near
020C:5B00  52					push	dx
020C:5B01  E8 1EEA				call	sub_90			; (79EE)
020C:5B04  BF 06B9				mov	di,6B9h
020C:5B07  B9 000A				mov	cx,0Ah
020C:5B0A  B0 20				mov	al,20h			; ' '
020C:5B0C  FC					cld				; Clear direction
020C:5B0D  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:5B0F  B4 36				mov	ah,36h			; '6'
020C:5B11  32 D2				xor	dl,dl			; Zero register
020C:5B13  CD 21				int	21h			; DOS Services  ah=function 36h
										;  get drive info, drive dl,1=a:
										;   returns ax=sectors per clust
										;   bx=avail clust,cx=bytes/sect
										;   dx=clusters per drive
020C:5B15  3D FFFF				cmp	ax,0FFFFh
020C:5B18  75 03				jne	loc_777			; Jump if not equal
020C:5B1A  E9 0096				jmp	loc_783			; (5BB3)
020C:5B1D			loc_777:
020C:5B1D  F7 E1				mul	cx			; dx:ax = reg * ax
020C:5B1F  F7 E3				mul	bx			; dx:ax = reg * ax
020C:5B21  81 FA 05F5				cmp	dx,5F5h
020C:5B25  72 0F				jb	loc_778			; Jump if below
020C:5B27  56					push	si
020C:5B28  BD 06BE				mov	bp,6BEh
020C:5B2B  BE 4485				mov	si,4485h
020C:5B2E  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:5B2E  9A					db	9Ah
020C:5B2F  67E0 1491				dw	67E0h, 1491h
020C:5B33  5E					pop	si
020C:5B34  EB 7D				jmp	short loc_783		; (5BB3)
020C:5B36			loc_778:
020C:5B36  B9 2710				mov	cx,2710h
020C:5B39  F7 F1				div	cx			; ax,dx rem=dx:ax/reg
020C:5B3B  50					push	ax
020C:5B3C  BD 06BE				mov	bp,6BEh
020C:5B3F  B3 01				mov	bl,1
020C:5B41  8B C2				mov	ax,dx
020C:5B43  9A 1491:0300		;*		call	far ptr sub_159		;*(1491:0300)
020C:5B43  9A					db	9Ah
020C:5B44  0300 1491				dw	300h, 1491h
020C:5B48  83 ED 04				sub	bp,4
020C:5B4B  3E: 8A 4E 00				mov	cl,ds:[bp]
020C:5B4F  58					pop	ax
020C:5B50  3D 0000				cmp	ax,0
020C:5B53  75 11				jne	loc_779			; Jump if not equal
020C:5B55  80 F9 20				cmp	cl,20h			; ' '
020C:5B58  74 59				je	loc_783			; Jump if equal
020C:5B5A  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020C:5B5F  4D					dec	bp
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 192

020C:5B60  3E: 88 4E 00				mov	ds:[bp],cl
020C:5B64  EB 4D				jmp	short loc_783		; (5BB3)
020C:5B66			loc_779:
020C:5B66  80 F9 20				cmp	cl,20h			; ' '
020C:5B69  75 02				jne	loc_780			; Jump if not equal
020C:5B6B  B1 30				mov	cl,30h			; '0'
020C:5B6D			loc_780:
020C:5B6D  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020C:5B72  4D					dec	bp
020C:5B73  3E: 88 4E 00				mov	ds:[bp],cl
020C:5B77  83 C5 02				add	bp,2
020C:5B7A  3E: 80 7E 00 20			cmp	byte ptr ds:[bp],20h	; ' '
020C:5B7F  75 05				jne	loc_781			; Jump if not equal
020C:5B81  3E: C6 46 00 30			mov	byte ptr ds:[bp],30h	; '0'
020C:5B86			loc_781:
020C:5B86  45					inc	bp
020C:5B87  3E: 80 7E 00 20			cmp	byte ptr ds:[bp],20h	; ' '
020C:5B8C  75 05				jne	loc_782			; Jump if not equal
020C:5B8E  3E: C6 46 00 30			mov	byte ptr ds:[bp],30h	; '0'
020C:5B93			loc_782:
020C:5B93  BD 06B9				mov	bp,6B9h
020C:5B96  B3 01				mov	bl,1
020C:5B98  9A 1491:0300		;*		call	far ptr sub_159		;*(1491:0300)
020C:5B98  9A					db	9Ah
020C:5B99  0300 1491				dw	300h, 1491h
020C:5B9D  83 ED 04				sub	bp,4
020C:5BA0  3E: 8B 46 00				mov	ax,ds:[bp]
020C:5BA4  80 FC 20				cmp	ah,20h			; ' '
020C:5BA7  74 0A				je	loc_783			; Jump if equal
020C:5BA9  3E: C6 46 01 2C			mov	byte ptr ds:[bp+1],2Ch	; ','
020C:5BAE  4D					dec	bp
020C:5BAF  3E: 89 46 00				mov	ds:[bp],ax
020C:5BB3			loc_783:
020C:5BB3  5A					pop	dx
020C:5BB4  C3					retn
				sub_49		endp

020C:5BB5  87 DB				xchg	bx,bx
020C:5BB7  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:5BB8			sub_50		proc	near
020C:5BB8  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:5BBD  06					push	es
020C:5BBE  E8 1E2D				call	sub_90			; (79EE)
020C:5BC1  8A E6				mov	ah,dh
020C:5BC3  8B 16 1D48				mov	dx,word ptr ds:[1D48h]	; (ss:1D48=0F718h)
020C:5BC7  BE 1349				mov	si,1349h
020C:5BCA  BF 0739				mov	di,739h
020C:5BCD  B9 1355				mov	cx,1355h
020C:5BD0  81 E9 1349				sub	cx,1349h
020C:5BD4  BB 1CC2				mov	bx,1CC2h
020C:5BD7			loc_784:
020C:5BD7  2E: 3B 17				cmp	dx,cs:[bx]
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 193

020C:5BDA  74 0C				je	loc_785			; Jump if equal
020C:5BDC  43					inc	bx
020C:5BDD  43					inc	bx
020C:5BDE  03 F1				add	si,cx
020C:5BE0  2E: 83 3F 00				cmp	word ptr cs:[bx],0
020C:5BE4  74 02				je	loc_785			; Jump if equal
020C:5BE6  EB EF				jmp	short loc_784		; (5BD7)
020C:5BE8			loc_785:
020C:5BE8  FC					cld				; Clear direction
020C:5BE9  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:5BEB  8A 36 1D5A				mov	dh,byte ptr ds:[1D5Ah]	; (ss:1D5A=74h)
020C:5BEF  BE 13CD				mov	si,13CDh
020C:5BF2  BF 072E				mov	di,72Eh
020C:5BF5  B9 13D2				mov	cx,13D2h
020C:5BF8  81 E9 13CD				sub	cx,13CDh
020C:5BFC  F6 C6 3F				test	dh,3Fh			; '?'
020C:5BFF  75 0B				jnz	loc_786			; Jump if not zero
020C:5C01  F6 06 1D5C 80			test	byte ptr ds:[1D5Ch],80h	; (ss:1D5C=0C6h)
020C:5C06  74 36				jz	loc_788			; Jump if zero
020C:5C08  03 F1				add	si,cx
020C:5C0A  EB 32				jmp	short loc_788		; (5C3E)
020C:5C0C			loc_786:
020C:5C0C  03 F1				add	si,cx
020C:5C0E  03 F1				add	si,cx
020C:5C10  F6 C6 01				test	dh,1
020C:5C13  75 29				jnz	loc_788			; Jump if not zero
020C:5C15  03 F1				add	si,cx
020C:5C17  F6 C6 02				test	dh,2
020C:5C1A  75 22				jnz	loc_788			; Jump if not zero
020C:5C1C  03 F1				add	si,cx
020C:5C1E  52					push	dx
020C:5C1F  8A D6				mov	dl,dh
020C:5C21  80 E2 FB				and	dl,0FBh
020C:5C24  F6 C2 34				test	dl,34h			; '4'
020C:5C27  5A					pop	dx
020C:5C28  74 06				jz	loc_787			; Jump if zero
020C:5C2A  03 F1				add	si,cx
020C:5C2C  03 F1				add	si,cx
020C:5C2E  EB 0E				jmp	short loc_788		; (5C3E)
020C:5C30			loc_787:
020C:5C30  52					push	dx
020C:5C31  8A D6				mov	dl,dh
020C:5C33  80 E2 FB				and	dl,0FBh
020C:5C36  F6 C2 0C				test	dl,0Ch
020C:5C39  5A					pop	dx
020C:5C3A  74 02				jz	loc_788			; Jump if zero
020C:5C3C  03 F1				add	si,cx
020C:5C3E			loc_788:
020C:5C3E  FC					cld				; Clear direction
020C:5C3F  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:5C41  80 FC 00				cmp	ah,0
020C:5C44  74 4C				je	loc_792			; Jump if equal
020C:5C46  80 3E 1329 01			cmp	byte ptr ds:[1329h],1	; (ss:1329=36h)
020C:5C4B  74 05				je	loc_789			; Jump if equal
020C:5C4D  E8 FD34				call	sub_44			; (5984)
020C:5C50  EB 40				jmp	short loc_792		; (5C92)
020C:5C52			loc_789:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 194

020C:5C52  BE 0739				mov	si,739h
020C:5C55  BF 0739				mov	di,739h
020C:5C58  81 EF 0096				sub	di,96h
020C:5C5C  03 3E 131D				add	di,word ptr ds:[131Dh]	; (ss:131D=7501h)
020C:5C60  8E 06 131B				mov	es,word ptr ds:[131Bh]	; (ss:131B=444Fh)
020C:5C64  B9 1355				mov	cx,1355h
020C:5C67  81 E9 1349				sub	cx,1349h

020C:5C6B			locloop_790:
020C:5C6B  8A 24				mov	ah,[si]
020C:5C6D  E8 FD98				call	sub_47			; (5A08)
020C:5C70  47					inc	di
020C:5C71  46					inc	si
020C:5C72  E2 F7				loop	locloop_790		; Loop if cx > 0

020C:5C74  BE 072E				mov	si,72Eh
020C:5C77  BF 072E				mov	di,72Eh
020C:5C7A  81 EF 0096				sub	di,96h
020C:5C7E  03 3E 131D				add	di,word ptr ds:[131Dh]	; (ss:131D=7501h)
020C:5C82  B9 13D2				mov	cx,13D2h
020C:5C85  81 E9 13CD				sub	cx,13CDh

020C:5C89			locloop_791:
020C:5C89  8A 24				mov	ah,[si]
020C:5C8B  E8 FD7A				call	sub_47			; (5A08)
020C:5C8E  47					inc	di
020C:5C8F  46					inc	si
020C:5C90  E2 F7				loop	locloop_791		; Loop if cx > 0

020C:5C92			loc_792:
020C:5C92  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:5C97  9C					pushf				; Push flags
020C:5C98  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:5C9D  5A					pop	dx
020C:5C9E  8E C2				mov	es,dx
020C:5CA0  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:5CA5  5A					pop	dx
020C:5CA6  75 0A				jnz	loc_793			; Jump if not zero
020C:5CA8  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:5CAD  74 03				je	loc_793			; Jump if equal
020C:5CAF  E8 21FE				call	sub_97			; (7EB0)
020C:5CB2			loc_793:
020C:5CB2  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:5CB7  9D					popf				; Pop flags
020C:5CB8  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:5CBD  C3					retn
				sub_50		endp

020C:5CBE  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:5CC0			sub_51		proc	near
020C:5CC0  8B 1E 1326				mov	bx,word ptr ds:[1326h]	; (ss:1326=82h)
020C:5CC4  B9 0011				mov	cx,11h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 195


020C:5CC7			locloop_794:
020C:5CC7  C6 47 30 07				mov	byte ptr [bx+30h],7
020C:5CCB  43					inc	bx
020C:5CCC  E2 F9				loop	locloop_794		; Loop if cx > 0

020C:5CCE  8B 1E 1326				mov	bx,word ptr ds:[1326h]	; (ss:1326=82h)
020C:5CD2  80 3E 22FF 01			cmp	byte ptr ds:[22FFh],1	; (ss:22FF=0BEh)
020C:5CD7  74 0C				je	loc_795			; Jump if equal
020C:5CD9  C6 47 30 00				mov	byte ptr [bx+30h],0
020C:5CDD  C6 47 33 00				mov	byte ptr [bx+33h],0
020C:5CE1  C6 47 34 00				mov	byte ptr [bx+34h],0
020C:5CE5			loc_795:
020C:5CE5  C3					retn
				sub_51		endp

020C:5CE6  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:5CE8			sub_52		proc	near
020C:5CE8  8B 1E 1326				mov	bx,word ptr ds:[1326h]	; (ss:1326=82h)
020C:5CEC  B9 0011				mov	cx,11h

020C:5CEF			locloop_796:
020C:5CEF  C6 47 30 0F				mov	byte ptr [bx+30h],0Fh
020C:5CF3  43					inc	bx
020C:5CF4  E2 F9				loop	locloop_796		; Loop if cx > 0

020C:5CF6  8B 1E 1326				mov	bx,word ptr ds:[1326h]	; (ss:1326=82h)
020C:5CFA  80 3E 22FF 01			cmp	byte ptr ds:[22FFh],1	; (ss:22FF=0BEh)
020C:5CFF  74 0C				je	loc_797			; Jump if equal
020C:5D01  C6 47 30 00				mov	byte ptr [bx+30h],0
020C:5D05  C6 47 33 00				mov	byte ptr [bx+33h],0
020C:5D09  C6 47 34 00				mov	byte ptr [bx+34h],0
020C:5D0D			loc_797:
020C:5D0D  2E: 80 3E 4735 01			cmp	byte ptr cs:[4735h],1	; (020C:4735=1Eh)
020C:5D13  75 04				jne	loc_798			; Jump if not equal
020C:5D15  C6 47 38 07				mov	byte ptr [bx+38h],7
020C:5D19			loc_798:
020C:5D19  C3					retn
				sub_52		endp

020C:5D1A  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:5D1C			sub_53		proc	near
020C:5D1C  50					push	ax
020C:5D1D  53					push	bx
020C:5D1E  51					push	cx
020C:5D1F  52					push	dx
020C:5D20  56					push	si
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 196

020C:5D21  57					push	di
020C:5D22  55					push	bp
020C:5D23  06					push	es
020C:5D24  BD 06AE				mov	bp,6AEh
020C:5D27  A1 1D2A				mov	ax,data_296		; (020C:1D2A=0)
020C:5D2A  B3 01				mov	bl,1
020C:5D2C  9A 1491:0300		;*		call	far ptr sub_159		;*(1491:0300)
020C:5D2C  9A					db	9Ah
020C:5D2D  0300 1491				dw	300h, 1491h
020C:5D31  BD 074E				mov	bp,74Eh
020C:5D34  A1 1D32				mov	ax,data_300		; (020C:1D32=0)
020C:5D37  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:5D3D  75 04				jne	loc_799			; Jump if not equal
020C:5D3F  03 06 1D3E				add	ax,data_306		; (020C:1D3E=0)
020C:5D43			loc_799:
020C:5D43  A3 1D3C				mov	data_305,ax		; (020C:1D3C=0)
020C:5D46  B3 01				mov	bl,1
020C:5D48  9A 1491:0300		;*		call	far ptr sub_159		;*(1491:0300)
020C:5D48  9A					db	9Ah
020C:5D49  0300 1491				dw	300h, 1491h
020C:5D4D  BD 06FE				mov	bp,6FEh
020C:5D50  A1 1D2E				mov	ax,data_298		; (020C:1D2E=0)
020C:5D53  B3 01				mov	bl,1
020C:5D55  9A 1491:0300		;*		call	far ptr sub_159		;*(1491:0300)
020C:5D55  9A					db	9Ah
020C:5D56  0300 1491				dw	300h, 1491h
020C:5D5A  8B 1E 1326				mov	bx,data_160		; (020C:1326=0)
020C:5D5E  80 7F 4E 00				cmp	byte ptr [bx+4Eh],0
020C:5D62  75 03				jne	loc_800			; Jump if not equal
020C:5D64  E9 00F7				jmp	loc_816			; (5E5E)
020C:5D67			loc_800:
020C:5D67  BE 06AE				mov	si,6AEh
020C:5D6A  B9 0005				mov	cx,5
020C:5D6D  80 3E 1329 01			cmp	data_162,1		; (020C:1329=0)
020C:5D72  75 6F				jne	loc_808			; Jump if not equal
020C:5D74  B3 03				mov	bl,3
020C:5D76  BA 1328				mov	dx,1328h
020C:5D79			loc_801:
020C:5D79  F6 06 46CD 80			test	data_711,80h		; (020C:46CD=1)
020C:5D7E  74 0C				jz	loc_802			; Jump if zero
020C:5D80  A1 1CF4				mov	ax,data_270		; (020C:1CF4=0)
020C:5D83  39 06 2156				cmp	data_380,ax		; (020C:2156=0FFFFh)
020C:5D87  74 32				je	loc_805			; Jump if equal
020C:5D89  E9 00D2				jmp	loc_816			; (5E5E)
020C:5D8C			loc_802:
020C:5D8C  80 FB 02				cmp	bl,2
020C:5D8F  72 1E				jb	loc_804			; Jump if below
020C:5D91  74 0E				jz	loc_803			; Jump if zero
020C:5D93  A1 1D2A				mov	ax,data_296		; (020C:1D2A=0)
020C:5D96  3B 06 1D36				cmp	ax,data_302		; (020C:1D36=0)
020C:5D9A  74 3A				je	loc_807			; Jump if equal
020C:5D9C  A3 1D36				mov	data_302,ax		; (020C:1D36=0)
020C:5D9F  EB 1A				jmp	short loc_805		; (5DBB)
020C:5DA1			loc_803:
020C:5DA1  A1 1D2E				mov	ax,data_298		; (020C:1D2E=0)
020C:5DA4  3B 06 1D38				cmp	ax,data_303		; (020C:1D38=0)
020C:5DA8  74 2C				je	loc_807			; Jump if equal
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 197

020C:5DAA  A3 1D38				mov	data_303,ax		; (020C:1D38=0)
020C:5DAD  EB 0C				jmp	short loc_805		; (5DBB)
020C:5DAF			loc_804:
020C:5DAF  A1 1D3C				mov	ax,data_305		; (020C:1D3C=0)
020C:5DB2  3B 06 1D3A				cmp	ax,data_304		; (020C:1D3A=0)
020C:5DB6  74 1E				je	loc_807			; Jump if equal
020C:5DB8  A3 1D3A				mov	data_304,ax		; (020C:1D3A=0)
020C:5DBB			loc_805:
020C:5DBB  B4 02				mov	ah,2
020C:5DBD  32 FF				xor	bh,bh			; Zero register
020C:5DBF  9A 1491:3220		;*		call	far ptr sub_187		;*(1491:3220)
020C:5DBF  9A					db	9Ah
020C:5DC0  3220 1491				dw	3220h, 1491h
020C:5DC4  B9 0005				mov	cx,5
020C:5DC7  52					push	dx
020C:5DC8  56					push	si
020C:5DC9  FC					cld				; Clear direction

020C:5DCA			locloop_806:
020C:5DCA  AC					lodsb				; String [si] to al
020C:5DCB  8A D0				mov	dl,al
020C:5DCD  9A 1491:0840		;*		call	far ptr sub_165		;*(1491:0840)
020C:5DCD  9A					db	9Ah
020C:5DCE  0840 1491				dw	840h, 1491h
020C:5DD2  E2 F6				loop	locloop_806		; Loop if cx > 0

020C:5DD4  5E					pop	si
020C:5DD5  5A					pop	dx
020C:5DD6			loc_807:
020C:5DD6  83 C6 50				add	si,50h
020C:5DD9  81 C2 0100				add	dx,100h
020C:5DDD  FE CB				dec	bl
020C:5DDF  75 98				jnz	loc_801			; Jump if not zero
020C:5DE1  EB 7B				jmp	short loc_816		; (5E5E)
020C:5DE3			loc_808:
020C:5DE3  8E 06 131B				mov	es,data_156		; (020C:131B=0)
020C:5DE7  A1 1D2A				mov	ax,data_296		; (020C:1D2A=0)
020C:5DEA  3B 06 1D36				cmp	ax,data_302		; (020C:1D36=0)
020C:5DEE  74 18				je	loc_810			; Jump if equal
020C:5DF0  A3 1D36				mov	data_302,ax		; (020C:1D36=0)
020C:5DF3  BF 06AE				mov	di,6AEh
020C:5DF6  81 EF 0096				sub	di,96h
020C:5DFA  03 3E 131D				add	di,data_157		; (020C:131D=0)

020C:5DFE			locloop_809:
020C:5DFE  FC					cld				; Clear direction
020C:5DFF  AC					lodsb				; String [si] to al
020C:5E00  8A E0				mov	ah,al
020C:5E02  E8 FC03				call	sub_47			; (5A08)
020C:5E05  47					inc	di
020C:5E06  E2 F6				loop	locloop_809		; Loop if cx > 0

020C:5E08			loc_810:
020C:5E08  A1 1D2E				mov	ax,data_298		; (020C:1D2E=0)
020C:5E0B  3B 06 1D38				cmp	ax,data_303		; (020C:1D38=0)
020C:5E0F  74 27				je	loc_814			; Jump if equal
020C:5E11  A3 1D38				mov	data_303,ax		; (020C:1D38=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 198

020C:5E14  BE 06FE				mov	si,6FEh
020C:5E17  BF 06FE				mov	di,6FEh
020C:5E1A  81 EF 0096				sub	di,96h
020C:5E1E  03 3E 131D				add	di,data_157		; (020C:131D=0)
020C:5E22  B9 0005				mov	cx,5

020C:5E25			locloop_811:
020C:5E25  AC					lodsb				; String [si] to al
020C:5E26  83 F9 01				cmp	cx,1
020C:5E29  76 05				jbe	loc_812			; Jump if below or =
020C:5E2B  80 3C 20				cmp	byte ptr [si],20h	; ' '
020C:5E2E  74 05				je	loc_813			; Jump if equal
020C:5E30			loc_812:
020C:5E30  8A E0				mov	ah,al
020C:5E32  E8 FBD3				call	sub_47			; (5A08)
020C:5E35			loc_813:
020C:5E35  47					inc	di
020C:5E36  E2 ED				loop	locloop_811		; Loop if cx > 0

020C:5E38			loc_814:
020C:5E38  A1 1D3C				mov	ax,data_305		; (020C:1D3C=0)
020C:5E3B  3B 06 1D3A				cmp	ax,data_304		; (020C:1D3A=0)
020C:5E3F  74 1D				je	loc_816			; Jump if equal
020C:5E41  A3 1D3A				mov	data_304,ax		; (020C:1D3A=0)
020C:5E44  BE 074E				mov	si,74Eh
020C:5E47  BF 074E				mov	di,74Eh
020C:5E4A  81 EF 0096				sub	di,96h
020C:5E4E  03 3E 131D				add	di,data_157		; (020C:131D=0)
020C:5E52  B9 0005				mov	cx,5

020C:5E55			locloop_815:
020C:5E55  AC					lodsb				; String [si] to al
020C:5E56  8A E0				mov	ah,al
020C:5E58  E8 FBAD				call	sub_47			; (5A08)
020C:5E5B  47					inc	di
020C:5E5C  E2 F7				loop	locloop_815		; Loop if cx > 0

020C:5E5E			loc_816:
020C:5E5E  07					pop	es
020C:5E5F  5D					pop	bp
020C:5E60  5F					pop	di
020C:5E61  5E					pop	si
020C:5E62  5A					pop	dx
020C:5E63  59					pop	cx
020C:5E64  5B					pop	bx
020C:5E65  58					pop	ax
020C:5E66  C3					retn
				sub_53		endp

020C:5E67  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:5E68			sub_54		proc	near
020C:5E68  50					push	ax
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 199

020C:5E69  53					push	bx
020C:5E6A  51					push	cx
020C:5E6B  52					push	dx
020C:5E6C  57					push	di
020C:5E6D  55					push	bp
020C:5E6E  06					push	es
020C:5E6F  F6 06 46CD 80			test	data_711,80h		; (020C:46CD=1)
020C:5E74  74 0B				jz	loc_817			; Jump if zero
020C:5E76  A1 1CF4				mov	ax,data_270		; (020C:1CF4=0)
020C:5E79  39 06 2156				cmp	data_380,ax		; (020C:2156=0FFFFh)
020C:5E7D  74 02				je	loc_817			; Jump if equal
020C:5E7F  EB 74				jmp	short loc_819		; (5EF5)
020C:5E81			loc_817:
020C:5E81  BD 07DC				mov	bp,7DCh
020C:5E84  56					push	si
020C:5E85  BE 2F0B				mov	si,2F0Bh
020C:5E88  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:5E88  9A					db	9Ah
020C:5E89  67E0 1491				dw	67E0h, 1491h
020C:5E8D  5E					pop	si
020C:5E8E  A1 2156				mov	ax,data_380		; (020C:2156=0FFFFh)
020C:5E91  3E: 8B 56 00				mov	dx,ds:[bp]
020C:5E95  3E: 8B 5E 02				mov	bx,ds:[bp+2]
020C:5E99  53					push	bx
020C:5E9A  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:5E9A  9A					db	9Ah
020C:5E9B  0294 1491				dw	294h, 1491h
020C:5E9F  5B					pop	bx
020C:5EA0  8E 06 131B				mov	es,data_156		; (020C:131B=0)
020C:5EA4  BF 07C9				mov	di,7C9h
020C:5EA7  83 C7 13				add	di,13h
020C:5EAA  81 EF 0096				sub	di,96h
020C:5EAE  03 3E 131D				add	di,data_157		; (020C:131D=0)
020C:5EB2  BD 07DC				mov	bp,7DCh
020C:5EB5  B9 0009				mov	cx,9
020C:5EB8  A1 2154				mov	ax,data_379		; (020C:2154=5CE9h)
020C:5EBB  3B 06 215E				cmp	ax,data_384		; (020C:215E=0FFFFh)
020C:5EBF  A3 215E				mov	data_384,ax		; (020C:215E=0FFFFh)
020C:5EC2  75 21				jnz	locloop_818		; Jump if not zero
020C:5EC4  83 C7 05				add	di,5
020C:5EC7  83 C5 05				add	bp,5
020C:5ECA  B9 0004				mov	cx,4
020C:5ECD  3E: 3B 56 00				cmp	dx,ds:[bp]
020C:5ED1  75 12				jne	locloop_818		; Jump if not equal
020C:5ED3  83 C7 02				add	di,2
020C:5ED6  83 C5 02				add	bp,2
020C:5ED9  B9 0002				mov	cx,2
020C:5EDC  3E: 3A 5E 00				cmp	bl,ds:[bp]
020C:5EE0  75 03				jne	locloop_818		; Jump if not equal
020C:5EE2  47					inc	di
020C:5EE3  45					inc	bp
020C:5EE4  49					dec	cx

020C:5EE5			locloop_818:
020C:5EE5  C6 06 1796 01			mov	data_199,1		; (020C:1796=0)
020C:5EEA  3E: 8A 66 00				mov	ah,ds:[bp]
020C:5EEE  E8 FB17				call	sub_47			; (5A08)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 200

020C:5EF1  47					inc	di
020C:5EF2  45					inc	bp
020C:5EF3  E2 F0				loop	locloop_818		; Loop if cx > 0

020C:5EF5			loc_819:
020C:5EF5  A1 216A				mov	ax,data_390		; (020C:216A=0FFFFh)
020C:5EF8  3B 06 2168				cmp	ax,data_389		; (020C:2168=5F82h)
020C:5EFC  75 02				jne	loc_820			; Jump if not equal
020C:5EFE  EB 0D				jmp	short loc_821		; (5F0D)
020C:5F00			loc_820:
020C:5F00  9A 1491:32E0		;*		call	far ptr sub_188		;*(1491:32E0)
020C:5F00  9A					db	9Ah
020C:5F01  32E0 1491				dw	32E0h, 1491h
020C:5F05  83 FB 00				cmp	bx,0
020C:5F08  75 1C				jne	loc_823			; Jump if not equal
020C:5F0A  E9 00D1				jmp	loc_830			; (5FDE)
020C:5F0D			loc_821:
020C:5F0D  8B 1E 2166				mov	bx,data_388		; (020C:2166=0FFFFh)
020C:5F11  2B 1E 2164				sub	bx,data_387		; (020C:2164=645Ah)
020C:5F15  75 03				jnz	loc_822			; Jump if not zero
020C:5F17  E9 00C4				jmp	loc_830			; (5FDE)
020C:5F1A			loc_822:
020C:5F1A  A1 2156				mov	ax,data_380		; (020C:2156=0FFFFh)
020C:5F1D  2B 06 2164				sub	ax,data_387		; (020C:2164=645Ah)
020C:5F21  B9 0040				mov	cx,40h
020C:5F24  F7 E1				mul	cx			; dx:ax = reg * ax
020C:5F26			loc_823:
020C:5F26  F7 F3				div	bx			; ax,dx rem=dx:ax/reg
020C:5F28  8B 0E 2154				mov	cx,data_379		; (020C:2154=5CE9h)
020C:5F2C  3B 0E 1CF2				cmp	cx,data_269		; (020C:1CF2=0)
020C:5F30  75 0A				jne	loc_824			; Jump if not equal
020C:5F32  8B 0E 2156				mov	cx,data_380		; (020C:2156=0FFFFh)
020C:5F36  3B 0E 1CF4				cmp	cx,data_270		; (020C:1CF4=0)
020C:5F3A  74 3B				je	loc_827			; Jump if equal
020C:5F3C			loc_824:
020C:5F3C  3B 06 216C				cmp	ax,data_391		; (020C:216C=64D3h)
020C:5F40  75 03				jne	loc_825			; Jump if not equal
020C:5F42  E9 0099				jmp	loc_830			; (5FDE)
020C:5F45			loc_825:
020C:5F45  80 3E 1329 01			cmp	data_162,1		; (020C:1329=0)
020C:5F4A  75 2B				jne	loc_827			; Jump if not equal
020C:5F4C  8B 1E 216A				mov	bx,data_390		; (020C:216A=0FFFFh)
020C:5F50  3B 1E 2168				cmp	bx,data_389		; (020C:2168=5F82h)
020C:5F54  75 18				jne	loc_826			; Jump if not equal
020C:5F56  8B 1E 2166				mov	bx,data_388		; (020C:2166=0FFFFh)
020C:5F5A  2B 1E 2164				sub	bx,data_387		; (020C:2164=645Ah)
020C:5F5E  8B D0				mov	dx,ax
020C:5F60  81 FB 0200				cmp	bx,200h
020C:5F64  77 08				ja	loc_826			; Jump if above
020C:5F66  F7 C2 0003				test	dx,3
020C:5F6A  74 0B				jz	loc_827			; Jump if zero
020C:5F6C  EB 70				jmp	short loc_830		; (5FDE)
020C:5F6E			loc_826:
020C:5F6E  80 CA 01				or	dl,1
020C:5F71  3B 16 216C				cmp	dx,data_391		; (020C:216C=64D3h)
020C:5F75  74 67				je	loc_830			; Jump if equal
020C:5F77			loc_827:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 201

020C:5F77  8B D0				mov	dx,ax
020C:5F79  BF 07C9				mov	di,7C9h
020C:5F7C  83 C7 1E				add	di,1Eh
020C:5F7F  81 EF 0096				sub	di,96h
020C:5F83  03 3E 131D				add	di,data_157		; (020C:131D=0)
020C:5F87  A1 216C				mov	ax,data_391		; (020C:216C=64D3h)
020C:5F8A  D1 E8				shr	ax,1			; Shift w/zeros fill
020C:5F8C  03 F8				add	di,ax
020C:5F8E  B4 FA				mov	ah,0FAh
020C:5F90  80 3E 1799 02			cmp	data_201,2		; (020C:1799=0)
020C:5F95  75 02				jne	loc_828			; Jump if not equal
020C:5F97  B4 2E				mov	ah,2Eh			; '.'
020C:5F99			loc_828:
020C:5F99  C6 06 1796 01			mov	data_199,1		; (020C:1796=0)
020C:5F9E  E8 FA67				call	sub_47			; (5A08)
020C:5FA1  B4 0F				mov	ah,0Fh
020C:5FA3  E8 FAF6				call	sub_48			; (5A9C)
020C:5FA6  89 16 216C				mov	data_391,dx		; (020C:216C=64D3h)
020C:5FAA  BF 07C9				mov	di,7C9h
020C:5FAD  83 C7 1E				add	di,1Eh
020C:5FB0  81 EF 0096				sub	di,96h
020C:5FB4  03 3E 131D				add	di,data_157		; (020C:131D=0)
020C:5FB8  B4 2A				mov	ah,2Ah			; '*'
020C:5FBA  80 3E 1799 02			cmp	data_201,2		; (020C:1799=0)
020C:5FBF  74 0A				je	loc_829			; Jump if equal
020C:5FC1  B4 DD				mov	ah,0DDh
020C:5FC3  F7 C2 0001				test	dx,1
020C:5FC7  74 02				jz	loc_829			; Jump if zero
020C:5FC9  B4 DE				mov	ah,0DEh
020C:5FCB			loc_829:
020C:5FCB  D1 EA				shr	dx,1			; Shift w/zeros fill
020C:5FCD  03 FA				add	di,dx
020C:5FCF  C6 06 1796 01			mov	data_199,1		; (020C:1796=0)
020C:5FD4  E8 FA31				call	sub_47			; (5A08)
020C:5FD7  8A 26 1207				mov	ah,data_138		; (020C:1207=0)
020C:5FDB  E8 FABE				call	sub_48			; (5A9C)
020C:5FDE			loc_830:
020C:5FDE  07					pop	es
020C:5FDF  5D					pop	bp
020C:5FE0  5F					pop	di
020C:5FE1  5A					pop	dx
020C:5FE2  59					pop	cx
020C:5FE3  5B					pop	bx
020C:5FE4  58					pop	ax
020C:5FE5  80 3E 1794 00			cmp	data_197,0		; (020C:1794=0)
020C:5FEA  74 05				je	loc_831			; Jump if equal
020C:5FEC  9A 1491:C64C		;*		call	far ptr sub_273		;*(1491:C64C)
020C:5FEC  9A					db	9Ah
020C:5FED  C64C 1491				dw	0C64Ch, 1491h
020C:5FF1			loc_831:
020C:5FF1  C3					retn
				sub_54		endp

020C:5FF2  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 202

				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:5FF4			sub_55		proc	near
020C:5FF4  52					push	dx
020C:5FF5  51					push	cx
020C:5FF6  56					push	si
020C:5FF7  57					push	di
020C:5FF8  06					push	es
020C:5FF9  E8 19F2				call	sub_90			; (79EE)
020C:5FFC  BE 176B				mov	si,176Bh
020C:5FFF  F6 06 176A 03			test	byte ptr ds:[176Ah],3	; (ss:176A=0FEh)
020C:6004  75 03				jnz	loc_832			; Jump if not zero
020C:6006  BE 1779				mov	si,1779h
020C:6009			loc_832:
020C:6009  BF 06D9				mov	di,6D9h
020C:600C  B9 1779				mov	cx,1779h
020C:600F  81 E9 176B				sub	cx,176Bh
020C:6013  FC					cld				; Clear direction
020C:6014  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:6016  32 D2				xor	dl,dl			; Zero register
020C:6018  E8 19C7				call	sub_87			; (79E2)
020C:601B  26: A1 0000				mov	ax,word ptr es:[0]	; (444F:0000=120h)
020C:601F  3D FFFF				cmp	ax,0FFFFh
020C:6022  75 04				jne	loc_833			; Jump if not equal
020C:6024  B2 01				mov	dl,1
020C:6026  33 C0				xor	ax,ax			; Zero register
020C:6028			loc_833:
020C:6028  BD 0699				mov	bp,699h
020C:602B  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:602B  9A					db	9Ah
020C:602C  0294 1491				dw	294h, 1491h
020C:6030  26: A1 0002				mov	ax,word ptr es:[2]	; (444F:0002=5)
020C:6034  0A D2				or	dl,dl			; Zero ?
020C:6036  74 02				jz	loc_834			; Jump if zero
020C:6038  33 C0				xor	ax,ax			; Zero register
020C:603A			loc_834:
020C:603A  BD 069E				mov	bp,69Eh
020C:603D  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:603D  9A					db	9Ah
020C:603E  0294 1491				dw	294h, 1491h
020C:6042  BE 0000				mov	si,0
020C:6045  F6 06 176A 03			test	byte ptr ds:[176Ah],3	; (ss:176A=0FEh)
020C:604A  75 1D				jnz	loc_836			; Jump if not zero
020C:604C  A0 1CD9				mov	al,byte ptr ds:[1CD9h]	; (ss:1CD9=0)
020C:604F  FE C8				dec	al
020C:6051  B3 19				mov	bl,19h
020C:6053  F6 E3				mul	bl			; ax = reg * al
020C:6055  03 F0				add	si,ax
020C:6057			loc_835:
020C:6057  26: F6 44 0B 40			test	byte ptr es:[si+0Bh],40h	; '@'
020C:605C  74 0B				jz	loc_836			; Jump if zero
020C:605E  81 FE 0000				cmp	si,0
020C:6062  74 05				je	loc_836			; Jump if equal
020C:6064  83 EE 19				sub	si,19h
020C:6067  EB EE				jmp	short loc_835		; (6057)
020C:6069			loc_836:
020C:6069  26: 8B 04				mov	ax,es:[si]
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 203

020C:606C  0A D2				or	dl,dl			; Zero ?
020C:606E  74 02				jz	loc_837			; Jump if zero
020C:6070  33 C0				xor	ax,ax			; Zero register
020C:6072			loc_837:
020C:6072  BD 06E9				mov	bp,6E9h
020C:6075  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:6075  9A					db	9Ah
020C:6076  0294 1491				dw	294h, 1491h
020C:607A  26: 8B 44 04				mov	ax,es:[si+4]
020C:607E  BD 06EE				mov	bp,6EEh
020C:6081  0A D2				or	dl,dl			; Zero ?
020C:6083  74 02				jz	loc_838			; Jump if zero
020C:6085  33 C0				xor	ax,ax			; Zero register
020C:6087			loc_838:
020C:6087  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:6087  9A					db	9Ah
020C:6088  0294 1491				dw	294h, 1491h
020C:608C  07					pop	es
020C:608D  5F					pop	di
020C:608E  5E					pop	si
020C:608F  5A					pop	dx
020C:6090  59					pop	cx
020C:6091  E8 193C				call	sub_84			; (79D0)
020C:6094  C3					retn
				sub_55		endp

020C:6095  87 DB				xchg	bx,bx
020C:6097  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:6098			sub_56		proc	near
020C:6098  BF 2106				mov	di,2106h
020C:609B  57					push	di
020C:609C  B9 003C				mov	cx,3Ch
020C:609F  B3 00				mov	bl,0

020C:60A1			locloop_839:
020C:60A1  26: 8A 04				mov	al,es:[si]
020C:60A4  3C 20				cmp	al,20h			; ' '
020C:60A6  72 0B				jb	loc_840			; Jump if below
020C:60A8  3C 80				cmp	al,80h
020C:60AA  73 07				jae	loc_840			; Jump if above or =
020C:60AC  88 05				mov	[di],al
020C:60AE  FE C3				inc	bl
020C:60B0  47					inc	di
020C:60B1  EB 0E				jmp	short loc_841		; (60C1)
020C:60B3			loc_840:
020C:60B3  80 FB 00				cmp	bl,0
020C:60B6  74 09				je	loc_841			; Jump if equal
020C:60B8  80 FB 08				cmp	bl,8
020C:60BB  77 0C				ja	loc_842			; Jump if above
020C:60BD  5F					pop	di
020C:60BE  57					push	di
020C:60BF  B3 00				mov	bl,0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 204

020C:60C1			loc_841:
020C:60C1  46					inc	si
020C:60C2  80 FB 20				cmp	bl,20h			; ' '
020C:60C5  77 02				ja	loc_842			; Jump if above
020C:60C7  E2 D8				loop	locloop_839		; Loop if cx > 0

020C:60C9			loc_842:
020C:60C9  5F					pop	di
020C:60CA  C3					retn
				sub_56		endp

020C:60CB  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:60CC			sub_57		proc	near
020C:60CC  50					push	ax
020C:60CD  B5 20				mov	ch,20h			; ' '
020C:60CF  B4 01				mov	ah,1
020C:60D1  9A 1491:3220		;*		call	far ptr sub_187		;*(1491:3220)
020C:60D1  9A					db	9Ah
020C:60D2  3220 1491				dw	3220h, 1491h
020C:60D6  58					pop	ax
020C:60D7  C3					retn
				sub_57		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:60D8			sub_58		proc	near
020C:60D8  50					push	ax
020C:60D9  8B 0E 1D75				mov	cx,word ptr ds:[1D75h]	; (ss:1D75=575h)
020C:60DD  B4 01				mov	ah,1
020C:60DF  9A 1491:3220		;*		call	far ptr sub_187		;*(1491:3220)
020C:60DF  9A					db	9Ah
020C:60E0  3220 1491				dw	3220h, 1491h
020C:60E4  58					pop	ax
020C:60E5  C3					retn
				sub_58		endp

020C:60E6  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:60E8			sub_59		proc	near
020C:60E8  06					push	es
020C:60E9  8E 06 131B				mov	es,word ptr ds:[131Bh]	; (ss:131B=444Fh)
020C:60ED  BF 06D5				mov	di,6D5h
020C:60F0  81 EF 0631				sub	di,631h
020C:60F4  81 C7 0190				add	di,190h
020C:60F8  03 3E 131D				add	di,word ptr ds:[131Dh]	; (ss:131D=7501h)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 205

020C:60FC  B2 41				mov	dl,41h			; 'A'
020C:60FE  B6 61				mov	dh,61h			; 'a'
020C:6100  B9 001A				mov	cx,1Ah

020C:6103			locloop_843:
020C:6103  8A E2				mov	ah,dl
020C:6105  A0 1207				mov	al,byte ptr ds:[1207h]	; (ss:1207=32h)
020C:6108  F7 C3 8000				test	bx,8000h
020C:610C  75 04				jnz	loc_844			; Jump if not zero
020C:610E  8A E6				mov	ah,dh
020C:6110  B0 07				mov	al,7
020C:6112			loc_844:
020C:6112  80 3E 1329 01			cmp	byte ptr ds:[1329h],1	; (ss:1329=36h)
020C:6117  75 0B				jne	loc_845			; Jump if not equal
020C:6119  3A 06 1207				cmp	al,byte ptr ds:[1207h]	; (ss:1207=32h)
020C:611D  75 05				jne	loc_845			; Jump if not equal
020C:611F  C6 06 1796 01			mov	byte ptr ds:[1796h],1	; (ss:1796=0D9h)
020C:6124			loc_845:
020C:6124  E8 F8E1				call	sub_47			; (5A08)
020C:6127  8A E0				mov	ah,al
020C:6129  E8 F970				call	sub_48			; (5A9C)
020C:612C  83 C7 4F				add	di,4Fh
020C:612F  FE C2				inc	dl
020C:6131  FE C6				inc	dh
020C:6133  D1 C3				rol	bx,1			; Rotate
020C:6135  80 3E 3D1C 02			cmp	byte ptr ds:[3D1Ch],2	; (ss:3D1C=3Fh)
020C:613A  75 07				jne	loc_846			; Jump if not equal
020C:613C  80 FA 4D				cmp	dl,4Dh			; 'M'
020C:613F  77 34				ja	loc_850			; Jump if above
020C:6141  EB 30				jmp	short loc_849		; (6173)
020C:6143			loc_846:
020C:6143  83 F9 0D				cmp	cx,0Dh
020C:6146  75 0F				jne	loc_847			; Jump if not equal
020C:6148  BF 06FB				mov	di,6FBh
020C:614B  81 EF 0631				sub	di,631h
020C:614F  81 C7 0190				add	di,190h
020C:6153  03 3E 131D				add	di,word ptr ds:[131Dh]	; (ss:131D=7501h)
020C:6157			loc_847:
020C:6157  83 F9 0B				cmp	cx,0Bh
020C:615A  75 0E				jne	loc_848			; Jump if not equal
020C:615C  81 C7 00A0				add	di,0A0h
020C:6160  8A 3E 3D78				mov	bh,byte ptr ds:[3D78h]	; (ss:3D78=0E4h)
020C:6164  D0 CF				ror	bh,1			; Rotate
020C:6166  D0 CF				ror	bh,1			; Rotate
020C:6168  D0 CF				ror	bh,1			; Rotate
020C:616A			loc_848:
020C:616A  83 F9 07				cmp	cx,7
020C:616D  75 04				jne	loc_849			; Jump if not equal
020C:616F  8A 3E 3D1A				mov	bh,byte ptr ds:[3D1Ah]	; (ss:3D1A=3Eh)
020C:6173			loc_849:
020C:6173  E2 8E				loop	locloop_843		; Loop if cx > 0

020C:6175			loc_850:
020C:6175  07					pop	es
020C:6176  C3					retn
				sub_59		endp

           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 206

020C:6177  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:6178			sub_60		proc	near
020C:6178  53					push	bx
020C:6179  51					push	cx
020C:617A  52					push	dx
020C:617B  57					push	di
020C:617C  56					push	si
020C:617D  06					push	es
020C:617E  E8 186D				call	sub_90			; (79EE)
020C:6181  BE 1637				mov	si,1637h
020C:6184  BF 030F				mov	di,30Fh
020C:6187  B9 0003				mov	cx,3
020C:618A  F6 06 3D78 07			test	byte ptr ds:[3D78h],7	; (ss:3D78=0E4h)
020C:618F  75 02				jnz	loc_851			; Jump if not zero
020C:6191  03 F1				add	si,cx
020C:6193			loc_851:
020C:6193  FC					cld				; Clear direction
020C:6194  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:6196  BE 030F				mov	si,30Fh
020C:6199  BF 030F				mov	di,30Fh
020C:619C  81 EF 0096				sub	di,96h
020C:61A0  03 3E 131D				add	di,word ptr ds:[131Dh]	; (ss:131D=7501h)
020C:61A4  8E 06 131B				mov	es,word ptr ds:[131Bh]	; (ss:131B=444Fh)
020C:61A8  B9 0003				mov	cx,3

020C:61AB			locloop_852:
020C:61AB  8A 24				mov	ah,[si]
020C:61AD  E8 F858				call	sub_47			; (5A08)
020C:61B0  47					inc	di
020C:61B1  46					inc	si
020C:61B2  E2 F7				loop	locloop_852		; Loop if cx > 0

020C:61B4  B4 02				mov	ah,2
020C:61B6  32 FF				xor	bh,bh			; Zero register
020C:61B8  BA 184F				mov	dx,184Fh
020C:61BB  9A 1491:3220		;*		call	far ptr sub_187		;*(1491:3220)
020C:61BB  9A					db	9Ah
020C:61BC  3220 1491				dw	3220h, 1491h
020C:61C0  07					pop	es
020C:61C1  5E					pop	si
020C:61C2  5F					pop	di
020C:61C3  5A					pop	dx
020C:61C4  59					pop	cx
020C:61C5  5B					pop	bx
020C:61C6  C3					retn
				sub_60		endp

020C:61C7  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 207


020C:61C8			sub_61		proc	near
020C:61C8  53					push	bx
020C:61C9  E8 1822				call	sub_90			; (79EE)
020C:61CC  B0 63				mov	al,63h			; 'c'
020C:61CE  80 3E 22FD 01			cmp	byte ptr ds:[22FDh],1	; (ss:22FD=1Bh)
020C:61D3  75 02				jne	loc_853			; Jump if not equal
020C:61D5  B0 33				mov	al,33h			; '3'
020C:61D7			loc_853:
020C:61D7  A2 16A2				mov	byte ptr ds:[16A2h],al	; (ss:16A2=80h)
020C:61DA  A2 16F1				mov	byte ptr ds:[16F1h],al	; (ss:16F1=4)
020C:61DD  A0 163F				mov	al,byte ptr ds:[163Fh]	; (ss:163F=17h)
020C:61E0  B9 1658				mov	cx,1658h
020C:61E3  81 E9 1640				sub	cx,1640h
020C:61E7  F6 E1				mul	cl			; ax = reg * al
020C:61E9  05 1640				add	ax,1640h
020C:61EC  8B F0				mov	si,ax
020C:61EE  A0 163F				mov	al,byte ptr ds:[163Fh]	; (ss:163F=17h)
020C:61F1  3C 00				cmp	al,0
020C:61F3  74 21				je	loc_856			; Jump if equal
020C:61F5  3C 01				cmp	al,1
020C:61F7  74 1D				je	loc_856			; Jump if equal
020C:61F9  3C 02				cmp	al,2
020C:61FB  74 14				je	loc_855			; Jump if equal
020C:61FD  80 3E 22FD 01			cmp	byte ptr ds:[22FDh],1	; (ss:22FD=1Bh)
020C:6202  75 03				jne	loc_854			; Jump if not equal
020C:6204  BE 16B8				mov	si,16B8h
020C:6207			loc_854:
020C:6207  F6 06 22FC 04			test	byte ptr ds:[22FCh],4	; (ss:22FC=6)
020C:620C  74 03				jz	loc_855			; Jump if zero
020C:620E  BE 16A0				mov	si,16A0h
020C:6211			loc_855:
020C:6211  BB 16E0				mov	bx,16E0h
020C:6214  EB 0D				jmp	short loc_857		; (6223)
020C:6216			loc_856:
020C:6216  BB 16D0				mov	bx,16D0h
020C:6219  F6 06 22FC 04			test	byte ptr ds:[22FCh],4	; (ss:22FC=6)
020C:621E  74 03				jz	loc_857			; Jump if zero
020C:6220  BB 16F0				mov	bx,16F0h
020C:6223			loc_857:
020C:6223  BF 047F				mov	di,47Fh
020C:6226  26: C7 45 0B 2020			mov	word ptr es:[di+0Bh],2020h
020C:622C  B4 20				mov	ah,20h			; ' '
020C:622E  F7 06 3D1D 8000			test	word ptr ds:[3D1Dh],8000h	; (ss:3D1D=7400h)
020C:6234  74 07				jz	loc_858			; Jump if zero
020C:6236  26: C6 05 5B				mov	byte ptr es:[di],5Bh	; '['
020C:623A  47					inc	di
020C:623B  B4 5D				mov	ah,5Dh			; ']'
020C:623D			loc_858:
020C:623D  B9 164C				mov	cx,164Ch
020C:6240  81 E9 1640				sub	cx,1640h

020C:6244			locloop_859:
020C:6244  AC					lodsb				; String [si] to al
020C:6245  3C 20				cmp	al,20h			; ' '
020C:6247  75 04				jne	loc_860			; Jump if not equal
020C:6249  8A C4				mov	al,ah
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 208

020C:624B  B4 20				mov	ah,20h			; ' '
020C:624D			loc_860:
020C:624D  AA					stosb				; Store al to es:[di]
020C:624E  E2 F4				loop	locloop_859		; Loop if cx > 0

020C:6250  B9 1658				mov	cx,1658h
020C:6253  81 E9 164C				sub	cx,164Ch
020C:6257  BF 0572				mov	di,572h
020C:625A  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:625C  B9 16E0				mov	cx,16E0h
020C:625F  81 E9 16D0				sub	cx,16D0h
020C:6263  8B F3				mov	si,bx
020C:6265  BF 048F				mov	di,48Fh
020C:6268  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:626A  5B					pop	bx
020C:626B  C3					retn
				sub_61		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:626C			sub_62		proc	near
020C:626C  E8 177F				call	sub_90			; (79EE)
020C:626F  8B 1E 1326				mov	bx,data_160		; (020C:1326=0)
020C:6273  C6 47 6F 00				mov	byte ptr [bx+6Fh],0
020C:6277  C6 47 5C 00				mov	byte ptr [bx+5Ch],0
020C:627B  C6 47 6E 00				mov	byte ptr [bx+6Eh],0
020C:627F  A0 1700				mov	al,byte ptr ds:[1700h]	; (020C:1700=41h)
020C:6282  A8 01				test	al,1
020C:6284  74 04				jz	loc_861			; Jump if zero
020C:6286  C6 47 6F 07				mov	byte ptr [bx+6Fh],7
020C:628A			loc_861:
020C:628A  A8 02				test	al,2
020C:628C  74 04				jz	loc_862			; Jump if zero
020C:628E  C6 47 5C 07				mov	byte ptr [bx+5Ch],7
020C:6292			loc_862:
020C:6292  A8 04				test	al,4
020C:6294  74 04				jz	loc_863			; Jump if zero
020C:6296  C6 47 6E 07				mov	byte ptr [bx+6Eh],7
020C:629A			loc_863:
020C:629A  BB 170A				mov	bx,170Ah
020C:629D  D7					xlat				; al=[al+[bx]] table
020C:629E  8A E0				mov	ah,al
020C:62A0  25 0FF0				and	ax,0FF0h
020C:62A3  B1 04				mov	cl,4
020C:62A5  D2 C8				ror	al,cl			; Rotate
020C:62A7  8A DC				mov	bl,ah
020C:62A9  32 E4				xor	ah,ah			; Zero register
020C:62AB  B9 1718				mov	cx,1718h
020C:62AE  81 E9 1712				sub	cx,1712h
020C:62B2  F6 E1				mul	cl			; ax = reg * al
020C:62B4  05 1712				add	ax,1712h
020C:62B7  8B F0				mov	si,ax
020C:62B9  BF 053D				mov	di,53Dh
020C:62BC  FC					cld				; Clear direction
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 209

020C:62BD  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:62BF  B8 173A				mov	ax,173Ah
020C:62C2  2D 172A				sub	ax,172Ah
020C:62C5  8B C8				mov	cx,ax
020C:62C7  F6 E3				mul	bl			; ax = reg * al
020C:62C9  8B F0				mov	si,ax
020C:62CB  81 C6 172A				add	si,172Ah
020C:62CF  BF 0583				mov	di,583h
020C:62D2  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:62D4  C3					retn
				sub_62		endp

020C:62D5  87 DB				xchg	bx,bx
020C:62D7  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:62D8			sub_63		proc	near
020C:62D8  52					push	dx
020C:62D9  50					push	ax
020C:62DA  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:62DF  1E					push	ds
020C:62E0  E8 16ED				call	sub_84			; (79D0)
020C:62E3  BA 17A8				mov	dx,17A8h
020C:62E6  B4 09				mov	ah,9
020C:62E8  CD 21				int	21h			; DOS Services  ah=function 09h
										;  display char string at ds:dx
020C:62EA  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:62EF  9C					pushf				; Push flags
020C:62F0  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:62F5  5A					pop	dx
020C:62F6  8E DA				mov	ds,dx
020C:62F8  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:62FD  5A					pop	dx
020C:62FE  75 0A				jnz	loc_864			; Jump if not zero
020C:6300  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:6305  74 03				je	loc_864			; Jump if equal
020C:6307  E8 1BA6				call	sub_97			; (7EB0)
020C:630A			loc_864:
020C:630A  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:630F  9D					popf				; Pop flags
020C:6310  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:6315  58					pop	ax
020C:6316  5A					pop	dx
020C:6317  C3					retn
				sub_63		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:6318			sub_64		proc	near
020C:6318  52					push	dx
020C:6319  50					push	ax
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 210

020C:631A  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:631F  1E					push	ds
020C:6320  E8 16AD				call	sub_84			; (79D0)
020C:6323  BA 17A4				mov	dx,17A4h
020C:6326  B4 09				mov	ah,9
020C:6328  CD 21				int	21h			; DOS Services  ah=function 09h
										;  display char string at ds:dx
020C:632A  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:632F  9C					pushf				; Push flags
020C:6330  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:6335  5A					pop	dx
020C:6336  8E DA				mov	ds,dx
020C:6338  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:633D  5A					pop	dx
020C:633E  75 0A				jnz	loc_865			; Jump if not zero
020C:6340  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:6345  74 03				je	loc_865			; Jump if equal
020C:6347  E8 1B66				call	sub_97			; (7EB0)
020C:634A			loc_865:
020C:634A  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:634F  9D					popf				; Pop flags
020C:6350  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:6355  58					pop	ax
020C:6356  5A					pop	dx
020C:6357  C3					retn
				sub_64		endp

020C:6358  0008[00]				db	8 dup (0)
020C:6360  50					push	ax
020C:6361			loc_866:
020C:6361  3E: 81 7E 00 2020			cmp	word ptr ds:[bp],2020h
020C:6367  74 05				je	loc_867			; Jump if equal
020C:6369  45					inc	bp
020C:636A  FE C8				dec	al
020C:636C  75 F3				jnz	loc_866			; Jump if not zero
020C:636E			loc_867:
020C:636E  58					pop	ax
020C:636F  C3					retn

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:6370			sub_65		proc	near
020C:6370  E8 167B				call	sub_90			; (79EE)
020C:6373  8B 36 215A				mov	si,data_382		; (020C:215A=0FFFFh)
020C:6377  BF 1960				mov	di,1960h
020C:637A  A1 2158				mov	ax,data_381		; (020C:2158=5F63h)
020C:637D  8E D8				mov	ds,ax
020C:637F  0B F6				or	si,si			; Zero ?
020C:6381  74 09				jz	loc_868			; Jump if zero
020C:6383  33 C9				xor	cx,cx			; Zero register
020C:6385  2B CE				sub	cx,si
020C:6387  83 F9 28				cmp	cx,28h
020C:638A  72 10				jb	loc_869			; Jump if below
020C:638C			loc_868:
020C:638C  B9 0028				mov	cx,28h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 211

020C:638F  FC					cld				; Clear direction
020C:6390  26: 80 3E 1CDF 0A			cmp	es:data_257,0Ah		; (020C:1CDF=0)
020C:6396  74 2F				je	loc_872			; Jump if equal
020C:6398  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:639A  EB 2F				jmp	short loc_873		; (63CB)
020C:639C			loc_869:
020C:639C  51					push	cx
020C:639D  FC					cld				; Clear direction
020C:639E  26: 80 3E 1CDF 0A			cmp	es:data_257,0Ah		; (020C:1CDF=0)
020C:63A4  74 04				je	loc_870			; Jump if equal
020C:63A6  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:63A8  EB 04				jmp	short loc_871		; (63AE)
020C:63AA			loc_870:
020C:63AA  32 C0				xor	al,al			; Zero register
020C:63AC  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:63AE			loc_871:
020C:63AE  58					pop	ax
020C:63AF  B9 0028				mov	cx,28h
020C:63B2  2B C8				sub	cx,ax
020C:63B4  8C D8				mov	ax,ds
020C:63B6  05 1000				add	ax,1000h
020C:63B9  8E D8				mov	ds,ax
020C:63BB  26: 80 3E 1CDF 0A			cmp	es:data_257,0Ah		; (020C:1CDF=0)
020C:63C1  74 04				je	loc_872			; Jump if equal
020C:63C3  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:63C5  EB 04				jmp	short loc_873		; (63CB)
020C:63C7			loc_872:
020C:63C7  32 C0				xor	al,al			; Zero register
020C:63C9  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:63CB			loc_873:
020C:63CB  E8 1602				call	sub_84			; (79D0)
020C:63CE  8B 36 215A				mov	si,word ptr ds:[215Ah]	; (6F63:215A=140h)
020C:63D2  03 36 215C				add	si,word ptr ds:[215Ch]	; (6F63:215C=3F00h)
020C:63D6  89 36 2156				mov	word ptr ds:[2156h],si	; (6F63:2156=20Ch)
020C:63DA  BE 1960				mov	si,1960h
020C:63DD  C3					retn
				sub_65		endp

020C:63DE  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:63E0			sub_66		proc	near
020C:63E0  06					push	es
020C:63E1  F6 06 22EA 01			test	data_433,1		; (020C:22EA=1)
020C:63E6  74 34				jz	loc_875			; Jump if zero
020C:63E8  BF 0708				mov	di,708h
020C:63EB  81 EF 0096				sub	di,96h
020C:63EF  03 3E 131D				add	di,data_157		; (020C:131D=0)
020C:63F3  8E 06 131B				mov	es,data_156		; (020C:131B=0)
020C:63F7  BE 1960				mov	si,1960h
020C:63FA  B9 0004				mov	cx,4

020C:63FD			locloop_874:
020C:63FD  8A 04				mov	al,[si]
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 212

020C:63FF  9A 1491:0100		;*		call	far ptr sub_151		;*(1491:0100)
020C:63FF  9A					db	9Ah
020C:6400  0100 1491				dw	100h, 1491h
020C:6404  8A E3				mov	ah,bl
020C:6406  E8 F5FF				call	sub_47			; (5A08)
020C:6409  B4 0F				mov	ah,0Fh
020C:640B  E8 F68E				call	sub_48			; (5A9C)
020C:640E  8A E7				mov	ah,bh
020C:6410  E8 F5F5				call	sub_47			; (5A08)
020C:6413  B4 0F				mov	ah,0Fh
020C:6415  E8 F684				call	sub_48			; (5A9C)
020C:6418  47					inc	di
020C:6419  46					inc	si
020C:641A  E2 E1				loop	locloop_874		; Loop if cx > 0

020C:641C			loc_875:
020C:641C  F6 06 22EA 02			test	data_433,2		; (020C:22EA=1)
020C:6421  74 16				jz	loc_877			; Jump if zero
020C:6423  B9 5000				mov	cx,5000h
020C:6426  F7 06 1D4A 01F0			test	data_313,1F0h		; (020C:1D4A=0)
020C:642C  75 03				jnz	locloop_876		; Jump if not zero
020C:642E  B9 1000				mov	cx,1000h

020C:6431			locloop_876:
020C:6431  EB 00				jmp	short $+2		; delay for I/O
020C:6433  EB 00				jmp	short $+2		; delay for I/O
020C:6435  EB 00				jmp	short $+2		; delay for I/O
020C:6437  E2 F8				loop	locloop_876		; Loop if cx > 0

020C:6439			loc_877:
020C:6439  F6 06 22EA 08			test	data_433,8		; (020C:22EA=1)
020C:643E  74 2C				jz	loc_879			; Jump if zero
020C:6440  A0 22EB				mov	al,data_434		; (020C:22EB=0)
020C:6443  3A 06 178F				cmp	al,data_194		; (020C:178F=0)
020C:6447  77 06				ja	loc_878			; Jump if above
020C:6449  3A 06 178A				cmp	al,data_190		; (020C:178A=0)
020C:644D  75 1D				jne	loc_879			; Jump if not equal
020C:644F			loc_878:
020C:644F  A1 22EC				mov	ax,data_435		; (020C:22EC=101h)
020C:6452  3B 06 2154				cmp	ax,data_379		; (020C:2154=5CE9h)
020C:6456  75 14				jne	loc_879			; Jump if not equal
020C:6458  A1 22EE				mov	ax,data_436		; (020C:22EE=1)
020C:645B  3B 06 2156				cmp	ax,data_380		; (020C:2156=0FFFFh)
020C:645F  75 0B				jne	loc_879			; Jump if not equal
020C:6461  9A 1491:3108		;*		call	far ptr sub_183		;*(1491:3108)
020C:6461  9A					db	9Ah
020C:6462  3108 1491				dw	3108h, 1491h
020C:6466  9A 1491:0800		;*		call	far ptr sub_163		;*(1491:0800)
020C:6466  9A					db	9Ah
020C:6467  0800 1491				dw	800h, 1491h
020C:646B  90					nop
020C:646C			loc_879:
020C:646C  07					pop	es
020C:646D  C3					retn
				sub_66		endp

020C:646E  87 DB				xchg	bx,bx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 213


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:6470			sub_67		proc	near
020C:6470  F7 06 3D18 0100			test	data_594,100h		; (020C:3D18=2680h)
020C:6476  74 67				jz	loc_882			; Jump if zero
020C:6478  80 3E 1790 01			cmp	data_195,1		; (020C:1790=0)
020C:647D  75 60				jne	loc_882			; Jump if not equal
020C:647F  06					push	es
020C:6480  1E					push	ds
020C:6481  07					pop	es
020C:6482  A0 22F4				mov	al,data_439		; (020C:22F4=0FFh)
020C:6485  B9 463C				mov	cx,463Ch
020C:6488  81 E9 462C				sub	cx,462Ch
020C:648C  F6 E1				mul	cl			; ax = reg * al
020C:648E  BF 66DE				mov	di,66DEh
020C:6491  BE 462C				mov	si,462Ch
020C:6494  03 F0				add	si,ax
020C:6496  FC					cld				; Clear direction
020C:6497  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:6499  A1 2334				mov	ax,data_471		; (020C:2334=0)
020C:649C  3B 06 22F0				cmp	ax,data_437		; (020C:22F0=1)
020C:64A0  74 17				je	loc_880			; Jump if equal
020C:64A2  A3 22F0				mov	data_437,ax		; (020C:22F0=1)
020C:64A5  C6 06 66F0 44			mov	byte ptr data_779,44h	; (020C:66F0=3Eh) 'D'
020C:64AA  BD 66F7				mov	bp,66F7h
020C:64AD  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:64AD  9A					db	9Ah
020C:64AE  0294 1491				dw	294h, 1491h
020C:64B2  B0 52				mov	al,52h			; 'R'
020C:64B4  9A 1491:2770		;*		call	far ptr sub_175		;*(1491:2770)
020C:64B4  9A					db	9Ah
020C:64B5  2770 1491				dw	2770h, 1491h
020C:64B9			loc_880:
020C:64B9  A1 2332				mov	ax,data_470		; (020C:2332=0)
020C:64BC  3B 06 22F2				cmp	ax,data_438		; (020C:22F2=0)
020C:64C0  74 17				je	loc_881			; Jump if equal
020C:64C2  A3 22F2				mov	data_438,ax		; (020C:22F2=0)
020C:64C5  C6 06 66F0 45			mov	byte ptr data_779,45h	; (020C:66F0=3Eh) 'E'
020C:64CA  BD 66F7				mov	bp,66F7h
020C:64CD  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:64CD  9A					db	9Ah
020C:64CE  0294 1491				dw	294h, 1491h
020C:64D2  B0 52				mov	al,52h			; 'R'
020C:64D4  9A 1491:2770		;*		call	far ptr sub_175		;*(1491:2770)
020C:64D4  9A					db	9Ah
020C:64D5  2770 1491				dw	2770h, 1491h
020C:64D9			loc_881:
020C:64D9  C6 06 22F4 00			mov	data_439,0		; (020C:22F4=0FFh)
020C:64DE  07					pop	es
020C:64DF			loc_882:
020C:64DF  C3					retn
				sub_67		endp


           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 214

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:64E0			sub_68		proc	near
020C:64E0  57					push	di
020C:64E1  06					push	es
020C:64E2  A2 178F				mov	byte ptr ds:[178Fh],al	; (ss:178F=0E3h)
020C:64E5  8A E0				mov	ah,al
020C:64E7  D0 EC				shr	ah,1			; Shift w/zeros fill
020C:64E9  80 C4 30				add	ah,30h			; '0'
020C:64EC  88 26 5814				mov	byte ptr ds:[5814h],ah	; (ss:5814=8Bh)
020C:64F0  BD 0772				mov	bp,772h
020C:64F3  3E: 88 66 00				mov	ds:[bp],ah
020C:64F7  8E 06 131B				mov	es,word ptr ds:[131Bh]	; (ss:131B=444Fh)
020C:64FB  BF 0772				mov	di,772h
020C:64FE  81 EF 0096				sub	di,96h
020C:6502  03 3E 131D				add	di,word ptr ds:[131Dh]	; (ss:131D=7501h)
020C:6506  E8 F4FF				call	sub_47			; (5A08)
020C:6509  07					pop	es
020C:650A  80 3E 22FF 00			cmp	byte ptr ds:[22FFh],0	; (ss:22FF=0BEh)
020C:650F  74 1D				je	loc_885			; Jump if equal
020C:6511  80 3E 178F 0A			cmp	byte ptr ds:[178Fh],0Ah	; (ss:178F=0E3h)
020C:6516  72 0E				jb	loc_883			; Jump if below
020C:6518  F6 06 3D78 07			test	byte ptr ds:[3D78h],7	; (ss:3D78=0E4h)
020C:651D  75 0C				jnz	loc_884			; Jump if not zero
020C:651F  80 0E 3D78 07			or	byte ptr ds:[3D78h],7	; (ss:3D78=0E4h)
020C:6524  EB 05				jmp	short loc_884		; (652B)
020C:6526			loc_883:
020C:6526  80 26 3D78 F8			and	byte ptr ds:[3D78h],0F8h	; (ss:3D78=0E4h)
020C:652B			loc_884:
020C:652B  E8 FC4A				call	sub_60			; (6178)
020C:652E			loc_885:
020C:652E  5F					pop	di
020C:652F  C3					retn
				sub_68		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:6530			sub_69		proc	near
020C:6530  50					push	ax
020C:6531  53					push	bx
020C:6532  56					push	si
020C:6533  55					push	bp
020C:6534  C6 06 420D 00			mov	byte ptr ds:[420Dh],0	; (020C:420D=7)
020C:6539  BD 0002				mov	bp,2
020C:653C  8B F0				mov	si,ax
020C:653E  A3 2FB0				mov	data_526,ax		; (020C:2FB0=0DC3h)
020C:6541  8B CB				mov	cx,bx
020C:6543  89 1E 2FAE				mov	data_525,bx		; (020C:2FAE=0DA5h)
020C:6547  83 FA 20				cmp	dx,20h
020C:654A  75 0B				jne	loc_886			; Jump if not equal
020C:654C  E8 149F				call	sub_90			; (79EE)
020C:654F  BA 002C				mov	dx,2Ch
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 215

020C:6552  BF 3680				mov	di,3680h
020C:6555  EB 76				jmp	short loc_894		; (65CD)
020C:6557			loc_886:
020C:6557  83 FA 10				cmp	dx,10h
020C:655A  75 0B				jne	loc_887			; Jump if not equal
020C:655C  E8 1483				call	sub_87			; (79E2)
020C:655F  BA 0019				mov	dx,19h
020C:6562  BF 0000				mov	di,0
020C:6565  EB 66				jmp	short loc_894		; (65CD)
020C:6567			loc_887:
020C:6567  83 FA 08				cmp	dx,8
020C:656A  75 0C				jne	loc_888			; Jump if not equal
020C:656C  E8 1473				call	sub_87			; (79E2)
020C:656F  BA 0019				mov	dx,19h
020C:6572  BF 0000				mov	di,0
020C:6575  E9 0084				jmp	loc_904			; (65FC)
020C:6578			loc_888:
020C:6578  83 FA 01				cmp	dx,1
020C:657B  74 32				je	loc_891			; Jump if equal
020C:657D  83 FA 02				cmp	dx,2
020C:6580  74 3C				je	loc_893			; Jump if equal
020C:6582  83 FA 04				cmp	dx,4
020C:6585  74 0B				je	loc_889			; Jump if equal
020C:6587  83 FA 40				cmp	dx,40h
020C:658A  74 16				je	loc_890			; Jump if equal
020C:658C  BB 0004				mov	bx,4
020C:658F  E9 0D5C				jmp	loc_1076		; (72EE)
020C:6592			loc_889:
020C:6592  E8 1A47				call	sub_100			; (7FDC)
020C:6595  BB 003D				mov	bx,3Dh
020C:6598  03 1E 1797				add	bx,data_200		; (020C:1797=0)
020C:659C  BA 004C				mov	dx,4Ch
020C:659F  E9 0083				jmp	loc_911			; (6625)
020C:65A2			loc_890:
020C:65A2  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:65A8  74 05				je	loc_891			; Jump if equal
020C:65AA  E8 144D				call	sub_92			; (79FA)
020C:65AD  EB 03				jmp	short loc_892		; (65B2)
020C:65AF			loc_891:
020C:65AF  E8 19BE				call	sub_99			; (7F70)
020C:65B2			loc_892:
020C:65B2  BB 0007				mov	bx,7
020C:65B5  03 1E 1797				add	bx,data_200		; (020C:1797=0)
020C:65B9  BA 0016				mov	dx,16h
020C:65BC  EB 67				jmp	short loc_911		; (6625)
020C:65BE			loc_893:
020C:65BE  E8 1943				call	sub_98			; (7F04)
020C:65C1  BB 000A				mov	bx,0Ah
020C:65C4  BA 0019				mov	dx,19h
020C:65C7  03 16 1797				add	dx,data_200		; (020C:1797=0)
020C:65CB  EB 58				jmp	short loc_911		; (6625)
020C:65CD			loc_894:
020C:65CD  33 ED				xor	bp,bp			; Zero register
020C:65CF  06					push	es
020C:65D0  8C D8				mov	ax,ds
020C:65D2  8E C0				mov	es,ax
020C:65D4  1F					pop	ds
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 216

020C:65D5  BB FFFF				mov	bx,0FFFFh
020C:65D8			loc_895:
020C:65D8  39 75 02				cmp	[di+2],si
020C:65DB  74 09				je	loc_898			; Jump if equal
020C:65DD			loc_896:
020C:65DD  39 1D				cmp	[di],bx
020C:65DF  74 0B				je	loc_899			; Jump if equal
020C:65E1			loc_897:
020C:65E1  03 FA				add	di,dx
020C:65E3  45					inc	bp
020C:65E4  EB F2				jmp	short loc_895		; (65D8)
020C:65E6			loc_898:
020C:65E6  39 0D				cmp	[di],cx
020C:65E8  75 F3				jne	loc_896			; Jump if not equal
020C:65EA  EB 09				jmp	short loc_901		; (65F5)
020C:65EC			loc_899:
020C:65EC  39 5D 02				cmp	[di+2],bx
020C:65EF  75 02				jne	loc_900			; Jump if not equal
020C:65F1  EB 05				jmp	short loc_902		; (65F8)
020C:65F3			loc_900:
020C:65F3  EB EC				jmp	short loc_897		; (65E1)
020C:65F5			loc_901:
020C:65F5  F9					stc				; Set carry flag
020C:65F6  EB 01				jmp	short loc_903		; (65F9)
020C:65F8			loc_902:
020C:65F8  F8					clc				; Clear carry flag
020C:65F9			loc_903:
020C:65F9  E9 02E1				jmp	loc_959			; (68DD)
020C:65FC			loc_904:
020C:65FC  33 ED				xor	bp,bp			; Zero register
020C:65FE  06					push	es
020C:65FF  8C D8				mov	ax,ds
020C:6601  8E C0				mov	es,ax
020C:6603  1F					pop	ds
020C:6604  BB FFFF				mov	bx,0FFFFh
020C:6607			loc_905:
020C:6607  39 75 17				cmp	[di+17h],si
020C:660A  74 09				je	loc_908			; Jump if equal
020C:660C			loc_906:
020C:660C  39 1D				cmp	[di],bx
020C:660E  74 0C				je	loc_909			; Jump if equal
020C:6610			loc_907:
020C:6610  03 FA				add	di,dx
020C:6612  45					inc	bp
020C:6613  EB F2				jmp	short loc_905		; (6607)
020C:6615			loc_908:
020C:6615  39 4D 15				cmp	[di+15h],cx
020C:6618  75 F2				jne	loc_906			; Jump if not equal
020C:661A  EB D9				jmp	short loc_901		; (65F5)
020C:661C			loc_909:
020C:661C  39 5D 02				cmp	[di+2],bx
020C:661F  75 02				jne	loc_910			; Jump if not equal
020C:6621  EB D5				jmp	short loc_902		; (65F8)
020C:6623			loc_910:
020C:6623  EB EB				jmp	short loc_907		; (6610)
020C:6625			loc_911:
020C:6625  BF 0008				mov	di,8
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 217

020C:6628  26: A1 0002				mov	ax,word ptr es:[2]	; (020C:0002=10h)
020C:662C  3B C1				cmp	ax,cx
020C:662E  77 0F				ja	loc_913			; Jump if above
020C:6630  72 08				jc	loc_912			; Jump if carry Set
020C:6632  26: A1 0004				mov	ax,word ptr es:[4]	; (020C:0004=808h)
020C:6636  3B C6				cmp	ax,si
020C:6638  77 05				ja	loc_913			; Jump if above
020C:663A			loc_912:
020C:663A  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (020C:0006=3)
020C:663F			loc_913:
020C:663F  06					push	es
020C:6640  8C D8				mov	ax,ds
020C:6642  8E C0				mov	es,ax
020C:6644  1F					pop	ds
020C:6645  B4 03				mov	ah,3
020C:6647  26: 80 3E 163F 01			cmp	es:data_174,1		; (020C:163F=0)
020C:664D  77 05				ja	loc_914			; Jump if above
020C:664F  03 DD				add	bx,bp
020C:6651  E9 00BD				jmp	loc_930			; (6711)
020C:6654			loc_914:
020C:6654  39 0D				cmp	[di],cx
020C:6656  73 35				jae	loc_918			; Jump if above or =
020C:6658  8A 45 05				mov	al,[di+5]
020C:665B  84 C4				test	al,ah
020C:665D  75 11				jnz	loc_915			; Jump if not zero
020C:665F  03 FB				add	di,bx
020C:6661  39 0D				cmp	[di],cx
020C:6663  73 28				jae	loc_918			; Jump if above or =
020C:6665  8A 45 05				mov	al,[di+5]
020C:6668  84 C4				test	al,ah
020C:666A  75 04				jnz	loc_915			; Jump if not zero
020C:666C  03 FB				add	di,bx
020C:666E  EB E4				jmp	short loc_914		; (6654)
020C:6670			loc_915:
020C:6670  A8 02				test	al,2
020C:6672  75 06				jnz	loc_916			; Jump if not zero
020C:6674  03 FB				add	di,bx
020C:6676  03 FD				add	di,bp
020C:6678  EB DA				jmp	short loc_914		; (6654)
020C:667A			loc_916:
020C:667A  A8 01				test	al,1
020C:667C  75 04				jnz	loc_917			; Jump if not zero
020C:667E  03 FA				add	di,dx
020C:6680  EB D2				jmp	short loc_914		; (6654)
020C:6682			loc_917:
020C:6682  8A 45 06				mov	al,[di+6]
020C:6685  32 E4				xor	ah,ah			; Zero register
020C:6687  03 F8				add	di,ax
020C:6689  B4 03				mov	ah,3
020C:668B  EB C7				jmp	short loc_914		; (6654)
020C:668D			loc_918:
020C:668D  74 0B				jz	loc_919			; Jump if zero
020C:668F  83 3D FF				cmp	word ptr [di],0FFFFh
020C:6692  75 4B				jne	loc_925			; Jump if not equal
020C:6694  3B 3E 0000				cmp	di,word ptr ds:[0]	; (020C:0000=1828h)
020C:6698  73 45				jae	loc_925			; Jump if above or =
020C:669A			loc_919:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 218

020C:669A  39 0D				cmp	[di],cx
020C:669C  75 41				jne	loc_925			; Jump if not equal
020C:669E  39 75 02				cmp	[di+2],si
020C:66A1  73 3A				jae	loc_924			; Jump if above or =
020C:66A3			loc_920:
020C:66A3  8A 45 05				mov	al,[di+5]
020C:66A6  84 C4				test	al,ah
020C:66A8  75 16				jnz	loc_921			; Jump if not zero
020C:66AA  03 FB				add	di,bx
020C:66AC  39 0D				cmp	[di],cx
020C:66AE  75 2F				jne	loc_925			; Jump if not equal
020C:66B0  39 75 02				cmp	[di+2],si
020C:66B3  73 28				jae	loc_924			; Jump if above or =
020C:66B5  8A 45 05				mov	al,[di+5]
020C:66B8  84 C4				test	al,ah
020C:66BA  75 04				jnz	loc_921			; Jump if not zero
020C:66BC  03 FB				add	di,bx
020C:66BE  EB DA				jmp	short loc_919		; (669A)
020C:66C0			loc_921:
020C:66C0  A8 02				test	al,2
020C:66C2  75 06				jnz	loc_922			; Jump if not zero
020C:66C4  03 FB				add	di,bx
020C:66C6  03 FD				add	di,bp
020C:66C8  EB D0				jmp	short loc_919		; (669A)
020C:66CA			loc_922:
020C:66CA  A8 01				test	al,1
020C:66CC  75 04				jnz	loc_923			; Jump if not zero
020C:66CE  03 FA				add	di,dx
020C:66D0  EB C8				jmp	short loc_919		; (669A)
020C:66D2			loc_923:
020C:66D2  8A 45 06				mov	al,[di+6]
020C:66D5  32 E4				xor	ah,ah			; Zero register
020C:66D7  03 F8				add	di,ax
020C:66D9  B4 03				mov	ah,3
020C:66DB  EB BD				jmp	short loc_919		; (669A)
020C:66DD			loc_924:
020C:66DD  74 02				jz	loc_926			; Jump if zero
020C:66DF			loc_925:
020C:66DF  EB 2D				jmp	short loc_929		; (670E)
020C:66E1			loc_926:
020C:66E1  83 FA 16				cmp	dx,16h
020C:66E4  75 25				jne	loc_928			; Jump if not equal
020C:66E6  26: 80 3E 3C07 01			cmp	es:data_571,1		; (020C:3C07=0E8h)
020C:66EC  74 1D				je	loc_928			; Jump if equal
020C:66EE  26: 80 3E 420D 00			cmp	byte ptr es:[420Dh],0	; (020C:420D=7)
020C:66F4  75 0A				jne	loc_927			; Jump if not equal
020C:66F6  89 3E 0006				mov	word ptr ds:[6],di	; (020C:0006=3)
020C:66FA  26: C6 06 420D 01			mov	byte ptr es:[420Dh],1	; (020C:420D=7)
020C:6700			loc_927:
020C:6700  8A 45 04				mov	al,[di+4]
020C:6703  24 1F				and	al,1Fh
020C:6705  3C 1F				cmp	al,1Fh
020C:6707  75 02				jne	loc_928			; Jump if not equal
020C:6709  EB 98				jmp	short loc_920		; (66A3)
020C:670B			loc_928:
020C:670B  E9 00BF				jmp	loc_944			; (67CD)
020C:670E			loc_929:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 219

020C:670E  E9 014B				jmp	loc_952			; (685C)
020C:6711			loc_930:
020C:6711  39 0D				cmp	[di],cx
020C:6713  73 37				jae	loc_934			; Jump if above or =
020C:6715  8A 45 05				mov	al,[di+5]
020C:6718  22 C4				and	al,ah
020C:671A  3C 01				cmp	al,1
020C:671C  75 13				jne	loc_931			; Jump if not equal
020C:671E  03 FB				add	di,bx
020C:6720  39 0D				cmp	[di],cx
020C:6722  73 28				jae	loc_934			; Jump if above or =
020C:6724  8A 45 05				mov	al,[di+5]
020C:6727  22 C4				and	al,ah
020C:6729  3C 01				cmp	al,1
020C:672B  75 04				jne	loc_931			; Jump if not equal
020C:672D  03 FB				add	di,bx
020C:672F  EB E0				jmp	short loc_930		; (6711)
020C:6731			loc_931:
020C:6731  77 06				ja	loc_932			; Jump if above
020C:6733  03 FB				add	di,bx
020C:6735  2B FD				sub	di,bp
020C:6737  EB D8				jmp	short loc_930		; (6711)
020C:6739			loc_932:
020C:6739  3C 02				cmp	al,2
020C:673B  75 04				jne	loc_933			; Jump if not equal
020C:673D  03 FA				add	di,dx
020C:673F  EB D0				jmp	short loc_930		; (6711)
020C:6741			loc_933:
020C:6741  8A 45 06				mov	al,[di+6]
020C:6744  32 E4				xor	ah,ah			; Zero register
020C:6746  03 F8				add	di,ax
020C:6748  B4 03				mov	ah,3
020C:674A  EB C5				jmp	short loc_930		; (6711)
020C:674C			loc_934:
020C:674C  74 0B				jz	loc_935			; Jump if zero
020C:674E  83 3D FF				cmp	word ptr [di],0FFFFh
020C:6751  75 4D				jne	loc_941			; Jump if not equal
020C:6753  3B 3E 0000				cmp	di,word ptr ds:[0]	; (020C:0000=1828h)
020C:6757  73 47				jae	loc_941			; Jump if above or =
020C:6759			loc_935:
020C:6759  39 0D				cmp	[di],cx
020C:675B  75 43				jne	loc_941			; Jump if not equal
020C:675D  39 75 02				cmp	[di+2],si
020C:6760  73 3C				jae	loc_940			; Jump if above or =
020C:6762			loc_936:
020C:6762  8A 45 05				mov	al,[di+5]
020C:6765  22 C4				and	al,ah
020C:6767  3C 01				cmp	al,1
020C:6769  75 18				jne	loc_937			; Jump if not equal
020C:676B  03 FB				add	di,bx
020C:676D  39 0D				cmp	[di],cx
020C:676F  75 2F				jne	loc_941			; Jump if not equal
020C:6771  39 75 02				cmp	[di+2],si
020C:6774  73 28				jae	loc_940			; Jump if above or =
020C:6776  8A 45 05				mov	al,[di+5]
020C:6779  22 C4				and	al,ah
020C:677B  3C 01				cmp	al,1
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 220

020C:677D  75 04				jne	loc_937			; Jump if not equal
020C:677F  03 FB				add	di,bx
020C:6781  EB D6				jmp	short loc_935		; (6759)
020C:6783			loc_937:
020C:6783  77 06				ja	loc_938			; Jump if above
020C:6785  03 FB				add	di,bx
020C:6787  2B FD				sub	di,bp
020C:6789  EB CE				jmp	short loc_935		; (6759)
020C:678B			loc_938:
020C:678B  3C 02				cmp	al,2
020C:678D  75 04				jne	loc_939			; Jump if not equal
020C:678F  03 FA				add	di,dx
020C:6791  EB C6				jmp	short loc_935		; (6759)
020C:6793			loc_939:
020C:6793  8A 45 06				mov	al,[di+6]
020C:6796  32 E4				xor	ah,ah			; Zero register
020C:6798  03 F8				add	di,ax
020C:679A  B4 03				mov	ah,3
020C:679C  EB BB				jmp	short loc_935		; (6759)
020C:679E			loc_940:
020C:679E  74 03				jz	loc_942			; Jump if zero
020C:67A0			loc_941:
020C:67A0  E9 00B9				jmp	loc_952			; (685C)
020C:67A3			loc_942:
020C:67A3  83 FA 16				cmp	dx,16h
020C:67A6  75 25				jne	loc_944			; Jump if not equal
020C:67A8  26: 80 3E 3C07 01			cmp	es:data_571,1		; (020C:3C07=0E8h)
020C:67AE  74 1D				je	loc_944			; Jump if equal
020C:67B0  26: 80 3E 420D 00			cmp	byte ptr es:[420Dh],0	; (020C:420D=7)
020C:67B6  75 0A				jne	loc_943			; Jump if not equal
020C:67B8  89 3E 0006				mov	word ptr ds:[6],di	; (020C:0006=3)
020C:67BC  26: C6 06 420D 01			mov	byte ptr es:[420Dh],1	; (020C:420D=7)
020C:67C2			loc_943:
020C:67C2  8A 45 04				mov	al,[di+4]
020C:67C5  24 1F				and	al,1Fh
020C:67C7  3C 1F				cmp	al,1Fh
020C:67C9  75 02				jne	loc_944			; Jump if not equal
020C:67CB  EB 95				jmp	short loc_936		; (6762)
020C:67CD			loc_944:
020C:67CD  8B 05				mov	ax,[di]
020C:67CF  A3 0002				mov	word ptr ds:[2],ax	; (020C:0002=10h)
020C:67D2  8B 45 02				mov	ax,[di+2]
020C:67D5  A3 0004				mov	word ptr ds:[4],ax	; (020C:0004=808h)
020C:67D8  26: 80 3E 420D 00			cmp	byte ptr es:[420Dh],0	; (020C:420D=7)
020C:67DE  75 04				jne	loc_945			; Jump if not equal
020C:67E0  89 3E 0006				mov	word ptr ds:[6],di	; (020C:0006=3)
020C:67E4			loc_945:
020C:67E4  26: A1 2FAE				mov	ax,es:data_525		; (020C:2FAE=0DA5h)
020C:67E8  26: 3B 06 2154			cmp	ax,es:data_379		; (020C:2154=5CE9h)
020C:67ED  75 69				jne	loc_951			; Jump if not equal
020C:67EF  26: A1 2FB0				mov	ax,es:data_526		; (020C:2FB0=0DC3h)
020C:67F3  26: 3B 06 2156			cmp	ax,es:data_380		; (020C:2156=0FFFFh)
020C:67F8  75 5E				jne	loc_951			; Jump if not equal
020C:67FA  BB 2F78				mov	bx,2F78h
020C:67FD  8A 45 05				mov	al,[di+5]
020C:6800  25 000F				and	ax,0Fh
020C:6803  26: D7				xlat	es:[bx]			; al=[al+[bx]] table
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 221

020C:6805  0A C0				or	al,al			; Zero ?
020C:6807  75 03				jnz	loc_946			; Jump if not zero
020C:6809  8A 45 06				mov	al,[di+6]
020C:680C			loc_946:
020C:680C  8B D8				mov	bx,ax
020C:680E  8B 01				mov	ax,[bx+di]
020C:6810  26: 3B 06 2154			cmp	ax,es:data_379		; (020C:2154=5CE9h)
020C:6815  8B 41 02				mov	ax,[bx+di+2]
020C:6818  74 03				jz	loc_947			; Jump if zero
020C:681A  B8 FFFF				mov	ax,0FFFFh
020C:681D			loc_947:
020C:681D  8A 51 05				mov	dl,[bx+di+5]
020C:6820  80 E2 0C				and	dl,0Ch
020C:6823  80 FA 00				cmp	dl,0
020C:6826  74 10				je	loc_948			; Jump if equal
020C:6828  80 FA 04				cmp	dl,4
020C:682B  74 27				je	loc_950			; Jump if equal
020C:682D  80 FA 08				cmp	dl,8
020C:6830  75 26				jne	loc_951			; Jump if not equal
020C:6832  26: A3 3D89				mov	es:data_641,ax		; (020C:3D89=0E2D3h)
020C:6836  EB 20				jmp	short loc_951		; (6858)
020C:6838			loc_948:
020C:6838  26: A3 3D87				mov	es:data_640,ax		; (020C:3D87=4B1h)
020C:683C  8A 41 04				mov	al,[bx+di+4]
020C:683F  26: A2 3D8B				mov	es:data_642,al		; (020C:3D8B=59h)
020C:6843  32 C0				xor	al,al			; Zero register
020C:6845  F6 41 05 0F				test	byte ptr [bx+di+5],0Fh
020C:6849  74 03				jz	loc_949			; Jump if zero
020C:684B  8A 41 09				mov	al,[bx+di+9]
020C:684E			loc_949:
020C:684E  26: A2 3D8C				mov	es:data_643,al		; (020C:3D8C=3)
020C:6852  EB 04				jmp	short loc_951		; (6858)
020C:6854			loc_950:
020C:6854  26: A3 3D85				mov	es:data_639,ax		; (020C:3D85=51C3h)
020C:6858			loc_951:
020C:6858  F9					stc				; Set carry flag
020C:6859  E9 0081				jmp	loc_959			; (68DD)
020C:685C			loc_952:
020C:685C  8A 55 05				mov	dl,[di+5]
020C:685F  80 E2 0C				and	dl,0Ch
020C:6862  80 FA 04				cmp	dl,4
020C:6865  75 15				jne	loc_953			; Jump if not equal
020C:6867  F6 45 05 10				test	byte ptr [di+5],10h
020C:686B  74 0F				jz	loc_953			; Jump if zero
020C:686D  8B 05				mov	ax,[di]
020C:686F  A3 0002				mov	word ptr ds:[2],ax	; (020C:0002=10h)
020C:6872  8B 45 02				mov	ax,[di+2]
020C:6875  A3 0004				mov	word ptr ds:[4],ax	; (020C:0004=808h)
020C:6878  89 3E 0006				mov	word ptr ds:[6],di	; (020C:0006=3)
020C:687C			loc_953:
020C:687C  26: A1 2FAE				mov	ax,es:data_525		; (020C:2FAE=0DA5h)
020C:6880  26: 3B 06 2154			cmp	ax,es:data_379		; (020C:2154=5CE9h)
020C:6885  75 55				jne	loc_958			; Jump if not equal
020C:6887  26: A1 2FB0				mov	ax,es:data_526		; (020C:2FB0=0DC3h)
020C:688B  26: 3B 06 2156			cmp	ax,es:data_380		; (020C:2156=0FFFFh)
020C:6890  75 4A				jne	loc_958			; Jump if not equal
020C:6892  B8 FFFF				mov	ax,0FFFFh
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 222

020C:6895  8B 1D				mov	bx,[di]
020C:6897  26: 3B 1E 2154			cmp	bx,es:data_379		; (020C:2154=5CE9h)
020C:689C  75 03				jne	loc_954			; Jump if not equal
020C:689E  8B 45 02				mov	ax,[di+2]
020C:68A1			loc_954:
020C:68A1  8A 55 05				mov	dl,[di+5]
020C:68A4  80 E2 0C				and	dl,0Ch
020C:68A7  80 FA 00				cmp	dl,0
020C:68AA  74 10				je	loc_955			; Jump if equal
020C:68AC  80 FA 04				cmp	dl,4
020C:68AF  74 27				je	loc_957			; Jump if equal
020C:68B1  80 FA 08				cmp	dl,8
020C:68B4  75 26				jne	loc_958			; Jump if not equal
020C:68B6  26: A3 3D89				mov	es:data_641,ax		; (020C:3D89=0E2D3h)
020C:68BA  EB 20				jmp	short loc_958		; (68DC)
020C:68BC			loc_955:
020C:68BC  26: A3 3D87				mov	es:data_640,ax		; (020C:3D87=4B1h)
020C:68C0  8A 45 04				mov	al,[di+4]
020C:68C3  26: A2 3D8B				mov	es:data_642,al		; (020C:3D8B=59h)
020C:68C7  32 C0				xor	al,al			; Zero register
020C:68C9  F6 45 05 0F				test	byte ptr [di+5],0Fh
020C:68CD  74 03				jz	loc_956			; Jump if zero
020C:68CF  8A 45 09				mov	al,[di+9]
020C:68D2			loc_956:
020C:68D2  26: A2 3D8C				mov	es:data_643,al		; (020C:3D8C=3)
020C:68D6  EB 04				jmp	short loc_958		; (68DC)
020C:68D8			loc_957:
020C:68D8  26: A3 3D85				mov	es:data_639,ax		; (020C:3D85=51C3h)
020C:68DC			loc_958:
020C:68DC  F8					clc				; Clear carry flag
020C:68DD			loc_959:
020C:68DD  1E					push	ds
020C:68DE  8C C0				mov	ax,es
020C:68E0  8E D8				mov	ds,ax
020C:68E2  07					pop	es
020C:68E3  8B CD				mov	cx,bp
020C:68E5  5D					pop	bp
020C:68E6  5E					pop	si
020C:68E7  5B					pop	bx
020C:68E8  58					pop	ax
020C:68E9  C3					retn
				sub_69		endp

020C:68EA  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:68EC			sub_70		proc	near

020C:68EC			locloop_960:
020C:68EC  8A 04				mov	al,[si]
020C:68EE  A8 40				test	al,40h			; '@'
020C:68F0  74 18				jz	loc_962			; Jump if zero
020C:68F2  3C 40				cmp	al,40h			; '@'
020C:68F4  74 14				je	loc_962			; Jump if equal
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 223

020C:68F6  3C 5B				cmp	al,5Bh			; '['
020C:68F8  72 08				jb	loc_961			; Jump if below
020C:68FA  3C 7B				cmp	al,7Bh			; '{'
020C:68FC  73 0C				jae	loc_962			; Jump if above or =
020C:68FE  3C 60				cmp	al,60h			; '`'
020C:6900  76 08				jbe	loc_962			; Jump if below or =
020C:6902			loc_961:
020C:6902  24 DF				and	al,0DFh
020C:6904  0A 06 22F6				or	al,data_441		; (020C:22F6=0)
020C:6908  88 04				mov	[si],al
020C:690A			loc_962:
020C:690A  46					inc	si
020C:690B  E2 DF				loop	locloop_960		; Loop if cx > 0

020C:690D  C3					retn
				sub_70		endp

							                        ;* No entry point to code
020C:690E  87 DB				xchg	bx,bx
020C:6910  C6 06 1CE6 00			mov	data_262,0		; (020C:1CE6=0)
020C:6915  BA 0002				mov	dx,2
020C:6918  BB 33E0				mov	bx,33E0h
020C:691B  E8 B832		;*		call	sub_27			;*(2150)
020C:691B  E8 32 B8				db	0E8h, 32h,0B8h
020C:691E  C3					retn
							                        ;* No entry point to code
020C:691F  90					nop
020C:6920  BF 0008				mov	di,8
020C:6923  BE 0000				mov	si,0
020C:6926  E8 109B				call	sub_82			; (79C4)
020C:6929			loc_963:
020C:6929  8B 04				mov	ax,[si]
020C:692B  8B 5C 02				mov	bx,[si+2]
020C:692E  8B 4C 04				mov	cx,[si+4]
020C:6931  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020C:0000=1828h)
020C:6936  73 6B				jae	loc_965			; Jump if above or =
020C:6938  26: F6 45 05 10			test	byte ptr es:[di+5],10h
020C:693D  75 67				jnz	loc_966			; Jump if not zero
020C:693F  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020C:6944  74 60				jz	loc_966			; Jump if zero
020C:6946  26: F6 45 07 80			test	byte ptr es:[di+7],80h
020C:694B  75 59				jnz	loc_966			; Jump if not zero
020C:694D  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020C:6952  75 4D				jnz	loc_964			; Jump if not zero
020C:6954  26: 3B 05				cmp	ax,es:[di]
020C:6957  72 4F				jb	loc_967			; Jump if below
020C:6959  77 46				ja	loc_964			; Jump if above
020C:695B  26: 3B 5D 02				cmp	bx,es:[di+2]
020C:695F  77 40				ja	loc_964			; Jump if above
020C:6961  26: 3B 4D 02				cmp	cx,es:[di+2]
020C:6965  72 41				jb	loc_967			; Jump if below
020C:6967  1E					push	ds
020C:6968  E8 1065				call	sub_84			; (79D0)
020C:696B  F7 06 3D18 0200			test	data_594,200h		; (020C:3D18=2680h)
020C:6971  1F					pop	ds
020C:6972  74 3F				jz	loc_968			; Jump if zero
020C:6974  8B 54 0A				mov	dx,[si+0Ah]
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 224

020C:6977  80 E2 03				and	dl,3
020C:697A  80 FA 02				cmp	dl,2
020C:697D  73 34				jae	loc_968			; Jump if above or =
020C:697F  26: 8A 55 04				mov	dl,es:[di+4]
020C:6983  F6 C2 80				test	dl,80h
020C:6986  74 2B				jz	loc_968			; Jump if zero
020C:6988  F6 C2 10				test	dl,10h
020C:698B  75 26				jnz	loc_968			; Jump if not zero
020C:698D  9A 1491:7CC0		;*		call	far ptr sub_242		;*(1491:7CC0)
020C:698D  9A					db	9Ah
020C:698E  7CC0 1491				dw	7CC0h, 1491h
020C:6992  72 1F				jc	loc_968			; Jump if carry Set
020C:6994  26: 81 7D 02 0100			cmp	word ptr es:[di+2],100h
020C:699A  73 17				jae	loc_968			; Jump if above or =
020C:699C  26: 80 65 04 BF			and	byte ptr es:[di+4],0BFh
020C:69A1			loc_964:
020C:69A1  EB 3C				jmp	short loc_970		; (69DF)
020C:69A3			loc_965:
020C:69A3  E9 0178				jmp	loc_983			; (6B1E)
020C:69A6			loc_966:
020C:69A6  EB 0B				jmp	short loc_968		; (69B3)
020C:69A8			loc_967:
020C:69A8  83 C6 19				add	si,19h
020C:69AB  83 3C FF				cmp	word ptr [si],0FFFFh
020C:69AE  74 2F				je	loc_970			; Jump if equal
020C:69B0  E9 FF76				jmp	loc_963			; (6929)
020C:69B3			loc_968:
020C:69B3  E8 100E				call	sub_82			; (79C4)
020C:69B6  BB 2F78				mov	bx,2F78h
020C:69B9  26: 8A 45 05				mov	al,es:[di+5]
020C:69BD  25 000F				and	ax,0Fh
020C:69C0  1E					push	ds
020C:69C1  E8 100C				call	sub_84			; (79D0)
020C:69C4  D7					xlat				; al=[al+[bx]] table
020C:69C5  1F					pop	ds
020C:69C6  0A C0				or	al,al			; Zero ?
020C:69C8  75 04				jnz	loc_969			; Jump if not zero
020C:69CA  26: 8A 45 06				mov	al,es:[di+6]
020C:69CE			loc_969:
020C:69CE  03 F8				add	di,ax
020C:69D0  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020C:0000=1828h)
020C:69D5  73 CC				jae	loc_965			; Jump if above or =
020C:69D7  83 3C FF				cmp	word ptr [si],0FFFFh
020C:69DA  74 03				je	loc_970			; Jump if equal
020C:69DC  E9 FF4A				jmp	loc_963			; (6929)
020C:69DF			loc_970:
020C:69DF  E8 0FEE				call	sub_84			; (79D0)
020C:69E2  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020C:69E7  74 CA				jz	loc_968			; Jump if zero
020C:69E9  26: F6 45 05 10			test	byte ptr es:[di+5],10h
020C:69EE  75 C3				jnz	loc_968			; Jump if not zero
020C:69F0  26: 80 4D 07 40			or	byte ptr es:[di+7],40h	; '@'
020C:69F5  26: 80 4D 04 40			or	byte ptr es:[di+4],40h	; '@'
020C:69FA  26: 80 4D 05 40			or	byte ptr es:[di+5],40h	; '@'
020C:69FF  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020C:6A04  75 AD				jnz	loc_968			; Jump if not zero
020C:6A06  9A 1491:3820		;*		call	far ptr sub_193		;*(1491:3820)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 225

020C:6A06  9A					db	9Ah
020C:6A07  3820 1491				dw	3820h, 1491h
020C:6A0B  BD 19B8				mov	bp,19B8h
020C:6A0E  80 3E 22FB 01			cmp	data_444,1		; (020C:22FB=0)
020C:6A13  75 09				jne	loc_971			; Jump if not equal
020C:6A15  4D					dec	bp
020C:6A16  80 3E 22FC 00			cmp	data_445,0		; (020C:22FC=0)
020C:6A1B  74 08				je	loc_972			; Jump if equal
020C:6A1D  4D					dec	bp
020C:6A1E			loc_971:
020C:6A1E  3E: C6 46 00 3D			mov	byte ptr ds:[bp],3Dh	; '='
020C:6A23  45					inc	bp
020C:6A24  45					inc	bp
020C:6A25			loc_972:
020C:6A25  26: 8B 45 02				mov	ax,es:[di+2]
020C:6A29  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:6A29  9A					db	9Ah
020C:6A2A  0294 1491				dw	294h, 1491h
020C:6A2E  BD 19D3				mov	bp,19D3h
020C:6A31  B9 000A				mov	cx,0Ah
020C:6A34  9A 1491:34C0		;*		call	far ptr sub_191		;*(1491:34C0)
020C:6A34  9A					db	9Ah
020C:6A35  34C0 1491				dw	34C0h, 1491h
020C:6A39  B1 00				mov	cl,0
020C:6A3B  C6 06 19F3 65			mov	byte ptr ds:[19F3h],65h	; (020C:19F3=2) 'e'
020C:6A40  C7 06 19F4 7571			mov	data_232,7571h		; (020C:19F4=2274h)
020C:6A46  80 3E 22F6 00			cmp	data_441,0		; (020C:22F6=0)
020C:6A4B  75 0B				jne	loc_973			; Jump if not equal
020C:6A4D  C6 06 19F3 45			mov	byte ptr ds:[19F3h],45h	; (020C:19F3=2) 'E'
020C:6A52  C7 06 19F4 5551			mov	data_232,5551h		; (020C:19F4=2274h)
020C:6A58			loc_973:
020C:6A58  BD 19FB				mov	bp,19FBh
020C:6A5B  26: 8B 45 02				mov	ax,es:[di+2]
020C:6A5F  9A 1491:02B4		;*		call	far ptr sub_158		;*(1491:02B4)
020C:6A5F  9A					db	9Ah
020C:6A60  02B4 1491				dw	2B4h, 1491h
020C:6A64  B7 00				mov	bh,0
020C:6A66  26: 8A 45 04				mov	al,es:[di+4]
020C:6A6A  24 3F				and	al,3Fh			; '?'
020C:6A6C  3C 02				cmp	al,2
020C:6A6E  74 0B				je	loc_974			; Jump if equal
020C:6A70  3C 00				cmp	al,0
020C:6A72  75 09				jne	loc_975			; Jump if not equal
020C:6A74  26: 83 7D 08 02			cmp	word ptr es:[di+8],2
020C:6A79  75 02				jne	loc_975			; Jump if not equal
020C:6A7B			loc_974:
020C:6A7B  20B7			data_780	dw	20B7h
020C:6A7D			loc_975:
020C:6A7D  A0E8			data_781	dw	0A0E8h
020C:6A7F  C600			data_782	dw	0C600h
020C:6A81  06			data_783	db	6
020C:6A82  1CE7			data_784	dw	1CE7h			; Data table (indexed access)
020C:6A84  F700			data_785	dw	0F700h			; Data table (indexed access)
020C:6A86  1A06			data_786	dw	1A06h			; Data table (indexed access)
020C:6A88  203D			data_787	dw	203Dh
020C:6A8A  7500			data_788	dw	7500h
020C:6A8C  2642			data_789	dw	2642h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 226

020C:6A8E  058B			data_790	dw	58Bh
020C:6A90  8B26			data_791	dw	8B26h
020C:6A92  025D			data_792	dw	25Dh
020C:6A94  3D A000				cmp	ax,0A000h
020C:6A97  73 36				jae	loc_980			; Jump if above or =
020C:6A99  0B C0				or	ax,ax			; Zero ?
020C:6A9B  75 08				jnz	loc_976			; Jump if not zero
020C:6A9D  81 FB 0500				cmp	bx,500h
020C:6AA1  76 2C				jbe	loc_980			; Jump if below or =
020C:6AA3  EB 24				jmp	short loc_979		; (6AC9)
020C:6AA5			loc_976:
020C:6AA5  3D 0040				cmp	ax,40h
020C:6AA8  75 08				jne	loc_977			; Jump if not equal
020C:6AAA  81 FB 0100				cmp	bx,100h
020C:6AAE  76 1F				jbe	loc_980			; Jump if below or =
020C:6AB0  EB 17				jmp	short loc_979		; (6AC9)
020C:6AB2			loc_977:
020C:6AB2  3D 0050				cmp	ax,50h
020C:6AB5  75 06				jne	loc_978			; Jump if not equal
020C:6AB7  0B DB				or	bx,bx			; Zero ?
020C:6AB9  74 14				jz	loc_980			; Jump if zero
020C:6ABB  EB 0C				jmp	short loc_979		; (6AC9)
020C:6ABD			loc_978:
020C:6ABD  81 FB 00FF				cmp	bx,0FFh
020C:6AC1  77 06				ja	loc_979			; Jump if above
020C:6AC3  3B 06 1CD2				cmp	ax,data_250		; (020C:1CD2=0)
020C:6AC7  74 06				je	loc_980			; Jump if equal
020C:6AC9			loc_979:
020C:6AC9  C7 06 1A43 2A3B			mov	word ptr ds:[1A43h],2A3Bh	; (020C:1A43=0B000h)
020C:6ACF			loc_980:
020C:6ACF  80 3E 46CC 01			cmp	data_710,1		; (020C:46CC=0B6h)
020C:6AD4  74 0C				je	loc_981			; Jump if equal
020C:6AD6  C6 06 46CC 01			mov	data_710,1		; (020C:46CC=0B6h)
020C:6ADB  B0 58				mov	al,58h			; 'X'
020C:6ADD  9A 1491:2770		;*		call	far ptr sub_175		;*(1491:2770)
020C:6ADD  9A					db	9Ah
020C:6ADE  2770 1491				dw	2770h, 1491h
020C:6AE2			loc_981:
020C:6AE2  BA 19B3				mov	dx,19B3h
020C:6AE5  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:6AEA  06					push	es
020C:6AEB  9A 1491:282C		;*		call	far ptr sub_176		;*(1491:282C)
020C:6AEB  9A					db	9Ah
020C:6AEC  282C 1491				dw	282Ch, 1491h
020C:6AF0  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:6AF5  9C					pushf				; Push flags
020C:6AF6  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:6AFB  5A					pop	dx
020C:6AFC  8E C2				mov	es,dx
020C:6AFE  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:6B03  5A					pop	dx
020C:6B04  75 0A				jnz	loc_982			; Jump if not zero
020C:6B06  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:6B0B  74 03				je	loc_982			; Jump if equal
020C:6B0D  E8 13A0				call	sub_97			; (7EB0)
020C:6B10			loc_982:
020C:6B10  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 227

020C:6B15  9D					popf				; Pop flags
020C:6B16  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:6B1B  E9 FE95				jmp	loc_968			; (69B3)
020C:6B1E			loc_983:
020C:6B1E  C3					retn
020C:6B1F  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:6B20			sub_71		proc	near
020C:6B20  51					push	cx
020C:6B21  52					push	dx
020C:6B22  57					push	di
020C:6B23  06					push	es
020C:6B24  55					push	bp
020C:6B25  80 3E 1CE7 01			cmp	data_263,1		; (020C:1CE7=0)
020C:6B2A  74 26				je	loc_985			; Jump if equal
020C:6B2C  80 3E 22FF 00			cmp	data_448,0		; (020C:22FF=0)
020C:6B31  75 0A				jne	loc_984			; Jump if not equal
020C:6B33  26: 8A 45 04				mov	al,es:[di+4]
020C:6B37  24 3F				and	al,3Fh			; '?'
020C:6B39  3C 20				cmp	al,20h			; ' '
020C:6B3B  75 15				jne	loc_985			; Jump if not equal
020C:6B3D			loc_984:
020C:6B3D  F6 06 1700 01			test	byte ptr ds:[1700h],1	; (020C:1700=41h)
020C:6B42  74 0E				jz	loc_985			; Jump if zero
020C:6B44  80 3E 1701 01			cmp	byte ptr ds:[1701h],1	; (020C:1701=41h)
020C:6B49  74 07				je	loc_985			; Jump if equal
020C:6B4B  80 3E 3C05 01			cmp	data_569,1		; (020C:3C05=0FAh)
020C:6B50  75 03				jne	loc_986			; Jump if not equal
020C:6B52			loc_985:
020C:6B52  E9 0253				jmp	loc_1021		; (6DA8)
020C:6B55			loc_986:
020C:6B55  FE 06 1CE7				inc	data_263		; (020C:1CE7=0)
020C:6B59  E8 0258				call	sub_72			; (6DB4)
020C:6B5C  32 C9				xor	cl,cl			; Zero register
020C:6B5E  B0 28				mov	al,28h			; '('
020C:6B60  80 3E 1CE6 00			cmp	data_262,0		; (020C:1CE6=0)
020C:6B65  74 02				je	loc_987			; Jump if equal
020C:6B67  B0 5B				mov	al,5Bh			; '['
020C:6B69			loc_987:
020C:6B69  3E: 88 46 00				mov	ds:[bp],al
020C:6B6D  45					inc	bp
020C:6B6E  80 3E 22FF 00			cmp	data_448,0		; (020C:22FF=0)
020C:6B73  75 03				jne	loc_988			; Jump if not equal
020C:6B75  E9 0144				jmp	loc_1007		; (6CBC)
020C:6B78			loc_988:
020C:6B78  53					push	bx
020C:6B79  8C C8				mov	ax,cs
020C:6B7B  26: 3B 05				cmp	ax,es:[di]
020C:6B7E  75 0A				jne	loc_989			; Jump if not equal
020C:6B80  3E: C7 46 00 7373			mov	word ptr ds:[bp],7373h
020C:6B86  45					inc	bp
020C:6B87  45					inc	bp
020C:6B88  EB 68				jmp	short loc_996		; (6BF2)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 228

020C:6B8A			loc_989:
020C:6B8A  26: 8B 05				mov	ax,es:[di]
020C:6B8D  25 FFF0				and	ax,0FFF0h
020C:6B90  3D FBA0				cmp	ax,0FBA0h
020C:6B93  75 22				jne	loc_992			; Jump if not equal
020C:6B95  FE C1				inc	cl
020C:6B97  3E: C7 46 00 3F3F			mov	word ptr ds:[bp],3F3Fh
020C:6B9D  45					inc	bp
020C:6B9E  45					inc	bp
020C:6B9F  26: 8B 05				mov	ax,es:[di]
020C:6BA2  24 0F				and	al,0Fh
020C:6BA4  3C 0F				cmp	al,0Fh
020C:6BA6  74 0D				je	loc_991			; Jump if equal
020C:6BA8  04 30				add	al,30h			; '0'
020C:6BAA  3C 39				cmp	al,39h			; '9'
020C:6BAC  76 02				jbe	loc_990			; Jump if below or =
020C:6BAE  04 07				add	al,7
020C:6BB0			loc_990:
020C:6BB0  3E: 88 46 00				mov	ds:[bp],al
020C:6BB4  45			data_795	db	45h
020C:6BB5			loc_991:
020C:6BB5  3BEB			data_796	dw	3BEBh
020C:6BB7			loc_992:
020C:6BB7  9A 1491:7CC0		;*		call	far ptr sub_242		;*(1491:7CC0)
020C:6BB7  9A					db	9Ah
020C:6BB8  7CC0 1491				dw	7CC0h, 1491h
020C:6BBC  72 10				jc	loc_993			; Jump if carry Set
020C:6BBE  80 3E 163F 02			cmp	data_174,2		; (020C:163F=0)
020C:6BC3  72 09				jb	loc_993			; Jump if below
020C:6BC5  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020C:6BCA  74 02				jz	loc_993			; Jump if zero
020C:6BCC  EB 51				jmp	short loc_999		; (6C1F)
020C:6BCE			loc_993:
020C:6BCE  26: 8B 05				mov	ax,es:[di]
020C:6BD1  F7 06 1F6E 8000			test	data_356,8000h		; (020C:1F6E=0)
020C:6BD7  74 07				jz	loc_994			; Jump if zero
020C:6BD9  9A 1491:0168		;*		call	far ptr sub_154		;*(1491:0168)
020C:6BD9  9A					db	9Ah
020C:6BDA  0168 1491				dw	168h, 1491h
020C:6BDE  EB 36				jmp	short loc_998		; (6C16)
020C:6BE0			loc_994:
020C:6BE0  83 3E 2160 FF			cmp	data_385,0FFFFh		; (020C:2160=5E6Eh)
020C:6BE5  74 04				je	loc_995			; Jump if equal
020C:6BE7  2B 06 2160				sub	ax,data_385		; (020C:2160=5E6Eh)
020C:6BEB			loc_995:
020C:6BEB  9A 1491:0168		;*		call	far ptr sub_154		;*(1491:0168)
020C:6BEB  9A					db	9Ah
020C:6BEC  0168 1491				dw	168h, 1491h
020C:6BF0  EB 06				jmp	short loc_997		; (6BF8)
020C:6BF2			loc_996:
020C:6BF2  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020C:6BF7  45					inc	bp
020C:6BF8			loc_997:
020C:6BF8  83 3E 2160 FF			cmp	data_385,0FFFFh		; (020C:2160=5E6Eh)
020C:6BFD  74 17				je	loc_998			; Jump if equal
020C:6BFF  A1 2160				mov	ax,data_385		; (020C:2160=5E6Eh)
020C:6C02  0B C0				or	ax,ax			; Zero ?
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 229

020C:6C04  74 10				jz	loc_998			; Jump if zero
020C:6C06  51					push	cx
020C:6C07  B1 0C				mov	cl,0Ch
020C:6C09  D3 E8				shr	ax,cl			; Shift w/zeros fill
020C:6C0B  59					pop	cx
020C:6C0C  9A 1491:0100		;*		call	far ptr sub_151		;*(1491:0100)
020C:6C0C  9A					db	9Ah
020C:6C0D  0100 1491				dw	100h, 1491h
020C:6C11  3E: 88 7E 00				mov	ds:[bp],bh
020C:6C15  45					inc	bp
020C:6C16			loc_998:
020C:6C16  26: 8B 45 02				mov	ax,es:[di+2]
020C:6C1A  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:6C1A  9A					db	9Ah
020C:6C1B  0294 1491				dw	294h, 1491h
020C:6C1F			loc_999:
020C:6C1F  5B					pop	bx
020C:6C20  0A C9				or	cl,cl			; Zero ?
020C:6C22  75 0C				jnz	loc_1000		; Jump if not zero
020C:6C24  F6 C7 30				test	bh,30h			; '0'
020C:6C27  74 0A				jz	loc_1001		; Jump if zero
020C:6C29  26: 83 7D 02 FF			cmp	word ptr es:[di+2],0FFFFh
020C:6C2E  75 03				jne	loc_1001		; Jump if not equal
020C:6C30			loc_1000:
020C:6C30  E9 0165				jmp	loc_1019		; (6D98)
020C:6C33			loc_1001:
020C:6C33  3E: C6 46 00 3D			mov	byte ptr ds:[bp],3Dh	; '='
020C:6C38  45					inc	bp
020C:6C39  06					push	es
020C:6C3A  26: 8E 05				mov	es,es:[di]
020C:6C3D  9A 1491:8930		;*		call	far ptr sub_255		;*(1491:8930)
020C:6C3D  9A					db	9Ah
020C:6C3E  8930 1491				dw	8930h, 1491h
020C:6C42  07					pop	es
020C:6C43  73 09				jnc	loc_1002		; Jump if carry=0
020C:6C45  3E: C6 46 00 30			mov	byte ptr ds:[bp],30h	; '0'
020C:6C4A  45					inc	bp
020C:6C4B  E9 014A				jmp	loc_1019		; (6D98)
020C:6C4E			loc_1002:
020C:6C4E  F6 C7 30				test	bh,30h			; '0'
020C:6C51  74 53				jz	loc_1005		; Jump if zero
020C:6C53  F6 C7 20				test	bh,20h			; ' '
020C:6C56  74 30				jz	loc_1004		; Jump if zero
020C:6C58  F6 06 2308 02			test	data_455,2		; (020C:2308=0)
020C:6C5D  74 29				jz	loc_1004		; Jump if zero
020C:6C5F  26: 83 7D 02 FC			cmp	word ptr es:[di+2],0FFFCh
020C:6C64  77 1F				ja	loc_1003		; Jump if above
020C:6C66  26: 8B 5D 02				mov	bx,es:[di+2]
020C:6C6A  26: 8E 05				mov	es,es:[di]
020C:6C6D  8B FB				mov	di,bx
020C:6C6F  9A 1491:8814		;*		call	far ptr sub_253		;*(1491:8814)
020C:6C6F  9A					db	9Ah
020C:6C70  8814 1491				dw	8814h, 1491h
020C:6C74  9A 1491:8914		;*		call	far ptr sub_254		;*(1491:8914)
020C:6C74  9A					db	9Ah
020C:6C75  8914 1491				dw	8914h, 1491h
020C:6C79  26: 8B 45 02				mov	ax,es:[di+2]
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 230

020C:6C7D  26: 8B 1D				mov	bx,es:[di]
020C:6C80  9A 1491:0414		;*		call	far ptr sub_160		;*(1491:0414)
020C:6C80  9A					db	9Ah
020C:6C81  0414 1491				dw	414h, 1491h
020C:6C85			loc_1003:
020C:6C85  E9 0110				jmp	loc_1019		; (6D98)
020C:6C88			loc_1004:
020C:6C88  26: 8B 5D 02				mov	bx,es:[di+2]
020C:6C8C  26: 8E 05				mov	es,es:[di]
020C:6C8F  8B FB				mov	di,bx
020C:6C91  9A 1491:8814		;*		call	far ptr sub_253		;*(1491:8814)
020C:6C91  9A					db	9Ah
020C:6C92  8814 1491				dw	8814h, 1491h
020C:6C96  9A 1491:8914		;*		call	far ptr sub_254		;*(1491:8914)
020C:6C96  9A					db	9Ah
020C:6C97  8914 1491				dw	8914h, 1491h
020C:6C9B  26: 8B 05				mov	ax,es:[di]
020C:6C9E  9A 1491:02B4		;*		call	far ptr sub_158		;*(1491:02B4)
020C:6C9E  9A					db	9Ah
020C:6C9F  02B4 1491				dw	2B4h, 1491h
020C:6CA3  E9 00F2				jmp	loc_1019		; (6D98)
020C:6CA6			loc_1005:
020C:6CA6  26: 8B 5D 02				mov	bx,es:[di+2]
020C:6CAA  26: 8A 45 04				mov	al,es:[di+4]
020C:6CAE  24 3F				and	al,3Fh			; '?'
020C:6CB0  3C 20				cmp	al,20h			; ' '
020C:6CB2  74 03				je	loc_1006		; Jump if equal
020C:6CB4  E9 00CF				jmp	loc_1018		; (6D86)
020C:6CB7			loc_1006:
020C:6CB7  BA 0010				mov	dx,10h
020C:6CBA  EB 07				jmp	short loc_1008		; (6CC3)
020C:6CBC			loc_1007:
020C:6CBC  26: 8B 5D 02				mov	bx,es:[di+2]
020C:6CC0  BA 0018				mov	dx,18h
020C:6CC3			loc_1008:
020C:6CC3  26: 8B 4D 08				mov	cx,es:[di+8]
020C:6CC7  3B CA				cmp	cx,dx
020C:6CC9  72 02				jb	loc_1009		; Jump if below
020C:6CCB  8B CA				mov	cx,dx
020C:6CCD			loc_1009:
020C:6CCD  3E: C6 46 00 27			mov	byte ptr ds:[bp],27h	; '''
020C:6CD2  45					inc	bp
020C:6CD3  26: 8E 05				mov	es,es:[di]
020C:6CD6  8B FB				mov	di,bx
020C:6CD8  9A 1491:8814		;*		call	far ptr sub_253		;*(1491:8814)
020C:6CD8  9A					db	9Ah
020C:6CD9  8814 1491				dw	8814h, 1491h
020C:6CDD  BB 424E				mov	bx,424Eh
020C:6CE0  32 F6				xor	dh,dh			; Zero register
020C:6CE2  83 F9 01				cmp	cx,1
020C:6CE5  74 1A				je	loc_1010		; Jump if equal
020C:6CE7  80 3E 4210 02			cmp	data_675,2		; (020C:4210=1Fh)
020C:6CEC  75 13				jne	loc_1010		; Jump if not equal
020C:6CEE  F7 06 3D18 0002			test	data_594,2		; (020C:3D18=2680h)
020C:6CF4  74 0B				jz	loc_1010		; Jump if zero
020C:6CF6  FE C6				inc	dh
020C:6CF8  26: 80 7D 01 00			cmp	byte ptr es:[di+1],0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 231

020C:6CFD  75 02				jne	loc_1010		; Jump if not equal
020C:6CFF  FE C6				inc	dh
020C:6D01			loc_1010:
020C:6D01  83 F9 01				cmp	cx,1
020C:6D04  76 41				jbe	loc_1012		; Jump if below or =
020C:6D06  80 3E 4210 01			cmp	data_675,1		; (020C:4210=1Fh)
020C:6D0B  75 2A				jne	loc_1011		; Jump if not equal
020C:6D0D  F7 06 3D18 0002			test	data_594,2		; (020C:3D18=2680h)
020C:6D13  74 32				jz	loc_1012		; Jump if zero
020C:6D15  26: 8B 05				mov	ax,es:[di]
020C:6D18  3C 00				cmp	al,0
020C:6D1A  74 62				je	loc_1017		; Jump if equal
020C:6D1C  50					push	ax
020C:6D1D  86 E0				xchg	ah,al
020C:6D1F  9A 1491:4F78		;*		call	far ptr sub_204		;*(1491:4F78)
020C:6D1F  9A					db	9Ah
020C:6D20  4F78 1491				dw	4F78h, 1491h
020C:6D24  3D 0001				cmp	ax,1
020C:6D27  58					pop	ax
020C:6D28  72 54				jc	loc_1017		; Jump if carry Set
020C:6D2A  74 1E				jz	loc_1013		; Jump if zero
020C:6D2C  3E: 88 46 00				mov	ds:[bp],al
020C:6D30  45					inc	bp
020C:6D31  47					inc	di
020C:6D32  49					dec	cx
020C:6D33  8A C4				mov	al,ah
020C:6D35  EB 37				jmp	short loc_1015		; (6D6E)
020C:6D37			loc_1011:
020C:6D37  F6 C6 02				test	dh,2
020C:6D3A  74 0B				jz	loc_1012		; Jump if zero
020C:6D3C  26: 8B 05				mov	ax,es:[di]
020C:6D3F  3D 0000				cmp	ax,0
020C:6D42  74 3A				je	loc_1017		; Jump if equal
020C:6D44  47					inc	di
020C:6D45  EB 03				jmp	short loc_1013		; (6D4A)
020C:6D47			loc_1012:
020C:6D47  26: 8A 05				mov	al,es:[di]
020C:6D4A			loc_1013:
020C:6D4A  0A C0				or	al,al			; Zero ?
020C:6D4C  74 30				jz	loc_1017		; Jump if zero
020C:6D4E  3C 0D				cmp	al,0Dh
020C:6D50  74 2C				je	loc_1017		; Jump if equal
020C:6D52  3C 0A				cmp	al,0Ah
020C:6D54  74 28				je	loc_1017		; Jump if equal
020C:6D56  80 3E 4210 01			cmp	data_675,1		; (020C:4210=1Fh)
020C:6D5B  74 04				je	loc_1014		; Jump if equal
020C:6D5D  3C 7E				cmp	al,7Eh			; '~'
020C:6D5F  73 11				jae	loc_1016		; Jump if above or =
020C:6D61			loc_1014:
020C:6D61  3C 20				cmp	al,20h			; ' '
020C:6D63  72 0D				jb	loc_1016		; Jump if below
020C:6D65  83 F9 01				cmp	cx,1
020C:6D68  77 04				ja	loc_1015		; Jump if above
020C:6D6A  3C 24				cmp	al,24h			; '$'
020C:6D6C  74 10				je	loc_1017		; Jump if equal
020C:6D6E			loc_1015:
020C:6D6E  3E: 88 46 00				mov	ds:[bp],al
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 232

020C:6D72			loc_1016:
020C:6D72  83 FF FE				cmp	di,0FFFEh
020C:6D75  73 07				jae	loc_1017		; Jump if above or =
020C:6D77  47					inc	di
020C:6D78  45					inc	bp
020C:6D79  49					dec	cx
020C:6D7A  E3 02				jcxz	loc_1017		; Jump if cx=0
020C:6D7C  EB 83				jmp	short loc_1010		; (6D01)
020C:6D7E			loc_1017:
020C:6D7E  3E: C6 46 00 27			mov	byte ptr ds:[bp],27h	; '''
020C:6D83  45					inc	bp
020C:6D84  EB 12				jmp	short loc_1019		; (6D98)
020C:6D86			loc_1018:
020C:6D86  26: 8E 05				mov	es,es:[di]
020C:6D89  8B FB				mov	di,bx
020C:6D8B  9A 1491:8814		;*		call	far ptr sub_253		;*(1491:8814)
020C:6D8B  9A					db	9Ah
020C:6D8C  8814 1491				dw	8814h, 1491h
020C:6D90  26: 8A 05				mov	al,es:[di]
020C:6D93  9A 1491:0134		;*		call	far ptr sub_153		;*(1491:0134)
020C:6D93  9A					db	9Ah
020C:6D94  0134 1491				dw	134h, 1491h
020C:6D98			loc_1019:
020C:6D98  B0 29				mov	al,29h			; ')'
020C:6D9A  80 3E 1CE6 00			cmp	data_262,0		; (020C:1CE6=0)
020C:6D9F  74 02				je	loc_1020		; Jump if equal
020C:6DA1  B0 5D				mov	al,5Dh			; ']'
020C:6DA3			loc_1020:
020C:6DA3  3E: 88 46 00				mov	ds:[bp],al
020C:6DA7  45					inc	bp
020C:6DA8			loc_1021:
020C:6DA8  5D					pop	bp
020C:6DA9  07					pop	es
020C:6DAA  5F					pop	di
020C:6DAB  5A					pop	dx
020C:6DAC  59					pop	cx
020C:6DAD  C6 06 1CE6 00			mov	data_262,0		; (020C:1CE6=0)
020C:6DB2  C3					retn
				sub_71		endp

020C:6DB3  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:6DB4			sub_72		proc	near
020C:6DB4  50					push	ax
020C:6DB5  51					push	cx
020C:6DB6  57					push	di
020C:6DB7  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:6DBC  06					push	es
020C:6DBD  E8 0C2E				call	sub_90			; (79EE)
020C:6DC0  32 E4				xor	ah,ah			; Zero register
020C:6DC2  BF 1A67				mov	di,1A67h
020C:6DC5  B9 0026				mov	cx,26h
020C:6DC8  B0 3B				mov	al,3Bh			; ';'
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 233

020C:6DCA  FD					std				; Set direction flag
020C:6DCB  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020C:6DCD  0B C9				or	cx,cx			; Zero ?
020C:6DCF  75 02				jnz	loc_1022		; Jump if not zero
020C:6DD1  FE C4				inc	ah
020C:6DD3			loc_1022:
020C:6DD3  BF 1A67				mov	di,1A67h
020C:6DD6  B9 0026				mov	cx,26h
020C:6DD9  B0 20				mov	al,20h			; ' '
020C:6DDB  FD					std				; Set direction flag
020C:6DDC  F3/ AE				repe	scasb			; Rep zf=1+cx >0 Scan es:[di] for al
020C:6DDE  47					inc	di
020C:6DDF  47					inc	di
020C:6DE0  0A E4				or	ah,ah			; Zero ?
020C:6DE2  74 04				jz	loc_1023		; Jump if zero
020C:6DE4  C6 05 3B				mov	byte ptr [di],3Bh	; ';'
020C:6DE7  47					inc	di
020C:6DE8			loc_1023:
020C:6DE8  47					inc	di
020C:6DE9  FC					cld				; Clear direction
020C:6DEA  8B EF				mov	bp,di
020C:6DEC  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:6DF1  9C					pushf				; Push flags
020C:6DF2  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:6DF7  5A					pop	dx
020C:6DF8  8E C2				mov	es,dx
020C:6DFA  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:6DFF  5A					pop	dx
020C:6E00  75 0A				jnz	loc_1024		; Jump if not zero
020C:6E02  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:6E07  74 03				je	loc_1024		; Jump if equal
020C:6E09  E8 10A4				call	sub_97			; (7EB0)
020C:6E0C			loc_1024:
020C:6E0C  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:6E11  9D					popf				; Pop flags
020C:6E12  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:6E17  5F					pop	di
020C:6E18  59					pop	cx
020C:6E19  58					pop	ax
020C:6E1A  C3					retn
				sub_72		endp

020C:6E1B  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:6E1C			sub_73		proc	near
020C:6E1C  80 3E 178F 06			cmp	data_194,6		; (020C:178F=0)
020C:6E21  73 02				jae	loc_1025		; Jump if above or =
020C:6E23  EB 19				jmp	short loc_1027		; (6E3E)
020C:6E25			loc_1025:
020C:6E25  80 3E 178A 04			cmp	data_190,4		; (020C:178A=0)
020C:6E2A  76 12				jbe	loc_1027		; Jump if below or =
020C:6E2C  F6 06 178A 01			test	data_190,1		; (020C:178A=0)
020C:6E31  75 02				jnz	loc_1026		; Jump if not zero
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 234

020C:6E33  EB 09				jmp	short loc_1027		; (6E3E)
020C:6E35			loc_1026:
020C:6E35  BA 0007				mov	dx,7
020C:6E38  BB 3900				mov	bx,3900h
020C:6E3B  E8 B312		;*		call	sub_27			;*(2150)
020C:6E3B  E8 12 B3				db	0E8h, 12h,0B3h
020C:6E3E			loc_1027:
020C:6E3E  C3					retn
				sub_73		endp

							                        ;* No entry point to code
020C:6E3F  90					nop
020C:6E40  50					push	ax
020C:6E41  53					push	bx
020C:6E42  51					push	cx
020C:6E43  52					push	dx
020C:6E44  56					push	si
020C:6E45  57					push	di
020C:6E46  55					push	bp
020C:6E47  BF 0008				mov	di,8
020C:6E4A			loc_1028:
020C:6E4A  26: 39 3E 0000			cmp	word ptr es:[0],di	; (020C:0000=1828h)
020C:6E4F  76 45				jbe	loc_1032		; Jump if below or =
020C:6E51  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020C:6E56  75 27				jnz	loc_1030		; Jump if not zero
020C:6E58  26: 8A 65 05				mov	ah,es:[di+5]
020C:6E5C  80 E4 0C				and	ah,0Ch
020C:6E5F  80 FC 04				cmp	ah,4
020C:6E62  75 0E				jne	loc_1029		; Jump if not equal
020C:6E64  26: F6 45 05 10			test	byte ptr es:[di+5],10h
020C:6E69  75 14				jnz	loc_1030		; Jump if not zero
020C:6E6B  26: F6 45 04 20			test	byte ptr es:[di+4],20h	; ' '
020C:6E70  75 0D				jnz	loc_1030		; Jump if not zero
020C:6E72			loc_1029:
020C:6E72  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020C:6E76  74 07				je	loc_1030		; Jump if equal
020C:6E78  8B F7				mov	si,di
020C:6E7A  E8 1C63				call	sub_108			; (8AE0)
020C:6E7D  EB CB				jmp	short loc_1028		; (6E4A)
020C:6E7F			loc_1030:
020C:6E7F  BB 2F78				mov	bx,2F78h
020C:6E82  26: 8A 45 05				mov	al,es:[di+5]
020C:6E86  25 000F				and	ax,0Fh
020C:6E89  D7					xlat				; al=[al+[bx]] table
020C:6E8A  0A C0				or	al,al			; Zero ?
020C:6E8C  75 04				jnz	loc_1031		; Jump if not zero
020C:6E8E  26: 8A 45 06				mov	al,es:[di+6]
020C:6E92			loc_1031:
020C:6E92  03 F8				add	di,ax
020C:6E94  EB B4				jmp	short loc_1028		; (6E4A)
020C:6E96			loc_1032:
020C:6E96  5D					pop	bp
020C:6E97  5F					pop	di
020C:6E98  5E					pop	si
020C:6E99  5A					pop	dx
020C:6E9A  59					pop	cx
020C:6E9B  5B					pop	bx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 235

020C:6E9C  58					pop	ax
020C:6E9D  C3					retn
020C:6E9E  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:6EA0			sub_74		proc	near
020C:6EA0  50					push	ax
020C:6EA1  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:6EA6  06					push	es
020C:6EA7  E8 0B38				call	sub_87			; (79E2)
020C:6EAA  C6 06 1F6A 01			mov	byte ptr ds:[1F6Ah],1	; (ss:1F6A=0)
020C:6EAF  26: A1 0000				mov	ax,word ptr es:[0]	; (444F:0000=120h)
020C:6EB3  3D 0000				cmp	ax,0
020C:6EB6  75 08				jne	loc_1033		; Jump if not equal
020C:6EB8  26: 83 3E 0004 00			cmp	word ptr es:[4],0	; (444F:0004=2)
020C:6EBE  74 18				je	loc_1034		; Jump if equal
020C:6EC0			loc_1033:
020C:6EC0  26: 83 3E 0002 FF			cmp	word ptr es:[2],0FFFFh	; (444F:0002=5)
020C:6EC6  74 10				je	loc_1034		; Jump if equal
020C:6EC8  26: A1 0002				mov	ax,word ptr es:[2]	; (444F:0002=5)
020C:6ECC  26: 3B 06 0004			cmp	ax,word ptr es:[4]	; (444F:0004=2)
020C:6ED1  73 05				jae	loc_1034		; Jump if above or =
020C:6ED3  C6 06 1F6A 00			mov	byte ptr ds:[1F6Ah],0	; (ss:1F6A=0)
020C:6ED8			loc_1034:
020C:6ED8  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:6EDD  9C					pushf				; Push flags
020C:6EDE  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:6EE3  5A					pop	dx
020C:6EE4  8E C2				mov	es,dx
020C:6EE6  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:6EEB  5A					pop	dx
020C:6EEC  75 0A				jnz	loc_1035		; Jump if not zero
020C:6EEE  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:6EF3  74 03				je	loc_1035		; Jump if equal
020C:6EF5  E8 0FB8				call	sub_97			; (7EB0)
020C:6EF8			loc_1035:
020C:6EF8  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:6EFD  9D					popf				; Pop flags
020C:6EFE  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:6F03  58					pop	ax
020C:6F04  C3					retn
				sub_74		endp

020C:6F05  87 DB				xchg	bx,bx
020C:6F07  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:6F08			sub_75		proc	near
020C:6F08  E8 0AF2				call	sub_93			; (79FD)
020C:6F0B  BF 13F0				mov	di,13F0h
020C:6F0E  BE 1960				mov	si,1960h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 236

020C:6F11  8B 04				mov	ax,[si]
020C:6F13  0B C0				or	ax,ax			; Zero ?
020C:6F15  75 13				jnz	loc_1036		; Jump if not zero
020C:6F17  80 3E 2172 01			cmp	byte ptr ds:[2172h],1	; (020C:2172=0DBh)
020C:6F1C  74 0C				je	loc_1036		; Jump if equal
020C:6F1E  83 3E 2156 FC			cmp	data_380,0FFFCh		; (020C:2156=0FFFFh)
020C:6F23  73 05				jae	loc_1036		; Jump if above or =
020C:6F25  39 44 02				cmp	[si+2],ax
020C:6F28  74 26				je	loc_1038		; Jump if equal
020C:6F2A			loc_1036:
020C:6F2A  24 F8				and	al,0F8h
020C:6F2C  D0 E8				shr	al,1			; Shift w/zeros fill
020C:6F2E  D0 E8				shr	al,1			; Shift w/zeros fill
020C:6F30  32 E4				xor	ah,ah			; Zero register
020C:6F32  03 F8				add	di,ax
020C:6F34  26: 8B 3D				mov	di,es:[di]
020C:6F37  8B 04				mov	ax,[si]
020C:6F39			loc_1037:
020C:6F39  26: 3A 05				cmp	al,es:[di]
020C:6F3C  74 15				je	loc_1039		; Jump if equal
020C:6F3E  72 10				jc	loc_1038		; Jump if carry Set
020C:6F40  50					push	ax
020C:6F41  B8 1446				mov	ax,1446h
020C:6F44  2D 1430				sub	ax,1430h
020C:6F47  03 F8				add	di,ax
020C:6F49  58					pop	ax
020C:6F4A  26: 83 3D 00				cmp	word ptr es:[di],0
020C:6F4E  75 E9				jne	loc_1037		; Jump if not equal
020C:6F50			loc_1038:
020C:6F50  F8					clc				; Clear carry flag
020C:6F51  EB 01				jmp	short loc_1040		; (6F54)
020C:6F53			loc_1039:
020C:6F53  F9					stc				; Set carry flag
020C:6F54			loc_1040:
020C:6F54  C3					retn
				sub_75		endp

020C:6F55  87 DB				xchg	bx,bx
020C:6F57  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:6F58			sub_76		proc	near
020C:6F58  50					push	ax
020C:6F59  51					push	cx
020C:6F5A  56					push	si
020C:6F5B  B9 1446				mov	cx,1446h
020C:6F5E  81 E9 1430				sub	cx,1430h
020C:6F62  BE 1988				mov	si,1988h

020C:6F65			locloop_1041:
020C:6F65  26: 8A 05				mov	al,es:[di]
020C:6F68  88 04				mov	[si],al
020C:6F6A  47					inc	di
020C:6F6B  46					inc	si
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 237

020C:6F6C  E2 F7				loop	locloop_1041		; Loop if cx > 0

020C:6F6E  BF 1988				mov	di,1988h
020C:6F71  E8 0A7A				call	sub_90			; (79EE)
020C:6F74  5E					pop	si
020C:6F75  59					pop	cx
020C:6F76  58					pop	ax
020C:6F77  C3					retn
				sub_76		endp

020C:6F78  00 87 90DB				add	data_811[bx],al		; (020C:90DB=26h)
020C:6F7C  06					push	es
020C:6F7D  57					push	di
020C:6F7E  C6 06 46D8 00			mov	data_718,0		; (020C:46D8=55h)
020C:6F83  2E: C4 3E 3AAE			les	di,dword ptr cs:[3AAEh]	; (020C:3AAE=1E9Ch) Load seg:offset pt
020C:6F88  C7 06 1D18 0000			mov	data_284,0		; (020C:1D18=0)
020C:6F8E			loc_1042:
020C:6F8E  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020C:6F92  75 09				jne	loc_1043		; Jump if not equal
020C:6F94  26: 83 7D 02 FF			cmp	word ptr es:[di+2],0FFFFh
020C:6F99  75 02				jne	loc_1043		; Jump if not equal
020C:6F9B  EB 46				jmp	short loc_1049		; (6FE3)
020C:6F9D			loc_1043:
020C:6F9D  26: F6 45 0E 20			test	byte ptr es:[di+0Eh],20h	; ' '
020C:6FA2  75 08				jnz	loc_1044		; Jump if not zero
020C:6FA4  C7 06 1D18 0000			mov	data_284,0		; (020C:1D18=0)
020C:6FAA  EB 06				jmp	short loc_1045		; (6FB2)
020C:6FAC			loc_1044:
020C:6FAC  81 06 1D18 1000			add	data_284,1000h		; (020C:1D18=0)
020C:6FB2			loc_1045:
020C:6FB2  26: 39 1D				cmp	es:[di],bx
020C:6FB5  75 27				jne	loc_1048		; Jump if not equal
020C:6FB7  2E: 80 3E 3A38 01			cmp	byte ptr cs:[3A38h],1	; (020C:3A38=31h)
020C:6FBD  74 0C				je	loc_1046		; Jump if equal
020C:6FBF  26: 3B 45 04				cmp	ax,es:[di+4]
020C:6FC3  77 19				ja	loc_1048		; Jump if above
020C:6FC5  26: 3B 45 02				cmp	ax,es:[di+2]
020C:6FC9  72 13				jb	loc_1048		; Jump if below
020C:6FCB			loc_1046:
020C:6FCB  26: 8B 05				mov	ax,es:[di]
020C:6FCE  26: 3B 45 15				cmp	ax,es:[di+15h]
020C:6FD2  74 04				je	loc_1047		; Jump if equal
020C:6FD4  FE 06 46D8				inc	data_718		; (020C:46D8=55h)
020C:6FD8			loc_1047:
020C:6FD8  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020C:6FDC  EB 0D				jmp	short loc_1050		; (6FEB)
020C:6FDE			loc_1048:
020C:6FDE  83 C7 19				add	di,19h
020C:6FE1  EB AB				jmp	short loc_1042		; (6F8E)
020C:6FE3			loc_1049:
020C:6FE3  C7 06 1D18 0000			mov	data_284,0		; (020C:1D18=0)
020C:6FE9  33 C0				xor	ax,ax			; Zero register
020C:6FEB			loc_1050:
020C:6FEB  5F					pop	di
020C:6FEC  07					pop	es
020C:6FED  C3					retn
020C:6FEE  00 00				add	[bx+si],al
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 238

020C:6FF0  10 28				adc	[bx+si],ch
020C:6FF2  000E[00]				db	14 dup (0)
020C:7000			loc_1051:
020C:7000  E8 09EB				call	sub_90			; (79EE)
020C:7003  80 3E 1329 01			cmp	data_162,1		; (020C:1329=0)
020C:7008  75 03				jne	loc_1052		; Jump if not equal
020C:700A  E9 0084				jmp	loc_1056		; (7091)
020C:700D			loc_1052:
020C:700D  BE 1EFD				mov	si,1EFDh
020C:7010  BF 08C9				mov	di,8C9h
020C:7013  B9 0060				mov	cx,60h
020C:7016  33 DB				xor	bx,bx			; Zero register
020C:7018  FC					cld				; Clear direction

020C:7019			locloop_1053:
020C:7019  80 3C 00				cmp	byte ptr [si],0
020C:701C  74 04				je	loc_1054		; Jump if equal
020C:701E  43					inc	bx
020C:701F  A4					movsb				; Mov [si] to es:[di]
020C:7020  E2 F7				loop	locloop_1053		; Loop if cx > 0

020C:7022			loc_1054:
020C:7022  83 3E 1F64 00			cmp	data_350,0		; (020C:1F64=0)
020C:7027  74 56				je	loc_1055		; Jump if equal
020C:7029  32 E4				xor	ah,ah			; Zero register
020C:702B  A0 0906				mov	al,data_117		; (020C:0906=3Ch)
020C:702E  2B C3				sub	ax,bx
020C:7030  2D 0002				sub	ax,2
020C:7033  2B C3				sub	ax,bx
020C:7035  7C 48				jl	loc_1055		; Jump if <
020C:7037  B0 2C				mov	al,2Ch			; ','
020C:7039  AA					stosb				; Store al to es:[di]
020C:703A  B0 20				mov	al,20h			; ' '
020C:703C  AA					stosb				; Store al to es:[di]
020C:703D  8B CB				mov	cx,bx
020C:703F  83 E9 03				sub	cx,3
020C:7042  BE 1EFD				mov	si,1EFDh
020C:7045  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:7047  BE 1F5E				mov	si,1F5Eh
020C:704A  B9 0003				mov	cx,3
020C:704D  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:704F  F7 06 3D1D 0040			test	data_597,40h		; (020C:3D1D=0D4E8h)
020C:7055  74 28				jz	loc_1055		; Jump if zero
020C:7057  32 E4				xor	ah,ah			; Zero register
020C:7059  A0 0906				mov	al,data_117		; (020C:0906=3Ch)
020C:705C  2B C3				sub	ax,bx
020C:705E  2D 0002				sub	ax,2
020C:7061  2B C3				sub	ax,bx
020C:7063  2B C3				sub	ax,bx
020C:7065  7C 18				jl	loc_1055		; Jump if <
020C:7067  B0 2C				mov	al,2Ch			; ','
020C:7069  AA					stosb				; Store al to es:[di]
020C:706A  B0 20				mov	al,20h			; ' '
020C:706C  AA					stosb				; Store al to es:[di]
020C:706D  8B CB				mov	cx,bx
020C:706F  83 E9 03				sub	cx,3
020C:7072  BE 1EFD				mov	si,1EFDh
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 239

020C:7075  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:7077  BE 1F61				mov	si,1F61h
020C:707A  B9 0003				mov	cx,3
020C:707D  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:707F			loc_1055:
020C:707F  BE 0866				mov	si,866h
020C:7082  BF 01D6				mov	di,1D6h
020C:7085  B9 00A0				mov	cx,0A0h
020C:7088  FC					cld				; Clear direction
020C:7089  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:708B  C7 06 1345 00A0			mov	data_164,0A0h		; (020C:1345=0)
020C:7091			loc_1056:
020C:7091  E8 0936				call	sub_83			; (79CA)
020C:7094  26: A1 2104				mov	ax,word ptr es:[2104h]	; (020C:2104=0D3Ah)
020C:7098  3D 0001				cmp	ax,1
020C:709B  77 0E				ja	loc_1057		; Jump if above
020C:709D  26: 8B 16 21A4			mov	dx,es:data_420		; (020C:21A4=0E1Eh)
020C:70A2  26: A1 21A2				mov	ax,word ptr es:[21A2h]	; (020C:21A2=39h)
020C:70A6  B9 003C				mov	cx,3Ch
020C:70A9  F7 F1				div	cx			; ax,dx rem=dx:ax/reg
020C:70AB			loc_1057:
020C:70AB  26: A3 4743				mov	word ptr es:[4743h],ax	; (020C:4743=2020h)
020C:70AF  26: 83 3E 21A4 00			cmp	es:data_420,0		; (020C:21A4=0E1Eh)
020C:70B5  74 0E				je	loc_1058		; Jump if equal
020C:70B7  C7 06 0286 6170			mov	word ptr ds:[286h],6170h	; (020C:0286=0)
020C:70BD  C7 06 0288 6567			mov	word ptr ds:[288h],6567h	; (020C:0288=0)
020C:70C3  EB 04				jmp	short loc_1059		; (70C9)
020C:70C5			loc_1058:
020C:70C5  26: A1 21A2				mov	ax,word ptr es:[21A2h]	; (020C:21A2=39h)
020C:70C9			loc_1059:
020C:70C9  BD 028E				mov	bp,28Eh
020C:70CC  B3 00				mov	bl,0
020C:70CE  9A 1491:0300		;*		call	far ptr sub_159		;*(1491:0300)
020C:70CE  9A					db	9Ah
020C:70CF  0300 1491				dw	300h, 1491h
020C:70D3  E8 08FA				call	sub_84			; (79D0)
020C:70D6  83 3E 21A4 00			cmp	data_420,0		; (020C:21A4=0E1Eh)
020C:70DB  74 03				je	loc_1060		; Jump if equal
020C:70DD  E9 00CD				jmp	loc_1067		; (71AD)
020C:70E0			loc_1060:
020C:70E0  B4 2C				mov	ah,2Ch
020C:70E2  CD 21				int	21h			; DOS Services  ah=function 2Ch
										;  get time, cx=hrs/min, dx=sec
020C:70E4  8B 1E 3D6C				mov	bx,data_632		; (020C:3D6C=403Ch)
020C:70E8  3A FD				cmp	bh,ch
020C:70EA  76 03				jbe	loc_1061		; Jump if below or =
020C:70EC  80 C5 18				add	ch,18h
020C:70EF			loc_1061:
020C:70EF  8B DA				mov	bx,dx
020C:70F1  B0 3C				mov	al,3Ch			; '<'
020C:70F3  F6 E5				mul	ch			; ax = reg * al
020C:70F5  32 ED				xor	ch,ch			; Zero register
020C:70F7  03 C1				add	ax,cx
020C:70F9  B9 003C				mov	cx,3Ch
020C:70FC  F7 E1				mul	cx			; dx:ax = reg * ax
020C:70FE  53					push	bx
020C:70FF  32 DB				xor	bl,bl			; Zero register
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 240

020C:7101  86 DF				xchg	bl,bh
020C:7103  03 C3				add	ax,bx
020C:7105  73 01				jnc	loc_1062		; Jump if carry=0
020C:7107  42					inc	dx
020C:7108			loc_1062:
020C:7108  52					push	dx
020C:7109  B9 000A				mov	cx,0Ah
020C:710C  F7 E1				mul	cx			; dx:ax = reg * ax
020C:710E  59					pop	cx
020C:710F  03 D1				add	dx,cx
020C:7111  5B					pop	bx
020C:7112  52					push	dx
020C:7113  50					push	ax
020C:7114  32 FF				xor	bh,bh			; Zero register
020C:7116  8B C3				mov	ax,bx
020C:7118  33 D2				xor	dx,dx			; Zero register
020C:711A  B9 000A				mov	cx,0Ah
020C:711D  F7 F1				div	cx			; ax,dx rem=dx:ax/reg
020C:711F  8B D8				mov	bx,ax
020C:7121  58					pop	ax
020C:7122  5A					pop	dx
020C:7123  03 C3				add	ax,bx
020C:7125  73 01				jnc	loc_1063		; Jump if carry=0
020C:7127  42					inc	dx
020C:7128			loc_1063:
020C:7128  52					push	dx
020C:7129  50					push	ax
020C:712A  8B 0E 3D6C				mov	cx,data_632		; (020C:3D6C=403Ch)
020C:712E  8B 1E 3D6E				mov	bx,data_633		; (020C:3D6E=0C72h)
020C:7132  B0 3C				mov	al,3Ch			; '<'
020C:7134  F6 E5				mul	ch			; ax = reg * al
020C:7136  32 ED				xor	ch,ch			; Zero register
020C:7138  03 C1				add	ax,cx
020C:713A  B9 003C				mov	cx,3Ch
020C:713D  F7 E1				mul	cx			; dx:ax = reg * ax
020C:713F  53					push	bx
020C:7140  32 DB				xor	bl,bl			; Zero register
020C:7142  86 DF				xchg	bl,bh
020C:7144  03 C3				add	ax,bx
020C:7146  73 01				jnc	loc_1064		; Jump if carry=0
020C:7148  42					inc	dx
020C:7149			loc_1064:
020C:7149  52					push	dx
020C:714A  B9 000A				mov	cx,0Ah
020C:714D  F7 E1				mul	cx			; dx:ax = reg * ax
020C:714F  59					pop	cx
020C:7150  03 D1				add	dx,cx
020C:7152  5B					pop	bx
020C:7153  52					push	dx
020C:7154  50					push	ax
020C:7155  32 FF				xor	bh,bh			; Zero register
020C:7157  8B C3				mov	ax,bx
020C:7159  33 D2				xor	dx,dx			; Zero register
020C:715B  B9 000A				mov	cx,0Ah
020C:715E  F7 F1				div	cx			; ax,dx rem=dx:ax/reg
020C:7160  8B D8				mov	bx,ax
020C:7162  58					pop	ax
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 241

020C:7163  5A					pop	dx
020C:7164  03 C3				add	ax,bx
020C:7166  73 01				jnc	loc_1065		; Jump if carry=0
020C:7168  42					inc	dx
020C:7169			loc_1065:
020C:7169  5B					pop	bx
020C:716A  59					pop	cx
020C:716B  2B D8				sub	bx,ax
020C:716D  1B CA				sbb	cx,dx
020C:716F  75 3C				jnz	loc_1067		; Jump if not zero
020C:7171  0B DB				or	bx,bx			; Zero ?
020C:7173  74 38				jz	loc_1067		; Jump if zero
020C:7175  33 D2				xor	dx,dx			; Zero register
020C:7177  8B CB				mov	cx,bx
020C:7179  A1 21A2				mov	ax,word ptr ds:[21A2h]	; (020C:21A2=39h)
020C:717C  F7 F1				div	cx			; ax,dx rem=dx:ax/reg
020C:717E  B9 0258				mov	cx,258h
020C:7181  F7 E1				mul	cx			; dx:ax = reg * ax
020C:7183  0B C0				or	ax,ax			; Zero ?
020C:7185  74 26				jz	loc_1067		; Jump if zero
020C:7187  BE 21A6				mov	si,21A6h
020C:718A  BD 0297				mov	bp,297h
020C:718D  E8 083A				call	sub_83			; (79CA)
020C:7190  E8 085B				call	sub_90			; (79EE)
020C:7193  50					push	ax
020C:7194  26: 8A 0C				mov	cl,es:[si]
020C:7197  32 ED				xor	ch,ch			; Zero register
020C:7199  46					inc	si

020C:719A			locloop_1066:
020C:719A  26: 8A 04				mov	al,es:[si]
020C:719D  3E: 88 46 00				mov	ds:[bp],al
020C:71A1  46					inc	si
020C:71A2  45					inc	bp
020C:71A3  E2 F5				loop	locloop_1066		; Loop if cx > 0

020C:71A5  58					pop	ax
020C:71A6  32 DB				xor	bl,bl			; Zero register
020C:71A8  9A 1491:0300		;*		call	far ptr sub_159		;*(1491:0300)
020C:71A8  9A					db	9Ah
020C:71A9  0300 1491				dw	300h, 1491h
020C:71AD			loc_1067:
020C:71AD  E8 0820				call	sub_84			; (79D0)
020C:71B0  8B 1E 1326				mov	bx,data_160		; (020C:1326=0)
020C:71B4  A0 120A				mov	al,data_141		; (020C:120A=0)
020C:71B7  88 47 52				mov	[bx+52h],al
020C:71BA  B4 08				mov	ah,8
020C:71BC  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:71BC  9A					db	9Ah
020C:71BD  2F70 1491				dw	2F70h, 1491h
020C:71C1  9A 1491:3114		;*		call	far ptr sub_184		;*(1491:3114)
020C:71C1  9A					db	9Ah
020C:71C2  3114 1491				dw	3114h, 1491h
020C:71C6  8A 16 1D78				mov	dl,data_336		; (020C:1D78=0)
020C:71CA  B4 0E				mov	ah,0Eh
020C:71CC  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 242

020C:71CE  E8 E92F				call	sub_49			; (5B00)
020C:71D1  EA 1491:3860		;*		jmp	far ptr loc_2726	;*(1491:3860)
020C:71D1  EA					db	0EAh
020C:71D2  3860 1491				dw	3860h, 1491h
020C:71D6			loc_1068:
020C:71D6  B4 0E				mov	ah,0Eh
020C:71D8  C6 06 2306 01			mov	data_453,1		; (020C:2306=0)
020C:71DD  E9 02A7				jmp	loc_1091		; (7487)
							                        ;* No entry point to code
020C:71E0  C6 06 2306 02			mov	data_453,2		; (020C:2306=0)
020C:71E5  B4 38				mov	ah,38h			; '8'
020C:71E7  E9 029D				jmp	loc_1091		; (7487)
020C:71EA			loc_1069:
020C:71EA  C6 06 2306 02			mov	data_453,2		; (020C:2306=0)
020C:71EF  26: 8A 1E 000D			mov	bl,byte ptr es:data_8+1	; (020C:000D=90h)
020C:71F4  1E					push	ds
020C:71F5  B8 0560				mov	ax,560h
020C:71F8  8E D8				mov	ds,ax
020C:71FA  A1 3F74				mov	ax,word ptr ds:[3F74h]	; (ss:3F74=0FFFFh)
020C:71FD  1F					pop	ds
020C:71FE  E8 07C9				call	sub_83			; (79CA)
020C:7201  80 E3 0C				and	bl,0Ch
020C:7204  80 FB 04				cmp	bl,4
020C:7207  74 19				je	loc_1070		; Jump if equal
020C:7209  C7 06 0330 6F6C			mov	word ptr ds:[330h],6F6Ch	; (020C:0330=7361h)
020C:720F  C7 06 0332 2063			mov	word ptr ds:[332h],2063h	; (020C:0332=6664h)
020C:7215  72 0B				jc	loc_1070		; Jump if carry Set
020C:7217  C7 06 0330 7573			mov	word ptr ds:[330h],7573h	; (020C:0330=7361h)
020C:721D  C6 06 0332 62			mov	byte ptr ds:[332h],62h	; (020C:0332=64h) 'b'
020C:7222			loc_1070:
020C:7222  BD 033B				mov	bp,33Bh
020C:7225  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:7225  9A					db	9Ah
020C:7226  0294 1491				dw	294h, 1491h
020C:722A  B4 0A				mov	ah,0Ah
020C:722C  E9 0258				jmp	loc_1091		; (7487)
							                        ;* No entry point to code
020C:722F  BD 02EC				mov	bp,2ECh
020C:7232  B6 09				mov	dh,9
020C:7234  A1 324B				mov	ax,word ptr ds:[324Bh]	; (020C:324B=5845h)
020C:7237  A3 4743				mov	word ptr ds:[4743h],ax	; (020C:4743=2020h)
020C:723A  E8 078D				call	sub_83			; (79CA)
020C:723D  E8 07AE				call	sub_90			; (79EE)
020C:7240  26: 80 3E 3F0E 09			cmp	byte ptr es:[3F0Eh],9	; (020C:3F0E=2)
020C:7246  74 57				je	loc_1074		; Jump if equal
020C:7248  26: 80 3E 3F0E 31			cmp	byte ptr es:[3F0Eh],31h	; (020C:3F0E=2) '1'
020C:724E  74 3A				je	loc_1073		; Jump if equal
020C:7250  26: 80 3E 3F0E 12			cmp	byte ptr es:[3F0Eh],12h	; (020C:3F0E=2)
020C:7256  74 1D				je	loc_1072		; Jump if equal
020C:7258  26: 80 3E 3F0E 00			cmp	byte ptr es:[3F0Eh],0	; (020C:3F0E=2)
020C:725E  74 3F				je	loc_1074		; Jump if equal
020C:7260  26: 80 3E 3F0E 08			cmp	byte ptr es:[3F0Eh],8	; (020C:3F0E=2)
020C:7266  74 07				je	loc_1071		; Jump if equal
020C:7268  BD 1486				mov	bp,1486h
020C:726B  32 F6				xor	dh,dh			; Zero register
020C:726D  EB 3D				jmp	short loc_1075		; (72AC)
020C:726F			loc_1071:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 243

020C:726F  B8 0008				mov	ax,8
020C:7272  E9 00AF				jmp	loc_1077		; (7324)
020C:7275			loc_1072:
020C:7275  26: C6 06 2306 13			mov	es:data_453,13h		; (020C:2306=0)
020C:727B  BD 057A				mov	bp,57Ah
020C:727E  B3 00				mov	bl,0
020C:7280  9A 1491:0300		;*		call	far ptr sub_159		;*(1491:0300)
020C:7280  9A					db	9Ah
020C:7281  0300 1491				dw	300h, 1491h
020C:7285  B4 12				mov	ah,12h
020C:7287  E9 01FD				jmp	loc_1091		; (7487)
020C:728A			loc_1073:
020C:728A  26: C6 06 2306 0F			mov	es:data_453,0Fh		; (020C:2306=0)
020C:7290  BD 0ED1				mov	bp,0ED1h
020C:7293  B3 00				mov	bl,0
020C:7295  9A 1491:0300		;*		call	far ptr sub_159		;*(1491:0300)
020C:7295  9A					db	9Ah
020C:7296  0300 1491				dw	300h, 1491h
020C:729A  B4 31				mov	ah,31h			; '1'
020C:729C  E9 01E8				jmp	loc_1091		; (7487)
020C:729F			loc_1074:
020C:729F  26: 80 3E 3F0F 01			cmp	byte ptr es:[3F0Fh],1	; (020C:3F0F=0)
020C:72A5  75 05				jne	loc_1075		; Jump if not equal
020C:72A7  BD 0D4E				mov	bp,0D4Eh
020C:72AA  B6 2C				mov	dh,2Ch			; ','
020C:72AC			loc_1075:
020C:72AC  B3 00				mov	bl,0
020C:72AE  9A 1491:0300		;*		call	far ptr sub_159		;*(1491:0300)
020C:72AE  9A					db	9Ah
020C:72AF  0300 1491				dw	300h, 1491h
020C:72B3  26: A0 3F0E				mov	al,byte ptr es:[3F0Eh]	; (020C:3F0E=2)
020C:72B7  32 E4				xor	ah,ah			; Zero register
020C:72B9  0A F6				or	dh,dh			; Zero ?
020C:72BB  74 70				jz	loc_1078		; Jump if zero
020C:72BD  8A E6				mov	ah,dh
020C:72BF  26: C6 06 2306 03			mov	es:data_453,3		; (020C:2306=0)
020C:72C5  E9 01BF				jmp	loc_1091		; (7487)
							                        ;* No entry point to code
020C:72C8  E8 06FF				call	sub_83			; (79CA)
020C:72CB  E8 0720				call	sub_90			; (79EE)
020C:72CE  BD 03C7				mov	bp,3C7h
020C:72D1  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:72D1  9A					db	9Ah
020C:72D2  0294 1491				dw	294h, 1491h
020C:72D6  B4 0C				mov	ah,0Ch
020C:72D8  26: C6 06 2306 04			mov	es:data_453,4		; (020C:2306=0)
020C:72DE  E9 01A6				jmp	loc_1091		; (7487)
							                        ;* No entry point to code
020C:72E1  E8 06EC				call	sub_84			; (79D0)
020C:72E4  B4 2E				mov	ah,2Eh			; '.'
020C:72E6  C6 06 2306 05			mov	data_453,5		; (020C:2306=0)
020C:72EB  E9 0199				jmp	loc_1091		; (7487)
020C:72EE			loc_1076:
020C:72EE  89 1E 4743				mov	word ptr ds:[4743h],bx	; (020C:4743=2020h)
020C:72F2  E8 06D5				call	sub_83			; (79CA)
020C:72F5  E8 06F6				call	sub_90			; (79EE)
020C:72F8  8B C3				mov	ax,bx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 244

020C:72FA  BD 0412				mov	bp,412h
020C:72FD  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:72FD  9A					db	9Ah
020C:72FE  0294 1491				dw	294h, 1491h
020C:7302  B4 0D				mov	ah,0Dh
020C:7304  26: C6 06 2306 06			mov	es:data_453,6		; (020C:2306=0)
020C:730A  E9 017A				jmp	loc_1091		; (7487)
							                        ;* No entry point to code
020C:730D  BD 04A7				mov	bp,4A7h
020C:7310  A1 178D				mov	ax,data_193		; (020C:178D=0)
020C:7313  8A 26 178A				mov	ah,data_190		; (020C:178A=0)
020C:7317  E8 06B0				call	sub_83			; (79CA)
020C:731A  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:731A  9A					db	9Ah
020C:731B  0294 1491				dw	294h, 1491h
020C:731F  B4 0F				mov	ah,0Fh
020C:7321  E9 0163				jmp	loc_1091		; (7487)
020C:7324			loc_1077:
020C:7324  E8 06C7				call	sub_90			; (79EE)
020C:7327  26: C6 06 3F0E 00			mov	byte ptr es:[3F0Eh],0	; (020C:3F0E=2)
020C:732D			loc_1078:
020C:732D  E8 069A				call	sub_83			; (79CA)
020C:7330  E8 06BB				call	sub_90			; (79EE)
020C:7333  8B D8				mov	bx,ax
020C:7335  B4 14				mov	ah,14h
020C:7337  BD 05F0				mov	bp,5F0h
020C:733A  83 FB 02				cmp	bx,2
020C:733D  74 2D				je	loc_1079		; Jump if equal
020C:733F  B4 15				mov	ah,15h
020C:7341  BD 063C				mov	bp,63Ch
020C:7344  83 FB 05				cmp	bx,5
020C:7347  74 23				je	loc_1079		; Jump if equal
020C:7349  B4 16				mov	ah,16h
020C:734B  BD 0688				mov	bp,688h
020C:734E  83 FB 08				cmp	bx,8
020C:7351  74 38				je	loc_1080		; Jump if equal
020C:7353  B4 1D				mov	ah,1Dh
020C:7355  BD 089C				mov	bp,89Ch
020C:7358  83 FB 14				cmp	bx,14h
020C:735B  74 2E				je	loc_1080		; Jump if equal
020C:735D  8A C3				mov	al,bl
020C:735F  BD 070A				mov	bp,70Ah
020C:7362  9A 1491:0124		;*		call	far ptr sub_152		;*(1491:0124)
020C:7362  9A					db	9Ah
020C:7363  0124 1491				dw	124h, 1491h
020C:7367  B4 17				mov	ah,17h
020C:7369  BD 06D4				mov	bp,6D4h
020C:736C			loc_1079:
020C:736C  83 C5 02				add	bp,2
020C:736F  26: 80 3E 3F0E 00			cmp	byte ptr es:[3F0Eh],0	; (020C:3F0E=2)
020C:7375  74 14				je	loc_1080		; Jump if equal
020C:7377  8B FD				mov	di,bp
020C:7379  1E					push	ds
020C:737A  07					pop	es
020C:737B  83 C7 3B				add	di,3Bh
020C:737E  BE 147D				mov	si,147Dh
020C:7381  B9 148B				mov	cx,148Bh
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 245

020C:7384  81 E9 147D				sub	cx,147Dh
020C:7388  FC					cld				; Clear direction
020C:7389  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:738B			loc_1080:
020C:738B  E8 0660				call	sub_90			; (79EE)
020C:738E  26: C6 06 2306 08			mov	es:data_453,8		; (020C:2306=0)
020C:7394  E9 00F0				jmp	loc_1091		; (7487)
020C:7397			loc_1081:
020C:7397  B4 1B				mov	ah,1Bh
020C:7399  C6 06 2306 09			mov	data_453,9		; (020C:2306=0)
020C:739E  E9 00E6				jmp	loc_1091		; (7487)
020C:73A1			loc_1082:
020C:73A1  B4 1C				mov	ah,1Ch
020C:73A3  C6 06 2306 0A			mov	data_453,0Ah		; (020C:2306=0)
020C:73A8  E9 00DC				jmp	loc_1091		; (7487)
020C:73AB			loc_1083:
020C:73AB  B4 24				mov	ah,24h			; '$'
020C:73AD  C6 06 2306 0B			mov	data_453,0Bh		; (020C:2306=0)
020C:73B2  E9 00D2				jmp	loc_1091		; (7487)
							                        ;* No entry point to code
020C:73B5  BD 0C1C				mov	bp,0C1Ch
020C:73B8  A1 324B				mov	ax,word ptr ds:[324Bh]	; (020C:324B=5845h)
020C:73BB  A3 4743				mov	word ptr ds:[4743h],ax	; (020C:4743=2020h)
020C:73BE  E8 0609				call	sub_83			; (79CA)
020C:73C1  B3 00				mov	bl,0
020C:73C3  9A 1491:0300		;*		call	far ptr sub_159		;*(1491:0300)
020C:73C3  9A					db	9Ah
020C:73C4  0300 1491				dw	300h, 1491h
020C:73C8  B4 28				mov	ah,28h			; '('
020C:73CA  E8 0603				call	sub_84			; (79D0)
020C:73CD  C6 06 2306 0C			mov	data_453,0Ch		; (020C:2306=0)
020C:73D2  E9 00B2				jmp	loc_1091		; (7487)
							                        ;* No entry point to code
020C:73D5  BD 0C6B				mov	bp,0C6Bh
020C:73D8  A1 324B				mov	ax,word ptr ds:[324Bh]	; (020C:324B=5845h)
020C:73DB  A3 4743				mov	word ptr ds:[4743h],ax	; (020C:4743=2020h)
020C:73DE  E8 05E9				call	sub_83			; (79CA)
020C:73E1  B3 00				mov	bl,0
020C:73E3  9A 1491:0300		;*		call	far ptr sub_159		;*(1491:0300)
020C:73E3  9A					db	9Ah
020C:73E4  0300 1491				dw	300h, 1491h
020C:73E8  B4 29				mov	ah,29h			; ')'
020C:73EA  E8 05E3				call	sub_84			; (79D0)
020C:73ED  C6 06 2306 0D			mov	data_453,0Dh		; (020C:2306=0)
020C:73F2  E9 0092				jmp	loc_1091		; (7487)
							                        ;* No entry point to code
020C:73F5  FE C8				dec	al
020C:73F7  B9 0017				mov	cx,17h
020C:73FA  8A D9				mov	bl,cl
020C:73FC  F6 E3				mul	bl			; ax = reg * al
020C:73FE  8B F0				mov	si,ax
020C:7400  81 C6 1171				add	si,1171h
020C:7404  BF 1A6C				mov	di,1A6Ch
020C:7407  51					push	cx
020C:7408  E8 05E3				call	sub_90			; (79EE)
020C:740B  E8 05C5				call	sub_85			; (79D3)
020C:740E  FC					cld				; Clear direction
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 246

020C:740F  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:7411  E8 05BC				call	sub_84			; (79D0)
020C:7414  59					pop	cx
020C:7415  BE 1A6C				mov	si,1A6Ch
020C:7418  BF 0B72				mov	di,0B72h
020C:741B  E8 05CA				call	sub_88			; (79E8)
020C:741E  E8 05AF				call	sub_84			; (79D0)
020C:7421  FC					cld				; Clear direction
020C:7422  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:7424  B4 26				mov	ah,26h			; '&'
020C:7426  C6 06 2306 15			mov	data_453,15h		; (020C:2306=0)
020C:742B  EB 5A				jmp	short loc_1091		; (7487)
020C:742D			loc_1084:
020C:742D  B4 13				mov	ah,13h
020C:742F  C6 06 2306 0E			mov	data_453,0Eh		; (020C:2306=0)
020C:7434  EB 51				jmp	short loc_1091		; (7487)
020C:7436			loc_1085:
020C:7436  B4 11				mov	ah,11h
020C:7438  C6 06 2306 0E			mov	data_453,0Eh		; (020C:2306=0)
020C:743D  EB 48				jmp	short loc_1091		; (7487)
020C:743F			loc_1086:
020C:743F  B4 32				mov	ah,32h			; '2'
020C:7441  C6 06 2306 10			mov	data_453,10h		; (020C:2306=0)
020C:7446  EB 3F				jmp	short loc_1091		; (7487)
020C:7448			loc_1087:
020C:7448  B4 33				mov	ah,33h			; '3'
020C:744A  C6 06 2306 11			mov	data_453,11h		; (020C:2306=0)
020C:744F  EB 36				jmp	short loc_1091		; (7487)
							                        ;* No entry point to code
020C:7451  C6 06 2306 10			mov	data_453,10h		; (020C:2306=0)
020C:7456  EB 2F				jmp	short loc_1091		; (7487)
							                        ;* No entry point to code
020C:7458  B4 3B				mov	ah,3Bh			; ';'
020C:745A  EB 0A				jmp	short loc_1088		; (7466)
							                        ;* No entry point to code
020C:745C  B4 3A				mov	ah,3Ah			; ':'
020C:745E  EB 06				jmp	short loc_1088		; (7466)
							                        ;* No entry point to code
020C:7460  B4 3C				mov	ah,3Ch			; '<'
020C:7462  EB 02				jmp	short loc_1088		; (7466)
020C:7464  B4 3D				mov	ah,3Dh			; '='
020C:7466			loc_1088:
020C:7466  C6 06 2306 12			mov	data_453,12h		; (020C:2306=0)
020C:746B  EB 1A				jmp	short loc_1091		; (7487)
020C:746D			loc_1089:
020C:746D  B4 43				mov	ah,43h			; 'C'
020C:746F  C6 06 2306 16			mov	data_453,16h		; (020C:2306=0)
020C:7474  EB 11				jmp	short loc_1091		; (7487)
020C:7476  C6 06 2306 17			mov	data_453,17h		; (020C:2306=0)
020C:747B  EA 1491:3860		;*		jmp	far ptr loc_2726	;*(1491:3860)
020C:747B  EA					db	0EAh
020C:747C  3860 1491				dw	3860h, 1491h
							                        ;* No entry point to code
020C:7480  B4 11				mov	ah,11h
020C:7482  C6 06 2306 14			mov	data_453,14h		; (020C:2306=0)
020C:7487			loc_1091:
020C:7487  E8 0546				call	sub_84			; (79D0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 247

020C:748A  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:748A  9A					db	9Ah
020C:748B  2F70 1491				dw	2F70h, 1491h
020C:748F  80 3E 1329 01			cmp	data_162,1		; (020C:1329=0)
020C:7494  74 0A				je	loc_1092		; Jump if equal
020C:7496  80 3E 2306 14			cmp	data_453,14h		; (020C:2306=0)
020C:749B  74 03				je	loc_1092		; Jump if equal
020C:749D  E8 E820				call	sub_51			; (5CC0)
020C:74A0			loc_1092:
020C:74A0  A0 1208				mov	al,data_139		; (020C:1208=0)
020C:74A3  88 47 52				mov	[bx+52h],al
020C:74A6  9A 1491:3108		;*		call	far ptr sub_183		;*(1491:3108)
020C:74A6  9A					db	9Ah
020C:74A7  3108 1491				dw	3108h, 1491h
020C:74AB  EA 1491:3860		;*		jmp	far ptr loc_2726	;*(1491:3860)
020C:74AB  EA					db	0EAh
020C:74AC  3860 1491				dw	3860h, 1491h
020C:74B0  00					db	0
020C:74B1  00 00				add	[bx+si],al
020C:74B3  00 FF				add	bh,bh
020C:74B5  FF 45 7C				inc	word ptr [di+7Ch]
020C:74B8  6F					db	6Fh
020C:74B9  7F BF		;*		jg	loc_1090		;*Jump if >
020C:74B9  7F BF				db	 7Fh,0BFh
020C:74BB  2C A9				sub	al,0A9h
020C:74BD  36					db	36h
020C:74BE  1F					pop	ds
020C:74BF  42					inc	dx
020C:74C0  00					db	0
020C:74C1  00 00				add	[bx+si],al
020C:74C3  00 10				add	[bx+si],dl
020C:74C5  28 3F				sub	[bx],bh
020C:74C7  2B 3C				sub	di,[si]
020C:74C9  21 FF				and	di,di
020C:74CB  FF					db	0FFh
020C:74CC  FF					db	0FFh
020C:74CD  FF					db	0FFh
020C:74CE  FF					db	0FFh
020C:74CF  FF 00				inc	word ptr [bx+si]
020C:74D1  87 DB				xchg	bx,bx
020C:74D3  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:74D4			sub_77		proc	near
020C:74D4  E8 0059				call	sub_79			; (7530)
020C:74D7  2E: 8B 16 3F80			mov	dx,cs:data_659		; (020C:3F80=573Ch)
020C:74DC  B8 0001				mov	ax,1
020C:74DF  E8 1712				call	sub_110			; (8BF4)
020C:74E2  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:74E8  75 15				jne	loc_1093		; Jump if not equal
020C:74EA  BA FFFF				mov	dx,0FFFFh
020C:74ED  B8 0002				mov	ax,2
020C:74F0  E8 1701				call	sub_110			; (8BF4)
020C:74F3  B8 0001				mov	ax,1
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 248

020C:74F6  E8 16FB				call	sub_110			; (8BF4)
020C:74F9  B8 0004				mov	ax,4
020C:74FC  E8 16F5				call	sub_110			; (8BF4)
020C:74FF			loc_1093:
020C:74FF  2E: C7 06 3F84 2810			mov	cs:data_661,2810h	; (020C:3F84=0C4FEh)
020C:7506  2E: C7 06 3F86 2B3F			mov	cs:data_662,2B3Fh	; (020C:3F86=4E3Ch)
020C:750D  B8 3292				mov	ax,3292h
020C:7510  2D 1212				sub	ax,1212h
020C:7513  A3 48A3				mov	word ptr ds:[48A3h],ax	; (0000:48A3=0A220h)
020C:7516  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:751C  74 06				je	loc_1094		; Jump if equal
020C:751E  B8 FFF0				mov	ax,0FFF0h
020C:7521  2D 1212				sub	ax,1212h
020C:7524			loc_1094:
020C:7524  A3 48A3				mov	word ptr ds:[48A3h],ax	; (0000:48A3=0A220h)
020C:7527  C3					retn
				sub_77		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:7528			sub_78		proc	near
020C:7528  2E: C7 06 3F88 213C			mov	cs:data_663,213Ch	; (020C:3F88=5374h)
020C:752F  C3					retn
				sub_78		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:7530			sub_79		proc	near
020C:7530  50					push	ax
020C:7531  53					push	bx
020C:7532  51					push	cx
020C:7533  52					push	dx
020C:7534  56					push	si
020C:7535  57					push	di
020C:7536  55					push	bp
020C:7537  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:753C  1E					push	ds
020C:753D  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:7542  06					push	es
020C:7543  E8 EB86				call	sub_57			; (60CC)
020C:7546  2E: 80 3E 3F70 FF			cmp	cs:data_650,0FFh	; (020C:3F70=74h)
020C:754C  2E: C6 06 3F70 00			mov	cs:data_650,0		; (020C:3F70=74h)
020C:7552  75 03				jnz	loc_1095		; Jump if not zero
020C:7554  E9 0277				jmp	loc_1120		; (77CE)
020C:7557			loc_1095:
020C:7557  B8 213C				mov	ax,213Ch
020C:755A  8E D8				mov	ds,ax
020C:755C  B8 3D00				mov	ax,3D00h
020C:755F  BA 6A20				mov	dx,6A20h
020C:7562  CD 21				int	21h			; DOS Services  ah=function 3Dh
										;  open file, al=mode,name@ds:dx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 249

020C:7564  73 03				jnc	loc_1096		; Jump if carry=0
020C:7566  E9 0265				jmp	loc_1120		; (77CE)
020C:7569			loc_1096:
020C:7569  8B D8				mov	bx,ax
020C:756B  B4 44				mov	ah,44h			; 'D'
020C:756D  B0 07				mov	al,7
020C:756F  B9 0000				mov	cx,0
020C:7572  BA 6A29				mov	dx,6A29h
020C:7575  CD 21				int	21h			; DOS Services  ah=function 44h
										;  IOctl-7 check output status
										;   bx=handle, returns al status
020C:7577  50					push	ax
020C:7578  B4 3E				mov	ah,3Eh
020C:757A  CD 21				int	21h			; DOS Services  ah=function 3Eh
										;  close file, bx=file handle
020C:757C  73 09				jnc	loc_1098		; Jump if carry=0
020C:757E  58					pop	ax
020C:757F			loc_1097:
020C:757F  9A 1491:39F0		;*		call	far ptr sub_194		;*(1491:39F0)
020C:757F  9A					db	9Ah
020C:7580  39F0 1491				dw	39F0h, 1491h
020C:7584  E9 0247				jmp	loc_1120		; (77CE)
020C:7587			loc_1098:
020C:7587  58					pop	ax
020C:7588  0A C0				or	al,al			; Zero ?
020C:758A  74 F3				jz	loc_1097		; Jump if zero
020C:758C  B4 40				mov	ah,40h
020C:758E  CD 67				int	67h			; EMS Memory        ah=func 40h
										;  get manager status in ah
020C:7590  80 FC 00				cmp	ah,0
020C:7593  75 EA				jne	loc_1097		; Jump if not equal
020C:7595  B4 42				mov	ah,42h
020C:7597  CD 67				int	67h			; EMS Memory        ah=func 42h
										;  get pages, bx=unused,dx=total
020C:7599  0A E4				or	ah,ah			; Zero ?
020C:759B  75 E2				jnz	loc_1097		; Jump if not zero
020C:759D  83 FB 24				cmp	bx,24h
020C:75A0  72 DD				jb	loc_1097		; Jump if below
020C:75A2  B4 41				mov	ah,41h
020C:75A4  CD 67				int	67h			; EMS Memory        ah=func 41h
										;  get page frame segment in bx
020C:75A6  0A E4				or	ah,ah			; Zero ?
020C:75A8  75 D5				jnz	loc_1097		; Jump if not zero
020C:75AA  2E: 89 1E 3F72			mov	cs:data_652,bx		; (020C:3F72=0C4FEh)
020C:75AF  C6 06 6A81 01			mov	byte ptr ds:[6A81h],1	; (213C:6A81=0)
020C:75B4  B4 43				mov	ah,43h			; 'C'
020C:75B6  BB 0004				mov	bx,4
020C:75B9  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020C:75BB  0A E4				or	ah,ah			; Zero ?
020C:75BD  75 C0				jnz	loc_1097		; Jump if not zero
020C:75BF  2E: 89 16 3F80			mov	cs:data_659,dx		; (020C:3F80=573Ch)
020C:75C4  89 16 6A82				mov	word ptr ds:[6A82h],dx	; (213C:6A82=0FFFFh)
020C:75C8  B4 43				mov	ah,43h			; 'C'
020C:75CA  BB 0004				mov	bx,4
020C:75CD  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 250

020C:75CF  0A E4				or	ah,ah			; Zero ?
020C:75D1  75 AC				jnz	loc_1097		; Jump if not zero
020C:75D3  2E: 89 16 3F7A			mov	cs:data_656,dx		; (020C:3F7A=533Ch)
020C:75D8  89 16 6A84				mov	word ptr ds:[6A84h],dx	; (213C:6A84=0FFFFh)
020C:75DC  B4 43				mov	ah,43h			; 'C'
020C:75DE  BB 0004				mov	bx,4
020C:75E1  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020C:75E3  0A E4				or	ah,ah			; Zero ?
020C:75E5  75 98				jnz	loc_1097		; Jump if not zero
020C:75E7  2E: 89 16 3F7E			mov	cs:data_658,dx		; (020C:3F7E=0C4FEh)
020C:75EC  89 16 6A86				mov	word ptr ds:[6A86h],dx	; (213C:6A86=0FFFFh)
020C:75F0  B4 43				mov	ah,43h			; 'C'
020C:75F2  BB 0004				mov	bx,4
020C:75F5  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020C:75F7  0A E4				or	ah,ah			; Zero ?
020C:75F9  75 84				jnz	loc_1097		; Jump if not zero
020C:75FB  2E: 89 16 3F76			mov	cs:data_654,dx		; (020C:3F76=6574h)
020C:7600  89 16 6A88				mov	word ptr ds:[6A88h],dx	; (213C:6A88=0FFFFh)
020C:7604  B4 43				mov	ah,43h			; 'C'
020C:7606  BB 0004				mov	bx,4
020C:7609  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020C:760B  0A E4				or	ah,ah			; Zero ?
020C:760D  75 37				jnz	loc_1099		; Jump if not zero
020C:760F  2E: 89 16 3F82			mov	cs:data_660,dx		; (020C:3F82=5974h)
020C:7614  89 16 6A8A				mov	word ptr ds:[6A8Ah],dx	; (213C:6A8A=0FFFFh)
020C:7618  B4 43				mov	ah,43h			; 'C'
020C:761A  BB 0004				mov	bx,4
020C:761D  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020C:761F  0A E4				or	ah,ah			; Zero ?
020C:7621  75 23				jnz	loc_1099		; Jump if not zero
020C:7623  2E: 89 16 3F7C			mov	cs:data_657,dx		; (020C:3F7C=5F74h)
020C:7628  89 16 6A8C				mov	word ptr ds:[6A8Ch],dx	; (213C:6A8C=0FFFFh)
020C:762C  B4 43				mov	ah,43h			; 'C'
020C:762E  BB 0004				mov	bx,4
020C:7631  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020C:7633  0A E4				or	ah,ah			; Zero ?
020C:7635  75 0F				jnz	loc_1099		; Jump if not zero
020C:7637  89 16 6A8E				mov	word ptr ds:[6A8Eh],dx	; (213C:6A8E=0FFFFh)
020C:763B  B4 43				mov	ah,43h			; 'C'
020C:763D  BB 0004				mov	bx,4
020C:7640  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020C:7642  0A E4				or	ah,ah			; Zero ?
020C:7644  74 03				jz	loc_1100		; Jump if zero
020C:7646			loc_1099:
020C:7646  E9 FF36				jmp	loc_1097		; (757F)
020C:7649			loc_1100:
020C:7649  89 16 6A90				mov	word ptr ds:[6A90h],dx	; (213C:6A90=0FFFFh)
020C:764D  B4 43				mov	ah,43h			; 'C'
020C:764F  BB 0004				mov	bx,4
020C:7652  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 251

020C:7654  0A E4				or	ah,ah			; Zero ?
020C:7656  75 11				jnz	loc_1101		; Jump if not zero
020C:7658  89 16 6A92				mov	word ptr ds:[6A92h],dx	; (213C:6A92=0FFFFh)
020C:765C  C6 06 6BB2 03			mov	byte ptr ds:[6BB2h],3	; (213C:6BB2=0)
020C:7661  C6 06 6BB3 01			mov	byte ptr ds:[6BB3h],1	; (213C:6BB3=0)
020C:7666  EB 09				jmp	short loc_1102		; (7671)
020C:7668  90					nop
020C:7669			loc_1101:
020C:7669  9A 1491:39F0		;*		call	far ptr sub_194		;*(1491:39F0)
020C:7669  9A					db	9Ah
020C:766A  39F0 1491				dw	39F0h, 1491h
020C:766E  E9 015D				jmp	loc_1120		; (77CE)
020C:7671			loc_1102:
020C:7671  80 3E 1794 00			cmp	byte ptr ds:[1794h],0	; (213C:1794=0)
020C:7676  75 07				jne	loc_1103		; Jump if not equal
020C:7678  BA 4490				mov	dx,4490h
020C:767B  B4 09				mov	ah,9
020C:767D  CD 21				int	21h			; DOS Services  ah=function 09h
										;  display char string at ds:dx
020C:767F			loc_1103:
020C:767F  B9 0004				mov	cx,4
020C:7682  BD 0000				mov	bp,0
020C:7685  8B 16 6A82				mov	dx,word ptr ds:[6A82h]	; (213C:6A82=0FFFFh)
020C:7689  BE 6A5B				mov	si,6A5Bh
020C:768C  E8 0221				call	sub_80			; (78B0)
020C:768F  72 D8				jc	loc_1101		; Jump if carry Set
020C:7691  BA 2CBF				mov	dx,2CBFh
020C:7694  8E C2				mov	es,dx
020C:7696  8B 16 6A84				mov	dx,word ptr ds:[6A84h]	; (213C:6A84=0FFFFh)
020C:769A  E8 02DF				call	sub_81			; (797C)
020C:769D  72 CA				jc	loc_1101		; Jump if carry Set
020C:769F  BA 421F				mov	dx,421Fh
020C:76A2  8E C2				mov	es,dx
020C:76A4  8B 16 6A86				mov	dx,word ptr ds:[6A86h]	; (213C:6A86=0FFFFh)
020C:76A8  E8 02D1				call	sub_81			; (797C)
020C:76AB  72 BC				jc	loc_1101		; Jump if carry Set
020C:76AD  BA 7C45				mov	dx,7C45h
020C:76B0  8E C2				mov	es,dx
020C:76B2  8B 16 6A88				mov	dx,word ptr ds:[6A88h]	; (213C:6A88=0FFFFh)
020C:76B6  E8 02C3				call	sub_81			; (797C)
020C:76B9  72 AE				jc	loc_1101		; Jump if carry Set
020C:76BB  8B 16 6A8A				mov	dx,word ptr ds:[6A8Ah]	; (213C:6A8A=0FFFFh)
020C:76BF  BE 6A6B				mov	si,6A6Bh
020C:76C2  E8 01EB				call	sub_80			; (78B0)
020C:76C5  72 A2				jc	loc_1101		; Jump if carry Set
020C:76C7  BA 36A9				mov	dx,36A9h
020C:76CA  8E C2				mov	es,dx
020C:76CC  8B 16 6A8C				mov	dx,word ptr ds:[6A8Ch]	; (213C:6A8C=0FFFFh)
020C:76D0  E8 02A9				call	sub_81			; (797C)
020C:76D3  72 94				jc	loc_1101		; Jump if carry Set
020C:76D5  C6 06 44B7 00			mov	byte ptr ds:[44B7h],0	; (213C:44B7=0FFh)
020C:76DA  8B 16 6A8E				mov	dx,word ptr ds:[6A8Eh]	; (213C:6A8E=0FFFFh)
020C:76DE  BE 6A2B				mov	si,6A2Bh
020C:76E1  E8 01CC				call	sub_80			; (78B0)
020C:76E4  72 83				jc	loc_1101		; Jump if carry Set
020C:76E6  8B 16 6A90				mov	dx,word ptr ds:[6A90h]	; (213C:6A90=0FFFFh)
020C:76EA  BE 6A4B				mov	si,6A4Bh
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 252

020C:76ED  E8 01C0				call	sub_80			; (78B0)
020C:76F0  72 0C				jc	loc_1104		; Jump if carry Set
020C:76F2  8B 16 6A92				mov	dx,word ptr ds:[6A92h]	; (213C:6A92=0FFFFh)
020C:76F6  BE 6A3B				mov	si,6A3Bh
020C:76F9  E8 01B4				call	sub_80			; (78B0)
020C:76FC  73 03				jnc	loc_1105		; Jump if carry=0
020C:76FE			loc_1104:
020C:76FE  E9 FF68				jmp	loc_1101		; (7669)
020C:7701			loc_1105:
020C:7701  2E: C6 06 3F70 01			mov	cs:data_650,1		; (020C:3F70=74h)
020C:7707  B8 2CBF				mov	ax,2CBFh
020C:770A  40					inc	ax
020C:770B  2E: A3 3F78				mov	cs:data_655,ax		; (020C:3F78=0C4FEh)
020C:770F  B8 213C				mov	ax,213Ch
020C:7712  8E D8				mov	ds,ax
020C:7714  B4 42				mov	ah,42h
020C:7716  CD 67				int	67h			; EMS Memory        ah=func 42h
										;  get pages, bx=unused,dx=total
020C:7718  0A E4				or	ah,ah			; Zero ?
020C:771A  74 03				jz	loc_1106		; Jump if zero
020C:771C  E9 00E9				jmp	loc_1121		; (7808)
020C:771F			loc_1106:
020C:771F  81 FB 0260				cmp	bx,260h
020C:7723  76 03				jbe	loc_1107		; Jump if below or =
020C:7725  BB 0260				mov	bx,260h
020C:7728			loc_1107:
020C:7728  F6 06 163E 01			test	byte ptr ds:[163Eh],1	; (213C:163E=0)
020C:772D  75 4E				jnz	loc_1113		; Jump if not zero
020C:772F  8B C3				mov	ax,bx
020C:7731  B1 04				mov	cl,4
020C:7733  D3 E8				shr	ax,cl			; Shift w/zeros fill
020C:7735  74 11				jz	loc_1109		; Jump if zero
020C:7737  3D 0004				cmp	ax,4
020C:773A  76 03				jbe	loc_1108		; Jump if below or =
020C:773C  B8 0004				mov	ax,4
020C:773F			loc_1108:
020C:773F  B1 02				mov	cl,2
020C:7741  D3 E0				shl	ax,cl			; Shift w/zeros fill
020C:7743  2B D8				sub	bx,ax
020C:7745  EB 05				jmp	short loc_1110		; (774C)
020C:7747  90					nop
020C:7748			loc_1109:
020C:7748  8B C3				mov	ax,bx
020C:774A  33 DB				xor	bx,bx			; Zero register
020C:774C			loc_1110:
020C:774C  8B EB				mov	bp,bx
020C:774E  B1 02				mov	cl,2
020C:7750  D3 E8				shr	ax,cl			; Shift w/zeros fill
020C:7752  8B C8				mov	cx,ax
020C:7754  E3 25				jcxz	loc_1112		; Jump if cx=0
020C:7756  BF 0128				mov	di,128h
020C:7759  89 3E 6BB5				mov	word ptr ds:[6BB5h],di	; (213C:6BB5=0)

020C:775D			locloop_1111:
020C:775D  B4 43				mov	ah,43h			; 'C'
020C:775F  BB 0004				mov	bx,4
020C:7762  CD 67				int	67h			; EMS Memory        ah=func 43h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 253

										;  get handle dx,allocate pgs bx
020C:7764  0A E4				or	ah,ah			; Zero ?
020C:7766  75 24				jnz	loc_1114		; Jump if not zero
020C:7768  89 95 6A82				mov	word ptr ds:[6A82h][di],dx	; (213C:6A82=0FFFFh)
020C:776C  33 F6				xor	si,si			; Zero register
020C:776E  E8 013F				call	sub_80			; (78B0)
020C:7771  72 19				jc	loc_1114		; Jump if carry Set
020C:7773  FE 06 6BB4				inc	byte ptr ds:[6BB4h]	; (213C:6BB4=0)
020C:7777  47					inc	di
020C:7778  47					inc	di
020C:7779  E2 E2				loop	locloop_1111		; Loop if cx > 0

020C:777B			loc_1112:
020C:777B  8B DD				mov	bx,bp
020C:777D			loc_1113:
020C:777D  83 FB 0C				cmp	bx,0Ch
020C:7780  72 0A				jb	loc_1114		; Jump if below
020C:7782  8B C3				mov	ax,bx
020C:7784  B3 0C				mov	bl,0Ch
020C:7786  F6 F3				div	bl			; al, ah rem = ax/reg
020C:7788  3C 00				cmp	al,0
020C:778A  75 03				jne	loc_1115		; Jump if not equal
020C:778C			loc_1114:
020C:778C  EB 7A				jmp	short loc_1121		; (7808)
020C:778E  90					nop
020C:778F			loc_1115:
020C:778F  32 E4				xor	ah,ah			; Zero register
020C:7791  3D 002E				cmp	ax,2Eh
020C:7794  72 03				jb	loc_1116		; Jump if below
020C:7796  B8 002E				mov	ax,2Eh
020C:7799			loc_1116:
020C:7799  8B C8				mov	cx,ax
020C:779B  BF 0012				mov	di,12h

020C:779E			locloop_1117:
020C:779E  51					push	cx
020C:779F  B9 0003				mov	cx,3

020C:77A2			locloop_1118:
020C:77A2  B4 43				mov	ah,43h			; 'C'
020C:77A4  BB 0004				mov	bx,4
020C:77A7  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020C:77A9  0A E4				or	ah,ah			; Zero ?
020C:77AB  75 1D				jnz	loc_1119		; Jump if not zero
020C:77AD  89 95 6A82				mov	word ptr ds:[6A82h][di],dx	; (213C:6A82=0FFFFh)
020C:77B1  FE 06 6BB2				inc	byte ptr ds:[6BB2h]	; (213C:6BB2=0)
020C:77B5  33 F6				xor	si,si			; Zero register
020C:77B7  E8 00F6				call	sub_80			; (78B0)
020C:77BA  72 0E				jc	loc_1119		; Jump if carry Set
020C:77BC  47					inc	di
020C:77BD  47					inc	di
020C:77BE  E2 E2				loop	locloop_1118		; Loop if cx > 0

020C:77C0  59					pop	cx
020C:77C1  FE 06 6BB3				inc	byte ptr ds:[6BB3h]	; (213C:6BB3=0)
020C:77C5  E2 D7				loop	locloop_1117		; Loop if cx > 0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 254


020C:77C7  EB 3F				jmp	short loc_1121		; (7808)
020C:77C9  90					nop
020C:77CA			loc_1119:
020C:77CA  59					pop	cx
020C:77CB  EB 3B				jmp	short loc_1121		; (7808)
020C:77CD  90					nop
020C:77CE			loc_1120:
020C:77CE  2E: C7 06 3F76 7C45			mov	cs:data_654,7C45h	; (020C:3F76=6574h)
020C:77D5  B8 7C45				mov	ax,7C45h
020C:77D8  BB 3292				mov	bx,3292h
020C:77DB  D1 EB				shr	bx,1			; Shift w/zeros fill
020C:77DD  D1 EB				shr	bx,1			; Shift w/zeros fill
020C:77DF  D1 EB				shr	bx,1			; Shift w/zeros fill
020C:77E1  D1 EB				shr	bx,1			; Shift w/zeros fill
020C:77E3  03 C3				add	ax,bx
020C:77E5  40					inc	ax
020C:77E6  2E: A3 3F78				mov	cs:data_655,ax		; (020C:3F78=0C4FEh)
020C:77EA  2E: C7 06 3F7A 2CBF			mov	cs:data_656,2CBFh	; (020C:3F7A=533Ch)
020C:77F1  2E: C7 06 3F7C 36A9			mov	cs:data_657,36A9h	; (020C:3F7C=5F74h)
020C:77F8  2E: C7 06 3F7E 421F			mov	cs:data_658,421Fh	; (020C:3F7E=0C4FEh)
020C:77FF  2E: C6 06 3F70 00			mov	cs:data_650,0		; (020C:3F70=74h)
020C:7805  EB 3A				jmp	short loc_1122		; (7841)
020C:7807  90					nop
020C:7808			loc_1121:
020C:7808  A0 6BB2				mov	al,byte ptr ds:[6BB2h]	; (213C:6BB2=0)
020C:780B  02 06 6BB4				add	al,byte ptr ds:[6BB4h]	; (213C:6BB4=0)
020C:780F  32 E4				xor	ah,ah			; Zero register
020C:7811  04 06				add	al,6
020C:7813  B1 06				mov	cl,6
020C:7815  D3 E0				shl	ax,cl			; Shift w/zeros fill
020C:7817  B3 62				mov	bl,62h			; 'b'
020C:7819  F6 F3				div	bl			; al, ah rem = ax/reg
020C:781B  32 E4				xor	ah,ah			; Zero register
020C:781D  B3 01				mov	bl,1
020C:781F  C6 06 0720 20			mov	byte ptr ds:[720h],20h	; (213C:0720=66h) ' '
020C:7824  BD 071D				mov	bp,71Dh
020C:7827  9A 1491:0300		;*		call	far ptr sub_159		;*(1491:0300)
020C:7827  9A					db	9Ah
020C:7828  0300 1491				dw	300h, 1491h
020C:782C  A1 0720				mov	ax,word ptr ds:[720h]	; (213C:0720=2066h)
020C:782F  A2 071D				mov	byte ptr ds:[71Dh],al	; (213C:071D=20h)
020C:7832  C6 06 071E 2E			mov	byte ptr ds:[71Eh],2Eh	; (213C:071E=6Fh) '.'
020C:7837  88 26 071F				mov	byte ptr ds:[71Fh],ah	; (213C:071F=66h)
020C:783B  C7 06 0720 424D			mov	word ptr ds:[720h],424Dh	; (213C:0720=2066h)
020C:7841			loc_1122:
020C:7841  B8 213C				mov	ax,213Ch
020C:7844  8E D8				mov	ds,ax
020C:7846  2E: A0 3F70				mov	al,cs:data_650		; (020C:3F70=74h)
020C:784A  A2 44B6				mov	byte ptr ds:[44B6h],al	; (213C:44B6=0)
020C:784D  E8 E888				call	sub_58			; (60D8)
020C:7850  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:7855  9C					pushf				; Push flags
020C:7856  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:785B  5A					pop	dx
020C:785C  8E C2				mov	es,dx
020C:785E  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 255

020C:7863  5A					pop	dx
020C:7864  75 0A				jnz	loc_1123		; Jump if not zero
020C:7866  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:786B  74 03				je	loc_1123		; Jump if equal
020C:786D  E8 0640				call	sub_97			; (7EB0)
020C:7870			loc_1123:
020C:7870  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:7875  9D					popf				; Pop flags
020C:7876  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:787B  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:7880  9C					pushf				; Push flags
020C:7881  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:7886  5A					pop	dx
020C:7887  8E DA				mov	ds,dx
020C:7889  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:788E  5A					pop	dx
020C:788F  75 0A				jnz	loc_1124		; Jump if not zero
020C:7891  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:7896  74 03				je	loc_1124		; Jump if equal
020C:7898  E8 0615				call	sub_97			; (7EB0)
020C:789B			loc_1124:
020C:789B  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:78A0  9D					popf				; Pop flags
020C:78A1  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:78A6  5D					pop	bp
020C:78A7  5F					pop	di
020C:78A8  5E					pop	si
020C:78A9  5A					pop	dx
020C:78AA  59					pop	cx
020C:78AB  5B					pop	bx
020C:78AC  58					pop	ax
020C:78AD  C3					retn
				sub_79		endp

020C:78AE  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:78B0			sub_80		proc	near
020C:78B0  50					push	ax
020C:78B1  53					push	bx
020C:78B2  51					push	cx
020C:78B3  55					push	bp
020C:78B4  33 ED				xor	bp,bp			; Zero register
020C:78B6  80 3E 1794 00			cmp	byte ptr ds:[1794h],0	; (213C:1794=0)
020C:78BB  75 3E				jne	loc_1128		; Jump if not equal
020C:78BD  52					push	dx
020C:78BE  2E: 8A 36 3F71			mov	dh,cs:data_651		; (020C:3F71=6Bh)
020C:78C3  FE C6				inc	dh
020C:78C5  80 3E 1329 01			cmp	byte ptr ds:[1329h],1	; (213C:1329=0)
020C:78CA  74 1E				je	loc_1126		; Jump if equal
020C:78CC  F6 C6 01				test	dh,1
020C:78CF  74 0E				jz	loc_1125		; Jump if zero
020C:78D1  B4 09				mov	ah,9
020C:78D3  B0 DD				mov	al,0DDh
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 256

020C:78D5  BB 0002				mov	bx,2
020C:78D8  B9 0001				mov	cx,1
020C:78DB  CD 10				int	10h			; Video display   ah=functn 09h
										;  set char al & attrib bl @curs
										;   cx=# of chars to replicate
020C:78DD  EB 16				jmp	short loc_1127		; (78F5)
020C:78DF			loc_1125:
020C:78DF  B4 0E				mov	ah,0Eh
020C:78E1  B0 DB				mov	al,0DBh
020C:78E3  BB 0002				mov	bx,2
020C:78E6  CD 10				int	10h			; Video display   ah=functn 0Eh
										;  write char al, teletype mode
020C:78E8  EB 0B				jmp	short loc_1127		; (78F5)
020C:78EA			loc_1126:
020C:78EA  F6 C6 01				test	dh,1
020C:78ED  75 06				jnz	loc_1127		; Jump if not zero
020C:78EF  B2 3E				mov	dl,3Eh			; '>'
020C:78F1  B4 02				mov	ah,2
020C:78F3  CD 21				int	21h			; DOS Services  ah=function 02h
										;  display char dl
020C:78F5			loc_1127:
020C:78F5  2E: 88 36 3F71			mov	cs:data_651,dh		; (020C:3F71=6Bh)
020C:78FA  5A					pop	dx
020C:78FB			loc_1128:
020C:78FB  B9 0004				mov	cx,4

020C:78FE			locloop_1129:
020C:78FE  B4 44				mov	ah,44h			; 'D'
020C:7900  8B DD				mov	bx,bp
020C:7902  8A C3				mov	al,bl
020C:7904  CD 67				int	67h			; EMS Memory        ah=func 44h
										;  map memory, dx=handle
020C:7906  0A E4				or	ah,ah			; Zero ?
020C:7908  75 6A				jnz	loc_1134		; Jump if not zero
020C:790A  45					inc	bp
020C:790B  E2 F1				loop	locloop_1129		; Loop if cx > 0

020C:790D  06					push	es
020C:790E  57					push	di
020C:790F  2E: 8E 06 3F72			mov	es,cs:data_652		; (020C:3F72=0C4FEh)
020C:7914  FC					cld				; Clear direction
020C:7915  B8 FFFF				mov	ax,0FFFFh
020C:7918  80 3E 44B7 00			cmp	byte ptr ds:[44B7h],0	; (213C:44B7=0FFh)
020C:791D  74 24				je	loc_1131		; Jump if equal
020C:791F  F7 06 1D4A 01E0			test	word ptr ds:[1D4Ah],1E0h	; (213C:1D4A=100h)
020C:7925  74 15				jz	loc_1130		; Jump if zero
020C:7927  66					db	66h
020C:7928  33 FF				xor	di,di			; Zero register
020C:792A  66					db	66h
020C:792B  B8 FFFF				mov	ax,0FFFFh
020C:792E  FF					db	0FFh
020C:792F  FF 66 B9				jmp	word ptr [bp-47h]	;*
020C:7932  00 40 00		;*		add	[bx+si+0],al
020C:7932  00 40 00				db	 00h, 40h, 00h
020C:7935  00 F3				add	bl,dh
020C:7937  66					db	66h
020C:7938  AB					stosw				; Store ax to es:[di]
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 257

020C:7939  EB 08				jmp	short loc_1131		; (7943)
020C:793B  90					nop
020C:793C			loc_1130:
020C:793C  33 FF				xor	di,di			; Zero register
020C:793E  B9 8000				mov	cx,8000h
020C:7941  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020C:7943			loc_1131:
020C:7943  B9 0010				mov	cx,10h
020C:7946  83 FE 00				cmp	si,0
020C:7949  74 08				je	loc_1132		; Jump if equal
020C:794B  BF FFF0				mov	di,0FFF0h
020C:794E  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:7950  EB 03				jmp	short loc_1133		; (7955)
020C:7952  90					nop
020C:7953			loc_1132:
020C:7953  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:7955			loc_1133:
020C:7955  1E					push	ds
020C:7956  2E: 8E 1E 3F72			mov	ds,cs:data_652		; (020C:3F72=0C4FEh)
020C:795B  BD FFFC				mov	bp,0FFFCh
020C:795E  8B C2				mov	ax,dx
020C:7960  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:7960  9A					db	9Ah
020C:7961  0294 1491				dw	294h, 1491h
020C:7965  1F					pop	ds
020C:7966  5F					pop	di
020C:7967  07					pop	es
020C:7968  B4 47				mov	ah,47h
020C:796A  CD 67				int	67h			; EMS Memory        ah=func 47h
										;  save map context, dx=handle
020C:796C  0A E4				or	ah,ah			; Zero ?
020C:796E  75 04				jnz	loc_1134		; Jump if not zero
020C:7970  F8					clc				; Clear carry flag
020C:7971  EB 02				jmp	short loc_1135		; (7975)
020C:7973  90					nop
020C:7974			loc_1134:
020C:7974  F9					stc				; Set carry flag
020C:7975			loc_1135:
020C:7975  5D					pop	bp
020C:7976  59					pop	cx
020C:7977  5B					pop	bx
020C:7978  58					pop	ax
020C:7979  C3					retn
				sub_80		endp

020C:797A  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:797C			sub_81		proc	near
020C:797C  50					push	ax
020C:797D  53					push	bx
020C:797E  51					push	cx
020C:797F  55					push	bp
020C:7980  33 ED				xor	bp,bp			; Zero register
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 258

020C:7982  B9 0004				mov	cx,4

020C:7985			locloop_1136:
020C:7985  B4 44				mov	ah,44h			; 'D'
020C:7987  8B DD				mov	bx,bp
020C:7989  8A C3				mov	al,bl
020C:798B  CD 67				int	67h			; EMS Memory        ah=func 44h
										;  map memory, dx=handle
020C:798D  0A E4				or	ah,ah			; Zero ?
020C:798F  75 28				jnz	loc_1137		; Jump if not zero
020C:7991  45					inc	bp
020C:7992  E2 F1				loop	locloop_1136		; Loop if cx > 0

020C:7994  06					push	es
020C:7995  1E					push	ds
020C:7996  57					push	di
020C:7997  56					push	si
020C:7998  06					push	es
020C:7999  1F					pop	ds
020C:799A  2E: 8E 06 3F72			mov	es,cs:data_652		; (020C:3F72=0C4FEh)
020C:799F  33 FF				xor	di,di			; Zero register
020C:79A1  8B F7				mov	si,di
020C:79A3  B9 8000				mov	cx,8000h
020C:79A6  FC					cld				; Clear direction
020C:79A7  F3/ A5				rep	movsw			; Rep when cx >0 Mov [si] to es:[di]
020C:79A9  5E					pop	si
020C:79AA  5F					pop	di
020C:79AB  1F					pop	ds
020C:79AC  07					pop	es
020C:79AD  B4 47				mov	ah,47h
020C:79AF  CD 67				int	67h			; EMS Memory        ah=func 47h
										;  save map context, dx=handle
020C:79B1  0A E4				or	ah,ah			; Zero ?
020C:79B3  75 04				jnz	loc_1137		; Jump if not zero
020C:79B5  F8					clc				; Clear carry flag
020C:79B6  EB 05				jmp	short loc_1138		; (79BD)
020C:79B8  90					nop
020C:79B9			loc_1137:
020C:79B9  F9					stc				; Set carry flag
020C:79BA  EB 01				jmp	short loc_1138		; (79BD)
020C:79BC  90					nop
020C:79BD			loc_1138:
020C:79BD  5D					pop	bp
020C:79BE  59					pop	cx
020C:79BF  5B					pop	bx
020C:79C0  58					pop	ax
020C:79C1  C3					retn
				sub_81		endp

020C:79C2  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:79C4			sub_82		proc	near
020C:79C4  EB 58				jmp	short loc_1139		; (7A1E)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 259

020C:79C6  90					nop
020C:79C7  EB 5B				jmp	short loc_1140		; (7A24)
020C:79C9  90					nop

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

020C:79CA			sub_83:
020C:79CA  EB 5E				jmp	short loc_1141		; (7A2A)
020C:79CC  90					nop
020C:79CD  EB 79				jmp	short loc_1143		; (7A48)
020C:79CF  90					nop

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

020C:79D0			sub_84:
020C:79D0  E9 0093				jmp	loc_1145		; (7A66)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

020C:79D3			sub_85:
020C:79D3  E9 0096				jmp	loc_1146		; (7A6C)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

020C:79D6			sub_86:
020C:79D6  E9 00B1				jmp	loc_1148		; (7A8A)
020C:79D9  E9 00CC				jmp	loc_1150		; (7AA8)
020C:79DC  E9 00CF				jmp	loc_1151		; (7AAE)
020C:79DF  E9 00EC				jmp	loc_1153		; (7ACE)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

020C:79E2			sub_87:
020C:79E2  E9 0107				jmp	loc_1155		; (7AEC)
020C:79E5  E9 010A				jmp	loc_1156		; (7AF2)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

020C:79E8			sub_88:
020C:79E8  E9 010D				jmp	loc_1157		; (7AF8)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

020C:79EB			sub_89:
020C:79EB  E9 0128				jmp	loc_1159		; (7B16)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

020C:79EE			sub_90:
020C:79EE  E9 0143				jmp	loc_1161		; (7B34)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

020C:79F1			sub_91:
020C:79F1  E9 0146				jmp	loc_1162		; (7B3A)
020C:79F4  E9 0161				jmp	loc_1164		; (7B58)
020C:79F7  E9 017C				jmp	loc_1166		; (7B76)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 260


				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

020C:79FA			sub_92:
020C:79FA  E9 017F				jmp	loc_1167		; (7B7C)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

020C:79FD			sub_93:
020C:79FD  E9 019C				jmp	loc_1169		; (7B9C)
020C:7A00  E9 01B7				jmp	loc_1171		; (7BBA)
020C:7A03  E9 01B9				jmp	loc_1172		; (7BBF)
020C:7A06  E9 01BB				jmp	loc_1173		; (7BC4)
020C:7A09  E9 01D4				jmp	loc_1175		; (7BE0)
020C:7A0C  E9 01ED				jmp	loc_1177		; (7BFC)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

020C:7A0F			sub_94:
020C:7A0F  E9 01EF				jmp	loc_1178		; (7C01)
020C:7A12  E9 0208				jmp	loc_1180		; (7C1D)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

020C:7A15			sub_95:
020C:7A15  E9 0221				jmp	loc_1182		; (7C39)
020C:7A18  E9 0223				jmp	loc_1183		; (7C3E)
020C:7A1B  E9 023B				jmp	loc_1185		; (7C59)
020C:7A1E			loc_1139:
020C:7A1E  2E: 8E 1E 3F84			mov	ds,cs:data_661		; (020C:3F84=0C4FEh)
020C:7A23  C3					retn
020C:7A24			loc_1140:
020C:7A24  2E: 8E 1E 3F86			mov	ds,cs:data_662		; (020C:3F86=4E3Ch)
020C:7A29  C3					retn
020C:7A2A			loc_1141:
020C:7A2A  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:7A30  75 06				jne	loc_1142		; Jump if not equal
020C:7A32  2E: 8E 1E 3F7A			mov	ds,cs:data_656		; (020C:3F7A=533Ch)
020C:7A37  C3					retn
020C:7A38			loc_1142:
020C:7A38  52					push	dx
020C:7A39  2E: 8B 16 3F7A			mov	dx,cs:data_656		; (020C:3F7A=533Ch)
020C:7A3E  E8 046F				call	sub_97			; (7EB0)
020C:7A41  2E: 8E 1E 3F72			mov	ds,cs:data_652		; (020C:3F72=0C4FEh)
020C:7A46  5A					pop	dx
020C:7A47  C3					retn
020C:7A48			loc_1143:
020C:7A48  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:7A4E  75 06				jne	loc_1144		; Jump if not equal
020C:7A50  2E: 8E 1E 3F7C			mov	ds,cs:data_657		; (020C:3F7C=5F74h)
020C:7A55  C3					retn
020C:7A56			loc_1144:
020C:7A56  52					push	dx
020C:7A57  2E: 8B 16 3F7C			mov	dx,cs:data_657		; (020C:3F7C=5F74h)
020C:7A5C  E8 0451				call	sub_97			; (7EB0)
020C:7A5F  2E: 8E 1E 3F72			mov	ds,cs:data_652		; (020C:3F72=0C4FEh)
020C:7A64  5A					pop	dx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 261

020C:7A65  C3					retn
020C:7A66			loc_1145:
020C:7A66  2E: 8E 1E 3F88			mov	ds,cs:data_663		; (020C:3F88=5374h)
020C:7A6B  C3					retn
020C:7A6C			loc_1146:
020C:7A6C  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:7A72  75 06				jne	loc_1147		; Jump if not equal
020C:7A74  2E: 8E 1E 3F76			mov	ds,cs:data_654		; (020C:3F76=6574h)
020C:7A79  C3					retn
020C:7A7A			loc_1147:
020C:7A7A  52					push	dx
020C:7A7B  2E: 8B 16 3F76			mov	dx,cs:data_654		; (020C:3F76=6574h)
020C:7A80  E8 042D				call	sub_97			; (7EB0)
020C:7A83  2E: 8E 1E 3F72			mov	ds,cs:data_652		; (020C:3F72=0C4FEh)
020C:7A88  5A					pop	dx
020C:7A89  C3					retn
020C:7A8A			loc_1148:
020C:7A8A  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:7A90  75 06				jne	loc_1149		; Jump if not equal
020C:7A92  2E: 8E 1E 3F76			mov	ds,cs:data_654		; (020C:3F76=6574h)
020C:7A97  C3					retn
020C:7A98			loc_1149:
020C:7A98  52					push	dx
020C:7A99  2E: 8B 16 3F82			mov	dx,cs:data_660		; (020C:3F82=5974h)
020C:7A9E  E8 040F				call	sub_97			; (7EB0)
020C:7AA1  2E: 8E 1E 3F72			mov	ds,cs:data_652		; (020C:3F72=0C4FEh)
020C:7AA6  5A					pop	dx
020C:7AA7  C3					retn
020C:7AA8			loc_1150:
020C:7AA8  2E: 8E 1E 3F78			mov	ds,cs:data_655		; (020C:3F78=0C4FEh)
020C:7AAD  C3					retn
020C:7AAE			loc_1151:
020C:7AAE  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:7AB4  75 08				jne	loc_1152		; Jump if not equal
020C:7AB6  50					push	ax
020C:7AB7  B8 6C45				mov	ax,6C45h
020C:7ABA  8E D8				mov	ds,ax
020C:7ABC  58					pop	ax
020C:7ABD  C3					retn
020C:7ABE			loc_1152:
020C:7ABE  52					push	dx
020C:7ABF  2E: 8B 16 3F80			mov	dx,cs:data_659		; (020C:3F80=573Ch)
020C:7AC4  E8 03E9				call	sub_97			; (7EB0)
020C:7AC7  2E: 8E 1E 3F72			mov	ds,cs:data_652		; (020C:3F72=0C4FEh)
020C:7ACC  5A					pop	dx
020C:7ACD  C3					retn
020C:7ACE			loc_1153:
020C:7ACE  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:7AD4  75 06				jne	loc_1154		; Jump if not equal
020C:7AD6  2E: 8E 1E 3F7E			mov	ds,cs:data_658		; (020C:3F7E=0C4FEh)
020C:7ADB  C3					retn
020C:7ADC			loc_1154:
020C:7ADC  52					push	dx
020C:7ADD  2E: 8B 16 3F7E			mov	dx,cs:data_658		; (020C:3F7E=0C4FEh)
020C:7AE2  E8 03CB				call	sub_97			; (7EB0)
020C:7AE5  2E: 8E 1E 3F72			mov	ds,cs:data_652		; (020C:3F72=0C4FEh)
020C:7AEA  5A					pop	dx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 262

020C:7AEB  C3					retn
020C:7AEC			loc_1155:
020C:7AEC  2E: 8E 06 3F84			mov	es,cs:data_661		; (020C:3F84=0C4FEh)
020C:7AF1  C3					retn
020C:7AF2			loc_1156:
020C:7AF2  2E: 8E 06 3F86			mov	es,cs:data_662		; (020C:3F86=4E3Ch)
020C:7AF7  C3					retn
020C:7AF8			loc_1157:
020C:7AF8  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:7AFE  75 06				jne	loc_1158		; Jump if not equal
020C:7B00  2E: 8E 06 3F7A			mov	es,cs:data_656		; (020C:3F7A=533Ch)
020C:7B05  C3					retn
020C:7B06			loc_1158:
020C:7B06  52					push	dx
020C:7B07  2E: 8B 16 3F7A			mov	dx,cs:data_656		; (020C:3F7A=533Ch)
020C:7B0C  E8 03A1				call	sub_97			; (7EB0)
020C:7B0F  2E: 8E 06 3F72			mov	es,cs:data_652		; (020C:3F72=0C4FEh)
020C:7B14  5A					pop	dx
020C:7B15  C3					retn
020C:7B16			loc_1159:
020C:7B16  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:7B1C  75 06				jne	loc_1160		; Jump if not equal
020C:7B1E  2E: 8E 06 3F7C			mov	es,cs:data_657		; (020C:3F7C=5F74h)
020C:7B23  C3					retn
020C:7B24			loc_1160:
020C:7B24  52					push	dx
020C:7B25  2E: 8B 16 3F7C			mov	dx,cs:data_657		; (020C:3F7C=5F74h)
020C:7B2A  E8 0383				call	sub_97			; (7EB0)
020C:7B2D  2E: 8E 06 3F72			mov	es,cs:data_652		; (020C:3F72=0C4FEh)
020C:7B32  5A					pop	dx
020C:7B33  C3					retn
020C:7B34			loc_1161:
020C:7B34  2E: 8E 06 3F88			mov	es,cs:data_663		; (020C:3F88=5374h)
020C:7B39  C3					retn
020C:7B3A			loc_1162:
020C:7B3A  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:7B40  75 06				jne	loc_1163		; Jump if not equal
020C:7B42  2E: 8E 06 3F76			mov	es,cs:data_654		; (020C:3F76=6574h)
020C:7B47  C3					retn
020C:7B48			loc_1163:
020C:7B48  52					push	dx
020C:7B49  2E: 8B 16 3F76			mov	dx,cs:data_654		; (020C:3F76=6574h)
020C:7B4E  E8 035F				call	sub_97			; (7EB0)
020C:7B51  2E: 8E 06 3F72			mov	es,cs:data_652		; (020C:3F72=0C4FEh)
020C:7B56  5A					pop	dx
020C:7B57  C3					retn
020C:7B58			loc_1164:
020C:7B58  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:7B5E  75 06				jne	loc_1165		; Jump if not equal
020C:7B60  2E: 8E 06 3F76			mov	es,cs:data_654		; (020C:3F76=6574h)
020C:7B65  C3					retn
020C:7B66			loc_1165:
020C:7B66  52					push	dx
020C:7B67  2E: 8B 16 3F82			mov	dx,cs:data_660		; (020C:3F82=5974h)
020C:7B6C  E8 0341				call	sub_97			; (7EB0)
020C:7B6F  2E: 8E 06 3F72			mov	es,cs:data_652		; (020C:3F72=0C4FEh)
020C:7B74  5A					pop	dx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 263

020C:7B75  C3					retn
020C:7B76			loc_1166:
020C:7B76  2E: 8E 06 3F78			mov	es,cs:data_655		; (020C:3F78=0C4FEh)
020C:7B7B  C3					retn
020C:7B7C			loc_1167:
020C:7B7C  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:7B82  75 08				jne	loc_1168		; Jump if not equal
020C:7B84  50					push	ax
020C:7B85  B8 6C45				mov	ax,6C45h
020C:7B88  8E C0				mov	es,ax
020C:7B8A  58					pop	ax
020C:7B8B  C3					retn
020C:7B8C			loc_1168:
020C:7B8C  52					push	dx
020C:7B8D  2E: 8B 16 3F80			mov	dx,cs:data_659		; (020C:3F80=573Ch)
020C:7B92  E8 031B				call	sub_97			; (7EB0)
020C:7B95  2E: 8E 06 3F72			mov	es,cs:data_652		; (020C:3F72=0C4FEh)
020C:7B9A  5A					pop	dx
020C:7B9B  C3					retn
020C:7B9C			loc_1169:
020C:7B9C  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:7BA2  75 06				jne	loc_1170		; Jump if not equal
020C:7BA4  2E: 8E 06 3F7E			mov	es,cs:data_658		; (020C:3F7E=0C4FEh)
020C:7BA9  C3					retn
020C:7BAA			loc_1170:
020C:7BAA  52					push	dx
020C:7BAB  2E: 8B 16 3F7E			mov	dx,cs:data_658		; (020C:3F7E=0C4FEh)
020C:7BB0  E8 02FD				call	sub_97			; (7EB0)
020C:7BB3  2E: 8E 06 3F72			mov	es,cs:data_652		; (020C:3F72=0C4FEh)
020C:7BB8  5A					pop	dx
020C:7BB9  C3					retn
020C:7BBA			loc_1171:
020C:7BBA  2E: A1 3F84				mov	ax,cs:data_661		; (020C:3F84=0C4FEh)
020C:7BBE  C3					retn
020C:7BBF			loc_1172:
020C:7BBF  2E: A1 3F86				mov	ax,cs:data_662		; (020C:3F86=4E3Ch)
020C:7BC3  C3					retn
020C:7BC4			loc_1173:
020C:7BC4  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:7BCA  75 05				jne	loc_1174		; Jump if not equal
020C:7BCC  2E: A1 3F7A				mov	ax,cs:data_656		; (020C:3F7A=533Ch)
020C:7BD0  C3					retn
020C:7BD1			loc_1174:
020C:7BD1  52					push	dx
020C:7BD2  2E: 8B 16 3F7A			mov	dx,cs:data_656		; (020C:3F7A=533Ch)
020C:7BD7  E8 02D6				call	sub_97			; (7EB0)
020C:7BDA  2E: A1 3F72				mov	ax,cs:data_652		; (020C:3F72=0C4FEh)
020C:7BDE  5A					pop	dx
020C:7BDF  C3					retn
020C:7BE0			loc_1175:
020C:7BE0  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:7BE6  75 05				jne	loc_1176		; Jump if not equal
020C:7BE8  2E: A1 3F7C				mov	ax,cs:data_657		; (020C:3F7C=5F74h)
020C:7BEC  C3					retn
020C:7BED			loc_1176:
020C:7BED  52					push	dx
020C:7BEE  2E: 8B 16 3F7C			mov	dx,cs:data_657		; (020C:3F7C=5F74h)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 264

020C:7BF3  E8 02BA				call	sub_97			; (7EB0)
020C:7BF6  2E: A1 3F72				mov	ax,cs:data_652		; (020C:3F72=0C4FEh)
020C:7BFA  5A					pop	dx
020C:7BFB  C3					retn
020C:7BFC			loc_1177:
020C:7BFC  2E: A1 3F88				mov	ax,cs:data_663		; (020C:3F88=5374h)
020C:7C00  C3					retn
020C:7C01			loc_1178:
020C:7C01  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:7C07  75 05				jne	loc_1179		; Jump if not equal
020C:7C09  2E: A1 3F76				mov	ax,cs:data_654		; (020C:3F76=6574h)
020C:7C0D  C3					retn
020C:7C0E			loc_1179:
020C:7C0E  52					push	dx
020C:7C0F  2E: 8B 16 3F76			mov	dx,cs:data_654		; (020C:3F76=6574h)
020C:7C14  E8 0299				call	sub_97			; (7EB0)
020C:7C17  2E: A1 3F72				mov	ax,cs:data_652		; (020C:3F72=0C4FEh)
020C:7C1B  5A					pop	dx
020C:7C1C  C3					retn
020C:7C1D			loc_1180:
020C:7C1D  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:7C23  75 05				jne	loc_1181		; Jump if not equal
020C:7C25  2E: A1 3F76				mov	ax,cs:data_654		; (020C:3F76=6574h)
020C:7C29  C3					retn
020C:7C2A			loc_1181:
020C:7C2A  52					push	dx
020C:7C2B  2E: 8B 16 3F82			mov	dx,cs:data_660		; (020C:3F82=5974h)
020C:7C30  E8 027D				call	sub_97			; (7EB0)
020C:7C33  2E: A1 3F72				mov	ax,cs:data_652		; (020C:3F72=0C4FEh)
020C:7C37  5A					pop	dx
020C:7C38  C3					retn
020C:7C39			loc_1182:
020C:7C39  2E: A1 3F78				mov	ax,cs:data_655		; (020C:3F78=0C4FEh)
020C:7C3D  C3					retn
020C:7C3E			loc_1183:
020C:7C3E  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:7C44  75 04				jne	loc_1184		; Jump if not equal
020C:7C46  B8 6C45				mov	ax,6C45h
020C:7C49  C3					retn
020C:7C4A			loc_1184:
020C:7C4A  52					push	dx
020C:7C4B  2E: 8B 16 3F80			mov	dx,cs:data_659		; (020C:3F80=573Ch)
020C:7C50  E8 025D				call	sub_97			; (7EB0)
020C:7C53  2E: A1 3F72				mov	ax,cs:data_652		; (020C:3F72=0C4FEh)
020C:7C57  5A					pop	dx
020C:7C58  C3					retn
020C:7C59			loc_1185:
020C:7C59  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:7C5F  75 05				jne	loc_1186		; Jump if not equal
020C:7C61  2E: A1 3F7E				mov	ax,cs:data_658		; (020C:3F7E=0C4FEh)
020C:7C65  C3					retn
020C:7C66			loc_1186:
020C:7C66  52					push	dx
020C:7C67  2E: 8B 16 3F7E			mov	dx,cs:data_658		; (020C:3F7E=0C4FEh)
020C:7C6C  E8 0241				call	sub_97			; (7EB0)
020C:7C6F  2E: A1 3F72				mov	ax,cs:data_652		; (020C:3F72=0C4FEh)
020C:7C73  5A					pop	dx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 265

020C:7C74  C3					retn
				sub_82		endp

020C:7C75  01 87 2EDB				add	data_512[bx],ax		; (020C:2EDB=5453h)
020C:7C79  80 3E 4735 00			cmp	byte ptr ds:[4735h],0	; (020C:4735=1Eh)
020C:7C7E  74 03				je	loc_1187		; Jump if equal
020C:7C80  E9 022A				jmp	loc_1206		; (7EAD)
020C:7C83			loc_1187:
020C:7C83  2E: FE 06 4735			inc	byte ptr cs:[4735h]	; (020C:4735=1Eh)
020C:7C88  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:7C8E  75 03				jne	loc_1188		; Jump if not equal
020C:7C90  E9 021A				jmp	loc_1206		; (7EAD)
020C:7C93			loc_1188:
020C:7C93  50					push	ax
020C:7C94  53					push	bx
020C:7C95  51					push	cx
020C:7C96  52					push	dx
020C:7C97  56					push	si
020C:7C98  57					push	di
020C:7C99  55					push	bp
020C:7C9A  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:7C9F  06					push	es
020C:7CA0  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:7CA5  1E					push	ds
020C:7CA6  E8 FD39				call	sub_87			; (79E2)
020C:7CA9  E8 FD24				call	sub_84			; (79D0)
020C:7CAC  33 F6				xor	si,si			; Zero register
020C:7CAE  33 C9				xor	cx,cx			; Zero register
020C:7CB0  26: 8B 44 04				mov	ax,es:[si+4]
020C:7CB4  26: 3B 44 02				cmp	ax,es:[si+2]
020C:7CB8  75 09				jne	loc_1189		; Jump if not equal
020C:7CBA  2E: C6 06 4735 00			mov	byte ptr cs:[4735h],0	; (020C:4735=1Eh)
020C:7CC0  E9 018D				jmp	loc_1203		; (7E50)
020C:7CC3			loc_1189:
020C:7CC3  26: 8B 04				mov	ax,es:[si]
020C:7CC6  3D FFFF				cmp	ax,0FFFFh
020C:7CC9  74 1C				je	loc_1190		; Jump if equal
020C:7CCB  26: 8B 54 04				mov	dx,es:[si+4]
020C:7CCF  26: 2B 54 02				sub	dx,es:[si+2]
020C:7CD3  01 16 6A7B				add	data_780,dx		; (020C:6A7B=20B7h)
020C:7CD7  83 16 6A7D 00			adc	data_781,0		; (020C:6A7D=0A0E8h)
020C:7CDC  83 C6 19				add	si,19h
020C:7CDF  26: 3B 04				cmp	ax,es:[si]
020C:7CE2  74 DF				je	loc_1189		; Jump if equal
020C:7CE4  41					inc	cx
020C:7CE5  EB DC				jmp	short loc_1189		; (7CC3)
020C:7CE7			loc_1190:
020C:7CE7  89 0E 6A7F				mov	data_782,cx		; (020C:6A7F=0C600h)
020C:7CEB  3A 0E 6BB3				cmp	cl,byte ptr ds:[6BB3h]	; (020C:6BB3=0)
020C:7CEF  74 65				je	loc_1192		; Jump if equal
020C:7CF1  72 03				jc	loc_1191		; Jump if carry Set
020C:7CF3  E9 00A9				jmp	loc_1195		; (7D9F)
020C:7CF6			loc_1191:
020C:7CF6  80 F9 F9				cmp	cl,0F9h
020C:7CF9  73 5B				jae	loc_1192		; Jump if above or =
020C:7CFB  26: 81 7C E7 FC00			cmp	word ptr es:[si-19h],0FC00h
020C:7D01  73 53				jae	loc_1192		; Jump if above or =
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 266

020C:7D03  32 C0				xor	al,al			; Zero register
020C:7D05  B9 0032				mov	cx,32h
020C:7D08  8B FE				mov	di,si
020C:7D0A  FC					cld				; Clear direction
020C:7D0B  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:7D0D  B8 FC00				mov	ax,0FC00h
020C:7D10  26: 89 04				mov	es:[si],ax
020C:7D13  26: 89 44 15				mov	es:[si+15h],ax
020C:7D17  26: C7 44 0A 4000			mov	word ptr es:[si+0Ah],4000h
020C:7D1D  26: C7 44 19 FFFF			mov	word ptr es:[si+19h],0FFFFh
020C:7D23  FF 06 6A7F				inc	data_782		; (020C:6A7F=0C600h)
020C:7D27  FE 06 1CD9				inc	data_254		; (020C:1CD9=0)
020C:7D2B  8B 0E 6A7F				mov	cx,data_782		; (020C:6A7F=0C600h)
020C:7D2F  3A 0E 6BB3				cmp	cl,byte ptr ds:[6BB3h]	; (020C:6BB3=0)
020C:7D33  73 21				jae	loc_1192		; Jump if above or =
020C:7D35  83 C6 19				add	si,19h
020C:7D38  B8 FD00				mov	ax,0FD00h
020C:7D3B  26: 89 04				mov	es:[si],ax
020C:7D3E  26: 89 44 15				mov	es:[si+15h],ax
020C:7D42  26: C7 44 0A 4000			mov	word ptr es:[si+0Ah],4000h
020C:7D48  26: C7 44 19 FFFF			mov	word ptr es:[si+19h],0FFFFh
020C:7D4E  FF 06 6A7F				inc	data_782		; (020C:6A7F=0C600h)
020C:7D52  FE 06 1CD9				inc	data_254		; (020C:1CD9=0)
020C:7D56			loc_1192:
020C:7D56  33 F6				xor	si,si			; Zero register
020C:7D58  BB 000C				mov	bx,0Ch
020C:7D5B			loc_1193:
020C:7D5B  26: 8B 04				mov	ax,es:[si]
020C:7D5E  3D FFFF				cmp	ax,0FFFFh
020C:7D61  74 39				je	loc_1194		; Jump if equal
020C:7D63  50					push	ax
020C:7D64  8B 97 6A82				mov	dx,data_784[bx]		; (020C:6A82=1CE7h)
020C:7D68  26: 89 54 11				mov	es:[si+11h],dx
020C:7D6C  B8 0002				mov	ax,2
020C:7D6F  E8 0E82				call	sub_110			; (8BF4)
020C:7D72  8B 97 6A84				mov	dx,data_785[bx]		; (020C:6A84=0F700h)
020C:7D76  26: 89 54 13				mov	es:[si+13h],dx
020C:7D7A  B8 0001				mov	ax,1
020C:7D7D  E8 0E74				call	sub_110			; (8BF4)
020C:7D80  8B 97 6A86				mov	dx,data_786[bx]		; (020C:6A86=1A06h)
020C:7D84  26: 89 54 0F				mov	es:[si+0Fh],dx
020C:7D88  B8 0004				mov	ax,4
020C:7D8B  E8 0E66				call	sub_110			; (8BF4)
020C:7D8E  58					pop	ax
020C:7D8F  83 C6 19				add	si,19h
020C:7D92  26: 3B 04				cmp	ax,es:[si]
020C:7D95  74 C4				je	loc_1193		; Jump if equal
020C:7D97  83 C3 06				add	bx,6
020C:7D9A  EB BF				jmp	short loc_1193		; (7D5B)
020C:7D9C			loc_1194:
020C:7D9C  E9 00B1				jmp	loc_1203		; (7E50)
020C:7D9F			loc_1195:
020C:7D9F  32 FF				xor	bh,bh			; Zero register
020C:7DA1  8A 1E 6BB3				mov	bl,byte ptr ds:[6BB3h]	; (020C:6BB3=0)
020C:7DA5  B8 FFFF				mov	ax,0FFFFh
020C:7DA8  F7 E3				mul	bx			; dx:ax = reg * ax
020C:7DAA  3B 16 6A7D				cmp	dx,data_781		; (020C:6A7D=0A0E8h)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 267

020C:7DAE  77 0E				ja	loc_1197		; Jump if above
020C:7DB0  72 06				jc	loc_1196		; Jump if carry Set
020C:7DB2  3B 06 6A7B				cmp	ax,data_780		; (020C:6A7B=20B7h)
020C:7DB6  77 06				ja	loc_1197		; Jump if above
020C:7DB8			loc_1196:
020C:7DB8  B8 FFFF				mov	ax,0FFFFh
020C:7DBB  EB 10				jmp	short loc_1198		; (7DCD)
020C:7DBD  90					nop
020C:7DBE			loc_1197:
020C:7DBE  32 FF				xor	bh,bh			; Zero register
020C:7DC0  8A 1E 6BB3				mov	bl,byte ptr ds:[6BB3h]	; (020C:6BB3=0)
020C:7DC4  8B 16 6A7D				mov	dx,data_781		; (020C:6A7D=0A0E8h)
020C:7DC8  A1 6A7B				mov	ax,data_780		; (020C:6A7B=20B7h)
020C:7DCB  F7 F3				div	bx			; ax,dx rem=dx:ax/reg
020C:7DCD			loc_1198:
020C:7DCD  8B E8				mov	bp,ax
020C:7DCF  33 C9				xor	cx,cx			; Zero register
020C:7DD1  33 D2				xor	dx,dx			; Zero register
020C:7DD3  FE C6				inc	dh
020C:7DD5  33 F6				xor	si,si			; Zero register
020C:7DD7  BF 000C				mov	di,0Ch
020C:7DDA			loc_1199:
020C:7DDA  26: 8B 1C				mov	bx,es:[si]
020C:7DDD  83 FB FF				cmp	bx,0FFFFh
020C:7DE0  74 6E				je	loc_1203		; Jump if equal
020C:7DE2  26: 8B 44 04				mov	ax,es:[si+4]
020C:7DE6  26: 2B 44 02				sub	ax,es:[si+2]
020C:7DEA  03 C8				add	cx,ax
020C:7DEC  9C					pushf				; Push flags
020C:7DED  8B 85 6A82				mov	ax,data_784[di]		; (020C:6A82=1CE7h)
020C:7DF1  26: 89 44 11				mov	es:[si+11h],ax
020C:7DF5  50					push	ax
020C:7DF6  52					push	dx
020C:7DF7  8B D0				mov	dx,ax
020C:7DF9  B8 0002				mov	ax,2
020C:7DFC  E8 0DF5				call	sub_110			; (8BF4)
020C:7DFF  5A					pop	dx
020C:7E00  58					pop	ax
020C:7E01  8B 85 6A84				mov	ax,data_785[di]		; (020C:6A84=0F700h)
020C:7E05  26: 89 44 13				mov	es:[si+13h],ax
020C:7E09  50					push	ax
020C:7E0A  52					push	dx
020C:7E0B  8B D0				mov	dx,ax
020C:7E0D  B8 0001				mov	ax,1
020C:7E10  E8 0DE1				call	sub_110			; (8BF4)
020C:7E13  5A					pop	dx
020C:7E14  58					pop	ax
020C:7E15  8B 85 6A86				mov	ax,data_786[di]		; (020C:6A86=1A06h)
020C:7E19  26: 89 44 0F				mov	es:[si+0Fh],ax
020C:7E1D  50					push	ax
020C:7E1E  52					push	dx
020C:7E1F  8B D0				mov	dx,ax
020C:7E21  B8 0004				mov	ax,4
020C:7E24  E8 0DCD				call	sub_110			; (8BF4)
020C:7E27  5A					pop	dx
020C:7E28  58					pop	ax
020C:7E29  83 C6 19				add	si,19h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 268

020C:7E2C  26: 3B 1C				cmp	bx,es:[si]
020C:7E2F  75 09				jne	loc_1200		; Jump if not equal
020C:7E31  9D					popf				; Pop flags
020C:7E32  73 1A				jnc	loc_1202		; Jump if carry=0
020C:7E34  B9 FFFF				mov	cx,0FFFFh
020C:7E37  EB 15				jmp	short loc_1202		; (7E4E)
020C:7E39  90					nop
020C:7E3A			loc_1200:
020C:7E3A  9D					popf				; Pop flags
020C:7E3B  72 04				jc	loc_1201		; Jump if carry Set
020C:7E3D  3B CD				cmp	cx,bp
020C:7E3F  72 0D				jb	loc_1202		; Jump if below
020C:7E41			loc_1201:
020C:7E41  33 C9				xor	cx,cx			; Zero register
020C:7E43  3A 36 6BB3				cmp	dh,byte ptr ds:[6BB3h]	; (020C:6BB3=0)
020C:7E47  73 05				jae	loc_1202		; Jump if above or =
020C:7E49  83 C7 06				add	di,6
020C:7E4C  FE C6				inc	dh
020C:7E4E			loc_1202:
020C:7E4E  EB 8A				jmp	short loc_1199		; (7DDA)
020C:7E50			loc_1203:
020C:7E50  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:7E55  9C					pushf				; Push flags
020C:7E56  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:7E5B  5A					pop	dx
020C:7E5C  8E DA				mov	ds,dx
020C:7E5E  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:7E63  5A					pop	dx
020C:7E64  75 0A				jnz	loc_1204		; Jump if not zero
020C:7E66  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:7E6B  74 03				je	loc_1204		; Jump if equal
020C:7E6D  E8 0040				call	sub_97			; (7EB0)
020C:7E70			loc_1204:
020C:7E70  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:7E75  9D					popf				; Pop flags
020C:7E76  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:7E7B  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:7E80  9C					pushf				; Push flags
020C:7E81  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:7E86  5A					pop	dx
020C:7E87  8E C2				mov	es,dx
020C:7E89  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:7E8E  5A					pop	dx
020C:7E8F  75 0A				jnz	loc_1205		; Jump if not zero
020C:7E91  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:7E96  74 03				je	loc_1205		; Jump if equal
020C:7E98  E8 0015				call	sub_97			; (7EB0)
020C:7E9B			loc_1205:
020C:7E9B  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:7EA0  9D					popf				; Pop flags
020C:7EA1  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:7EA6  5D					pop	bp
020C:7EA7  5F					pop	di
020C:7EA8  5E					pop	si
020C:7EA9  5A					pop	dx
020C:7EAA  59					pop	cx
020C:7EAB  5B					pop	bx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 269

020C:7EAC  58					pop	ax
020C:7EAD			loc_1206:
020C:7EAD  C3					retn
020C:7EAE  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:7EB0			sub_97		proc	near
020C:7EB0  2E: 39 16 3F74			cmp	cs:data_653,dx		; (020C:3F74=4F3Ch)
020C:7EB5  74 19				je	loc_1207		; Jump if equal
020C:7EB7  2E: 89 16 3F74			mov	cs:data_653,dx		; (020C:3F74=4F3Ch)
020C:7EBC  50					push	ax
020C:7EBD  B4 48				mov	ah,48h
020C:7EBF  CD 67				int	67h			; EMS Memory        ah=func 48h
										;  restore map context,dx=handle
020C:7EC1  80 FC 00				cmp	ah,0
020C:7EC4  75 0B				jne	loc_1208		; Jump if not equal
020C:7EC6  B4 47				mov	ah,47h
020C:7EC8  CD 67				int	67h			; EMS Memory        ah=func 47h
										;  save map context, dx=handle
020C:7ECA  80 FC 00				cmp	ah,0
020C:7ECD  75 02				jne	loc_1208		; Jump if not equal
020C:7ECF  58					pop	ax
020C:7ED0			loc_1207:
020C:7ED0  C3					retn
020C:7ED1			loc_1208:
020C:7ED1  2E: 8A 0E 3F90			mov	cl,cs:data_667		; (020C:3F90=2Eh)
020C:7ED6  51					push	cx
020C:7ED7  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:7EDC  E8 FAEB				call	sub_83			; (79CA)
020C:7EDF  BD 0F5D				mov	bp,0F5Dh
020C:7EE2  32 C0				xor	al,al			; Zero register
020C:7EE4  86 C4				xchg	al,ah
020C:7EE6  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:7EE6  9A					db	9Ah
020C:7EE7  0294 1491				dw	294h, 1491h
020C:7EEB  83 C5 03				add	bp,3
020C:7EEE  8B D0				mov	dx,ax
020C:7EF0  58					pop	ax
020C:7EF1  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:7EF1  9A					db	9Ah
020C:7EF2  0294 1491				dw	294h, 1491h
020C:7EF6  8B C2				mov	ax,dx
020C:7EF8  E8 FAD5				call	sub_84			; (79D0)
020C:7EFB  A3 4743				mov	word ptr ds:[4743h],ax	; (020C:4743=2020h)
020C:7EFE  E9 F547				jmp	loc_1087		; (7448)
				sub_97		endp

020C:7F01  87 DB				xchg	bx,bx
020C:7F03  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 270

020C:7F04			sub_98		proc	near
020C:7F04  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:7F0A  75 0A				jne	loc_1209		; Jump if not equal
020C:7F0C  50					push	ax
020C:7F0D  B8 5C45				mov	ax,5C45h
020C:7F10  8E C0				mov	es,ax
020C:7F12  58					pop	ax
020C:7F13  EB 59				jmp	short loc_1217		; (7F6E)
020C:7F15  90					nop
020C:7F16			loc_1209:
020C:7F16  E8 FAD5				call	sub_90			; (79EE)
020C:7F19  26: 3B 1E 2154			cmp	bx,word ptr es:[2154h]	; (5C45:2154=541h)
020C:7F1E  75 1C				jne	loc_1211		; Jump if not equal
020C:7F20  2E: 83 3E 3F8A FF			cmp	cs:data_664,0FFFFh	; (020C:3F8A=0C4FEh)
020C:7F26  74 14				je	loc_1211		; Jump if equal
020C:7F28  52					push	dx
020C:7F29  2E: 8B 16 3F8A			mov	dx,cs:data_664		; (020C:3F8A=0C4FEh)
020C:7F2E  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:7F33  74 03				je	loc_1210		; Jump if equal
020C:7F35  E8 FF78				call	sub_97			; (7EB0)
020C:7F38			loc_1210:
020C:7F38  5A					pop	dx
020C:7F39  EB 2E				jmp	short loc_1216		; (7F69)
020C:7F3B  90					nop
020C:7F3C			loc_1211:
020C:7F3C  E8 FAA3				call	sub_87			; (79E2)
020C:7F3F  56					push	si
020C:7F40  33 F6				xor	si,si			; Zero register
020C:7F42			loc_1212:
020C:7F42  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020C:7F46  74 0C				je	loc_1213		; Jump if equal
020C:7F48  26: 39 1C				cmp	es:[si],bx
020C:7F4B  77 07				ja	loc_1213		; Jump if above
020C:7F4D  74 10				jz	loc_1215		; Jump if zero
020C:7F4F  83 C6 19				add	si,19h
020C:7F52  EB EE				jmp	short loc_1212		; (7F42)
020C:7F54			loc_1213:
020C:7F54  83 FE 19				cmp	si,19h
020C:7F57  73 03				jae	loc_1214		; Jump if above or =
020C:7F59  BE 0019				mov	si,19h
020C:7F5C			loc_1214:
020C:7F5C  83 EE 19				sub	si,19h
020C:7F5F			loc_1215:
020C:7F5F  52					push	dx
020C:7F60  26: 8B 54 11				mov	dx,es:[si+11h]
020C:7F64  E8 FF49				call	sub_97			; (7EB0)
020C:7F67  5A					pop	dx
020C:7F68  5E					pop	si
020C:7F69			loc_1216:
020C:7F69  2E: 8E 06 3F72			mov	es,cs:data_652		; (020C:3F72=0C4FEh)
020C:7F6E			loc_1217:
020C:7F6E  C3					retn
				sub_98		endp

020C:7F6F  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 271

				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:7F70			sub_99		proc	near
020C:7F70  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:7F76  75 0A				jne	loc_1218		; Jump if not equal
020C:7F78  50					push	ax
020C:7F79  B8 6C45				mov	ax,6C45h
020C:7F7C  8E C0				mov	es,ax
020C:7F7E  58					pop	ax
020C:7F7F  EB 59				jmp	short loc_1226		; (7FDA)
020C:7F81  90					nop
020C:7F82			loc_1218:
020C:7F82  E8 FA69				call	sub_90			; (79EE)
020C:7F85  26: 3B 1E 2154			cmp	bx,word ptr es:[2154h]	; (6C45:2154=3802h)
020C:7F8A  75 1C				jne	loc_1220		; Jump if not equal
020C:7F8C  2E: 83 3E 3F8C FF			cmp	cs:data_665,0FFFFh	; (020C:3F8C=503Ch)
020C:7F92  74 14				je	loc_1220		; Jump if equal
020C:7F94  52					push	dx
020C:7F95  2E: 8B 16 3F8C			mov	dx,cs:data_665		; (020C:3F8C=503Ch)
020C:7F9A  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:7F9F  74 03				je	loc_1219		; Jump if equal
020C:7FA1  E8 FF0C				call	sub_97			; (7EB0)
020C:7FA4			loc_1219:
020C:7FA4  5A					pop	dx
020C:7FA5  EB 2E				jmp	short loc_1225		; (7FD5)
020C:7FA7  90					nop
020C:7FA8			loc_1220:
020C:7FA8  E8 FA37				call	sub_87			; (79E2)
020C:7FAB  56					push	si
020C:7FAC  33 F6				xor	si,si			; Zero register
020C:7FAE			loc_1221:
020C:7FAE  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020C:7FB2  74 0C				je	loc_1222		; Jump if equal
020C:7FB4  26: 39 1C				cmp	es:[si],bx
020C:7FB7  77 07				ja	loc_1222		; Jump if above
020C:7FB9  74 10				jz	loc_1224		; Jump if zero
020C:7FBB  83 C6 19				add	si,19h
020C:7FBE  EB EE				jmp	short loc_1221		; (7FAE)
020C:7FC0			loc_1222:
020C:7FC0  83 FE 19				cmp	si,19h
020C:7FC3  73 03				jae	loc_1223		; Jump if above or =
020C:7FC5  BE 0019				mov	si,19h
020C:7FC8			loc_1223:
020C:7FC8  83 EE 19				sub	si,19h
020C:7FCB			loc_1224:
020C:7FCB  52					push	dx
020C:7FCC  26: 8B 54 13				mov	dx,es:[si+13h]
020C:7FD0  E8 FEDD				call	sub_97			; (7EB0)
020C:7FD3  5A					pop	dx
020C:7FD4  5E					pop	si
020C:7FD5			loc_1225:
020C:7FD5  2E: 8E 06 3F72			mov	es,cs:data_652		; (020C:3F72=0C4FEh)
020C:7FDA			loc_1226:
020C:7FDA  C3					retn
				sub_99		endp

           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 272

020C:7FDB  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:7FDC			sub_100		proc	near
020C:7FDC  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:7FE2  75 0A				jne	loc_1227		; Jump if not equal
020C:7FE4  50					push	ax
020C:7FE5  B8 4C45				mov	ax,4C45h
020C:7FE8  8E C0				mov	es,ax
020C:7FEA  58					pop	ax
020C:7FEB  EB 59				jmp	short loc_1235		; (8046)
020C:7FED  90					nop
020C:7FEE			loc_1227:
020C:7FEE  E8 F9FD				call	sub_90			; (79EE)
020C:7FF1  26: 3B 1E 2154			cmp	bx,word ptr es:[2154h]	; (4C45:2154=0)
020C:7FF6  75 1C				jne	loc_1229		; Jump if not equal
020C:7FF8  2E: 83 3E 3F8E FF			cmp	cs:data_666,0FFFFh	; (020C:3F8E=4075h)
020C:7FFE  74 14				je	loc_1229		; Jump if equal
020C:8000  52					push	dx
020C:8001  2E: 8B 16 3F8E			mov	dx,cs:data_666		; (020C:3F8E=4075h)
020C:8006  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:800B  74 03				je	loc_1228		; Jump if equal
020C:800D  E8 FEA0				call	sub_97			; (7EB0)
020C:8010			loc_1228:
020C:8010  5A					pop	dx
020C:8011  EB 2E				jmp	short loc_1234		; (8041)
020C:8013  90					nop
020C:8014			loc_1229:
020C:8014  E8 F9CB				call	sub_87			; (79E2)
020C:8017  56					push	si
020C:8018  33 F6				xor	si,si			; Zero register
020C:801A			loc_1230:
020C:801A  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020C:801E  74 0C				je	loc_1231		; Jump if equal
020C:8020  26: 39 1C				cmp	es:[si],bx
020C:8023  77 07				ja	loc_1231		; Jump if above
020C:8025  74 10				jz	loc_1233		; Jump if zero
020C:8027  83 C6 19				add	si,19h
020C:802A  EB EE				jmp	short loc_1230		; (801A)
020C:802C			loc_1231:
020C:802C  83 FE 19				cmp	si,19h
020C:802F  73 03				jae	loc_1232		; Jump if above or =
020C:8031  BE 0019				mov	si,19h
020C:8034			loc_1232:
020C:8034  83 EE 19				sub	si,19h
020C:8037			loc_1233:
020C:8037  52					push	dx
020C:8038  26: 8B 54 0F				mov	dx,es:[si+0Fh]
020C:803C  E8 FE71				call	sub_97			; (7EB0)
020C:803F  5A					pop	dx
020C:8040  5E					pop	si
020C:8041			loc_1234:
020C:8041  2E: 8E 06 3F72			mov	es,cs:data_652		; (020C:3F72=0C4FEh)
020C:8046			loc_1235:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 273

020C:8046  C3					retn
				sub_100		endp

							                        ;* No entry point to code
020C:8047  90					nop
020C:8048  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:804E  75 0A				jne	loc_1236		; Jump if not equal
020C:8050  50					push	ax
020C:8051  B8 5C45				mov	ax,5C45h
020C:8054  8E D8				mov	ds,ax
020C:8056  58					pop	ax
020C:8057  EB 55				jmp	short loc_1244		; (80AE)
020C:8059  90					nop
020C:805A			loc_1236:
020C:805A  E8 F973				call	sub_84			; (79D0)
020C:805D  3B 1E 2154				cmp	bx,word ptr ds:[2154h]	; (5C45:2154=541h)
020C:8061  75 1C				jne	loc_1238		; Jump if not equal
020C:8063  2E: 83 3E 3F8A FF			cmp	cs:data_664,0FFFFh	; (020C:3F8A=0C4FEh)
020C:8069  74 14				je	loc_1238		; Jump if equal
020C:806B  52					push	dx
020C:806C  2E: 8B 16 3F8A			mov	dx,cs:data_664		; (020C:3F8A=0C4FEh)
020C:8071  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:8076  74 03				je	loc_1237		; Jump if equal
020C:8078  E8 FE35				call	sub_97			; (7EB0)
020C:807B			loc_1237:
020C:807B  5A					pop	dx
020C:807C  EB 2B				jmp	short loc_1243		; (80A9)
020C:807E  90					nop
020C:807F			loc_1238:
020C:807F  E8 F942				call	sub_82			; (79C4)
020C:8082  56					push	si
020C:8083  33 F6				xor	si,si			; Zero register
020C:8085			loc_1239:
020C:8085  83 3C FF				cmp	word ptr [si],0FFFFh
020C:8088  74 0B				je	loc_1240		; Jump if equal
020C:808A  39 1C				cmp	[si],bx
020C:808C  77 07				ja	loc_1240		; Jump if above
020C:808E  74 10				jz	loc_1242		; Jump if zero
020C:8090  83 C6 19				add	si,19h
020C:8093  EB F0				jmp	short loc_1239		; (8085)
020C:8095			loc_1240:
020C:8095  83 FE 19				cmp	si,19h
020C:8098  73 03				jae	loc_1241		; Jump if above or =
020C:809A  BE 0019				mov	si,19h
020C:809D			loc_1241:
020C:809D  83 EE 19				sub	si,19h
020C:80A0			loc_1242:
020C:80A0  52					push	dx
020C:80A1  8B 54 11				mov	dx,[si+11h]
020C:80A4  E8 FE09				call	sub_97			; (7EB0)
020C:80A7  5A					pop	dx
020C:80A8  5E					pop	si
020C:80A9			loc_1243:
020C:80A9  2E: 8E 06 3F72			mov	es,cs:data_652		; (020C:3F72=0C4FEh)
020C:80AE			loc_1244:
020C:80AE  C3					retn
							                        ;* No entry point to code
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 274

020C:80AF  90					nop
020C:80B0  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:80B6  75 0A				jne	loc_1245		; Jump if not equal
020C:80B8  50					push	ax
020C:80B9  B8 6C45				mov	ax,6C45h
020C:80BC  8E D8				mov	ds,ax
020C:80BE  58					pop	ax
020C:80BF  EB 55				jmp	short loc_1253		; (8116)
020C:80C1  90					nop
020C:80C2			loc_1245:
020C:80C2  E8 F90B				call	sub_84			; (79D0)
020C:80C5  3B 1E 2154				cmp	bx,word ptr ds:[2154h]	; (6C45:2154=3802h)
020C:80C9  75 1C				jne	loc_1247		; Jump if not equal
020C:80CB  2E: 83 3E 3F8C FF			cmp	cs:data_665,0FFFFh	; (020C:3F8C=503Ch)
020C:80D1  74 14				je	loc_1247		; Jump if equal
020C:80D3  52					push	dx
020C:80D4  2E: 8B 16 3F8C			mov	dx,cs:data_665		; (020C:3F8C=503Ch)
020C:80D9  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:80DE  74 03				je	loc_1246		; Jump if equal
020C:80E0  E8 FDCD				call	sub_97			; (7EB0)
020C:80E3			loc_1246:
020C:80E3  5A					pop	dx
020C:80E4  EB 2B				jmp	short loc_1252		; (8111)
020C:80E6  90					nop
020C:80E7			loc_1247:
020C:80E7  E8 F8DA				call	sub_82			; (79C4)
020C:80EA  56					push	si
020C:80EB  33 F6				xor	si,si			; Zero register
020C:80ED			loc_1248:
020C:80ED  83 3C FF				cmp	word ptr [si],0FFFFh
020C:80F0  74 0B				je	loc_1249		; Jump if equal
020C:80F2  39 1C				cmp	[si],bx
020C:80F4  77 07				ja	loc_1249		; Jump if above
020C:80F6  74 10				jz	loc_1251		; Jump if zero
020C:80F8  83 C6 19				add	si,19h
020C:80FB  EB F0				jmp	short loc_1248		; (80ED)
020C:80FD			loc_1249:
020C:80FD  83 FE 19				cmp	si,19h
020C:8100  73 03				jae	loc_1250		; Jump if above or =
020C:8102  BE 0019				mov	si,19h
020C:8105			loc_1250:
020C:8105  83 EE 19				sub	si,19h
020C:8108			loc_1251:
020C:8108  52					push	dx
020C:8109  8B 54 13				mov	dx,[si+13h]
020C:810C  E8 FDA1				call	sub_97			; (7EB0)
020C:810F  5A					pop	dx
020C:8110  5E					pop	si
020C:8111			loc_1252:
020C:8111  2E: 8E 06 3F72			mov	es,cs:data_652		; (020C:3F72=0C4FEh)
020C:8116			loc_1253:
020C:8116  C3					retn
							                        ;* No entry point to code
020C:8117  90					nop
020C:8118  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:811E  75 0A				jne	loc_1254		; Jump if not equal
020C:8120  50					push	ax
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 275

020C:8121  B8 4C45				mov	ax,4C45h
020C:8124  8E D8				mov	ds,ax
020C:8126  58					pop	ax
020C:8127  EB 55				jmp	short loc_1262		; (817E)
020C:8129  90					nop
020C:812A			loc_1254:
020C:812A  E8 F8A3				call	sub_84			; (79D0)
020C:812D  3B 1E 2154				cmp	bx,word ptr ds:[2154h]	; (4C45:2154=0)
020C:8131  75 1C				jne	loc_1256		; Jump if not equal
020C:8133  2E: 83 3E 3F8E FF			cmp	cs:data_666,0FFFFh	; (020C:3F8E=4075h)
020C:8139  74 14				je	loc_1256		; Jump if equal
020C:813B  52					push	dx
020C:813C  2E: 8B 16 3F8E			mov	dx,cs:data_666		; (020C:3F8E=4075h)
020C:8141  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:8146  74 03				je	loc_1255		; Jump if equal
020C:8148  E8 FD65				call	sub_97			; (7EB0)
020C:814B			loc_1255:
020C:814B  5A					pop	dx
020C:814C  EB 2B				jmp	short loc_1261		; (8179)
020C:814E  90					nop
020C:814F			loc_1256:
020C:814F  E8 F872				call	sub_82			; (79C4)
020C:8152  56					push	si
020C:8153  33 F6				xor	si,si			; Zero register
020C:8155			loc_1257:
020C:8155  83 3C FF				cmp	word ptr [si],0FFFFh
020C:8158  74 0B				je	loc_1258		; Jump if equal
020C:815A  39 1C				cmp	[si],bx
020C:815C  77 07				ja	loc_1258		; Jump if above
020C:815E  74 10				jz	loc_1260		; Jump if zero
020C:8160  83 C6 19				add	si,19h
020C:8163  EB F0				jmp	short loc_1257		; (8155)
020C:8165			loc_1258:
020C:8165  83 FE 19				cmp	si,19h
020C:8168  73 03				jae	loc_1259		; Jump if above or =
020C:816A  BE 0019				mov	si,19h
020C:816D			loc_1259:
020C:816D  83 EE 19				sub	si,19h
020C:8170			loc_1260:
020C:8170  52					push	dx
020C:8171  8B 54 0F				mov	dx,[si+0Fh]
020C:8174  E8 FD39				call	sub_97			; (7EB0)
020C:8177  5A					pop	dx
020C:8178  5E					pop	si
020C:8179			loc_1261:
020C:8179  2E: 8E 06 3F72			mov	es,cs:data_652		; (020C:3F72=0C4FEh)
020C:817E			loc_1262:
020C:817E  C3					retn
020C:817F  90					nop
020C:8180  FF D3				call	bx			;*
020C:8182  CB					retf				; Return far
020C:8183  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 276

020C:8184			sub_101		proc	near
020C:8184  FF D5				call	bp			;*
020C:8186  CB					retf
				sub_101		endp

							                        ;* No entry point to code
020C:8187  90					nop
020C:8188  2E: A1 3F74				mov	ax,cs:data_653		; (020C:3F74=4F3Ch)
020C:818C  CB					retf
							                        ;* No entry point to code
020C:818D  87 DB				xchg	bx,bx
020C:818F  90					nop
020C:8190  9C					pushf				; Push flags
020C:8191  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:8196  75 0C				jne	loc_1263		; Jump if not equal
020C:8198  2E: 3B 06 3F74			cmp	ax,cs:data_653		; (020C:3F74=4F3Ch)
020C:819D  74 05				je	loc_1263		; Jump if equal
020C:819F  8B D0				mov	dx,ax
020C:81A1  E8 FD0C				call	sub_97			; (7EB0)
020C:81A4			loc_1263:
020C:81A4  9D					popf				; Pop flags
020C:81A5  CB					retf
							                        ;* No entry point to code
020C:81A6  87 DB				xchg	bx,bx
020C:81A8  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:81AE  74 1F				je	loc_1264		; Jump if equal
020C:81B0  E8 FAC5		;*		call	sub_96			;*(7C78)
020C:81B0  E8 C5 FA				db	0E8h,0C5h,0FAh
020C:81B3  2E: 80 3E 4735 00			cmp	byte ptr cs:[4735h],0	; (020C:4735=1Eh)
020C:81B9  75 14				jne	loc_1264		; Jump if not equal
020C:81BB  E8 CD52				call	sub_39			; (4F10)
020C:81BE  E8 FAB7		;*		call	sub_96			;*(7C78)
020C:81BE  E8 B7 FA				db	0E8h,0B7h,0FAh
020C:81C1  2E: 80 3E 4735 00			cmp	byte ptr cs:[4735h],0	; (020C:4735=1Eh)
020C:81C7  75 06				jne	loc_1264		; Jump if not equal
020C:81C9  BB 0002				mov	bx,2
020C:81CC  E9 F155				jmp	loc_1077		; (7324)
020C:81CF			loc_1264:
020C:81CF  CB					retf				; Return far

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:81D0			sub_102		proc	near
020C:81D0  53					push	bx
020C:81D1  51					push	cx
020C:81D2  52					push	dx
020C:81D3  25 3FFF				and	ax,3FFFh
020C:81D6  8B F8				mov	di,ax
020C:81D8  57					push	di
020C:81D9  B1 0C				mov	cl,0Ch
020C:81DB  D3 EF				shr	di,cl			; Shift w/zeros fill
020C:81DD  D1 E7				shl	di,1			; Shift w/zeros fill
020C:81DF  03 3E 6BB5				add	di,data_796		; (020C:6BB5=3BEBh)
020C:81E3  8B 95 6A82				mov	dx,data_784[di]		; (020C:6A82=1CE7h)
020C:81E7  E8 FCC6				call	sub_97			; (7EB0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 277

020C:81EA  5F					pop	di
020C:81EB  81 E7 0FFF				and	di,0FFFh
020C:81EF  B1 04				mov	cl,4
020C:81F1  D3 E7				shl	di,cl			; Shift w/zeros fill
020C:81F3  5A					pop	dx
020C:81F4  59					pop	cx
020C:81F5  5B					pop	bx
020C:81F6  2E: 8E 06 3F72			mov	es,cs:data_652		; (020C:3F72=0C4FEh)
020C:81FB  C3					retn
				sub_102		endp

020C:81FC  00					db	0
020C:81FD  00 00				add	[bx+si],al
020C:81FF  00 56 57				add	[bp+57h],dl
020C:8202  51					push	cx
020C:8203  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:8208  06					push	es
020C:8209  26: 8A 45 04				mov	al,es:[di+4]
020C:820D  24 1F				and	al,1Fh
020C:820F  3C 1F				cmp	al,1Fh
020C:8211  74 17				je	loc_1265		; Jump if equal
020C:8213  FE C8				dec	al
020C:8215  B4 2C				mov	ah,2Ch			; ','
020C:8217  F6 E4				mul	ah			; ax = reg * al
020C:8219  BE 3684				mov	si,3684h
020C:821C  03 F0				add	si,ax
020C:821E  BF 2314				mov	di,2314h
020C:8221  B9 0028				mov	cx,28h
020C:8224  E8 F7C7				call	sub_90			; (79EE)
020C:8227  FC					cld				; Clear direction
020C:8228  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:822A			loc_1265:
020C:822A  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:822F  9C					pushf				; Push flags
020C:8230  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:8235  5A					pop	dx
020C:8236  8E C2				mov	es,dx
020C:8238  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:823D  5A					pop	dx
020C:823E  75 0A				jnz	loc_1266		; Jump if not zero
020C:8240  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:8245  74 03				je	loc_1266		; Jump if equal
020C:8247  E8 FC66				call	sub_97			; (7EB0)
020C:824A			loc_1266:
020C:824A  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:824F  9D					popf				; Pop flags
020C:8250  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:8255  59					pop	cx
020C:8256  5F					pop	di
020C:8257  5E					pop	si
020C:8258  C3					retn
020C:8259  87 DB				xchg	bx,bx
020C:825B  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 278


020C:825C			sub_104		proc	near
020C:825C  F7 06 3D18 0040			test	data_594,40h		; (020C:3D18=2680h)
020C:8262  75 34				jnz	loc_1268		; Jump if not zero
020C:8264  26: 80 7C 01 21			cmp	byte ptr es:[si+1],21h	; '!'
020C:8269  74 25				je	loc_1267		; Jump if equal
020C:826B  26: 80 7C 01 20			cmp	byte ptr es:[si+1],20h	; ' '
020C:8270  75 26				jne	loc_1268		; Jump if not equal
020C:8272  80 3E 1F6D 08			cmp	data_355,8		; (020C:1F6D=0)
020C:8277  75 1F				jne	loc_1268		; Jump if not equal
020C:8279  26: 83 7C 04 01			cmp	word ptr es:[si+4],1
020C:827E  75 18				jne	loc_1268		; Jump if not equal
020C:8280  26: 83 7C 02 43			cmp	word ptr es:[si+2],43h
020C:8285  74 14				je	loc_1269		; Jump if equal
020C:8287  26: 83 7C 02 45			cmp	word ptr es:[si+2],45h
020C:828C  75 0A				jne	loc_1268		; Jump if not equal
020C:828E  EB 0B				jmp	short loc_1269		; (829B)
020C:8290			loc_1267:
020C:8290  A1 2314				mov	ax,data_462		; (020C:2314=0)
020C:8293  80 FC 25				cmp	ah,25h			; '%'
020C:8296  74 03				je	loc_1269		; Jump if equal
020C:8298			loc_1268:
020C:8298  E9 0188				jmp	loc_1287		; (8423)
020C:829B			loc_1269:
020C:829B  53					push	bx
020C:829C  51					push	cx
020C:829D  52					push	dx
020C:829E  57					push	di
020C:829F  56					push	si
020C:82A0  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:82A5  06					push	es
020C:82A6  8B 1E 2334				mov	bx,data_471		; (020C:2334=0)
020C:82AA  26: 80 7C 01 20			cmp	byte ptr es:[si+1],20h	; ' '
020C:82AF  75 12				jne	loc_1270		; Jump if not equal
020C:82B1  8B 1E 231C				mov	bx,data_464		; (020C:231C=0)
020C:82B5  A1 2322				mov	ax,data_466		; (020C:2322=0)
020C:82B8  3D 0006				cmp	ax,6
020C:82BB  77 06				ja	loc_1270		; Jump if above
020C:82BD  B1 0C				mov	cl,0Ch
020C:82BF  D3 E0				shl	ax,cl			; Shift w/zeros fill
020C:82C1  03 D8				add	bx,ax
020C:82C3			loc_1270:
020C:82C3  A1 2320				mov	ax,data_465		; (020C:2320=0)
020C:82C6  3D 0000				cmp	ax,0
020C:82C9  75 15				jne	loc_1273		; Jump if not equal
020C:82CB  83 FB 00				cmp	bx,0
020C:82CE  75 03				jne	loc_1272		; Jump if not equal
020C:82D0			loc_1271:
020C:82D0  E9 0120				jmp	loc_1285		; (83F3)
020C:82D3			loc_1272:
020C:82D3  3B 1E 1CCC				cmp	bx,data_247		; (020C:1CCC=0)
020C:82D7  75 07				jne	loc_1273		; Jump if not equal
020C:82D9  80 3E 1F6D 05			cmp	data_355,5		; (020C:1F6D=0)
020C:82DE  74 F0				je	loc_1271		; Jump if equal
020C:82E0			loc_1273:
020C:82E0  89 1E 2FB2				mov	data_527,bx		; (020C:2FB2=0)
020C:82E4  A3 2FB4				mov	data_528,ax		; (020C:2FB4=0DD7h)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 279

020C:82E7  BF 2FB2				mov	di,2FB2h
020C:82EA  E8 F701				call	sub_90			; (79EE)
020C:82ED  E8 2AFC				call	sub_122			; (ADEC)
020C:82F0  72 03				jc	loc_1274		; Jump if carry Set
020C:82F2  E9 00FE				jmp	loc_1285		; (83F3)
020C:82F5			loc_1274:
020C:82F5  A1 2320				mov	ax,data_465		; (020C:2320=0)
020C:82F8  BA 0001				mov	dx,1
020C:82FB  E8 E232				call	sub_69			; (6530)
020C:82FE  72 05				jc	loc_1276		; Jump if carry Set
020C:8300  EB 44				jmp	short loc_1277		; (8346)
020C:8302			loc_1275:
020C:8302  E9 00EE				jmp	loc_1285		; (83F3)
020C:8305			loc_1276:
020C:8305  26: 80 4D 05 30			or	byte ptr es:[di+5],30h	; '0'
020C:830A  80 3E 178A 04			cmp	data_190,4		; (020C:178A=0)
020C:830F  72 F1				jb	loc_1275		; Jump if below
020C:8311  26: 80 4D 04 40			or	byte ptr es:[di+4],40h	; '@'
020C:8316  9A 1491:7CC0		;*		call	far ptr sub_242		;*(1491:7CC0)
020C:8316  9A					db	9Ah
020C:8317  7CC0 1491				dw	7CC0h, 1491h
020C:831B  72 E5				jc	loc_1275		; Jump if carry Set
020C:831D  57					push	di
020C:831E  8B F7				mov	si,di
020C:8320  BF 4165				mov	di,4165h
020C:8323  B9 007F				mov	cx,7Fh
020C:8326  8C C0				mov	ax,es
020C:8328  1E					push	ds
020C:8329  07					pop	es
020C:832A  8E D8				mov	ds,ax
020C:832C  FC					cld				; Clear direction
020C:832D  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:832F  8C C0				mov	ax,es
020C:8331  1E					push	ds
020C:8332  07					pop	es
020C:8333  8E D8				mov	ds,ax
020C:8335  5E					pop	si
020C:8336  E8 07A7				call	sub_108			; (8AE0)
020C:8339  BF 4165				mov	di,4165h
020C:833C  80 65 05 FC				and	byte ptr [di+5],0FCh
020C:8340  80 4D 05 02				or	byte ptr [di+5],2
020C:8344  EB 49				jmp	short loc_1282		; (838F)
020C:8346			loc_1277:
020C:8346  3D FFF0				cmp	ax,0FFF0h
020C:8349  74 1F				je	loc_1280		; Jump if equal
020C:834B  8E C3				mov	es,bx
020C:834D  8B F0				mov	si,ax
020C:834F  26: 83 3C 00				cmp	word ptr es:[si],0
020C:8353  74 12				je	loc_1279		; Jump if equal
020C:8355  B9 000A				mov	cx,0Ah

020C:8358			locloop_1278:
020C:8358  26: 80 3C 20				cmp	byte ptr es:[si],20h	; ' '
020C:835C  72 09				jb	loc_1279		; Jump if below
020C:835E  26: 80 3C 7E				cmp	byte ptr es:[si],7Eh	; '~'
020C:8362  77 03				ja	loc_1279		; Jump if above
020C:8364  46					inc	si
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 280

020C:8365  E2 F1				loop	locloop_1278		; Loop if cx > 0

020C:8367			loc_1279:
020C:8367  E9 0089				jmp	loc_1285		; (83F3)
020C:836A			loc_1280:
020C:836A  BF 4165				mov	di,4165h
020C:836D  89 1D				mov	[di],bx
020C:836F  89 45 02				mov	[di+2],ax
020C:8372  B0 40				mov	al,40h			; '@'
020C:8374  80 3E 178F 06			cmp	data_194,6		; (020C:178F=0)
020C:8379  72 09				jb	loc_1281		; Jump if below
020C:837B  80 3E 178A 04			cmp	data_190,4		; (020C:178A=0)
020C:8380  73 02				jae	loc_1281		; Jump if above or =
020C:8382  B0 00				mov	al,0
020C:8384			loc_1281:
020C:8384  88 45 04				mov	[di+4],al
020C:8387  C6 45 05 32				mov	byte ptr [di+5],32h	; '2'
020C:838B  C6 45 06 00				mov	byte ptr [di+6],0
020C:838F			loc_1282:
020C:838F  A1 2314				mov	ax,data_462		; (020C:2314=0)
020C:8392  BD 28FD				mov	bp,28FDh
020C:8395  9A 1491:0124		;*		call	far ptr sub_152		;*(1491:0124)
020C:8395  9A					db	9Ah
020C:8396  0124 1491				dw	124h, 1491h
020C:839A  BD 28F9				mov	bp,28F9h
020C:839D  83 C7 07				add	di,7
020C:83A0  B9 2908				mov	cx,2908h
020C:83A3  81 E9 28F9				sub	cx,28F9h
020C:83A7  9A 1491:6B88		;*		call	far ptr sub_225		;*(1491:6B88)
020C:83A7  9A					db	9Ah
020C:83A8  6B88 1491				dw	6B88h, 1491h
020C:83AC  3C 00				cmp	al,0
020C:83AE  74 1B				je	locloop_1283		; Jump if equal
020C:83B0  55					push	bp
020C:83B1  53					push	bx
020C:83B2  BD 2904				mov	bp,2904h
020C:83B5  3E: C6 46 00 5F			mov	byte ptr ds:[bp],5Fh	; '_'
020C:83BA  45					inc	bp
020C:83BB  32 E4				xor	ah,ah			; Zero register
020C:83BD  33 DB				xor	bx,bx			; Zero register
020C:83BF  9A 1491:0300		;*		call	far ptr sub_159		;*(1491:0300)
020C:83BF  9A					db	9Ah
020C:83C0  0300 1491				dw	300h, 1491h
020C:83C4  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020C:83C9  5B					pop	bx
020C:83CA  5D					pop	bp

020C:83CB			locloop_1283:
020C:83CB  3E: 8A 46 00				mov	al,ds:[bp]
020C:83CF  88 05				mov	[di],al
020C:83D1  45					inc	bp
020C:83D2  47					inc	di
020C:83D3  E2 F6				loop	locloop_1283		; Loop if cx > 0

020C:83D5  E8 04B8				call	sub_107			; (8890)
020C:83D8  BD 2904				mov	bp,2904h
020C:83DB  3E: C6 46 00 72			mov	byte ptr ds:[bp],72h	; 'r'
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 281

020C:83E0  45					inc	bp
020C:83E1  3E: C6 46 00 79			mov	byte ptr ds:[bp],79h	; 'y'
020C:83E6  45					inc	bp
020C:83E7			loc_1284:
020C:83E7  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020C:83EC  45					inc	bp
020C:83ED  81 FD 2908				cmp	bp,2908h
020C:83F1  72 F4				jb	loc_1284		; Jump if below
020C:83F3			loc_1285:
020C:83F3  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:83F8  9C					pushf				; Push flags
020C:83F9  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:83FE  5A					pop	dx
020C:83FF  8E C2				mov	es,dx
020C:8401  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:8406  5A					pop	dx
020C:8407  75 0A				jnz	loc_1286		; Jump if not zero
020C:8409  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:840E  74 03				je	loc_1286		; Jump if equal
020C:8410  E8 FA9D				call	sub_97			; (7EB0)
020C:8413			loc_1286:
020C:8413  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:8418  9D					popf				; Pop flags
020C:8419  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:841E  5E					pop	si
020C:841F  5F					pop	di
020C:8420  5A					pop	dx
020C:8421  59					pop	cx
020C:8422  5B					pop	bx
020C:8423			loc_1287:
020C:8423  C3					retn
				sub_104		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:8424			sub_105		proc	near
020C:8424  8B F7				mov	si,di
020C:8426  E8 06B7				call	sub_108			; (8AE0)
020C:8429  8B 1E 2154				mov	bx,data_379		; (020C:2154=5CE9h)
020C:842D  BA 0001				mov	dx,1
020C:8430  A8 02				test	al,2
020C:8432  75 03				jnz	loc_1288		; Jump if not zero
020C:8434  BA 0004				mov	dx,4
020C:8437			loc_1288:
020C:8437  06					push	es
020C:8438  8E 06 2158				mov	es,data_381		; (020C:2158=5F63h)
020C:843C  8B 3E 215A				mov	di,data_382		; (020C:215A=0FFFFh)
020C:8440  A8 01				test	al,1
020C:8442  74 04				jz	loc_1289		; Jump if zero
020C:8444  26: 8B 5D 02				mov	bx,es:[di+2]
020C:8448			loc_1289:
020C:8448  26: 8B 05				mov	ax,es:[di]
020C:844B  07					pop	es
020C:844C  E8 E0E1				call	sub_69			; (6530)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 282

020C:844F  73 0F				jnc	loc_1290		; Jump if carry=0
020C:8451  8B F7				mov	si,di
020C:8453  E8 068A				call	sub_108			; (8AE0)
020C:8456  A1 2156				mov	ax,data_380		; (020C:2156=0FFFFh)
020C:8459  40					inc	ax
020C:845A  A3 3D87				mov	data_640,ax		; (020C:3D87=4B1h)
020C:845D  A3 3D89				mov	data_641,ax		; (020C:3D89=0E2D3h)
020C:8460			loc_1290:
020C:8460  C3					retn
				sub_105		endp

							                        ;* No entry point to code
020C:8461  AC					lodsb				; String [si] to al
020C:8462  4F					dec	di
020C:8463  B9 C64F				mov	cx,0C64Fh
020C:8466  4F					dec	di
020C:8467  D5 4F		;*		aad	4Fh			; 'O' undocumented inst
020C:8467  D5 4F				db	0D5h, 4Fh
020C:8469  E4 4F				in	al,4Fh			; port 4Fh ??I/O Non-standard
020C:846B  0E					push	cs
020C:846C  50					push	ax
020C:846D  33 50 6B				xor	dx,[bx+si+6Bh]
020C:8470  50					push	ax
020C:8471  9D					popf				; Pop flags
020C:8472  50					push	ax
020C:8473  9D					popf				; Pop flags
020C:8474  50					push	ax
020C:8475  9D					popf				; Pop flags
020C:8476  50					push	ax
020C:8477  AB					stosw				; Store ax to es:[di]
020C:8478  50					push	ax
020C:8479  C7					db	0C7h
020C:847A  50					push	ax
020C:847B  CF					iret				; Interrupt return
							                        ;* No entry point to code
020C:847C  50					push	ax
020C:847D  11 53 11				adc	[bp+di+11h],dx
020C:8480  53					push	bx
020C:8481  D7					xlat				; al=[al+[bx]] table
020C:8482  50					push	ax
020C:8483  D7					xlat				; al=[al+[bx]] table
020C:8484  50					push	ax
020C:8485  D7					xlat				; al=[al+[bx]] table
020C:8486  50					push	ax
020C:8487  D7					xlat				; al=[al+[bx]] table
020C:8488  50					push	ax
020C:8489  11 53 11				adc	[bp+di+11h],dx
020C:848C  53					push	bx
020C:848D  96					xchg	si,ax
020C:848E  51					push	cx
020C:848F  9E					sahf				; Store ah into flags
020C:8490  51					push	cx
020C:8491  B9 C151				mov	cx,0C151h
020C:8494  51					push	cx
020C:8495  C9					db	0C9h
020C:8496  51					push	cx
020C:8497  EE					out	dx,al			; port 0, DMA-1 bas&add ch 0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 283

020C:8498  51					push	cx
020C:8499  87 DB				xchg	bx,bx
020C:849B  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:849C			sub_106		proc	near
020C:849C  50					push	ax
020C:849D  53					push	bx
020C:849E  57					push	di
020C:849F  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:84A4  06					push	es
020C:84A5  26: 8A 45 05				mov	al,es:[di+5]
020C:84A9  24 0F				and	al,0Fh
020C:84AB  75 03				jnz	loc_1291		; Jump if not zero
020C:84AD  E9 03A1				jmp	loc_1322		; (8851)
020C:84B0			loc_1291:
020C:84B0  B0 2E				mov	al,2Eh			; '.'
020C:84B2  26: 80 7D 08 3F			cmp	byte ptr es:[di+8],3Fh	; '?'
020C:84B7  74 0C				je	loc_1292		; Jump if equal
020C:84B9  B0 FA				mov	al,0FAh
020C:84BB  F7 06 3D1A 0080			test	data_595,80h		; (020C:3D1A=176Ah)
020C:84C1  74 02				jz	loc_1292		; Jump if zero
020C:84C3  B0 2C				mov	al,2Ch			; ','
020C:84C5			loc_1292:
020C:84C5  A2 19BD				mov	byte ptr ds:[19BDh],al	; (020C:19BD=14h)
020C:84C8  80 3E 22FB 00			cmp	data_444,0		; (020C:22FB=0)
020C:84CD  74 03				je	loc_1293		; Jump if equal
020C:84CF  A2 19D2				mov	data_230,al		; (020C:19D2=0FBh)
020C:84D2			loc_1293:
020C:84D2  26: 8A 45 09				mov	al,es:[di+9]
020C:84D6  3C 1B				cmp	al,1Bh
020C:84D8  76 03				jbe	loc_1294		; Jump if below or =
020C:84DA  E9 02F1				jmp	loc_1313		; (87CE)
020C:84DD			loc_1294:
020C:84DD  8A D8				mov	bl,al
020C:84DF  32 FF				xor	bh,bh			; Zero register
020C:84E1  D1 E3				shl	bx,1			; Shift w/zeros fill
020C:84E3  81 C3 4F21				add	bx,4F21h
020C:84E7  2E: 8B 1F				mov	bx,cs:[bx]
020C:84EA  FF E3				jmp	bx			;*
							                        ;* No entry point to code
020C:84EC  C6 06 216F 00			mov	data_393,0		; (020C:216F=0FFh)
020C:84F1  C6 06 2172 01			mov	byte ptr ds:[2172h],1	; (020C:2172=0DBh)
020C:84F6  E9 0358				jmp	loc_1322		; (8851)
							                        ;* No entry point to code
020C:84F9  C6 06 216F 05			mov	data_393,5		; (020C:216F=0FFh)
020C:84FE  C6 06 4568 04			mov	data_709,4		; (020C:4568=0E0h)
020C:8503  E9 034B				jmp	loc_1322		; (8851)
							                        ;* No entry point to code
020C:8506  F6 06 22B7 05			test	data_430,5		; (020C:22B7=0)
020C:850B  74 05				jz	loc_1295		; Jump if zero
020C:850D  C6 06 3C08 01			mov	data_572,1		; (020C:3C08=0B6h)
020C:8512			loc_1295:
020C:8512  E9 033C				jmp	loc_1322		; (8851)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 284

							                        ;* No entry point to code
020C:8515  9A 1491:50F3		;*		call	far ptr sub_207		;*(1491:50F3)
020C:8515  9A					db	9Ah
020C:8516  50F3 1491				dw	50F3h, 1491h
020C:851A  B0 03				mov	al,3
020C:851C  9A 1491:2770		;*		call	far ptr sub_175		;*(1491:2770)
020C:851C  9A					db	9Ah
020C:851D  2770 1491				dw	2770h, 1491h
020C:8521  E9 032D				jmp	loc_1322		; (8851)
							                        ;* No entry point to code
020C:8524  C6 06 216F 00			mov	data_393,0		; (020C:216F=0FFh)
020C:8529  C6 06 2172 01			mov	byte ptr ds:[2172h],1	; (020C:2172=0DBh)
020C:852E  F6 06 2308 04			test	data_455,4		; (020C:2308=0)
020C:8533  74 16				jz	loc_1296		; Jump if zero
020C:8535  80 26 2308 CF			and	data_455,0CFh		; (020C:2308=0)
020C:853A  80 26 2308 FC			and	data_455,0FCh		; (020C:2308=0)
020C:853F  80 26 2308 FB			and	data_455,0FBh		; (020C:2308=0)
020C:8544  B0 42				mov	al,42h			; 'B'
020C:8546  9A 1491:2770		;*		call	far ptr sub_175		;*(1491:2770)
020C:8546  9A					db	9Ah
020C:8547  2770 1491				dw	2770h, 1491h
020C:854B			loc_1296:
020C:854B  E9 0303				jmp	loc_1322		; (8851)
							                        ;* No entry point to code
020C:854E  C6 06 216F 00			mov	data_393,0		; (020C:216F=0FFh)
020C:8553  C6 06 2172 01			mov	byte ptr ds:[2172h],1	; (020C:2172=0DBh)
020C:8558  F6 06 2308 04			test	data_455,4		; (020C:2308=0)
020C:855D  75 11				jnz	loc_1297		; Jump if not zero
020C:855F  80 0E 2308 04			or	data_455,4		; (020C:2308=0)
020C:8564  80 0E 2308 03			or	data_455,3		; (020C:2308=0)
020C:8569  B0 41				mov	al,41h			; 'A'
020C:856B  9A 1491:2770		;*		call	far ptr sub_175		;*(1491:2770)
020C:856B  9A					db	9Ah
020C:856C  2770 1491				dw	2770h, 1491h
020C:8570			loc_1297:
020C:8570  E9 02DE				jmp	loc_1322		; (8851)
							                        ;* No entry point to code
020C:8573  26: 8B 45 0A				mov	ax,es:[di+0Ah]
020C:8577  09 06 3D18				or	data_594,ax		; (020C:3D18=2680h)
020C:857B  26: 8A 45 0C				mov	al,es:[di+0Ch]
020C:857F  32 E4				xor	ah,ah			; Zero register
020C:8581  09 06 3D1A				or	data_595,ax		; (020C:3D1A=176Ah)
020C:8585  26: 8B 45 0D				mov	ax,es:[di+0Dh]
020C:8589  21 06 3D18				and	data_594,ax		; (020C:3D18=2680h)
020C:858D  26: 8A 45 0F				mov	al,es:[di+0Fh]
020C:8591  B4 FF				mov	ah,0FFh
020C:8593  21 06 3D1A				and	data_595,ax		; (020C:3D1A=176Ah)
020C:8597  B0 00				mov	al,0
020C:8599  F7 06 3D18 0002			test	data_594,2		; (020C:3D18=2680h)
020C:859F  74 02				jz	loc_1298		; Jump if zero
020C:85A1  B0 01				mov	al,1
020C:85A3			loc_1298:
020C:85A3  9A 1491:6C90		;*		call	far ptr sub_229		;*(1491:6C90)
020C:85A3  9A					db	9Ah
020C:85A4  6C90 1491				dw	6C90h, 1491h
020C:85A8  E9 02A6				jmp	loc_1322		; (8851)
							                        ;* No entry point to code
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 285

020C:85AB  26: 8B 45 0A				mov	ax,es:[di+0Ah]
020C:85AF  A3 2334				mov	data_471,ax		; (020C:2334=0)
020C:85B2  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020C:85B6  A3 2332				mov	data_470,ax		; (020C:2332=0)
020C:85B9  26: 8B 45 0E				mov	ax,es:[di+0Eh]
020C:85BD  A3 2314				mov	data_462,ax		; (020C:2314=0)
020C:85C0  26: 8B 45 10				mov	ax,es:[di+10h]
020C:85C4  A3 2318				mov	data_463,ax		; (020C:2318=0)
020C:85C7  26: 8B 45 12				mov	ax,es:[di+12h]
020C:85CB  A3 2324				mov	data_467,ax		; (020C:2324=0)
020C:85CE  26: 8B 45 14				mov	ax,es:[di+14h]
020C:85D2  A3 2328				mov	data_468,ax		; (020C:2328=0)
020C:85D5  C6 06 22F4 05			mov	data_439,5		; (020C:22F4=0FFh)
020C:85DA  E9 0274				jmp	loc_1322		; (8851)
							                        ;* No entry point to code
020C:85DD  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020C:85E1  89 1E 3CF8				mov	word ptr ds:[3CF8h],bx	; (020C:3CF8=0FE04h)
020C:85E5  A2 3CFA				mov	byte ptr ds:[3CFAh],al	; (020C:3CFA=6)
020C:85E8  E9 0266				jmp	loc_1322		; (8851)
							                        ;* No entry point to code
020C:85EB  F7 06 3D18 4000			test	data_594,4000h		; (020C:3D18=2680h)
020C:85F1  75 0C				jnz	loc_1299		; Jump if not zero
020C:85F3  81 0E 3D18 4000			or	data_594,4000h		; (020C:3D18=2680h)
020C:85F9  C7 06 3D16 BFFF			mov	word ptr ds:[3D16h],0BFFFh	; (020C:3D16=1491h)
020C:85FF			loc_1299:
020C:85FF  C6 06 2173 00			mov	data_396,0		; (020C:2173=2)
020C:8604  E9 024A				jmp	loc_1322		; (8851)
							                        ;* No entry point to code
020C:8607  C6 06 3C09 01			mov	data_573,1		; (020C:3C09=20h)
020C:860C  E9 0242				jmp	loc_1322		; (8851)
							                        ;* No entry point to code
020C:860F  C6 06 3C0A 01			mov	data_574,1		; (020C:3C0A=0C6h)
020C:8614  E9 023A				jmp	loc_1322		; (8851)
							                        ;* No entry point to code
020C:8617  FF 36 2FB0				push	data_526		; (020C:2FB0=0DC3h)
020C:861B  FF 36 2FA2				push	data_520		; (020C:2FA2=0CFAh)
020C:861F  FF 36 1D73				push	data_333		; (020C:1D73=0)
020C:8623  C6 06 3C05 01			mov	data_569,1		; (020C:3C05=0FAh)
020C:8628  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020C:862C  A3 2FB0				mov	data_526,ax		; (020C:2FB0=0DC3h)
020C:862F  26: 8B 45 0A				mov	ax,es:[di+0Ah]
020C:8633  A3 2FA2				mov	data_520,ax		; (020C:2FA2=0CFAh)
020C:8636  26: 8A 45 0E				mov	al,es:[di+0Eh]
020C:863A  A2 3C06				mov	data_570,al		; (020C:3C06=0FBh)
020C:863D  26: 8A 45 09				mov	al,es:[di+9]
020C:8641  B7 20				mov	bh,20h			; ' '
020C:8643  A8 01				test	al,1
020C:8645  74 03				jz	loc_1300		; Jump if zero
020C:8647  80 CF 10				or	bh,10h
020C:864A			loc_1300:
020C:864A  C6 06 1D44 00			mov	data_308,0		; (020C:1D44=0)
020C:864F  C6 06 1D45 00			mov	data_309,0		; (020C:1D45=0)
020C:8654  3C 11				cmp	al,11h
020C:8656  77 05				ja	loc_1301		; Jump if above
020C:8658  C6 06 1D44 4F			mov	data_308,4Fh		; (020C:1D44=0) 'O'
020C:865D			loc_1301:
020C:865D  B2 00				mov	dl,0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 286

020C:865F  E8 F38C				call	sub_90			; (79EE)
020C:8662  BE 3C02				mov	si,3C02h
020C:8665  9A 1491:3B10		;*		call	far ptr sub_196		;*(1491:3B10)
020C:8665  9A					db	9Ah
020C:8666  3B10 1491				dw	3B10h, 1491h
020C:866A  C6 06 3C05 02			mov	data_569,2		; (020C:3C05=0FAh)
020C:866F  C6 06 3C06 00			mov	data_570,0		; (020C:3C06=0FBh)
020C:8674  C6 06 1D44 00			mov	data_308,0		; (020C:1D44=0)
020C:8679  C6 06 1D45 00			mov	data_309,0		; (020C:1D45=0)
020C:867E  8F 06 1D73				pop	data_333		; (020C:1D73=0)
020C:8682  8F 06 2FA2				pop	data_520		; (020C:2FA2=0CFAh)
020C:8686  8F 06 2FB0				pop	data_526		; (020C:2FB0=0DC3h)
020C:868A  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:868F  9C					pushf				; Push flags
020C:8690  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:8695  5A					pop	dx
020C:8696  8E C2				mov	es,dx
020C:8698  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:869D  5A					pop	dx
020C:869E  75 0A				jnz	loc_1302		; Jump if not zero
020C:86A0  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:86A5  74 03				je	loc_1302		; Jump if equal
020C:86A7  E8 F806				call	sub_97			; (7EB0)
020C:86AA			loc_1302:
020C:86AA  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:86AF  9D					popf				; Pop flags
020C:86B0  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:86B5  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:86BA  06					push	es
020C:86BB  BA 0001				mov	dx,1
020C:86BE  26: 8A 45 09				mov	al,es:[di+9]
020C:86C2  3C 11				cmp	al,11h
020C:86C4  77 03				ja	loc_1303		; Jump if above
020C:86C6  BA 0004				mov	dx,4
020C:86C9			loc_1303:
020C:86C9  A1 2156				mov	ax,data_380		; (020C:2156=0FFFFh)
020C:86CC  8B 1E 2154				mov	bx,data_379		; (020C:2154=5CE9h)
020C:86D0  E8 DE5D				call	sub_69			; (6530)
020C:86D3  E9 017B				jmp	loc_1322		; (8851)
							                        ;* No entry point to code
020C:86D6  9A 1491:5278		;*		call	far ptr sub_209		;*(1491:5278)
020C:86D6  9A					db	9Ah
020C:86D7  5278 1491				dw	5278h, 1491h
020C:86DB  E9 0173				jmp	loc_1322		; (8851)
							                        ;* No entry point to code
020C:86DE  80 3E 1790 01			cmp	data_195,1		; (020C:1790=0)
020C:86E3  75 11				jne	loc_1304		; Jump if not equal
020C:86E5  26: 8A 45 06				mov	al,es:[di+6]
020C:86E9  B4 13				mov	ah,13h
020C:86EB  BB 0007				mov	bx,7
020C:86EE  BE 325C				mov	si,325Ch
020C:86F1  9A 1491:692C		;*		call	far ptr sub_223		;*(1491:692C)
020C:86F1  9A					db	9Ah
020C:86F2  692C 1491				dw	692Ch, 1491h
020C:86F6			loc_1304:
020C:86F6  E9 0158				jmp	loc_1322		; (8851)
							                        ;* No entry point to code
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 287

020C:86F9  9A 1491:7CF0		;*		call	far ptr sub_243		;*(1491:7CF0)
020C:86F9  9A					db	9Ah
020C:86FA  7CF0 1491				dw	7CF0h, 1491h
020C:86FE  E9 0151				jmp	loc_1323		; (8852)
							                        ;* No entry point to code
020C:8701  C7 06 1960 0000			mov	data_224,0		; (020C:1960=424Bh)
020C:8707  EB 06				jmp	short loc_1305		; (870F)
							                        ;* No entry point to code
020C:8709  C7 06 1960 FFFF			mov	data_224,0FFFFh		; (020C:1960=424Bh)
020C:870F			loc_1305:
020C:870F  80 3E 178B 02			cmp	data_191,2		; (020C:178B=0)
020C:8714  75 05				jne	loc_1306		; Jump if not equal
020C:8716  26: 80 4D 04 80			or	byte ptr es:[di+4],80h
020C:871B			loc_1306:
020C:871B  C6 06 3D0D 01			mov	data_589,1		; (020C:3D0D=70h)
020C:8720  BD 1A43				mov	bp,1A43h
020C:8723  BE 2F11				mov	si,2F11h
020C:8726  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:8726  9A					db	9Ah
020C:8727  67E0 1491				dw	67E0h, 1491h
020C:872B  E9 0123				jmp	loc_1322		; (8851)
							                        ;* No entry point to code
020C:872E  26: 8B 45 10				mov	ax,es:[di+10h]
020C:8732  A3 472B				mov	data_739,ax		; (020C:472B=720Ah)
020C:8735  26: 8B 5D 0E				mov	bx,es:[di+0Eh]
020C:8739  89 1E 4729				mov	data_738,bx		; (020C:4729=0FB83h)
020C:873D  89 1E 472F				mov	data_741,bx		; (020C:472F=0FFFBh)
020C:8741  26: 8B 45 12				mov	ax,es:[di+12h]
020C:8745  A3 472D				mov	data_740,ax		; (020C:472D=814Fh)
020C:8748  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020C:874C  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020C:8750  FF 36 2FAE				push	data_525		; (020C:2FAE=0DA5h)
020C:8754  FF 36 2FB0				push	data_526		; (020C:2FB0=0DC3h)
020C:8758  8A 16 3C07				mov	dl,data_571		; (020C:3C07=0E8h)
020C:875C  52					push	dx
020C:875D  01BA			data_803	dw	1BAh			; Data table (indexed access)
020C:875F  00 C6				add	dh,al
020C:8761  06					push	es
020C:8762  07					pop	es
020C:8763  3C 01				cmp	al,1
020C:8765  55					push	bp
020C:8766  BD 2FF0				mov	bp,2FF0h
020C:8769  90					nop
020C:876A  0E E8 FA16				callf	sub_101			; (8184)
020C:876E  5D					pop	bp
020C:876F  5A					pop	dx
020C:8770  88 16 3C07				mov	data_571,dl		; (020C:3C07=0E8h)
020C:8774  8F 06 2FB0				pop	data_526		; (020C:2FB0=0DC3h)
020C:8778  8F 06 2FAE				pop	data_525		; (020C:2FAE=0DA5h)
020C:877C  73 47				jnc	loc_1311		; Jump if carry=0
020C:877E			loc_1307:
020C:877E  8A26			data_804	dw	8A26h			; Data table (indexed access)
020C:8780  4D					dec	bp
020C:8781  04 80				add	al,80h
020C:8783  E1 1F				loopz	$+21h			; Loop if zf=1, cx>0

020C:8785  80 F9 1F				cmp	cl,1Fh
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 288

020C:8788  75 07				jne	loc_1308		; Jump if not equal
020C:878A  26: 80 7D 09 22			cmp	byte ptr es:[di+9],22h	; '"'
020C:878F  74 2B				je	loc_1310		; Jump if equal
020C:8791			loc_1308:
020C:8791  50					push	ax
020C:8792  BB 2F78				mov	bx,2F78h
020C:8795  26: 8A 45 05				mov	al,es:[di+5]
020C:8799  25 000F				and	ax,0Fh
020C:879C  D7					xlat				; al=[al+[bx]] table
020C:879D  0A C0				or	al,al			; Zero ?
020C:879F  75 04				jnz	loc_1309		; Jump if not zero
020C:87A1  26: 8A 45 06				mov	al,es:[di+6]
020C:87A5			loc_1309:
020C:87A5  03 F8				add	di,ax
020C:87A7  58					pop	ax
020C:87A8  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020C:0000=1828h)
020C:87AD  73 16				jae	loc_1311		; Jump if above or =
020C:87AF  26: 3B 1D				cmp	bx,es:[di]
020C:87B2  75 11				jne	loc_1311		; Jump if not equal
020C:87B4  26: 3B 45 02				cmp	ax,es:[di+2]
020C:87B8  75 0B				jne	loc_1311		; Jump if not equal
020C:87BA  EB C2				jmp	short loc_1307		; (877E)
020C:87BC			loc_1310:
020C:87BC  26: 8B 45 0A				mov	ax,es:[di+0Ah]
020C:87C0  A3 4727				mov	data_737,ax		; (020C:4727=0B74h)
020C:87C3  EB 06				jmp	short loc_1312		; (87CB)
020C:87C5			loc_1311:
020C:87C5  C7 06 472B 0000			mov	data_739,0		; (020C:472B=720Ah)
020C:87CB			loc_1312:
020C:87CB  E9 0083				jmp	loc_1322		; (8851)
020C:87CE			loc_1313:
020C:87CE  3C 20				cmp	al,20h			; ' '
020C:87D0  72 7F				jb	loc_1322		; Jump if below
020C:87D2  3C 27				cmp	al,27h			; '''
020C:87D4  76 1A				jbe	loc_1315		; Jump if below or =
020C:87D6  3C 40				cmp	al,40h			; '@'
020C:87D8  72 14				jb	loc_1314		; Jump if below
020C:87DA  3C 44				cmp	al,44h			; 'D'
020C:87DC  76 19				jbe	loc_1316		; Jump if below or =
020C:87DE  3C 80				cmp	al,80h
020C:87E0  72 0C				jb	loc_1314		; Jump if below
020C:87E2  3C 8C				cmp	al,8Ch
020C:87E4  76 26				jbe	loc_1318		; Jump if below or =
020C:87E6  3C 90				cmp	al,90h
020C:87E8  72 04				jb	loc_1314		; Jump if below
020C:87EA  3C 96				cmp	al,96h
020C:87EC  76 49				jbe	loc_1321		; Jump if below or =
020C:87EE			loc_1314:
020C:87EE  EB 61				jmp	short loc_1322		; (8851)
020C:87F0			loc_1315:
020C:87F0  9A 1491:4324		;*		call	far ptr sub_197		;*(1491:4324)
020C:87F0  9A					db	9Ah
020C:87F1  4324 1491				dw	4324h, 1491h
020C:87F5  EB 5A				jmp	short loc_1322		; (8851)
020C:87F7			loc_1316:
020C:87F7  F7 06 3D18 4000			test	data_594,4000h		; (020C:3D18=2680h)
020C:87FD  75 0B				jnz	loc_1317		; Jump if not zero
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 289

020C:87FF  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020C:8803  89 1E 2174				mov	data_397,bx		; (020C:2174=0FB01h)
020C:8807  A2 2173				mov	data_396,al		; (020C:2173=2)
020C:880A			loc_1317:
020C:880A  EB 45				jmp	short loc_1322		; (8851)
020C:880C			loc_1318:
020C:880C  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020C:8810  BE 2314				mov	si,2314h
020C:8813  24 0F				and	al,0Fh
020C:8815  3C 07				cmp	al,7
020C:8817  72 12				jb	loc_1319		; Jump if below
020C:8819  BE 2330				mov	si,2330h
020C:881C  2C 07				sub	al,7
020C:881E  74 0D				jz	loc_1320		; Jump if zero
020C:8820  3C 02				cmp	al,2
020C:8822  77 09				ja	loc_1320		; Jump if above
020C:8824  C6 06 22F4 03			mov	data_439,3		; (020C:22F4=0FFh)
020C:8829  EB 02				jmp	short loc_1320		; (882D)
020C:882B			loc_1319:
020C:882B  D0 E0				shl	al,1			; Shift w/zeros fill
020C:882D			loc_1320:
020C:882D  D0 E0				shl	al,1			; Shift w/zeros fill
020C:882F  32 E4				xor	ah,ah			; Zero register
020C:8831  03 F0				add	si,ax
020C:8833  89 1C				mov	[si],bx
020C:8835  EB 1A				jmp	short loc_1322		; (8851)
020C:8837			loc_1321:
020C:8837  2C 90				sub	al,90h
020C:8839  32 E4				xor	ah,ah			; Zero register
020C:883B  D1 E0				shl	ax,1			; Shift w/zeros fill
020C:883D  D1 E0				shl	ax,1			; Shift w/zeros fill
020C:883F  BE 2314				mov	si,2314h
020C:8842  03 F0				add	si,ax
020C:8844  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020C:8848  89 1C				mov	[si],bx
020C:884A  26: 8B 5D 0C				mov	bx,es:[di+0Ch]
020C:884E  89 5C 02				mov	[si+2],bx
020C:8851			loc_1322:
020C:8851  F8					clc				; Clear carry flag
020C:8852			loc_1323:
020C:8852  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:8857  9C					pushf				; Push flags
020C:8858  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:885D  5A					pop	dx
020C:885E  8E C2				mov	es,dx
020C:8860  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:8865  5A					pop	dx
020C:8866  75 0A				jnz	loc_1324		; Jump if not zero
020C:8868  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:886D  74 03				je	loc_1324		; Jump if equal
020C:886F  E8 F63E				call	sub_97			; (7EB0)
020C:8872			loc_1324:
020C:8872  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:8877  9D					popf				; Pop flags
020C:8878  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:887D  5F					pop	di
020C:887E  5B					pop	bx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 290

020C:887F  58					pop	ax
020C:8880  C3					retn
				sub_106		endp

020C:8881  000F[00]				db	15 dup (0)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:8890			sub_107		proc	near
020C:8890  50					push	ax
020C:8891  53					push	bx
020C:8892  51					push	cx
020C:8893  52					push	dx
020C:8894  56					push	si
020C:8895  57					push	di
020C:8896  55					push	bp
020C:8897  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:889C  1E					push	ds
020C:889D  E8 F130				call	sub_84			; (79D0)
020C:88A0  BD 2F78				mov	bp,2F78h
020C:88A3  BE 4165				mov	si,4165h
020C:88A6  8B 1C				mov	bx,[si]
020C:88A8  F6 06 22EA 80			test	data_433,80h		; (020C:22EA=1)
020C:88AD  74 2B				jz	loc_1327		; Jump if zero
020C:88AF  50					push	ax
020C:88B0  A0 22EB				mov	al,data_434		; (020C:22EB=0)
020C:88B3  3A 06 178F				cmp	al,data_194		; (020C:178F=0)
020C:88B7  77 06				ja	loc_1325		; Jump if above
020C:88B9  3A 06 178A				cmp	al,data_190		; (020C:178A=0)
020C:88BD  75 1A				jne	loc_1326		; Jump if not equal
020C:88BF			loc_1325:
020C:88BF  A1 22EC				mov	ax,data_435		; (020C:22EC=101h)
020C:88C2  3B C3				cmp	ax,bx
020C:88C4  75 13				jne	loc_1326		; Jump if not equal
020C:88C6  A1 22EE				mov	ax,data_436		; (020C:22EE=1)
020C:88C9  3B 44 02				cmp	ax,[si+2]
020C:88CC  75 0B				jne	loc_1326		; Jump if not equal
020C:88CE  9A 1491:3108		;*		call	far ptr sub_183		;*(1491:3108)
020C:88CE  9A					db	9Ah
020C:88CF  3108 1491				dw	3108h, 1491h
020C:88D3  9A 1491:0800		;*		call	far ptr sub_163		;*(1491:0800)
020C:88D3  9A					db	9Ah
020C:88D4  0800 1491				dw	800h, 1491h
020C:88D8  90					nop
020C:88D9			loc_1326:
020C:88D9  58					pop	ax
020C:88DA			loc_1327:
020C:88DA  8A 44 05				mov	al,[si+5]
020C:88DD  24 0C				and	al,0Ch
020C:88DF  3C 08				cmp	al,8
020C:88E1  74 59				je	loc_1332		; Jump if equal
020C:88E3  3C 04				cmp	al,4
020C:88E5  74 0A				je	loc_1328		; Jump if equal
020C:88E7  3C 00				cmp	al,0
020C:88E9  74 15				je	loc_1329		; Jump if equal
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 291

020C:88EB  BB 0001				mov	bx,1
020C:88EE  E9 E9FD				jmp	loc_1076		; (72EE)
020C:88F1			loc_1328:
020C:88F1  E8 F610				call	sub_98			; (7F04)
020C:88F4  83 06 1D2A 01			add	data_296,1		; (020C:1D2A=0)
020C:88F9  83 16 1D2C 00			adc	data_297,0		; (020C:1D2C=0)
020C:88FE  EB 4B				jmp	short loc_1333		; (894B)
020C:8900			loc_1329:
020C:8900  80 7C 04 5F				cmp	byte ptr [si+4],5Fh	; '_'
020C:8904  75 27				jne	loc_1331		; Jump if not equal
020C:8906  80 7C 05 00				cmp	byte ptr [si+5],0
020C:890A  74 12				je	loc_1330		; Jump if equal
020C:890C  80 7C 09 8D				cmp	byte ptr [si+9],8Dh
020C:8910  74 0C				je	loc_1330		; Jump if equal
020C:8912  80 7C 09 14				cmp	byte ptr [si+9],14h
020C:8916  74 06				je	loc_1330		; Jump if equal
020C:8918  80 7C 09 15				cmp	byte ptr [si+9],15h
020C:891C  75 0F				jne	loc_1331		; Jump if not equal
020C:891E			loc_1330:
020C:891E  E8 F0D9				call	sub_92			; (79FA)
020C:8921  83 06 1D3E 01			add	data_306,1		; (020C:1D3E=0)
020C:8926  83 16 1D40 00			adc	data_307,0		; (020C:1D40=0)
020C:892B  EB 1E				jmp	short loc_1333		; (894B)
020C:892D			loc_1331:
020C:892D  E8 F640				call	sub_99			; (7F70)
020C:8930  83 06 1D32 01			add	data_300,1		; (020C:1D32=0)
020C:8935  83 16 1D34 00			adc	data_301,0		; (020C:1D34=0)
020C:893A  EB 0F				jmp	short loc_1333		; (894B)
020C:893C			loc_1332:
020C:893C  E8 F69D				call	sub_100			; (7FDC)
020C:893F  83 06 1D2E 01			add	data_298,1		; (020C:1D2E=0)
020C:8944  83 16 1D30 00			adc	data_299,0		; (020C:1D30=0)
020C:8949  EB 00				jmp	short loc_1333		; (894B)
020C:894B			loc_1333:
020C:894B  26: A1 0000				mov	ax,word ptr es:[0]	; (0000:0000=1068h)
020C:894F  2E: A1 3F74				mov	ax,cs:data_653		; (020C:3F74=4F3Ch)
020C:8953  9A 1491:0BB0		;*		call	far ptr sub_172		;*(1491:0BB0)
020C:8953  9A					db	9Ah
020C:8954  0BB0 1491				dw	0BB0h, 1491h
020C:8958  BF 0008				mov	di,8
020C:895B  8B 1C				mov	bx,[si]
020C:895D  8B 44 02				mov	ax,[si+2]
020C:8960  26: 8B 0E 0002			mov	cx,word ptr es:[2]	; (0000:0002=0A7h)
020C:8965  3B CB				cmp	cx,bx
020C:8967  77 10				ja	loc_1335		; Jump if above
020C:8969  72 09				jc	loc_1334		; Jump if carry Set
020C:896B  26: 8B 0E 0004			mov	cx,word ptr es:[4]	; (0000:0004=18Bh)
020C:8970  3B C8				cmp	cx,ax
020C:8972  77 05				ja	loc_1335		; Jump if above
020C:8974			loc_1334:
020C:8974  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (0000:0006=70h)
020C:8979			loc_1335:
020C:8979  8B 1C				mov	bx,[si]
020C:897B  8B 44 02				mov	ax,[si+2]
020C:897E  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (0000:0000=1068h)
020C:8983  72 02				jb	loc_1336		; Jump if below
020C:8985  EB 6E				jmp	short loc_1344		; (89F5)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 292

020C:8987			loc_1336:
020C:8987  26: 39 1D				cmp	es:[di],bx
020C:898A  73 19				jae	loc_1338		; Jump if above or =
020C:898C  BB 2F78				mov	bx,2F78h
020C:898F  26: 8A 45 05				mov	al,es:[di+5]
020C:8993  25 000F				and	ax,0Fh
020C:8996  D7					xlat				; al=[al+[bx]] table
020C:8997  0A C0				or	al,al			; Zero ?
020C:8999  75 04				jnz	loc_1337		; Jump if not zero
020C:899B  26: 8A 45 06				mov	al,es:[di+6]
020C:899F			loc_1337:
020C:899F  8B C8				mov	cx,ax
020C:89A1  03 F9				add	di,cx
020C:89A3  EB D4				jmp	short loc_1335		; (8979)
020C:89A5			loc_1338:
020C:89A5  74 02				jz	loc_1339		; Jump if zero
020C:89A7  EB 4C				jmp	short loc_1344		; (89F5)
020C:89A9			loc_1339:
020C:89A9  26: 39 45 02				cmp	es:[di+2],ax
020C:89AD  72 2D				jb	loc_1342		; Jump if below
020C:89AF  77 44				ja	loc_1344		; Jump if above
020C:89B1  8A 44 05				mov	al,[si+5]
020C:89B4  24 0C				and	al,0Ch
020C:89B6  3C 04				cmp	al,4
020C:89B8  75 08				jne	loc_1340		; Jump if not equal
020C:89BA  F6 44 05 10				test	byte ptr [si+5],10h
020C:89BE  74 19				jz	loc_1341		; Jump if zero
020C:89C0  EB 33				jmp	short loc_1344		; (89F5)
020C:89C2			loc_1340:
020C:89C2  3C 00				cmp	al,0
020C:89C4  75 13				jne	loc_1341		; Jump if not equal
020C:89C6  8A 44 04				mov	al,[si+4]
020C:89C9  24 1F				and	al,1Fh
020C:89CB  3C 1F				cmp	al,1Fh
020C:89CD  74 26				je	loc_1344		; Jump if equal
020C:89CF  26: 8A 45 04				mov	al,es:[di+4]
020C:89D3  24 1F				and	al,1Fh
020C:89D5  3C 1F				cmp	al,1Fh
020C:89D7  74 1C				je	loc_1344		; Jump if equal
020C:89D9			loc_1341:
020C:89D9  E9 00C1				jmp	loc_1352		; (8A9D)
020C:89DC			loc_1342:
020C:89DC  BB 2F78				mov	bx,2F78h
020C:89DF  26: 8A 45 05				mov	al,es:[di+5]
020C:89E3  25 000F				and	ax,0Fh
020C:89E6  D7					xlat				; al=[al+[bx]] table
020C:89E7  0A C0				or	al,al			; Zero ?
020C:89E9  75 04				jnz	loc_1343		; Jump if not zero
020C:89EB  26: 8A 45 06				mov	al,es:[di+6]
020C:89EF			loc_1343:
020C:89EF  8B C8				mov	cx,ax
020C:89F1  03 F9				add	di,cx
020C:89F3  EB 84				jmp	short loc_1335		; (8979)
020C:89F5			loc_1344:
020C:89F5  BB 2F78				mov	bx,2F78h
020C:89F8  8A 44 05				mov	al,[si+5]
020C:89FB  25 000F				and	ax,0Fh
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 293

020C:89FE  D7					xlat				; al=[al+[bx]] table
020C:89FF  0A C0				or	al,al			; Zero ?
020C:8A01  75 03				jnz	loc_1345		; Jump if not zero
020C:8A03  8A 44 06				mov	al,[si+6]
020C:8A06			loc_1345:
020C:8A06  8B C8				mov	cx,ax
020C:8A08  26: A1 0000				mov	ax,word ptr es:[0]	; (0000:0000=1068h)
020C:8A0C  03 C1				add	ax,cx
020C:8A0E  73 03				jnc	loc_1346		; Jump if carry=0
020C:8A10  E9 E7D7				jmp	loc_1069		; (71EA)
020C:8A13			loc_1346:
020C:8A13  BE 4165				mov	si,4165h
020C:8A16  8B 04				mov	ax,[si]
020C:8A18  3B 06 2154				cmp	ax,data_379		; (020C:2154=5CE9h)
020C:8A1C  75 41				jne	loc_1350		; Jump if not equal
020C:8A1E  8B 44 02				mov	ax,[si+2]
020C:8A21  3B 06 2156				cmp	ax,data_380		; (020C:2156=0FFFFh)
020C:8A25  76 38				jbe	loc_1350		; Jump if below or =
020C:8A27  8A 5C 05				mov	bl,[si+5]
020C:8A2A  80 E3 0C				and	bl,0Ch
020C:8A2D  80 FB 08				cmp	bl,8
020C:8A30  74 0C				je	loc_1347		; Jump if equal
020C:8A32  80 FB 04				cmp	bl,4
020C:8A35  74 12				je	loc_1348		; Jump if equal
020C:8A37  80 FB 00				cmp	bl,0
020C:8A3A  74 18				je	loc_1349		; Jump if equal
020C:8A3C  EB 21				jmp	short loc_1350		; (8A5F)
020C:8A3E			loc_1347:
020C:8A3E  3B 06 3D89				cmp	ax,data_641		; (020C:3D89=0E2D3h)
020C:8A42  73 1B				jae	loc_1350		; Jump if above or =
020C:8A44  A3 3D89				mov	data_641,ax		; (020C:3D89=0E2D3h)
020C:8A47  EB 16				jmp	short loc_1350		; (8A5F)
020C:8A49			loc_1348:
020C:8A49  3B 06 3D85				cmp	ax,data_639		; (020C:3D85=51C3h)
020C:8A4D  73 10				jae	loc_1350		; Jump if above or =
020C:8A4F  A3 3D85				mov	data_639,ax		; (020C:3D85=51C3h)
020C:8A52  EB 0B				jmp	short loc_1350		; (8A5F)
020C:8A54			loc_1349:
020C:8A54  3B 06 3D87				cmp	ax,data_640		; (020C:3D87=4B1h)
020C:8A58  73 05				jae	loc_1350		; Jump if above or =
020C:8A5A  A3 3D87				mov	data_640,ax		; (020C:3D87=4B1h)
020C:8A5D  EB 00				jmp	short loc_1350		; (8A5F)
020C:8A5F			loc_1350:
020C:8A5F  57					push	di
020C:8A60  51					push	cx
020C:8A61  1E					push	ds
020C:8A62  06					push	es
020C:8A63  1F					pop	ds
020C:8A64  26: 8B 36 0000			mov	si,word ptr es:[0]	; (0000:0000=1068h)
020C:8A69  4E					dec	si
020C:8A6A  8B C6				mov	ax,si
020C:8A6C  2B C7				sub	ax,di
020C:8A6E  40					inc	ax
020C:8A6F  26: 01 0E 0000			add	word ptr es:[0],cx	; (0000:0000=1068h)
020C:8A74  73 03				jnc	loc_1351		; Jump if carry=0
020C:8A76  E9 E771				jmp	loc_1069		; (71EA)
020C:8A79			loc_1351:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 294

020C:8A79  8B FE				mov	di,si
020C:8A7B  03 F9				add	di,cx
020C:8A7D  8B C8				mov	cx,ax
020C:8A7F  FD					std				; Set direction flag
020C:8A80  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:8A82  1F					pop	ds
020C:8A83  59					pop	cx
020C:8A84  5F					pop	di
020C:8A85  BE 4165				mov	si,4165h
020C:8A88  8B 04				mov	ax,[si]
020C:8A8A  26: A3 0002				mov	word ptr es:[2],ax	; (0000:0002=0A7h)
020C:8A8E  8B 44 02				mov	ax,[si+2]
020C:8A91  26: A3 0004				mov	word ptr es:[4],ax	; (0000:0004=18Bh)
020C:8A95  26: 89 3E 0006			mov	word ptr es:[6],di	; (0000:0006=70h)
020C:8A9A  FC					cld				; Clear direction
020C:8A9B  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:8A9D			loc_1352:
020C:8A9D  B9 0050				mov	cx,50h
020C:8AA0  33 C0				xor	ax,ax			; Zero register
020C:8AA2  BF 4165				mov	di,4165h
020C:8AA5  06					push	es
020C:8AA6  1E					push	ds
020C:8AA7  07					pop	es
020C:8AA8  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020C:8AAA  07					pop	es
020C:8AAB  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:8AB0  9C					pushf				; Push flags
020C:8AB1  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:8AB6  5A					pop	dx
020C:8AB7  8E DA				mov	ds,dx
020C:8AB9  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:8ABE  5A					pop	dx
020C:8ABF  75 0A				jnz	loc_1353		; Jump if not zero
020C:8AC1  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:8AC6  74 03				je	loc_1353		; Jump if equal
020C:8AC8  E8 F3E5				call	sub_97			; (7EB0)
020C:8ACB			loc_1353:
020C:8ACB  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:8AD0  9D					popf				; Pop flags
020C:8AD1  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:8AD6  5D					pop	bp
020C:8AD7  5F					pop	di
020C:8AD8  5E					pop	si
020C:8AD9  5A					pop	dx
020C:8ADA  59					pop	cx
020C:8ADB  5B					pop	bx
020C:8ADC  58					pop	ax
020C:8ADD  C3					retn
				sub_107		endp

020C:8ADE  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:8AE0			sub_108		proc	near
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 295

020C:8AE0  E8 CAED				call	sub_40			; (55D0)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

020C:8AE3			sub_109:
020C:8AE3  50					push	ax
020C:8AE4  53					push	bx
020C:8AE5  51					push	cx
020C:8AE6  52					push	dx
020C:8AE7  56					push	si
020C:8AE8  57					push	di
020C:8AE9  55					push	bp
020C:8AEA  26: 8A 44 05				mov	al,es:[si+5]
020C:8AEE  24 0C				and	al,0Ch
020C:8AF0  3C 08				cmp	al,8
020C:8AF2  74 26				je	loc_1356		; Jump if equal
020C:8AF4  3C 04				cmp	al,4
020C:8AF6  74 0A				je	loc_1354		; Jump if equal
020C:8AF8  3C 00				cmp	al,0
020C:8AFA  74 12				je	loc_1355		; Jump if equal
020C:8AFC  BB 0002				mov	bx,2
020C:8AFF  E9 E7EC				jmp	loc_1076		; (72EE)
020C:8B02			loc_1354:
020C:8B02  83 2E 1D2A 01			sub	data_296,1		; (020C:1D2A=0)
020C:8B07  83 1E 1D2C 00			sbb	data_297,0		; (020C:1D2C=0)
020C:8B0C  EB 18				jmp	short loc_1357		; (8B26)
020C:8B0E			loc_1355:
020C:8B0E  83 2E 1D32 01			sub	data_300,1		; (020C:1D32=0)
020C:8B13  83 1E 1D34 00			sbb	data_301,0		; (020C:1D34=0)
020C:8B18  EB 0C				jmp	short loc_1357		; (8B26)
020C:8B1A			loc_1356:
020C:8B1A  83 2E 1D2E 01			sub	data_298,1		; (020C:1D2E=0)
020C:8B1F  83 1E 1D30 00			sbb	data_299,0		; (020C:1D30=0)
020C:8B24  EB 00				jmp	short loc_1357		; (8B26)
020C:8B26			loc_1357:
020C:8B26  BB 2F78				mov	bx,2F78h
020C:8B29  26: 8A 44 05				mov	al,es:[si+5]
020C:8B2D  25 000F				and	ax,0Fh
020C:8B30  D7					xlat				; al=[al+[bx]] table
020C:8B31  0A C0				or	al,al			; Zero ?
020C:8B33  75 04				jnz	loc_1358		; Jump if not zero
020C:8B35  26: 8A 44 06				mov	al,es:[si+6]
020C:8B39			loc_1358:
020C:8B39  8B C8				mov	cx,ax
020C:8B3B  26: 8B 04				mov	ax,es:[si]
020C:8B3E  3B 06 2154				cmp	ax,data_379		; (020C:2154=5CE9h)
020C:8B42  75 71				jne	loc_1365		; Jump if not equal
020C:8B44  26: 8B 44 02				mov	ax,es:[si+2]
020C:8B48  26: 8A 5C 05				mov	bl,es:[si+5]
020C:8B4C  80 E3 0C				and	bl,0Ch
020C:8B4F  80 FB 08				cmp	bl,8
020C:8B52  74 0C				je	loc_1359		; Jump if equal
020C:8B54  80 FB 04				cmp	bl,4
020C:8B57  74 24				je	loc_1361		; Jump if equal
020C:8B59  80 FB 00				cmp	bl,0
020C:8B5C  74 3C				je	loc_1363		; Jump if equal
020C:8B5E  EB 55				jmp	short loc_1365		; (8BB5)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 296

020C:8B60			loc_1359:
020C:8B60  3B 06 3D89				cmp	ax,data_641		; (020C:3D89=0E2D3h)
020C:8B64  75 4F				jne	loc_1365		; Jump if not equal
020C:8B66  8B D9				mov	bx,cx
020C:8B68  26: 8B 00				mov	ax,es:[bx+si]
020C:8B6B  3B 06 2154				cmp	ax,data_379		; (020C:2154=5CE9h)
020C:8B6F  26: 8B 40 02				mov	ax,es:[bx+si+2]
020C:8B73  75 03				jnz	loc_1360		; Jump if not zero
020C:8B75  B8 FFFF				mov	ax,0FFFFh
020C:8B78			loc_1360:
020C:8B78  A3 3D89				mov	data_641,ax		; (020C:3D89=0E2D3h)
020C:8B7B  EB 38				jmp	short loc_1365		; (8BB5)
020C:8B7D			loc_1361:
020C:8B7D  3B 06 3D85				cmp	ax,data_639		; (020C:3D85=51C3h)
020C:8B81  75 32				jne	loc_1365		; Jump if not equal
020C:8B83  8B D9				mov	bx,cx
020C:8B85  26: 8B 00				mov	ax,es:[bx+si]
020C:8B88  3B 06 2154				cmp	ax,data_379		; (020C:2154=5CE9h)
020C:8B8C  26: 8B 40 02				mov	ax,es:[bx+si+2]
020C:8B90  75 03				jnz	loc_1362		; Jump if not zero
020C:8B92  B8 FFFF				mov	ax,0FFFFh
020C:8B95			loc_1362:
020C:8B95  A3 3D85				mov	data_639,ax		; (020C:3D85=51C3h)
020C:8B98  EB 1B				jmp	short loc_1365		; (8BB5)
020C:8B9A			loc_1363:
020C:8B9A  3B 06 3D87				cmp	ax,data_640		; (020C:3D87=4B1h)
020C:8B9E  75 15				jne	loc_1365		; Jump if not equal
020C:8BA0  8B D9				mov	bx,cx
020C:8BA2  26: 8B 00				mov	ax,es:[bx+si]
020C:8BA5  3B 06 2154				cmp	ax,data_379		; (020C:2154=5CE9h)
020C:8BA9  26: 8B 40 02				mov	ax,es:[bx+si+2]
020C:8BAD  75 03				jnz	loc_1364		; Jump if not zero
020C:8BAF  B8 FFFF				mov	ax,0FFFFh
020C:8BB2			loc_1364:
020C:8BB2  A3 3D87				mov	data_640,ax		; (020C:3D87=4B1h)
020C:8BB5			loc_1365:
020C:8BB5  8B FE				mov	di,si
020C:8BB7  03 F1				add	si,cx
020C:8BB9  26: 8B 04				mov	ax,es:[si]
020C:8BBC  26: A3 0002				mov	word ptr es:[2],ax	; (020C:0002=10h)
020C:8BC0  26: 8B 44 02				mov	ax,es:[si+2]
020C:8BC4  26: A3 0004				mov	word ptr es:[4],ax	; (020C:0004=808h)
020C:8BC8  26: 89 3E 0006			mov	word ptr es:[6],di	; (020C:0006=3)
020C:8BCD  8B C1				mov	ax,cx
020C:8BCF  26: 8B 0E 0000			mov	cx,word ptr es:[0]	; (020C:0000=1828h)
020C:8BD4  2B CE				sub	cx,si
020C:8BD6  1E					push	ds
020C:8BD7  06					push	es
020C:8BD8  1F					pop	ds
020C:8BD9  FC					cld				; Clear direction
020C:8BDA  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:8BDC  1F					pop	ds
020C:8BDD  26: 29 06 0000			sub	word ptr es:[0],ax	; (020C:0000=1828h)
020C:8BE2  73 06				jnc	loc_1366		; Jump if carry=0
020C:8BE4  BB 0002				mov	bx,2
020C:8BE7  E9 E704				jmp	loc_1076		; (72EE)
020C:8BEA			loc_1366:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 297

020C:8BEA  5D					pop	bp
020C:8BEB  5F					pop	di
020C:8BEC  5E					pop	si
020C:8BED  5A					pop	dx
020C:8BEE  59					pop	cx
020C:8BEF  5B					pop	bx
020C:8BF0  58					pop	ax
020C:8BF1  C3					retn
				sub_108		endp

020C:8BF2  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:8BF4			sub_110		proc	near
020C:8BF4  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:8BF9  06					push	es
020C:8BFA  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:8BFF  1E					push	ds
020C:8C00  56					push	si
020C:8C01  57					push	di
020C:8C02  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:8C08  75 24				jne	loc_1370		; Jump if not equal
020C:8C0A  E8 EDC3				call	sub_84			; (79D0)
020C:8C0D  A9 0002				test	ax,2
020C:8C10  74 05				jz	loc_1367		; Jump if zero
020C:8C12  E8 F2EF				call	sub_98			; (7F04)
020C:8C15  EB 1F				jmp	short loc_1371		; (8C36)
020C:8C17			loc_1367:
020C:8C17  A9 0001				test	ax,1
020C:8C1A  74 05				jz	loc_1368		; Jump if zero
020C:8C1C  E8 F351				call	sub_99			; (7F70)
020C:8C1F  EB 15				jmp	short loc_1371		; (8C36)
020C:8C21			loc_1368:
020C:8C21  A9 0004				test	ax,4
020C:8C24  74 05				jz	loc_1369		; Jump if zero
020C:8C26  E8 F3B3				call	sub_100			; (7FDC)
020C:8C29  EB 0B				jmp	short loc_1371		; (8C36)
020C:8C2B			loc_1369:
020C:8C2B  E9 00BD				jmp	loc_1377		; (8CEB)
020C:8C2E			loc_1370:
020C:8C2E  E8 F27F				call	sub_97			; (7EB0)
020C:8C31  2E: 8E 06 3F72			mov	es,cs:data_652		; (020C:3F72=0C4FEh)
020C:8C36			loc_1371:
020C:8C36  BF 0008				mov	di,8
020C:8C39  26: C7 05 FFFF			mov	word ptr es:[di],0FFFFh
020C:8C3E  26: C7 45 02 FFFF			mov	word ptr es:[di+2],0FFFFh
020C:8C44  26: C6 45 04 00			mov	byte ptr es:[di+4],0
020C:8C49  26: C6 45 06 00			mov	byte ptr es:[di+6],0
020C:8C4E  A9 0002				test	ax,2
020C:8C51  75 0D				jnz	loc_1372		; Jump if not zero
020C:8C53  A9 0001				test	ax,1
020C:8C56  75 2A				jnz	loc_1374		; Jump if not zero
020C:8C58  A9 0004				test	ax,4
020C:8C5B  75 55				jnz	loc_1376		; Jump if not zero
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 298

020C:8C5D  E9 008B				jmp	loc_1377		; (8CEB)
020C:8C60			loc_1372:
020C:8C60  26: C6 45 05 04			mov	byte ptr es:[di+5],4
020C:8C65  26: C7 06 0000 0012			mov	word ptr es:[0],12h	; (C4FE:0000=8DF0h)
020C:8C6C  BE 6A2B				mov	si,6A2Bh
020C:8C6F  57					push	di
020C:8C70  BF FFF0				mov	di,0FFF0h
020C:8C73  26: 80 3D FF				cmp	byte ptr es:[di],0FFh
020C:8C77  75 06				jne	loc_1373		; Jump if not equal
020C:8C79  B9 000C				mov	cx,0Ch
020C:8C7C  FC					cld				; Clear direction
020C:8C7D  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:8C7F			loc_1373:
020C:8C7F  5F					pop	di
020C:8C80  EB 69				jmp	short loc_1377		; (8CEB)
020C:8C82			loc_1374:
020C:8C82  26: C6 45 05 00			mov	byte ptr es:[di+5],0
020C:8C87  26: C7 06 0000 000F			mov	word ptr es:[0],0Fh	; (C4FE:0000=8DF0h)
020C:8C8E  1E					push	ds
020C:8C8F  E8 ED3E				call	sub_84			; (79D0)
020C:8C92  8B 36 1797				mov	si,word ptr ds:[1797h]	; (0000:1797=261Fh)
020C:8C96  1F					pop	ds
020C:8C97  26: 01 36 0000			add	word ptr es:[0],si	; (C4FE:0000=8DF0h)
020C:8C9C  BE 6A4B				mov	si,6A4Bh
020C:8C9F  57					push	di
020C:8CA0  BF FFF0				mov	di,0FFF0h
020C:8CA3  26: 80 3D FF				cmp	byte ptr es:[di],0FFh
020C:8CA7  75 06				jne	loc_1375		; Jump if not equal
020C:8CA9  B9 000C				mov	cx,0Ch
020C:8CAC  FC					cld				; Clear direction
020C:8CAD  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:8CAF			loc_1375:
020C:8CAF  5F					pop	di
020C:8CB0  EB 39				jmp	short loc_1377		; (8CEB)
020C:8CB2			loc_1376:
020C:8CB2  26: C6 45 05 08			mov	byte ptr es:[di+5],8
020C:8CB7  51					push	cx
020C:8CB8  B9 0029				mov	cx,29h
020C:8CBB  33 C0				xor	ax,ax			; Zero register
020C:8CBD  BF 0011				mov	di,11h
020C:8CC0  FC					cld				; Clear direction
020C:8CC1  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:8CC3  59					pop	cx
020C:8CC4  26: C7 06 0000 0045			mov	word ptr es:[0],45h	; (C4FE:0000=8DF0h)
020C:8CCB  1E					push	ds
020C:8CCC  E8 ED01				call	sub_84			; (79D0)
020C:8CCF  8B 36 1797				mov	si,word ptr ds:[1797h]	; (0000:1797=261Fh)
020C:8CD3  1F					pop	ds
020C:8CD4  26: 01 36 0000			add	word ptr es:[0],si	; (C4FE:0000=8DF0h)
020C:8CD9  BE 6A3B				mov	si,6A3Bh
020C:8CDC  BF FFF0				mov	di,0FFF0h
020C:8CDF  26: 80 3D FF				cmp	byte ptr es:[di],0FFh
020C:8CE3  75 06				jne	loc_1377		; Jump if not equal
020C:8CE5  B9 000C				mov	cx,0Ch
020C:8CE8  FC					cld				; Clear direction
020C:8CE9  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:8CEB			loc_1377:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 299

020C:8CEB  26: C7 06 0002 FFFF			mov	word ptr es:[2],0FFFFh	; (C4FE:0002=0F266h)
020C:8CF2  26: C7 06 0004 FFFF			mov	word ptr es:[4],0FFFFh	; (C4FE:0004=5D75h)
020C:8CF9  26: C7 06 0006 0008			mov	word ptr es:[6],8	; (C4FE:0006=468Bh)
020C:8D00  5F					pop	di
020C:8D01  5E					pop	si
020C:8D02  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:8D07  9C					pushf				; Push flags
020C:8D08  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:8D0D  5A					pop	dx
020C:8D0E  8E DA				mov	ds,dx
020C:8D10  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:8D15  5A					pop	dx
020C:8D16  75 0A				jnz	loc_1378		; Jump if not zero
020C:8D18  2E: 3B		data_808	db	3Bh
020C:8D1A  16					push	ss
020C:8D1B  74 3F				jz	loc_1380		; Jump if zero
020C:8D1D  74 03				jz	loc_1378		; Jump if zero
020C:8D1F  E8 F18E				call	sub_97			; (7EB0)
020C:8D22			loc_1378:
020C:8D22  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:8D27  9D			data_809	db	9Dh
020C:8D28  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:8D2D  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:8D32  9C					pushf				; Push flags
020C:8D33  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:8D38  5A					pop	dx
020C:8D39  8E C2				mov	es,dx
020C:8D3B  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:8D40  5A					pop	dx
020C:8D41  75 0A				jnz	loc_1379		; Jump if not zero
020C:8D43  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:8D48  74 03				je	loc_1379		; Jump if equal
020C:8D4A  E8 F163				call	sub_97			; (7EB0)
020C:8D4D			loc_1379:
020C:8D4D  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:8D52  9D					popf				; Pop flags
020C:8D53  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:8D58  C3					retn
020C:8D59  0007[00]				db	7 dup (0)
				sub_110		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:8D60			sub_111		proc	near
020C:8D60  53					push	bx
020C:8D61  52					push	dx
020C:8D62  56					push	si
020C:8D63  57					push	di
020C:8D64  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:8D69  06					push	es
020C:8D6A  C6 06 3D00 00			mov	data_580,0		; (020C:3D00=17h)
020C:8D6F  F6 C7 20				test	bh,20h			; ' '
020C:8D72  74 3C				jz	loc_1383		; Jump if zero
020C:8D74  F6 06 2308 02			test	data_455,2		; (020C:2308=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 300

020C:8D79  75 35				jnz	loc_1383		; Jump if not zero
020C:8D7B  0A DB				or	bl,bl			; Zero ?
020C:8D7D  74 0A				jz	loc_1381		; Jump if zero
020C:8D7F  8A CB				mov	cl,bl
020C:8D81  80 E1 C7				and	cl,0C7h
020C:8D84  80 F9 06				cmp	cl,6
020C:8D87  75 27				jne	loc_1383		; Jump if not equal
020C:8D89			loc_1381:
020C:8D89  3D FFFD				cmp	ax,0FFFDh
020C:8D8C  72 07				jb	loc_1382		; Jump if below
020C:8D8E  C6 06 2348 00			mov	data_479,0		; (020C:2348=0)
020C:8D93  EB 1B				jmp	short loc_1383		; (8DB0)
020C:8D95			loc_1382:
020C:8D95  F7 06 3D18 0008			test	data_594,8		; (020C:3D18=2680h)
020C:8D9B  75 13				jnz	loc_1383		; Jump if not zero
020C:8D9D  80 3E 3D0C 01			cmp	data_588,1		; (020C:3D0C=9Ah)
020C:8DA2  75 0C				jne	loc_1383		; Jump if not equal
020C:8DA4  80 3E 2348 0F			cmp	data_479,0Fh		; (020C:2348=0)
020C:8DA9  77 05				ja	loc_1383		; Jump if above
020C:8DAB  80 0E 3D0C 80			or	data_588,80h		; (020C:3D0C=9Ah)
020C:8DB0			loc_1383:
020C:8DB0  8A 0E 2345				mov	cl,data_477		; (020C:2345=0)
020C:8DB4  C6 06 234F 00			mov	data_485,0		; (020C:234F=0)
020C:8DB9  9A 1491:6784		;*		call	far ptr sub_219		;*(1491:6784)
020C:8DB9  9A					db	9Ah
020C:8DBA  6784 1491				dw	6784h, 1491h
020C:8DBE  73 14				jnc	loc_1384		; Jump if carry=0
020C:8DC0  8B 16 233A				mov	dx,data_474		; (020C:233A=0)
020C:8DC4  89 16 2FA2				mov	data_520,dx		; (020C:2FA2=0CFAh)
020C:8DC8  F6 06 230A 08			test	byte ptr ds:[230Ah],8	; (020C:230A=0)
020C:8DCD  75 05				jnz	loc_1384		; Jump if not zero
020C:8DCF  C6 06 234F 01			mov	data_485,1		; (020C:234F=0)
020C:8DD4			loc_1384:
020C:8DD4  80 F9 90				cmp	cl,90h
020C:8DD7  75 19				jne	loc_1386		; Jump if not equal
020C:8DD9  8B 16 2FA2				mov	dx,data_520		; (020C:2FA2=0CFAh)
020C:8DDD  3B 16 2334				cmp	dx,data_471		; (020C:2334=0)
020C:8DE1  75 0D				jne	loc_1385		; Jump if not equal
020C:8DE3  9A 1491:5218		;*		call	far ptr sub_208		;*(1491:5218)
020C:8DE3  9A					db	9Ah
020C:8DE4  5218 1491				dw	5218h, 1491h
020C:8DE8  89 16 2334				mov	data_471,dx		; (020C:2334=0)
020C:8DEC  89 16 2FA2				mov	data_520,dx		; (020C:2FA2=0CFAh)
020C:8DF0			loc_1385:
020C:8DF0  EB 71				jmp	short loc_1393		; (8E63)
020C:8DF2			loc_1386:
020C:8DF2  80 F9 26				cmp	cl,26h			; '&'
020C:8DF5  75 0F				jne	loc_1387		; Jump if not equal
020C:8DF7  8B 16 2332				mov	dx,data_470		; (020C:2332=0)
020C:8DFB  9A 1491:5218		;*		call	far ptr sub_208		;*(1491:5218)
020C:8DFB  9A					db	9Ah
020C:8DFC  5218 1491				dw	5218h, 1491h
020C:8E00  89 16 2332				mov	data_470,dx		; (020C:2332=0)
020C:8E04  EB 59				jmp	short loc_1392		; (8E5F)
020C:8E06			loc_1387:
020C:8E06  80 F9 2E				cmp	cl,2Eh			; '.'
020C:8E09  75 0F				jne	loc_1388		; Jump if not equal
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 301

020C:8E0B  8B 16 1CF2				mov	dx,data_269		; (020C:1CF2=0)
020C:8E0F  80 3E 1F6D 08			cmp	data_355,8		; (020C:1F6D=0)
020C:8E14  75 49				jne	loc_1392		; Jump if not equal
020C:8E16  33 D2				xor	dx,dx			; Zero register
020C:8E18  EB 45				jmp	short loc_1392		; (8E5F)
020C:8E1A			loc_1388:
020C:8E1A  80 F9 36				cmp	cl,36h			; '6'
020C:8E1D  75 06				jne	loc_1389		; Jump if not equal
020C:8E1F  8B 16 233A				mov	dx,data_474		; (020C:233A=0)
020C:8E23  EB 3A				jmp	short loc_1392		; (8E5F)
020C:8E25			loc_1389:
020C:8E25  80 F9 64				cmp	cl,64h			; 'd'
020C:8E28  75 0F				jne	loc_1390		; Jump if not equal
020C:8E2A  8B 16 2336				mov	dx,data_472		; (020C:2336=0)
020C:8E2E  9A 1491:5218		;*		call	far ptr sub_208		;*(1491:5218)
020C:8E2E  9A					db	9Ah
020C:8E2F  5218 1491				dw	5218h, 1491h
020C:8E33  89 16 2336				mov	data_472,dx		; (020C:2336=0)
020C:8E37  EB 26				jmp	short loc_1392		; (8E5F)
020C:8E39			loc_1390:
020C:8E39  80 F9 65				cmp	cl,65h			; 'e'
020C:8E3C  75 0F				jne	loc_1391		; Jump if not equal
020C:8E3E  8B 16 2338				mov	dx,data_473		; (020C:2338=0)
020C:8E42  9A 1491:5218		;*		call	far ptr sub_208		;*(1491:5218)
020C:8E42  9A					db	9Ah
020C:8E43  5218 1491				dw	5218h, 1491h
020C:8E47  89 16 2338				mov	data_473,dx		; (020C:2338=0)
020C:8E4B  EB 12				jmp	short loc_1392		; (8E5F)
020C:8E4D			loc_1391:
020C:8E4D  80 F9 3E				cmp	cl,3Eh			; '>'
020C:8E50  75 11				jne	loc_1393		; Jump if not equal
020C:8E52  8B 16 2334				mov	dx,data_471		; (020C:2334=0)
020C:8E56  9A 1491:5218		;*		call	far ptr sub_208		;*(1491:5218)
020C:8E56  9A					db	9Ah
020C:8E57  5218 1491				dw	5218h, 1491h
020C:8E5B  89 16 2334				mov	data_471,dx		; (020C:2334=0)
020C:8E5F			loc_1392:
020C:8E5F  89 16 2FA2				mov	data_520,dx		; (020C:2FA2=0CFAh)
020C:8E63			loc_1393:
020C:8E63  83 3E 2162 FF			cmp	data_386,0FFFFh		; (020C:2162=0FFFFh)
020C:8E68  74 11				je	loc_1394		; Jump if equal
020C:8E6A  8B 16 2162				mov	dx,data_386		; (020C:2162=0FFFFh)
020C:8E6E  83 3E 2160 FF			cmp	data_385,0FFFFh		; (020C:2160=5E6Eh)
020C:8E73  74 1F				je	loc_1396		; Jump if equal
020C:8E75  03 16 2160				add	dx,data_385		; (020C:2160=5E6Eh)
020C:8E79  EB 19				jmp	short loc_1396		; (8E94)
020C:8E7B			loc_1394:
020C:8E7B  83 3E 2160 FF			cmp	data_385,0FFFFh		; (020C:2160=5E6Eh)
020C:8E80  74 16				je	loc_1397		; Jump if equal
020C:8E82  8B 16 2160				mov	dx,data_385		; (020C:2160=5E6Eh)
020C:8E86  F7 06 1F6E 8000			test	data_356,8000h		; (020C:1F6E=0)
020C:8E8C  74 02				jz	loc_1395		; Jump if zero
020C:8E8E  EB 04				jmp	short loc_1396		; (8E94)
020C:8E90			loc_1395:
020C:8E90  03 16 2FA2				add	dx,data_520		; (020C:2FA2=0CFAh)
020C:8E94			loc_1396:
020C:8E94  89 16 2FA2				mov	data_520,dx		; (020C:2FA2=0CFAh)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 302

020C:8E98			loc_1397:
020C:8E98  A3 2FB0				mov	data_526,ax		; (020C:2FB0=0DC3h)
020C:8E9B  0B C0				or	ax,ax			; Zero ?
020C:8E9D  75 3B				jnz	loc_1400		; Jump if not zero
020C:8E9F  8A D3				mov	dl,bl
020C:8EA1  80 E2 C7				and	dl,0C7h
020C:8EA4  80 FA 46				cmp	dl,46h			; 'F'
020C:8EA7  75 31				jne	loc_1400		; Jump if not equal
020C:8EA9  C6 06 1D13 02			mov	data_283,2		; (020C:1D13=0)
020C:8EAE  F6 06 216E 80			test	data_392,80h		; (020C:216E=0FFh)
020C:8EB3  75 0A				jnz	loc_1398		; Jump if not zero
020C:8EB5  F6 C7 C0				test	bh,0C0h
020C:8EB8  74 05				jz	loc_1398		; Jump if zero
020C:8EBA  9A 1491:09C4		;*		call	far ptr sub_169		;*(1491:09C4)
020C:8EBA  9A					db	9Ah
020C:8EBB  09C4 1491				dw	9C4h, 1491h
020C:8EBF			loc_1398:
020C:8EBF  80 3E 1CD7 01			cmp	data_252,1		; (020C:1CD7=0)
020C:8EC4  75 0C				jne	loc_1399		; Jump if not equal
020C:8EC6  F6 06 230A 08			test	byte ptr ds:[230Ah],8	; (020C:230A=0)
020C:8ECB  74 05				jz	loc_1399		; Jump if zero
020C:8ECD  9A 1491:6808		;*		call	far ptr sub_221		;*(1491:6808)
020C:8ECD  9A					db	9Ah
020C:8ECE  6808 1491				dw	6808h, 1491h
020C:8ED2			loc_1399:
020C:8ED2  80 26 3D06 FB			and	data_584,0FBh		; (020C:3D06=98h)
020C:8ED7  E9 059A				jmp	loc_1474		; (9474)
020C:8EDA			loc_1400:
020C:8EDA  C6 06 3CFD 00			mov	data_578,0		; (020C:3CFD=0C6h)
020C:8EDF  F6 C3 38				test	bl,38h			; '8'
020C:8EE2  74 2B				jz	loc_1403		; Jump if zero
020C:8EE4  F6 06 2308 02			test	data_455,2		; (020C:2308=0)
020C:8EE9  75 24				jnz	loc_1403		; Jump if not zero
020C:8EEB  8A D3				mov	dl,bl
020C:8EED  80 E2 C7				and	dl,0C7h
020C:8EF0  80 FA 06				cmp	dl,6
020C:8EF3  74 1A				je	loc_1403		; Jump if equal
020C:8EF5  80 3E 1547 00			cmp	data_169,0		; (020C:1547=0)
020C:8EFA  75 07				jne	loc_1401		; Jump if not equal
020C:8EFC  80 3E 234F 01			cmp	data_485,1		; (020C:234F=0)
020C:8F01  74 07				je	loc_1402		; Jump if equal
020C:8F03			loc_1401:
020C:8F03  F6 06 3D05 02			test	data_583,2		; (020C:3D05=0E8h)
020C:8F08  74 05				jz	loc_1403		; Jump if zero
020C:8F0A			loc_1402:
020C:8F0A  C6 06 3CFD 01			mov	data_578,1		; (020C:3CFD=0C6h)
020C:8F0F			loc_1403:
020C:8F0F  53					push	bx
020C:8F10  8B 1E 2FA2				mov	bx,data_520		; (020C:2FA2=0CFAh)
020C:8F14  80 3E 1790 01			cmp	data_195,1		; (020C:1790=0)
020C:8F19  74 08				je	loc_1404		; Jump if equal
020C:8F1B  F7 06 3D18 0008			test	data_594,8		; (020C:3D18=2680h)
020C:8F21  74 03				jz	loc_1405		; Jump if zero
020C:8F23			loc_1404:
020C:8F23  E9 009A				jmp	loc_1410		; (8FC0)
020C:8F26			loc_1405:
020C:8F26  50					push	ax
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 303

020C:8F27  A1 1CD0				mov	ax,data_249		; (020C:1CD0=0)
020C:8F2A  3D 0000				cmp	ax,0
020C:8F2D  75 03				jne	loc_1406		; Jump if not equal
020C:8F2F  E8 EAE3				call	sub_95			; (7A15)
020C:8F32			loc_1406:
020C:8F32  8B 3E 2FB0				mov	di,data_526		; (020C:2FB0=0DC3h)
020C:8F36  8E C3				mov	es,bx
020C:8F38  9A 1491:8930		;*		call	far ptr sub_255		;*(1491:8930)
020C:8F38  9A					db	9Ah
020C:8F39  8930 1491				dw	8930h, 1491h
020C:8F3D  72 7C				jc	loc_1409		; Jump if carry Set
020C:8F3F  9A 1491:8814		;*		call	far ptr sub_253		;*(1491:8814)
020C:8F3F  9A					db	9Ah
020C:8F40  8814 1491				dw	8814h, 1491h
020C:8F44  8C C3				mov	bx,es
020C:8F46  3B D8				cmp	bx,ax
020C:8F48  72 71				jb	loc_1409		; Jump if below
020C:8F4A  8C C8				mov	ax,cs
020C:8F4C  03 06 1791				add	ax,data_196		; (020C:1791=0)
020C:8F50  8B D7				mov	dx,di
020C:8F52  D1 EA				shr	dx,1			; Shift w/zeros fill
020C:8F54  D1 EA				shr	dx,1			; Shift w/zeros fill
020C:8F56  D1 EA				shr	dx,1			; Shift w/zeros fill
020C:8F58  D1 EA				shr	dx,1			; Shift w/zeros fill
020C:8F5A  03 D3				add	dx,bx
020C:8F5C  72 5D				jc	loc_1409		; Jump if carry Set
020C:8F5E  3B D0				cmp	dx,ax
020C:8F60  77 59				ja	loc_1409		; Jump if above
020C:8F62  F6 06 3D0C 80			test	data_588,80h		; (020C:3D0C=9Ah)
020C:8F67  74 52				jz	loc_1409		; Jump if zero
020C:8F69  5E					pop	si
020C:8F6A  56					push	si
020C:8F6B  8E C3				mov	es,bx
020C:8F6D  B1 19				mov	cl,19h
020C:8F6F  26: 83 3C 00				cmp	word ptr es:[si],0
020C:8F73  74 08				je	loc_1407		; Jump if equal
020C:8F75  FE C1				inc	cl
020C:8F77  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020C:8F7B  75 3E				jne	loc_1409		; Jump if not equal
020C:8F7D			loc_1407:
020C:8F7D  C6 06 2348 01			mov	data_479,1		; (020C:2348=0)
020C:8F82  57					push	di
020C:8F83  51					push	cx
020C:8F84  8C C0				mov	ax,es
020C:8F86  8B DE				mov	bx,si
020C:8F88  BA 0001				mov	dx,1
020C:8F8B  C6 06 3C07 01			mov	data_571,1		; (020C:3C07=0E8h)
020C:8F90  E8 D59D				call	sub_69			; (6530)
020C:8F93  C6 06 3C07 00			mov	data_571,0		; (020C:3C07=0E8h)
020C:8F98  59					pop	cx
020C:8F99  72 1F				jc	loc_1408		; Jump if carry Set
020C:8F9B  BF 4165				mov	di,4165h
020C:8F9E  89 05				mov	[di],ax
020C:8FA0  89 5D 02				mov	[di+2],bx
020C:8FA3  C6 45 04 5F				mov	byte ptr [di+4],5Fh	; '_'
020C:8FA7  C6 45 05 02				mov	byte ptr [di+5],2
020C:8FAB  C6 45 06 00				mov	byte ptr [di+6],0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 304

020C:8FAF  88 4D 09				mov	[di+9],cl
020C:8FB2  C7 45 07 203F			mov	word ptr [di+7],203Fh
020C:8FB7  E8 F8D6				call	sub_107			; (8890)
020C:8FBA			loc_1408:
020C:8FBA  5F					pop	di
020C:8FBB			loc_1409:
020C:8FBB  58					pop	ax
020C:8FBC  8B 1E 2FA2				mov	bx,data_520		; (020C:2FA2=0CFAh)
020C:8FC0			loc_1410:
020C:8FC0  C6 06 3D0C 00			mov	data_588,0		; (020C:3D0C=9Ah)
020C:8FC5  F6 06 4521 02			test	data_707,2		; (020C:4521=4Fh)
020C:8FCA  74 4E				jz	loc_1414		; Jump if zero
020C:8FCC  5B					pop	bx
020C:8FCD  80 26 4521 FD			and	data_707,0FDh		; (020C:4521=4Fh)
020C:8FD2  C7 06 1D73 0000			mov	data_333,0		; (020C:1D73=0)
020C:8FD8  C6 06 3CFD 00			mov	data_578,0		; (020C:3CFD=0C6h)
020C:8FDD  80 3E 1790 01			cmp	data_195,1		; (020C:1790=0)
020C:8FE2  75 33				jne	loc_1413		; Jump if not equal
020C:8FE4  9A 1491:09C4		;*		call	far ptr sub_169		;*(1491:09C4)
020C:8FE4  9A					db	9Ah
020C:8FE5  09C4 1491				dw	9C4h, 1491h
020C:8FE9  F6 06 230A 08			test	byte ptr ds:[230Ah],8	; (020C:230A=0)
020C:8FEE  74 05				jz	loc_1411		; Jump if zero
020C:8FF0  9A 1491:6808		;*		call	far ptr sub_221		;*(1491:6808)
020C:8FF0  9A					db	9Ah
020C:8FF1  6808 1491				dw	6808h, 1491h
020C:8FF5			loc_1411:
020C:8FF5  BE 4522				mov	si,4522h
020C:8FF8  F6 06 3D05 08			test	data_583,8		; (020C:3D05=0E8h)
020C:8FFD  74 13				jz	loc_1412		; Jump if zero
020C:8FFF  3E: C6 46 00 5B			mov	byte ptr ds:[bp],5Bh	; '['
020C:9004  45					inc	bp
020C:9005  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:9005  9A					db	9Ah
020C:9006  67E0 1491				dw	67E0h, 1491h
020C:900A  3E: C6 46 00 5D			mov	byte ptr ds:[bp],5Dh	; ']'
020C:900F  45					inc	bp
020C:9010  EB 05				jmp	short loc_1413		; (9017)
020C:9012			loc_1412:
020C:9012  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:9012  9A					db	9Ah
020C:9013  67E0 1491				dw	67E0h, 1491h
020C:9017			loc_1413:
020C:9017  E9 045A				jmp	loc_1474		; (9474)
020C:901A			loc_1414:
020C:901A  BA 0002				mov	dx,2
020C:901D  E8 D510				call	sub_69			; (6530)
020C:9020  9C					pushf				; Push flags
020C:9021  80 3E 3CFD 00			cmp	data_578,0		; (020C:3CFD=0C6h)
020C:9026  74 3B				je	loc_1418		; Jump if equal
020C:9028  9D					popf				; Pop flags
020C:9029  9C					pushf				; Push flags
020C:902A  73 0E				jnc	loc_1415		; Jump if carry=0
020C:902C  26: F6 45 07 20			test	byte ptr es:[di+7],20h	; ' '
020C:9031  74 07				jz	loc_1415		; Jump if zero
020C:9033  C6 06 3CFD 00			mov	data_578,0		; (020C:3CFD=0C6h)
020C:9038  EB 29				jmp	short loc_1418		; (9063)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 305

020C:903A			loc_1415:
020C:903A  9D					popf				; Pop flags
020C:903B  5B					pop	bx
020C:903C  F6 06 216E 80			test	data_392,80h		; (020C:216E=0FFh)
020C:9041  75 05				jnz	loc_1416		; Jump if not zero
020C:9043  9A 1491:09C4		;*		call	far ptr sub_169		;*(1491:09C4)
020C:9043  9A					db	9Ah
020C:9044  09C4 1491				dw	9C4h, 1491h
020C:9048			loc_1416:
020C:9048  80 3E 1CD7 01			cmp	data_252,1		; (020C:1CD7=0)
020C:904D  75 0C				jne	loc_1417		; Jump if not equal
020C:904F  F6 06 230A 08			test	byte ptr ds:[230Ah],8	; (020C:230A=0)
020C:9054  74 05				jz	loc_1417		; Jump if zero
020C:9056  9A 1491:6808		;*		call	far ptr sub_221		;*(1491:6808)
020C:9056  9A					db	9Ah
020C:9057  6808 1491				dw	6808h, 1491h
020C:905B			loc_1417:
020C:905B  80 26 3D06 FB			and	data_584,0FBh		; (020C:3D06=98h)
020C:9060  E9 0411				jmp	loc_1474		; (9474)
020C:9063			loc_1418:
020C:9063  80 3E 178B 02			cmp	data_191,2		; (020C:178B=0)
020C:9068  75 1C				jne	loc_1421		; Jump if not equal
020C:906A  80 3E 3D78 00			cmp	data_634,0		; (020C:3D78=4)
020C:906F  75 08				jne	loc_1419		; Jump if not equal
020C:9071  F7 06 3D1D 0040			test	data_597,40h		; (020C:3D1D=0D4E8h)
020C:9077  75 07				jnz	loc_1420		; Jump if not zero
020C:9079			loc_1419:
020C:9079  F6 06 3D78 04			test	data_634,4		; (020C:3D78=4)
020C:907E  74 06				jz	loc_1421		; Jump if zero
020C:9080			loc_1420:
020C:9080  BA 0002				mov	dx,2
020C:9083  E8 184E				call	sub_119			; (A8D4)
020C:9086			loc_1421:
020C:9086  9D					popf				; Pop flags
020C:9087  5B					pop	bx
020C:9088  72 03				jc	loc_1422		; Jump if carry Set
020C:908A  E9 0130				jmp	loc_1439		; (91BD)
020C:908D			loc_1422:
020C:908D  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020C:9092  75 09				jnz	loc_1423		; Jump if not zero
020C:9094  80 3E 217B 04			cmp	data_401,4		; (020C:217B=2Eh)
020C:9099  74 07				je	loc_1424		; Jump if equal
020C:909B  EB 0A				jmp	short loc_1425		; (90A7)
020C:909D			loc_1423:
020C:909D  C6 06 3D00 01			mov	data_580,1		; (020C:3D00=17h)
020C:90A2			loc_1424:
020C:90A2  C6 06 1D13 02			mov	data_283,2		; (020C:1D13=0)
020C:90A7			loc_1425:
020C:90A7  80 3E 1790 01			cmp	data_195,1		; (020C:1790=0)
020C:90AC  75 2D				jne	loc_1427		; Jump if not equal
020C:90AE  80 3E 3C0A 01			cmp	data_574,1		; (020C:3C0A=0C6h)
020C:90B3  74 23				je	loc_1426		; Jump if equal
020C:90B5  26: F6 45 07 80			test	byte ptr es:[di+7],80h
020C:90BA  75 1F				jnz	loc_1427		; Jump if not zero
020C:90BC  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020C:90C1  74 15				jz	loc_1426		; Jump if zero
020C:90C3  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 306

020C:90C8  75 11				jnz	loc_1427		; Jump if not zero
020C:90CA  80 3E 178F 04			cmp	data_194,4		; (020C:178F=0)
020C:90CF  76 0A				jbe	loc_1427		; Jump if below or =
020C:90D1  26: F6 45 05 20			test	byte ptr es:[di+5],20h	; ' '
020C:90D6  75 03				jnz	loc_1427		; Jump if not zero
020C:90D8			loc_1426:
020C:90D8  E9 0176				jmp	loc_1447		; (9251)
020C:90DB			loc_1427:
020C:90DB  26			data_811	db	26h			; Data table (indexed access)
020C:90DC  F6 45 07 40				test	byte ptr [di+7],40h	; '@'
020C:90E0  75 34				jnz	loc_1430		; Jump if not zero
020C:90E2  80 3E 217B 02			cmp	data_401,2		; (020C:217B=2Eh)
020C:90E7  72 2D				jb	loc_1430		; Jump if below
020C:90E9  80 3E 217B 03			cmp	data_401,3		; (020C:217B=2Eh)
020C:90EE  77 19				ja	loc_1429		; Jump if above
020C:90F0  BE 258E				mov	si,258Eh
020C:90F3  80 3E 46EC 00			cmp	data_729,0		; (020C:46EC=8Fh)
020C:90F8  74 03				je	loc_1428		; Jump if equal
020C:90FA  BE 2596				mov	si,2596h
020C:90FD			loc_1428:
020C:90FD  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:90FD  9A					db	9Ah
020C:90FE  67E0 1491				dw	67E0h, 1491h
020C:9102  C6 06 3D07 00			mov	data_585,0		; (020C:3D07=31h)
020C:9107  EB 0D				jmp	short loc_1430		; (9116)
020C:9109			loc_1429:
020C:9109  BE 25A0				mov	si,25A0h
020C:910C  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:910C  9A					db	9Ah
020C:910D  67E0 1491				dw	67E0h, 1491h
020C:9111  C6 06 46DC 01			mov	byte ptr ds:[46DCh],1	; (020C:46DC=3Eh)
020C:9116			loc_1430:
020C:9116  26: F6 45 07 10			test	byte ptr es:[di+7],10h
020C:911B  74 6F				jz	loc_1437		; Jump if zero
020C:911D  26: 8A 65 04				mov	ah,es:[di+4]
020C:9121  80 E4 3F				and	ah,3Fh			; '?'
020C:9124  8A C7				mov	al,bh
020C:9126  24 F0				and	al,0F0h
020C:9128  A8 20				test	al,20h			; ' '
020C:912A  74 4E				jz	loc_1435		; Jump if zero
020C:912C  F6 C4 10				test	ah,10h
020C:912F  75 58				jnz	loc_1436		; Jump if not zero
020C:9131  26: 8B 4D 08				mov	cx,es:[di+8]
020C:9135  83 F9 0A				cmp	cx,0Ah
020C:9138  73 4F				jae	loc_1436		; Jump if above or =
020C:913A  3C F0				cmp	al,0F0h
020C:913C  75 08				jne	loc_1431		; Jump if not equal
020C:913E  26: C7 45 08 0008			mov	word ptr es:[di+8],8
020C:9144  EB 28				jmp	short loc_1434		; (916E)
020C:9146			loc_1431:
020C:9146  83 F9 08				cmp	cx,8
020C:9149  73 3E				jae	loc_1436		; Jump if above or =
020C:914B  3C E0				cmp	al,0E0h
020C:914D  75 08				jne	loc_1432		; Jump if not equal
020C:914F  26: C7 45 08 0006			mov	word ptr es:[di+8],6
020C:9155  EB 17				jmp	short loc_1434		; (916E)
020C:9157			loc_1432:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 307

020C:9157  83 F9 04				cmp	cx,4
020C:915A  73 2D				jae	loc_1436		; Jump if above or =
020C:915C  3C B0				cmp	al,0B0h
020C:915E  75 08				jne	loc_1433		; Jump if not equal
020C:9160  26: C7 45 08 0004			mov	word ptr es:[di+8],4
020C:9166  EB 06				jmp	short loc_1434		; (916E)
020C:9168			loc_1433:
020C:9168  26: C7 45 08 0002			mov	word ptr es:[di+8],2
020C:916E			loc_1434:
020C:916E  26: 80 65 04 C0			and	byte ptr es:[di+4],0C0h
020C:9173  26: 80 4D 04 02			or	byte ptr es:[di+4],2
020C:9178  EB 0F				jmp	short loc_1436		; (9189)
020C:917A			loc_1435:
020C:917A  80 FC 01				cmp	ah,1
020C:917D  75 0A				jne	loc_1436		; Jump if not equal
020C:917F  3C 50				cmp	al,50h			; 'P'
020C:9181  75 06				jne	loc_1436		; Jump if not equal
020C:9183  26: C7 45 08 000A			mov	word ptr es:[di+8],0Ah
020C:9189			loc_1436:
020C:9189  E9 014E				jmp	loc_1453		; (92DA)
020C:918C			loc_1437:
020C:918C  F6 C7 20				test	bh,20h			; ' '
020C:918F  75 F8				jnz	loc_1436		; Jump if not zero
020C:9191  26: 8A 4D 04				mov	cl,es:[di+4]
020C:9195  80 E1 3F				and	cl,3Fh			; '?'
020C:9198  80 F9 21				cmp	cl,21h			; '!'
020C:919B  75 1D				jne	loc_1438		; Jump if not equal
020C:919D  9A 1491:7CC0		;*		call	far ptr sub_242		;*(1491:7CC0)
020C:919D  9A					db	9Ah
020C:919E  7CC0 1491				dw	7CC0h, 1491h
020C:91A2  72 16				jc	loc_1438		; Jump if carry Set
020C:91A4  26: 83 7D 08 02			cmp	word ptr es:[di+8],2
020C:91A9  72 0F				jb	loc_1438		; Jump if below
020C:91AB  26: 83 65 08 FE			and	word ptr es:[di+8],0FFFEh
020C:91B0  26: 80 65 04 C0			and	byte ptr es:[di+4],0C0h
020C:91B5  26: 80 4D 04 22			or	byte ptr es:[di+4],22h	; '"'
020C:91BA			loc_1438:
020C:91BA  E9 011D				jmp	loc_1453		; (92DA)
020C:91BD			loc_1439:
020C:91BD  BF 4165				mov	di,4165h
020C:91C0  A1 2FA2				mov	ax,data_520		; (020C:2FA2=0CFAh)
020C:91C3  89 05				mov	[di],ax
020C:91C5  A1 2FB0				mov	ax,data_526		; (020C:2FB0=0DC3h)
020C:91C8  89 45 02				mov	[di+2],ax
020C:91CB  C6 45 04 01				mov	byte ptr [di+4],1
020C:91CF  C6 45 05 04				mov	byte ptr [di+5],4
020C:91D3  80 3E 163F 01			cmp	data_174,1		; (020C:163F=0)
020C:91D8  77 04				ja	loc_1440		; Jump if above
020C:91DA  80 4D 05 01				or	byte ptr [di+5],1
020C:91DE			loc_1440:
020C:91DE  C7 45 08 0001			mov	word ptr [di+8],1
020C:91E3  C7 45 06 0000			mov	word ptr [di+6],0
020C:91E8  80 4D 07 10				or	byte ptr [di+7],10h
020C:91EC  F6 C7 20				test	bh,20h			; ' '
020C:91EF  74 3D				jz	loc_1445		; Jump if zero
020C:91F1  C7 45 08 0002			mov	word ptr [di+8],2
020C:91F6  C6 45 04 02				mov	byte ptr [di+4],2
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 308

020C:91FA  F6 06 2308 01			test	data_455,1		; (020C:2308=0)
020C:91FF  75 24				jnz	loc_1443		; Jump if not zero
020C:9201  F6 C7 10				test	bh,10h
020C:9204  74 28				jz	loc_1445		; Jump if zero
020C:9206  06					push	es
020C:9207  8E 06 2FAE				mov	es,data_525		; (020C:2FAE=0DA5h)
020C:920B  8B 36 2FB0				mov	si,data_526		; (020C:2FB0=0DC3h)
020C:920F  83 FE FC				cmp	si,0FFFCh
020C:9212  77 0D				ja	loc_1441		; Jump if above
020C:9214  26: 83 3C 00				cmp	word ptr es:[si],0
020C:9218  75 07				jne	loc_1441		; Jump if not equal
020C:921A  26: 83 7C 02 00			cmp	word ptr es:[si+2],0
020C:921F  74 03				je	loc_1442		; Jump if equal
020C:9221			loc_1441:
020C:9221  07					pop	es
020C:9222  EB 05				jmp	short loc_1444		; (9229)
020C:9224			loc_1442:
020C:9224  07					pop	es
020C:9225			loc_1443:
020C:9225  C6 45 04 04				mov	byte ptr [di+4],4
020C:9229			loc_1444:
020C:9229  C7 45 08 0004			mov	word ptr [di+8],4
020C:922E			loc_1445:
020C:922E  A0 2FA1				mov	al,data_519		; (020C:2FA1=0Ch)
020C:9231  3C 00				cmp	al,0
020C:9233  74 07				je	loc_1446		; Jump if equal
020C:9235  80 65 04 C0				and	byte ptr [di+4],0C0h
020C:9239  08 45 04				or	[di+4],al
020C:923C			loc_1446:
020C:923C  E8 F651				call	sub_107			; (8890)
020C:923F  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (0000:0006=70h)
020C:9244  E8 CAD5				call	sub_53			; (5D1C)
020C:9247  80 3E 1790 01			cmp	data_195,1		; (020C:1790=0)
020C:924C  74 03				je	loc_1447		; Jump if equal
020C:924E  E9 01DC				jmp	loc_1472		; (942D)
020C:9251			loc_1447:
020C:9251  C6 06 3D00 01			mov	data_580,1		; (020C:3D00=17h)
020C:9256  C6 06 1D13 02			mov	data_283,2		; (020C:1D13=0)
020C:925B  80 0E 3D06 10			or	data_584,10h		; (020C:3D06=98h)
020C:9260  80 26 3D06 BF			and	data_584,0BFh		; (020C:3D06=98h)
020C:9265  26: 80 65 07 EF			and	byte ptr es:[di+7],0EFh
020C:926A  80 3E 217B 02			cmp	data_401,2		; (020C:217B=2Eh)
020C:926F  74 07				je	loc_1448		; Jump if equal
020C:9271  80 3E 217B 04			cmp	data_401,4		; (020C:217B=2Eh)
020C:9276  75 11				jne	loc_1449		; Jump if not equal
020C:9278			loc_1448:
020C:9278  53					push	bx
020C:9279  A1 2FB6				mov	ax,data_529		; (020C:2FB6=0DEEh)
020C:927C  26: 8B 5D 02				mov	bx,es:[di+2]
020C:9280  9A 1491:0414		;*		call	far ptr sub_160		;*(1491:0414)
020C:9280  9A					db	9Ah
020C:9281  0414 1491				dw	414h, 1491h
020C:9285  5B					pop	bx
020C:9286  E9 01A1				jmp	loc_1471		; (942A)
020C:9289			loc_1449:
020C:9289  9A 1491:09C4		;*		call	far ptr sub_169		;*(1491:09C4)
020C:9289  9A					db	9Ah
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 309

020C:928A  09C4 1491				dw	9C4h, 1491h
020C:928E  F6 06 230A 08			test	byte ptr ds:[230Ah],8	; (020C:230A=0)
020C:9293  74 07				jz	loc_1450		; Jump if zero
020C:9295  9A 1491:6808		;*		call	far ptr sub_221		;*(1491:6808)
020C:9295  9A					db	9Ah
020C:9296  6808 1491				dw	6808h, 1491h
020C:929A  EB 21				jmp	short loc_1452		; (92BD)
020C:929C			loc_1450:
020C:929C  B0 53				mov	al,53h			; 'S'
020C:929E  9A 1491:6784		;*		call	far ptr sub_219		;*(1491:6784)
020C:929E  9A					db	9Ah
020C:929F  6784 1491				dw	6784h, 1491h
020C:92A3  72 02				jc	loc_1451		; Jump if carry Set
020C:92A5  B0 44				mov	al,44h			; 'D'
020C:92A7			loc_1451:
020C:92A7  0A 06 22F6				or	al,data_441		; (020C:22F6=0)
020C:92AB  3E: 88 46 00				mov	ds:[bp],al
020C:92AF  45					inc	bp
020C:92B0  B8 3A53				mov	ax,3A53h
020C:92B3  0A 06 22F6				or	al,data_441		; (020C:22F6=0)
020C:92B7  3E: 89 46 00				mov	ds:[bp],ax
020C:92BB  45					inc	bp
020C:92BC  45					inc	bp
020C:92BD			loc_1452:
020C:92BD  3E: C6 46 00 5B			mov	byte ptr ds:[bp],5Bh	; '['
020C:92C2  45					inc	bp
020C:92C3  53					push	bx
020C:92C4  A1 2FB6				mov	ax,data_529		; (020C:2FB6=0DEEh)
020C:92C7  26: 8B 5D 02				mov	bx,es:[di+2]
020C:92CB  9A 1491:0414		;*		call	far ptr sub_160		;*(1491:0414)
020C:92CB  9A					db	9Ah
020C:92CC  0414 1491				dw	414h, 1491h
020C:92D0  5B					pop	bx
020C:92D1  3E: C6 46 00 5D			mov	byte ptr ds:[bp],5Dh	; ']'
020C:92D6  45					inc	bp
020C:92D7  E9 0150				jmp	loc_1471		; (942A)
020C:92DA			loc_1453:
020C:92DA  80 3E 1790 01			cmp	data_195,1		; (020C:1790=0)
020C:92DF  75 32				jne	loc_1456		; Jump if not equal
020C:92E1  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020C:92E6  75 2B				jnz	loc_1456		; Jump if not zero
020C:92E8  26: F6 45 05 40			test	byte ptr es:[di+5],40h	; '@'
020C:92ED  75 24				jnz	loc_1456		; Jump if not zero
020C:92EF  26: F6 45 07 80			test	byte ptr es:[di+7],80h
020C:92F4  75 1D				jnz	loc_1456		; Jump if not zero
020C:92F6  26: 8B 05				mov	ax,es:[di]
020C:92F9  3B 06 2154				cmp	ax,data_379		; (020C:2154=5CE9h)
020C:92FD  72 11				jb	loc_1455		; Jump if below
020C:92FF  77 0A				ja	loc_1454		; Jump if above
020C:9301  26: 8B 45 02				mov	ax,es:[di+2]
020C:9305  3B 06 2156				cmp	ax,data_380		; (020C:2156=0FFFFh)
020C:9309  72 05				jb	loc_1455		; Jump if below
020C:930B			loc_1454:
020C:930B  E8 1ADE				call	sub_122			; (ADEC)
020C:930E  72 03				jc	loc_1456		; Jump if carry Set
020C:9310			loc_1455:
020C:9310  E9 FF3E				jmp	loc_1447		; (9251)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 310

020C:9313			loc_1456:
020C:9313  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020C:9318  75 5E				jnz	loc_1463		; Jump if not zero
020C:931A  F6 06 216E 40			test	data_392,40h		; (020C:216E=0FFh) '@'
020C:931F  74 07				jz	loc_1457		; Jump if zero
020C:9321  26: F6 45 05 40			test	byte ptr es:[di+5],40h	; '@'
020C:9326  74 50				jz	loc_1463		; Jump if zero
020C:9328			loc_1457:
020C:9328  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020C:932D  74 0B				jz	loc_1459		; Jump if zero
020C:932F  F6 06 216E 80			test	data_392,80h		; (020C:216E=0FFh)
020C:9334  75 02				jnz	loc_1458		; Jump if not zero
020C:9336  EB 40				jmp	short loc_1463		; (9378)
020C:9338			loc_1458:
020C:9338  EB 43				jmp	short loc_1464		; (937D)
020C:933A			loc_1459:
020C:933A  F6 C7 C0				test	bh,0C0h
020C:933D  74 3E				jz	loc_1464		; Jump if zero
020C:933F  26: 8A 45 04				mov	al,es:[di+4]
020C:9343  24 3F				and	al,3Fh			; '?'
020C:9345  8A E7				mov	ah,bh
020C:9347  80 E4 F0				and	ah,0F0h
020C:934A  80 FC 40				cmp	ah,40h			; '@'
020C:934D  75 0A				jne	loc_1460		; Jump if not equal
020C:934F  3C 01				cmp	al,1
020C:9351  74 2A				je	loc_1464		; Jump if equal
020C:9353  3C 21				cmp	al,21h			; '!'
020C:9355  74 26				je	loc_1464		; Jump if equal
020C:9357  EB 1F				jmp	short loc_1463		; (9378)
020C:9359			loc_1460:
020C:9359  80 FC A0				cmp	ah,0A0h
020C:935C  75 11				jne	loc_1461		; Jump if not equal
020C:935E  F6 06 2308 01			test	data_455,1		; (020C:2308=0)
020C:9363  75 0F				jnz	loc_1462		; Jump if not zero
020C:9365  3C 02				cmp	al,2
020C:9367  74 14				je	loc_1464		; Jump if equal
020C:9369  3C 22				cmp	al,22h			; '"'
020C:936B  74 10				je	loc_1464		; Jump if equal
020C:936D  EB 09				jmp	short loc_1463		; (9378)
020C:936F			loc_1461:
020C:936F  80 FC B0				cmp	ah,0B0h
020C:9372  75 04				jne	loc_1463		; Jump if not equal
020C:9374			loc_1462:
020C:9374  3C 04				cmp	al,4
020C:9376  74 05				je	loc_1464		; Jump if equal
020C:9378			loc_1463:
020C:9378  9A 1491:09C4		;*		call	far ptr sub_169		;*(1491:09C4)
020C:9378  9A					db	9Ah
020C:9379  09C4 1491				dw	9C4h, 1491h
020C:937D			loc_1464:
020C:937D  80 3E 1CD7 01			cmp	data_252,1		; (020C:1CD7=0)
020C:9382  75 3B				jne	loc_1466		; Jump if not equal
020C:9384  F6 06 230A 08			test	byte ptr ds:[230Ah],8	; (020C:230A=0)
020C:9389  74 07				jz	loc_1465		; Jump if zero
020C:938B  9A 1491:6808		;*		call	far ptr sub_221		;*(1491:6808)
020C:938B  9A					db	9Ah
020C:938C  6808 1491				dw	6808h, 1491h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 311

020C:9390  EB 2D				jmp	short loc_1466		; (93BF)
020C:9392			loc_1465:
020C:9392  80 3E 1CD4 01			cmp	data_251,1		; (020C:1CD4=0)
020C:9397  74 26				je	loc_1466		; Jump if equal
020C:9399  80 3E 217B 00			cmp	data_401,0		; (020C:217B=2Eh)
020C:939E  75 5C				jne	loc_1468		; Jump if not equal
020C:93A0  9A 1491:6784		;*		call	far ptr sub_219		;*(1491:6784)
020C:93A0  9A					db	9Ah
020C:93A1  6784 1491				dw	6784h, 1491h
020C:93A5  73 18				jnc	loc_1466		; Jump if carry=0
020C:93A7  B0 53				mov	al,53h			; 'S'
020C:93A9  0A 06 22F6				or	al,data_441		; (020C:22F6=0)
020C:93AD  3E: 88 46 00				mov	ds:[bp],al
020C:93B1  45					inc	bp
020C:93B2  3E: 88 46 00				mov	ds:[bp],al
020C:93B6  45					inc	bp
020C:93B7  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020C:93BC  45					inc	bp
020C:93BD  EB 3D				jmp	short loc_1468		; (93FC)
020C:93BF			loc_1466:
020C:93BF  80 3E 217B 00			cmp	data_401,0		; (020C:217B=2Eh)
020C:93C4  75 36				jne	loc_1468		; Jump if not equal
020C:93C6  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020C:93CB  74 2F				jz	loc_1468		; Jump if zero
020C:93CD  80 3E 2345 90			cmp	data_477,90h		; (020C:2345=0)
020C:93D2  75 28				jne	loc_1468		; Jump if not equal
020C:93D4  80 3E 1790 01			cmp	data_195,1		; (020C:1790=0)
020C:93D9  75 21				jne	loc_1468		; Jump if not equal
020C:93DB  B0 53				mov	al,53h			; 'S'
020C:93DD  9A 1491:6784		;*		call	far ptr sub_219		;*(1491:6784)
020C:93DD  9A					db	9Ah
020C:93DE  6784 1491				dw	6784h, 1491h
020C:93E2  72 02				jc	loc_1467		; Jump if carry Set
020C:93E4  B0 44				mov	al,44h			; 'D'
020C:93E6			loc_1467:
020C:93E6  0A 06 22F6				or	al,data_441		; (020C:22F6=0)
020C:93EA  3E: 88 46 00				mov	ds:[bp],al
020C:93EE  45					inc	bp
020C:93EF  B8 3A53				mov	ax,3A53h
020C:93F2  0A 06 22F6				or	al,data_441		; (020C:22F6=0)
020C:93F6  3E: 89 46 00				mov	ds:[bp],ax
020C:93FA  45					inc	bp
020C:93FB  45					inc	bp
020C:93FC			loc_1468:
020C:93FC  80 3E 1790 01			cmp	data_195,1		; (020C:1790=0)
020C:9401  75 2A				jne	loc_1472		; Jump if not equal
020C:9403  B9 000A				mov	cx,0Ah
020C:9406  F6 06 3D05 08			test	data_583,8		; (020C:3D05=0E8h)
020C:940B  74 13				jz	loc_1469		; Jump if zero
020C:940D  3E: C6 46 00 5B			mov	byte ptr ds:[bp],5Bh	; '['
020C:9412  45					inc	bp
020C:9413  9A 1491:34C0		;*		call	far ptr sub_191		;*(1491:34C0)
020C:9413  9A					db	9Ah
020C:9414  34C0 1491				dw	34C0h, 1491h
020C:9418  3E: C6 46 00 5D			mov	byte ptr ds:[bp],5Dh	; ']'
020C:941D  45					inc	bp
020C:941E  EB 05				jmp	short loc_1470		; (9425)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 312

020C:9420			loc_1469:
020C:9420  9A 1491:34C0		;*		call	far ptr sub_191		;*(1491:34C0)
020C:9420  9A					db	9Ah
020C:9421  34C0 1491				dw	34C0h, 1491h
020C:9425			loc_1470:
020C:9425  80 26 3D06 BF			and	data_584,0BFh		; (020C:3D06=98h)
020C:942A			loc_1471:
020C:942A  E8 D6F3				call	sub_71			; (6B20)
020C:942D			loc_1472:
020C:942D  89 3E 1D73				mov	data_333,di		; (020C:1D73=0)
020C:9431  83 06 1D73 04			add	data_333,4		; (020C:1D73=0)
020C:9436  80 3E 178F 06			cmp	data_194,6		; (020C:178F=0)
020C:943B  72 07				jb	loc_1473		; Jump if below
020C:943D  80 3E 178A 04			cmp	data_190,4		; (020C:178A=0)
020C:9442  72 30				jb	loc_1474		; Jump if below
020C:9444			loc_1473:
020C:9444  A1 2190				mov	ax,data_412		; (020C:2190=2E0Eh)
020C:9447  A3 2194				mov	data_414,ax		; (020C:2194=10Ch)
020C:944A  A1 2192				mov	ax,data_413		; (020C:2192=2EFFh)
020C:944D  A3 2196				mov	data_415,ax		; (020C:2196=0E8FBh)
020C:9450  A1 218C				mov	ax,data_410		; (020C:218C=4EE8h)
020C:9453  A3 2190				mov	data_412,ax		; (020C:2190=2E0Eh)
020C:9456  A1 218E				mov	ax,data_411		; (020C:218E=1E00h)
020C:9459  A3 2192				mov	data_413,ax		; (020C:2192=2EFFh)
020C:945C  A1 2FAE				mov	ax,data_525		; (020C:2FAE=0DA5h)
020C:945F  A3 218C				mov	data_410,ax		; (020C:218C=4EE8h)
020C:9462  A1 2FB0				mov	ax,data_526		; (020C:2FB0=0DC3h)
020C:9465  A3 218E				mov	data_411,ax		; (020C:218E=1E00h)
020C:9468  80 3E 1790 01			cmp	data_195,1		; (020C:1790=0)
020C:946D  74 05				je	loc_1474		; Jump if equal
020C:946F  26: 80 4D 04 40			or	byte ptr es:[di+4],40h	; '@'
020C:9474			loc_1474:
020C:9474  C6 06 46DC 00			mov	byte ptr ds:[46DCh],0	; (020C:46DC=3Eh)
020C:9479  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:947E  9C					pushf				; Push flags
020C:947F  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:9484  5A					pop	dx
020C:9485  8E C2				mov	es,dx
020C:9487  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:948C  5A					pop	dx
020C:948D  75 0A				jnz	loc_1475		; Jump if not zero
020C:948F  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:9494  74 03				je	loc_1475		; Jump if equal
020C:9496  E8 EA17				call	sub_97			; (7EB0)
020C:9499			loc_1475:
020C:9499  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:949E  9D					popf				; Pop flags
020C:949F  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:94A4  5F					pop	di
020C:94A5  5E					pop	si
020C:94A6  5A					pop	dx
020C:94A7  5B					pop	bx
020C:94A8  C3					retn
				sub_111		endp

020C:94A9  87 DB				xchg	bx,bx
020C:94AB  90					nop
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 313


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:94AC			sub_112		proc	near
020C:94AC  50					push	ax
020C:94AD  52					push	dx
020C:94AE  56					push	si
020C:94AF  57					push	di
020C:94B0  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:94B5  06					push	es
020C:94B6  51					push	cx
020C:94B7  C6 06 3D00 00			mov	data_580,0		; (020C:3D00=17h)
020C:94BC  80 3E 1D44 4F			cmp	data_308,4Fh		; (020C:1D44=0) 'O'
020C:94C1  74 05				je	loc_1476		; Jump if equal
020C:94C3  BA 0001				mov	dx,1
020C:94C6  EB 03				jmp	short loc_1477		; (94CB)
020C:94C8			loc_1476:
020C:94C8  BA 0004				mov	dx,4
020C:94CB			loc_1477:
020C:94CB  BF 0000				mov	di,0
020C:94CE  80 3E 178B 02			cmp	data_191,2		; (020C:178B=0)
020C:94D3  75 46				jne	loc_1482		; Jump if not equal
020C:94D5  80 3E 3D78 00			cmp	data_634,0		; (020C:3D78=4)
020C:94DA  75 08				jne	loc_1478		; Jump if not equal
020C:94DC  F7 06 3D1D 0040			test	data_597,40h		; (020C:3D1D=0D4E8h)
020C:94E2  75 34				jnz	loc_1481		; Jump if not zero
020C:94E4			loc_1478:
020C:94E4  83 FA 04				cmp	dx,4
020C:94E7  74 28				je	loc_1480		; Jump if equal
020C:94E9  F6 06 3D78 02			test	data_634,2		; (020C:3D78=4)
020C:94EE  74 2B				jz	loc_1482		; Jump if zero
020C:94F0  F6 06 3D78 80			test	data_634,80h		; (020C:3D78=4)
020C:94F5  74 21				jz	loc_1481		; Jump if zero
020C:94F7  3B 1E 2154				cmp	bx,data_379		; (020C:2154=5CE9h)
020C:94FB  75 1B				jne	loc_1481		; Jump if not equal
020C:94FD  52					push	dx
020C:94FE  8B 16 2156				mov	dx,data_380		; (020C:2156=0FFFFh)
020C:9502  2B D0				sub	dx,ax
020C:9504  73 02				jnc	loc_1479		; Jump if carry=0
020C:9506  F7 D2				not	dx
020C:9508			loc_1479:
020C:9508  81 FA 0080				cmp	dx,80h
020C:950C  5A					pop	dx
020C:950D  72 0C				jc	loc_1482		; Jump if carry Set
020C:950F  EB 07				jmp	short loc_1481		; (9518)
020C:9511			loc_1480:
020C:9511  F6 06 3D78 01			test	data_634,1		; (020C:3D78=4)
020C:9516  74 03				jz	loc_1482		; Jump if zero
020C:9518			loc_1481:
020C:9518  E8 13B9				call	sub_119			; (A8D4)
020C:951B			loc_1482:
020C:951B  E8 D012				call	sub_69			; (6530)
020C:951E  73 03				jnc	loc_1483		; Jump if carry=0
020C:9520  E9 013D				jmp	loc_1500		; (9660)
020C:9523			loc_1483:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 314

020C:9523  83 FB 01				cmp	bx,1
020C:9526  75 08				jne	loc_1484		; Jump if not equal
020C:9528  3D 03FF				cmp	ax,3FFh
020C:952B  77 03				ja	loc_1484		; Jump if above
020C:952D  E9 0093				jmp	loc_1491		; (95C3)
020C:9530			loc_1484:
020C:9530  83 3E 1D68 00			cmp	data_327,0		; (020C:1D68=0)
020C:9535  75 43				jne	loc_1488		; Jump if not equal
020C:9537  57					push	di
020C:9538  50					push	ax
020C:9539  BF 1960				mov	di,1960h
020C:953C  80 3D EB				cmp	byte ptr [di],0EBh
020C:953F  74 0F				je	loc_1485		; Jump if equal
020C:9541  80 3D E3				cmp	byte ptr [di],0E3h
020C:9544  74 0A				je	loc_1485		; Jump if equal
020C:9546  80 3D 70				cmp	byte ptr [di],70h	; 'p'
020C:9549  72 2D				jb	loc_1487		; Jump if below
020C:954B  80 3D 7F				cmp	byte ptr [di],7Fh
020C:954E  77 28				ja	loc_1487		; Jump if above
020C:9550			loc_1485:
020C:9550  F6 06 2308 02			test	data_455,2		; (020C:2308=0)
020C:9555  75 21				jnz	loc_1487		; Jump if not zero
020C:9557  2B 06 2156				sub	ax,data_380		; (020C:2156=0FFFFh)
020C:955B  3D 0003				cmp	ax,3
020C:955E  77 18				ja	loc_1487		; Jump if above
020C:9560  3D 0002				cmp	ax,2
020C:9563  74 0A				je	loc_1486		; Jump if equal
020C:9565  72 11				jc	loc_1487		; Jump if carry Set
020C:9567  80 7D 02 90				cmp	byte ptr [di+2],90h
020C:956B  74 02				je	loc_1486		; Jump if equal
020C:956D  EB 09				jmp	short loc_1487		; (9578)
020C:956F			loc_1486:
020C:956F  C6 06 1D44 F5			mov	data_308,0F5h		; (020C:1D44=0)
020C:9574  58					pop	ax
020C:9575  5F					pop	di
020C:9576  EB 4B				jmp	short loc_1491		; (95C3)
020C:9578			loc_1487:
020C:9578  58					pop	ax
020C:9579  5F					pop	di
020C:957A			loc_1488:
020C:957A  80 3E 1790 01			cmp	data_195,1		; (020C:1790=0)
020C:957F  74 42				je	loc_1491		; Jump if equal
020C:9581  BF 4165				mov	di,4165h
020C:9584  A1 2FAE				mov	ax,data_525		; (020C:2FAE=0DA5h)
020C:9587  89 05				mov	[di],ax
020C:9589  A1 2FB0				mov	ax,data_526		; (020C:2FB0=0DC3h)
020C:958C  89 45 02				mov	[di+2],ax
020C:958F  32 C9				xor	cl,cl			; Zero register
020C:9591  80 3E 1D44 4F			cmp	data_308,4Fh		; (020C:1D44=0) 'O'
020C:9596  74 03				je	loc_1489		; Jump if equal
020C:9598  E9 009C				jmp	loc_1497		; (9637)
020C:959B			loc_1489:
020C:959B  C6 45 04 00				mov	byte ptr [di+4],0
020C:959F  C6 45 05 08				mov	byte ptr [di+5],8
020C:95A3  80 3E 163F 01			cmp	data_174,1		; (020C:163F=0)
020C:95A8  77 04				ja	loc_1490		; Jump if above
020C:95AA  C6 45 05 09				mov	byte ptr [di+5],9
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 315

020C:95AE			loc_1490:
020C:95AE  C6 45 06 00				mov	byte ptr [di+6],0
020C:95B2  C6 45 32 00				mov	byte ptr [di+32h],0
020C:95B6  C7 45 07 0000			mov	word ptr [di+7],0
020C:95BB  C7 45 3B 0000			mov	word ptr [di+3Bh],0
020C:95C0  E9 008B				jmp	loc_1499		; (964E)
020C:95C3			loc_1491:
020C:95C3  A1 2FB0				mov	ax,data_526		; (020C:2FB0=0DC3h)
020C:95C6  2B 06 2156				sub	ax,data_380		; (020C:2156=0FFFFh)
020C:95CA  A3 230E				mov	data_459,ax		; (020C:230E=0)
020C:95CD  C7 06 2310 0000			mov	data_460,0		; (020C:2310=0)
020C:95D3  3E: C6 46 00 24			mov	byte ptr ds:[bp],24h	; '$'
020C:95D8  45					inc	bp
020C:95D9  9A 1491:8010		;*		call	far ptr sub_247		;*(1491:8010)
020C:95D9  9A					db	9Ah
020C:95DA  8010 1491				dw	8010h, 1491h
020C:95DE  C6 06 3D00 01			mov	data_580,1		; (020C:3D00=17h)
020C:95E3  A1 2FB0				mov	ax,data_526		; (020C:2FB0=0DC3h)
020C:95E6  2B 06 1CF8				sub	ax,data_271		; (020C:1CF8=0)
020C:95EA  3D 000F				cmp	ax,0Fh
020C:95ED  77 02				ja	loc_1492		; Jump if above
020C:95EF  EB 04				jmp	short loc_1493		; (95F5)
020C:95F1			loc_1492:
020C:95F1  59					pop	cx
020C:95F2  E9 02B2				jmp	loc_1527		; (98A7)
020C:95F5			loc_1493:
020C:95F5  80 3E 1D44 4F			cmp	data_308,4Fh		; (020C:1D44=0) 'O'
020C:95FA  74 37				je	loc_1496		; Jump if equal
020C:95FC  A1 2154				mov	ax,data_379		; (020C:2154=5CE9h)
020C:95FF  3B 06 2FAE				cmp	ax,data_525		; (020C:2FAE=0DA5h)
020C:9603  75 2E				jne	loc_1496		; Jump if not equal
020C:9605  A1 2FB0				mov	ax,data_526		; (020C:2FB0=0DC3h)
020C:9608  3D 0010				cmp	ax,10h
020C:960B  76 03				jbe	loc_1494		; Jump if below or =
020C:960D  2D 0010				sub	ax,10h
020C:9610			loc_1494:
020C:9610  3B 06 1CF8				cmp	ax,data_271		; (020C:1CF8=0)
020C:9614  73 1D				jae	loc_1496		; Jump if above or =
020C:9616  A1 2FB0				mov	ax,data_526		; (020C:2FB0=0DC3h)
020C:9619  3B 06 22B8				cmp	ax,data_431		; (020C:22B8=0)
020C:961D  76 14				jbe	loc_1496		; Jump if below or =
020C:961F  3D 0300				cmp	ax,300h
020C:9622  76 0C				jbe	loc_1495		; Jump if below or =
020C:9624  2D 0300				sub	ax,300h
020C:9627  3B 06 2156				cmp	ax,data_380		; (020C:2156=0FFFFh)
020C:962B  77 06				ja	loc_1496		; Jump if above
020C:962D  A1 2FB0				mov	ax,data_526		; (020C:2FB0=0DC3h)
020C:9630			loc_1495:
020C:9630  A3 22B8				mov	data_431,ax		; (020C:22B8=0)
020C:9633			loc_1496:
020C:9633  59					pop	cx
020C:9634  E9 0270				jmp	loc_1527		; (98A7)
020C:9637			loc_1497:
020C:9637  C6 45 04 00				mov	byte ptr [di+4],0
020C:963B  C6 45 05 00				mov	byte ptr [di+5],0
020C:963F  80 3E 163F 01			cmp	data_174,1		; (020C:163F=0)
020C:9644  77 04				ja	loc_1498		; Jump if above
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 316

020C:9646  C6 45 05 01				mov	byte ptr [di+5],1
020C:964A			loc_1498:
020C:964A  C6 45 06 00				mov	byte ptr [di+6],0
020C:964E			loc_1499:
020C:964E  E8 F23F				call	sub_107			; (8890)
020C:9651  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (020C:0006=3)
020C:9656  89 3E 3D03				mov	data_582,di		; (020C:3D03=3CE9h)
020C:965A  E8 C6BF				call	sub_53			; (5D1C)
020C:965D  E9 00AA				jmp	loc_1507		; (970A)
020C:9660			loc_1500:
020C:9660  89 3E 3D03				mov	data_582,di		; (020C:3D03=3CE9h)
020C:9664  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020C:9669  75 21				jnz	loc_1501		; Jump if not zero
020C:966B  80 3E 1790 01			cmp	data_195,1		; (020C:1790=0)
020C:9670  75 24				jne	loc_1502		; Jump if not equal
020C:9672  26: F6 45 05 40			test	byte ptr es:[di+5],40h	; '@'
020C:9677  75 1D				jnz	loc_1502		; Jump if not zero
020C:9679  A1 2154				mov	ax,data_379		; (020C:2154=5CE9h)
020C:967C  26: 3B 05				cmp	ax,es:[di]
020C:967F  77 0B				ja	loc_1501		; Jump if above
020C:9681  72 13				jc	loc_1502		; Jump if carry Set
020C:9683  A1 2156				mov	ax,data_380		; (020C:2156=0FFFFh)
020C:9686  26: 3B 45 02				cmp	ax,es:[di+2]
020C:968A  76 0A				jbe	loc_1502		; Jump if below or =
020C:968C			loc_1501:
020C:968C  C6 06 22F5 01			mov	data_440,1		; (020C:22F5=0FFh)
020C:9691  C6 06 3CFE 01			mov	data_579,1		; (020C:3CFE=6)
020C:9696			loc_1502:
020C:9696  B9 003D				mov	cx,3Dh
020C:9699  80 3E 1D44 4F			cmp	data_308,4Fh		; (020C:1D44=0) 'O'
020C:969E  74 3A				je	loc_1505		; Jump if equal
020C:96A0  B9 0007				mov	cx,7
020C:96A3  A1 2154				mov	ax,data_379		; (020C:2154=5CE9h)
020C:96A6  3B 06 2FAE				cmp	ax,data_525		; (020C:2FAE=0DA5h)
020C:96AA  75 2E				jne	loc_1505		; Jump if not equal
020C:96AC  A1 2FB0				mov	ax,data_526		; (020C:2FB0=0DC3h)
020C:96AF  3D 0010				cmp	ax,10h
020C:96B2  76 03				jbe	loc_1503		; Jump if below or =
020C:96B4  2D 0010				sub	ax,10h
020C:96B7			loc_1503:
020C:96B7  3B 06 1CF8				cmp	ax,data_271		; (020C:1CF8=0)
020C:96BB  73 1D				jae	loc_1505		; Jump if above or =
020C:96BD  A1 2FB0				mov	ax,data_526		; (020C:2FB0=0DC3h)
020C:96C0  3B 06 22B8				cmp	ax,data_431		; (020C:22B8=0)
020C:96C4  76 14				jbe	loc_1505		; Jump if below or =
020C:96C6  3D 0300				cmp	ax,300h
020C:96C9  76 0C				jbe	loc_1504		; Jump if below or =
020C:96CB  2D 0300				sub	ax,300h
020C:96CE  3B 06 2156				cmp	ax,data_380		; (020C:2156=0FFFFh)
020C:96D2  77 06				ja	loc_1505		; Jump if above
020C:96D4  A1 2FB0				mov	ax,data_526		; (020C:2FB0=0DC3h)
020C:96D7			loc_1504:
020C:96D7  A3 22B8				mov	data_431,ax		; (020C:22B8=0)
020C:96DA			loc_1505:
020C:96DA  80 3E 1790 01			cmp	data_195,1		; (020C:1790=0)
020C:96DF  75 29				jne	loc_1507		; Jump if not equal
020C:96E1  9A 1491:34C0		;*		call	far ptr sub_191		;*(1491:34C0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 317

020C:96E1  9A					db	9Ah
020C:96E2  34C0 1491				dw	34C0h, 1491h
020C:96E6  81 FD 19B3				cmp	bp,19B3h
020C:96EA  72 1E				jb	loc_1507		; Jump if below
020C:96EC  81 FD 1A6C				cmp	bp,1A6Ch
020C:96F0  73 18				jae	loc_1507		; Jump if above or =
020C:96F2  80 3E 1A45 28			cmp	byte ptr ds:[1A45h],28h	; (020C:1A45=1) '('
020C:96F7  74 11				je	loc_1507		; Jump if equal
020C:96F9  F6 06 163F 02			test	data_174,2		; (020C:163F=0)
020C:96FE  74 07				jz	loc_1506		; Jump if zero
020C:9700  9A 1491:7CC0		;*		call	far ptr sub_242		;*(1491:7CC0)
020C:9700  9A					db	9Ah
020C:9701  7CC0 1491				dw	7CC0h, 1491h
020C:9705  73 03				jnc	loc_1507		; Jump if carry=0
020C:9707			loc_1506:
020C:9707  E8 0FC6				call	sub_116			; (A6D0)
020C:970A			loc_1507:
020C:970A  80 3E 1D44 4F			cmp	data_308,4Fh		; (020C:1D44=0) 'O'
020C:970F  74 03				je	loc_1508		; Jump if equal
020C:9711  E9 0102				jmp	loc_1519		; (9816)
020C:9714			loc_1508:
020C:9714  59					pop	cx
020C:9715  51					push	cx
020C:9716  F6 C1 02				test	cl,2
020C:9719  74 0E				jz	loc_1510		; Jump if zero
020C:971B  26: 8A 45 04				mov	al,es:[di+4]
020C:971F  24 07				and	al,7
020C:9721  74 03				jz	loc_1509		; Jump if zero
020C:9723  E9 00F0				jmp	loc_1519		; (9816)
020C:9726			loc_1509:
020C:9726  E9 00A7				jmp	loc_1515		; (97D0)
020C:9729			loc_1510:
020C:9729  26: F6 45 04 18			test	byte ptr es:[di+4],18h
020C:972E  75 12				jnz	loc_1512		; Jump if not zero
020C:9730  F7 06 3D18 0400			test	data_594,400h		; (020C:3D18=2680h)
020C:9736  75 07				jnz	loc_1511		; Jump if not zero
020C:9738  80 3E 1F6D 01			cmp	data_355,1		; (020C:1F6D=0)
020C:973D  75 03				jne	loc_1512		; Jump if not equal
020C:973F			loc_1511:
020C:973F  E9 008E				jmp	loc_1515		; (97D0)
020C:9742			loc_1512:
020C:9742  26: 8B 05				mov	ax,es:[di]
020C:9745  A3 217C				mov	data_402,ax		; (020C:217C=2EFFh)
020C:9748  26: 8B 45 02				mov	ax,es:[di+2]
020C:974C  A3 217E				mov	data_403,ax		; (020C:217E=104h)
020C:974F  80 0E 216F 02			or	data_393,2		; (020C:216F=0FFh)
020C:9754  C7 06 219A FFFF			mov	data_417,0FFFFh		; (020C:219A=0E1Eh)
020C:975A  26: 8A 45 32				mov	al,es:[di+32h]
020C:975E  24 38				and	al,38h			; '8'
020C:9760  3C 38				cmp	al,38h			; '8'
020C:9762  75 6C				jne	loc_1515		; Jump if not equal
020C:9764  26: F6 45 05 20			test	byte ptr es:[di+5],20h	; ' '
020C:9769  74 05				jz	loc_1513		; Jump if zero
020C:976B  C6 06 420E 01			mov	data_673,1		; (020C:420E=0E8h)
020C:9770			loc_1513:
020C:9770  C6 06 216F 05			mov	data_393,5		; (020C:216F=0FFh)
020C:9775  80 3E 1790 01			cmp	data_195,1		; (020C:1790=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 318

020C:977A  75 54				jne	loc_1515		; Jump if not equal
020C:977C  C6 06 4568 86			mov	data_709,86h		; (020C:4568=0E0h)
020C:9781  51					push	cx
020C:9782  57					push	di
020C:9783  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:9788  06					push	es
020C:9789  E8 E262				call	sub_90			; (79EE)
020C:978C  55					push	bp
020C:978D  E8 D624				call	sub_72			; (6DB4)
020C:9790  8B FD				mov	di,bp
020C:9792  5D					pop	bp
020C:9793  BE 2F59				mov	si,2F59h
020C:9796  B9 2F71				mov	cx,2F71h
020C:9799  81 E9 2F57				sub	cx,2F57h
020C:979D  83 E9 02				sub	cx,2
020C:97A0  FC					cld				; Clear direction
020C:97A1  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:97A3  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:97A8  9C					pushf				; Push flags
020C:97A9  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:97AE  5A					pop	dx
020C:97AF  8E C2				mov	es,dx
020C:97B1  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:97B6  5A					pop	dx
020C:97B7  75 0A				jnz	loc_1514		; Jump if not zero
020C:97B9  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:97BE  74 03				je	loc_1514		; Jump if equal
020C:97C0  E8 E6ED				call	sub_97			; (7EB0)
020C:97C3			loc_1514:
020C:97C3  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:97C8  9D					popf				; Pop flags
020C:97C9  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:97CE  5F					pop	di
020C:97CF  59					pop	cx
020C:97D0			loc_1515:
020C:97D0  26: 8A 45 04				mov	al,es:[di+4]
020C:97D4  A8 01				test	al,1
020C:97D6  74 04				jz	loc_1516		; Jump if zero
020C:97D8  A8 02				test	al,2
020C:97DA  75 14				jnz	loc_1517		; Jump if not zero
020C:97DC			loc_1516:
020C:97DC  0C 03				or	al,3
020C:97DE  26: 88 45 04				mov	es:[di+4],al
020C:97E2  57					push	di
020C:97E3  83 C7 09				add	di,9
020C:97E6  BE 2314				mov	si,2314h
020C:97E9  B9 0029				mov	cx,29h
020C:97EC  FC					cld				; Clear direction
020C:97ED  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:97EF  5F					pop	di
020C:97F0			loc_1517:
020C:97F0  26: 8A 45 32				mov	al,es:[di+32h]
020C:97F4  A8 80				test	al,80h
020C:97F6  74 0D				jz	loc_1518		; Jump if zero
020C:97F8  26: 8B 4D 33				mov	cx,es:[di+33h]
020C:97FC  C6 06 22F4 01			mov	data_439,1		; (020C:22F4=0FFh)
020C:9801  89 0E 2334				mov	data_471,cx		; (020C:2334=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 319

020C:9805			loc_1518:
020C:9805  A8 40				test	al,40h			; '@'
020C:9807  74 0D				jz	loc_1519		; Jump if zero
020C:9809  26: 8B 4D 35				mov	cx,es:[di+35h]
020C:980D  C6 06 22F4 01			mov	data_439,1		; (020C:22F4=0FFh)
020C:9812  89 0E 2332				mov	data_470,cx		; (020C:2332=0)
020C:9816			loc_1519:
020C:9816  80 3E 178F 06			cmp	data_194,6		; (020C:178F=0)
020C:981B  72 07				jb	loc_1520		; Jump if below
020C:981D  80 3E 178A 04			cmp	data_190,4		; (020C:178A=0)
020C:9822  72 13				jb	loc_1522		; Jump if below
020C:9824			loc_1520:
020C:9824  80 3E 1D44 4F			cmp	data_308,4Fh		; (020C:1D44=0) 'O'
020C:9829  74 07				je	loc_1521		; Jump if equal
020C:982B  26: F6 45 04 20			test	byte ptr es:[di+4],20h	; ' '
020C:9830  75 05				jnz	loc_1522		; Jump if not zero
020C:9832			loc_1521:
020C:9832  26: 80 4D 04 40			or	byte ptr es:[di+4],40h	; '@'
020C:9837			loc_1522:
020C:9837  59					pop	cx
020C:9838  80 3E 1D44 4F			cmp	data_308,4Fh		; (020C:1D44=0) 'O'
020C:983D  75 2A				jne	loc_1525		; Jump if not equal
020C:983F  F6 C1 01				test	cl,1
020C:9842  74 05				jz	loc_1523		; Jump if zero
020C:9844  26: 80 4D 04 80			or	byte ptr es:[di+4],80h
020C:9849			loc_1523:
020C:9849  F6 06 4726 01			test	byte ptr ds:[4726h],1	; (020C:4726=0)
020C:984E  74 17				jz	loc_1524		; Jump if zero
020C:9850  80 3E 178B 02			cmp	data_191,2		; (020C:178B=0)
020C:9855  75 10				jne	loc_1524		; Jump if not equal
020C:9857  9A 1491:4778		;*		call	far ptr sub_199		;*(1491:4778)
020C:9857  9A					db	9Ah
020C:9858  4778 1491				dw	4778h, 1491h
020C:985C  C7 06 4705 FFFF			mov	data_734,0FFFFh		; (020C:4705=3E5h)
020C:9862  C6 06 4725 00			mov	byte ptr ds:[4725h],0	; (020C:4725=0FBh)
020C:9867			loc_1524:
020C:9867  EB 3E				jmp	short loc_1527		; (98A7)
020C:9869			loc_1525:
020C:9869  F6 C1 04				test	cl,4
020C:986C  75 18				jnz	loc_1526		; Jump if not zero
020C:986E  A1 2184				mov	ax,data_406		; (020C:2184=0E1Eh)
020C:9871  A3 2188				mov	data_408,ax		; (020C:2188=82Eh)
020C:9874  A1 2186				mov	ax,data_407		; (020C:2186=0FF2Eh)
020C:9877  A3 218A				mov	data_409,ax		; (020C:218A=0FB01h)
020C:987A  A1 2180				mov	ax,data_404		; (020C:2180=0E8FBh)
020C:987D  A3 2184				mov	data_406,ax		; (020C:2184=0E1Eh)
020C:9880  A1 2182				mov	ax,data_405		; (020C:2182=59h)
020C:9883  A3 2186				mov	data_407,ax		; (020C:2186=0FF2Eh)
020C:9886			loc_1526:
020C:9886  A1 2FAE				mov	ax,data_525		; (020C:2FAE=0DA5h)
020C:9889  A3 2180				mov	data_404,ax		; (020C:2180=0E8FBh)
020C:988C  A1 2FB0				mov	ax,data_526		; (020C:2FB0=0DC3h)
020C:988F  A3 2182				mov	data_405,ax		; (020C:2182=59h)
020C:9892  89 3E 3D01				mov	data_581,di		; (020C:3D01=0E801h)
020C:9896  F6 C1 08				test	cl,8
020C:9899  74 0C				jz	loc_1527		; Jump if zero
020C:989B  9A 1491:7CC0		;*		call	far ptr sub_242		;*(1491:7CC0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 320

020C:989B  9A					db	9Ah
020C:989C  7CC0 1491				dw	7CC0h, 1491h
020C:98A0  72 05				jc	loc_1527		; Jump if carry Set
020C:98A2  26: C6 45 06 FF			mov	byte ptr es:[di+6],0FFh
020C:98A7			loc_1527:
020C:98A7  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:98AC  9C					pushf				; Push flags
020C:98AD  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:98B2  5A					pop	dx
020C:98B3  8E C2				mov	es,dx
020C:98B5  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:98BA  5A					pop	dx
020C:98BB  75 0A				jnz	loc_1528		; Jump if not zero
020C:98BD  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:98C2  74 03				je	loc_1528		; Jump if equal
020C:98C4  E8 E5E9				call	sub_97			; (7EB0)
020C:98C7			loc_1528:
020C:98C7  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:98CC  9D					popf				; Pop flags
020C:98CD  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:98D2  5F					pop	di
020C:98D3  5E					pop	si
020C:98D4  5A					pop	dx
020C:98D5  58					pop	ax
020C:98D6  C3					retn
				sub_112		endp

							                        ;* No entry point to code
020C:98D7  90					nop
020C:98D8  E8 F485				call	sub_111			; (8D60)
020C:98DB  CB					retf
							                        ;* No entry point to code
020C:98DC  E8 FBCD				call	sub_112			; (94AC)
020C:98DF  CB					retf				; Return far
020C:98E0  00					db	0
020C:98E1  00 00				add	[bx+si],al
020C:98E3  00 B4 9A04				add	data_815[si],dh		; (020C:9A04=76h)
020C:98E7  70 2F				jo	loc_1530		; Jump if overflow=1
020C:98E9  91					xchg	cx,ax
020C:98EA  14 E8				adc	al,0E8h
020C:98EC  00 E1				add	cl,ah
020C:98EE  E8 E124				call	sub_95			; (7A15)
020C:98F1  A3 1CD0				mov	data_249,ax		; (020C:1CD0=0)
020C:98F4  E8 1565				call	sub_123			; (AE5C)
020C:98F7  A1 195E				mov	ax,data_223		; (020C:195E=20Ch)
020C:98FA  3D 0000				cmp	ax,0
020C:98FD  75 0D				jne	loc_1529		; Jump if not equal
020C:98FF  83 3E 195C 00			cmp	data_222,0		; (020C:195C=6B4h)
020C:9904  75 06				jne	loc_1529		; Jump if not equal
020C:9906  B8 0002				mov	ax,2
020C:9909  E9 0C4A				jmp	loc_1668		; (A556)
020C:990C			loc_1529:
020C:990C  83 3E 1840 00			cmp	data_211,0		; (020C:1840=9153h)
020C:9911  75 07				jne	loc_1531		; Jump if not equal
020C:9913  83 3E 1842 00			cmp	data_212,0		; (020C:1842=7E03h)
020C:9918			loc_1530:
020C:9918  74 0E				je	loc_1532		; Jump if equal
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 321

020C:991A			loc_1531:
020C:991A  A1 1840				mov	ax,data_211		; (020C:1840=9153h)
020C:991D  A3 195E				mov	data_223,ax		; (020C:195E=20Ch)
020C:9920  A1 1842				mov	ax,data_212		; (020C:1842=7E03h)
020C:9923  A3 195C				mov	data_222,ax		; (020C:195C=6B4h)
020C:9926  EB 2F				jmp	short loc_1535		; (9957)
020C:9928			loc_1532:
020C:9928  83 3E 183C 00			cmp	data_209,0		; (020C:183C=1B5h)
020C:992D  75 07				jne	loc_1533		; Jump if not equal
020C:992F  83 3E 183E 00			cmp	data_210,0		; (020C:183E=0)
020C:9934  74 21				je	loc_1535		; Jump if equal
020C:9936			loc_1533:
020C:9936  A1 195C				mov	ax,data_222		; (020C:195C=6B4h)
020C:9939  2B 06 183E				sub	ax,data_210		; (020C:183E=0)
020C:993D  A3 195C				mov	data_222,ax		; (020C:195C=6B4h)
020C:9940  A1 195E				mov	ax,data_223		; (020C:195E=20Ch)
020C:9943  73 01				jnc	loc_1534		; Jump if carry=0
020C:9945  48					dec	ax
020C:9946			loc_1534:
020C:9946  2B 06 183C				sub	ax,data_209		; (020C:183C=1B5h)
020C:994A  A3 195E				mov	data_223,ax		; (020C:195E=20Ch)
020C:994D  73 08				jnc	loc_1535		; Jump if carry=0
020C:994F  C6 06 2307 43			mov	data_454,43h		; (020C:2307=0) 'C'
020C:9954  E9 015A				jmp	loc_1553		; (9AB1)
020C:9957			loc_1535:
020C:9957  A1 195E				mov	ax,data_223		; (020C:195E=20Ch)
020C:995A  8B D8				mov	bx,ax
020C:995C  83 E3 F0				and	bx,0FFF0h
020C:995F  C6 06 2307 41			mov	data_454,41h		; (020C:2307=0) 'A'
020C:9964  74 03				jz	loc_1536		; Jump if zero
020C:9966  E9 00E3				jmp	loc_1546		; (9A4C)
020C:9969			loc_1536:
020C:9969  B1 0C				mov	cl,0Ch
020C:996B  D3 E0				shl	ax,cl			; Shift w/zeros fill
020C:996D  8B 1E 195C				mov	bx,data_222		; (020C:195C=6B4h)
020C:9971  B1 04				mov	cl,4
020C:9973  D3 EB				shr	bx,cl			; Shift w/zeros fill
020C:9975  03 D8				add	bx,ax
020C:9977  43					inc	bx
020C:9978  43					inc	bx
020C:9979  83 FB 01				cmp	bx,1
020C:997C  C6 06 2307 42			mov	data_454,42h		; (020C:2307=0) 'B'
020C:9981  76 28				jbe	loc_1539		; Jump if below or =
020C:9983  8B D3				mov	dx,bx
020C:9985  BB 0008				mov	bx,8
020C:9988  33 C0				xor	ax,ax			; Zero register
020C:998A  33 C9				xor	cx,cx			; Zero register
020C:998C			loc_1537:
020C:998C  03 8F 1842				add	cx,data_212[bx]		; (020C:1842=7E03h)
020C:9990  73 01				jnc	loc_1538		; Jump if carry=0
020C:9992  40					inc	ax
020C:9993			loc_1538:
020C:9993  03 87 1840				add	ax,data_211[bx]		; (020C:1840=9153h)
020C:9997  83 C3 08				add	bx,8
020C:999A  83 FB 20				cmp	bx,20h
020C:999D  76 ED				jbe	loc_1537		; Jump if below or =
020C:999F  8B D8				mov	bx,ax
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 322

020C:99A1  83 E3 F0				and	bx,0FFF0h
020C:99A4  C6 06 2307 49			mov	data_454,49h		; (020C:2307=0) 'I'
020C:99A9  74 03				jz	loc_1540		; Jump if zero
020C:99AB			loc_1539:
020C:99AB  E9 009E				jmp	loc_1546		; (9A4C)
020C:99AE			loc_1540:
020C:99AE  8B D9				mov	bx,cx
020C:99B0  B1 0C				mov	cl,0Ch
020C:99B2  D3 E0				shl	ax,cl			; Shift w/zeros fill
020C:99B4  B1 04				mov	cl,4
020C:99B6  D3 EB				shr	bx,cl			; Shift w/zeros fill
020C:99B8  03 D8				add	bx,ax
020C:99BA  72 EF				jc	loc_1539		; Jump if carry Set
020C:99BC  43					inc	bx
020C:99BD  0B DB				or	bx,bx			; Zero ?
020C:99BF  C6 06 2307 4A			mov	data_454,4Ah		; (020C:2307=0) 'J'
020C:99C4  74 E5				jz	loc_1539		; Jump if zero
020C:99C6  03 D3				add	dx,bx
020C:99C8  72 E1				jc	loc_1539		; Jump if carry Set
020C:99CA  E8 E048				call	sub_95			; (7A15)
020C:99CD  8C C9				mov	cx,cs
020C:99CF  2B C1				sub	ax,cx
020C:99D1  8B 0E 1791				mov	cx,data_196		; (020C:1791=0)
020C:99D5  2B C8				sub	cx,ax
020C:99D7  72 3F				jc	loc_1542		; Jump if carry Set
020C:99D9  83 E9 20				sub	cx,20h
020C:99DC  72 3A				jc	loc_1542		; Jump if carry Set
020C:99DE  3B CA				cmp	cx,dx
020C:99E0  76 6A				jbe	loc_1546		; Jump if below or =
020C:99E2  BB FFFF				mov	bx,0FFFFh
020C:99E5  E8 E02D				call	sub_95			; (7A15)
020C:99E8  51					push	cx
020C:99E9  8B C8				mov	cx,ax
020C:99EB  E8 E021				call	sub_94			; (7A0F)
020C:99EE  3B C1				cmp	ax,cx
020C:99F0  59					pop	cx
020C:99F1  77 1E				ja	loc_1541		; Jump if above
020C:99F3  83 3E 1CCE 00			cmp	data_248,0		; (020C:1CCE=0)
020C:99F8  74 20				je	loc_1543		; Jump if equal
020C:99FA  E8 E012				call	sub_94			; (7A0F)
020C:99FD  05 1000				add	ax,1000h
020C:9A00  063B 1CCE		data_814	dw	63Bh, 1CCEh		; Data table (indexed access)
020C:9A04  76			data_815	db	76h			; Data table (indexed access)
020C:9A05  0B 2B				or	bp,[bp+di]
020C:9A07  06					push	es
020C:9A08  CE					into				; Int 4 on overflow
020C:9A09  1C B1				sbb	al,0B1h
020C:9A0B  04 D3				add	al,0D3h
020C:9A0D  E0 2B				loopnz	locloop_1545		; Loop if zf=0, cx>0

020C:9A0F  D8					db	0D8h
020C:9A10  4B					dec	bx
020C:9A11			loc_1541:
020C:9A11  89 1E 3D7D				mov	word ptr ds:[3D7Dh],bx	; (020C:3D7D=3C30h)
020C:9A15  E9 00AE				jmp	loc_1554		; (9AC6)
020C:9A18			loc_1542:
020C:9A18  EB 5D				jmp	short loc_1548		; (9A77)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 323

020C:9A1A			loc_1543:
020C:9A1A  B8 FFFF				mov	ax,0FFFFh
020C:9A1D  2D 3292				sub	ax,3292h
020C:9A20  D1 E8				shr	ax,1			; Shift w/zeros fill
020C:9A22  D1 E8				shr	ax,1			; Shift w/zeros fill
020C:9A24  D1 E8				shr	ax,1			; Shift w/zeros fill
020C:9A26  D1 E8				shr	ax,1			; Shift w/zeros fill
020C:9A28  2B CA				sub	cx,dx
020C:9A2A  3B C8				cmp	cx,ax
020C:9A2C  73 02				jae	loc_1544		; Jump if above or =
020C:9A2E  8B C1				mov	ax,cx
020C:9A30			loc_1544:
020C:9A30  01 06 1CD0				add	data_249,ax		; (020C:1CD0=0)
020C:9A34  E8 DFD8				call	sub_94			; (7A0F)
020C:9A37  8B D8				mov	bx,ax
020C:9A39  A1 1CD0				mov	ax,data_249		; (020C:1CD0=0)
020C:9A3C  2B C3				sub	ax,bx
020C:9A3E  D1 E0				shl	ax,1			; Shift w/zeros fill
020C:9A40  D1 E0				shl	ax,1			; Shift w/zeros fill
020C:9A42  D1 E0				shl	ax,1			; Shift w/zeros fill
020C:9A44  D1 E0				shl	ax,1			; Shift w/zeros fill
020C:9A46  48					dec	ax
020C:9A47  A3 3D7D				mov	word ptr ds:[3D7Dh],ax	; (020C:3D7D=3C30h)
020C:9A4A  EB 7A				jmp	short loc_1554		; (9AC6)
020C:9A4C			loc_1546:
020C:9A4C  E8 DFC6				call	sub_95			; (7A15)
020C:9A4F  8C C9				mov	cx,cs
020C:9A51  2B C1				sub	ax,cx
020C:9A53  8B 0E 1791				mov	cx,data_196		; (020C:1791=0)
020C:9A57  2B C8				sub	cx,ax
020C:9A59  8B D1				mov	dx,cx
020C:9A5B  B1 04				mov	cl,4
020C:9A5D  D3 C2				rol	dx,cl			; Rotate
020C:9A5F  8B CA				mov	cx,dx
020C:9A61  83 E1 0F				and	cx,0Fh
020C:9A64  83 E2 F0				and	dx,0FFF0h
020C:9A67  A1 195E				mov	ax,data_223		; (020C:195E=20Ch)
020C:9A6A  8B 1E 195C				mov	bx,data_222		; (020C:195C=6B4h)
020C:9A6E  2B DA				sub	bx,dx
020C:9A70  73 01				jnc	loc_1547		; Jump if carry=0
020C:9A72  48					dec	ax
020C:9A73			loc_1547:
020C:9A73  2B C1				sub	ax,cx
020C:9A75  EB 07				jmp	short loc_1549		; (9A7E)
020C:9A77			loc_1548:
020C:9A77  A1 195E				mov	ax,data_223		; (020C:195E=20Ch)
020C:9A7A  8B 1E 195C				mov	bx,data_222		; (020C:195C=6B4h)
020C:9A7E			loc_1549:
020C:9A7E  BE 0008				mov	si,8
020C:9A81			loc_1550:
020C:9A81  03 9C 1842				add	bx,data_212[si]		; (020C:1842=7E03h)
020C:9A85  73 01				jnc	loc_1551		; Jump if carry=0
020C:9A87  40					inc	ax
020C:9A88			loc_1551:
020C:9A88  03 84 1840				add	ax,data_211[si]		; (020C:1840=9153h)
020C:9A8C  83 C6 08				add	si,8
020C:9A8F  83 FE 20				cmp	si,20h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 324

020C:9A92  76 ED				jbe	loc_1550		; Jump if below or =
020C:9A94  B9 000A				mov	cx,0Ah

020C:9A97			locloop_1552:
020C:9A97  D1 E8				shr	ax,1			; Shift w/zeros fill
020C:9A99  D1 DB				rcr	bx,1			; Rotate thru carry
020C:9A9B  E2 FA				loop	locloop_1552		; Loop if cx > 0

020C:9A9D  3D 0000				cmp	ax,0
020C:9AA0  75 0F				jne	loc_1553		; Jump if not equal
020C:9AA2  8B C3				mov	ax,bx
020C:9AA4  B3 01				mov	bl,1
020C:9AA6  BD 06B3				mov	bp,6B3h
020C:9AA9  E8 DF1E				call	sub_83			; (79CA)
020C:9AAC  9A 1491:0300		;*		call	far ptr sub_159		;*(1491:0300)
020C:9AAC  9A					db	9Ah
020C:9AAD  0300 1491				dw	300h, 1491h
020C:9AB1			loc_1553:
020C:9AB1  E8 DF1C				call	sub_84			; (79D0)
020C:9AB4  A0 2307				mov	al,data_454		; (020C:2307=0)
020C:9AB7  E8 DF10				call	sub_83			; (79CA)
020C:9ABA  A2 06D1				mov	byte ptr ds:[6D1h],al	; (020C:06D1=1)
020C:9ABD  E8 DF10				call	sub_84			; (79D0)
020C:9AC0  B8 0008				mov	ax,8
020C:9AC3  E9 0A90				jmp	loc_1668		; (A556)
020C:9AC6			loc_1554:
020C:9AC6  8B 1E 1791				mov	bx,data_196		; (020C:1791=0)
020C:9ACA  8E 06 4453				mov	es,data_681		; (020C:4453=0CB8Bh)
020C:9ACE  B4 4A				mov	ah,4Ah
020C:9AD0  CD 21				int	21h			; DOS Services  ah=function 4Ah
										;  change memory allocation
										;   bx=bytes/16, es=mem segment
020C:9AD2  73 07				jnc	loc_1555		; Jump if carry=0
020C:9AD4  C6 06 2307 44			mov	data_454,44h		; (020C:2307=0) 'D'
020C:9AD9  EB D6				jmp	short loc_1553		; (9AB1)
020C:9ADB			loc_1555:
020C:9ADB  8C C8				mov	ax,cs
020C:9ADD  03 06 1791				add	ax,data_196		; (020C:1791=0)
020C:9AE1  2D 0010				sub	ax,10h
020C:9AE4  8B D0				mov	dx,ax
020C:9AE6  A1 1CD0				mov	ax,data_249		; (020C:1CD0=0)
020C:9AE9  8E C0				mov	es,ax
020C:9AEB  2B D0				sub	dx,ax
020C:9AED			loc_1556:
020C:9AED  8B C2				mov	ax,dx
020C:9AEF  25 F000				and	ax,0F000h
020C:9AF2  74 17				jz	loc_1557		; Jump if zero
020C:9AF4  81 EA 1000				sub	dx,1000h
020C:9AF8  B9 8000				mov	cx,8000h
020C:9AFB  33 FF				xor	di,di			; Zero register
020C:9AFD  33 C0				xor	ax,ax			; Zero register
020C:9AFF  FC					cld				; Clear direction
020C:9B00  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020C:9B02  8C C0				mov	ax,es
020C:9B04  05 1000				add	ax,1000h
020C:9B07  8E C0				mov	es,ax
020C:9B09  EB E2				jmp	short loc_1556		; (9AED)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 325

020C:9B0B			loc_1557:
020C:9B0B  B1 03				mov	cl,3
020C:9B0D  D3 E2				shl	dx,cl			; Shift w/zeros fill
020C:9B0F  8B CA				mov	cx,dx
020C:9B11  33 FF				xor	di,di			; Zero register
020C:9B13  33 C0				xor	ax,ax			; Zero register
020C:9B15  FC					cld				; Clear direction
020C:9B16  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020C:9B18  C7 06 178D 0040			mov	data_193,40h		; (020C:178D=0)
020C:9B1E  9A 1491:3388		;*		call	far ptr sub_190		;*(1491:3388)
020C:9B1E  9A					db	9Ah
020C:9B1F  3388 1491				dw	3388h, 1491h
020C:9B23  E8 DEC8				call	sub_90			; (79EE)
020C:9B26  A1 1CD0				mov	ax,data_249		; (020C:1CD0=0)
020C:9B29  A3 1CD2				mov	data_250,ax		; (020C:1CD2=0)
020C:9B2C  05 0010				add	ax,10h
020C:9B2F  A3 1837				mov	data_206,ax		; (020C:1837=0)
020C:9B32  A3 1839				mov	data_207,ax		; (020C:1839=25Ch)
020C:9B35  80 3E 1F6B 03			cmp	data_353,3		; (020C:1F6B=0)
020C:9B3A  75 1F				jne	loc_1559		; Jump if not equal
020C:9B3C  80 3E 183B 00			cmp	data_208,0		; (020C:183B=0)
020C:9B41  75 02				jne	loc_1558		; Jump if not equal
020C:9B43  EB 1F				jmp	short loc_1560		; (9B64)
020C:9B45			loc_1558:
020C:9B45  C6 06 1F6B 07			mov	data_353,7		; (020C:1F6B=0)
020C:9B4A  80 3E 1F6D 08			cmp	data_355,8		; (020C:1F6D=0)
020C:9B4F  73 0A				jae	loc_1559		; Jump if above or =
020C:9B51  C6 06 1F6D 07			mov	data_355,7		; (020C:1F6D=0)
020C:9B56  9A 1491:31D8		;*		call	far ptr sub_186		;*(1491:31D8)
020C:9B56  9A					db	9Ah
020C:9B57  31D8 1491				dw	31D8h, 1491h
020C:9B5B			loc_1559:
020C:9B5B  9A 1491:5408		;*		call	far ptr sub_211		;*(1491:5408)
020C:9B5B  9A					db	9Ah
020C:9B5C  5408 1491				dw	5408h, 1491h
020C:9B60  72 38				jc	loc_1561		; Jump if carry Set
020C:9B62  EB 39				jmp	short loc_1562		; (9B9D)
020C:9B64			loc_1560:
020C:9B64  FA					cli				; Disable interrupts
020C:9B65  2E: 8C 16 63A2			mov	word ptr cs:[63A2h],ss	; (020C:63A2=0A1Ch)
020C:9B6A  2E: 89 26 63A0			mov	word ptr cs:[63A0h],sp	; (020C:63A0=0DF3Eh)
020C:9B6F  BC 00C8				mov	sp,0C8h
020C:9B72  FB					sti				; Enable interrupts
020C:9B73  BA 1E9A				mov	dx,1E9Ah
020C:9B76  BB 1837				mov	bx,1837h
020C:9B79  B0 03				mov	al,3
020C:9B7B  B4 4B				mov	ah,4Bh
020C:9B7D  CD 21				int	21h			; DOS Services  ah=function 4Bh
										;  load ovrly @ds:dx,parm @es:bx
										;   all regs & ss:sp destroyed
020C:9B7F  FA					cli				; Disable interrupts
020C:9B80  2E: 8E 16 63A2			mov	ss,word ptr cs:[63A2h]	; (020C:63A2=0A1Ch)
020C:9B85  2E: 8B 26 63A0			mov	sp,word ptr cs:[63A0h]	; (020C:63A0=0DF3Eh)
020C:9B8A  FB					sti				; Enable interrupts
020C:9B8B  9C					pushf				; Push flags
020C:9B8C  E8 DE5F				call	sub_90			; (79EE)
020C:9B8F  E8 DE3E				call	sub_84			; (79D0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 326

020C:9B92  9D					popf				; Pop flags
020C:9B93  73 08				jnc	loc_1562		; Jump if carry=0
020C:9B95  C6 06 2307 45			mov	data_454,45h		; (020C:2307=0) 'E'
020C:9B9A			loc_1561:
020C:9B9A  E9 09B9				jmp	loc_1668		; (A556)
020C:9B9D			loc_1562:
020C:9B9D  C7 06 178D 0041			mov	data_193,41h		; (020C:178D=0)
020C:9BA3  9A 1491:3388		;*		call	far ptr sub_190		;*(1491:3388)
020C:9BA3  9A					db	9Ah
020C:9BA4  3388 1491				dw	3388h, 1491h
020C:9BA8  C6 06 444E 01			mov	byte ptr ds:[444Eh],1	; (020C:444E=14h)
020C:9BAD  A1 1CD0				mov	ax,data_249		; (020C:1CD0=0)
020C:9BB0  05 0010				add	ax,10h
020C:9BB3  A3 1CCC				mov	data_247,ax		; (020C:1CCC=0)
020C:9BB6  80 3E 1CCA 03			cmp	data_245,3		; (020C:1CCA=0)
020C:9BBB  74 21				je	loc_1563		; Jump if equal
020C:9BBD  80 3E 1CD9 00			cmp	data_254,0		; (020C:1CD9=0)
020C:9BC2  74 1D				je	loc_1564		; Jump if equal
020C:9BC4  E8 DE1B				call	sub_87			; (79E2)
020C:9BC7  C6 06 1CD9 00			mov	data_254,0		; (020C:1CD9=0)
020C:9BCC  C6 06 1CD4 00			mov	data_251,0		; (020C:1CD4=0)
020C:9BD1  BF 0000				mov	di,0
020C:9BD4  B9 186A				mov	cx,186Ah
020C:9BD7  B0 FF				mov	al,0FFh
020C:9BD9  FC					cld				; Clear direction
020C:9BDA  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:9BDC  EB 03				jmp	short loc_1564		; (9BE1)
020C:9BDE			loc_1563:
020C:9BDE  E9 081C				jmp	loc_1653		; (A3FD)
020C:9BE1			loc_1564:
020C:9BE1  BB 0000				mov	bx,0
020C:9BE4  80 3E 1F6D 08			cmp	data_355,8		; (020C:1F6D=0)
020C:9BE9  74 0D				je	loc_1566		; Jump if equal
020C:9BEB  80 3E 1F6B 03			cmp	data_353,3		; (020C:1F6B=0)
020C:9BF0  75 03				jne	loc_1565		; Jump if not equal
020C:9BF2  E9 05B1				jmp	loc_1629		; (A1A6) delay for I/O
020C:9BF5			loc_1565:
020C:9BF5  E9 03FC				jmp	loc_1614		; (9FF4)
020C:9BF8			loc_1566:
020C:9BF8  C7 06 2154 FFFF			mov	data_379,0FFFFh		; (020C:2154=5CE9h)
020C:9BFE  C7 06 1CD2 0000			mov	data_250,0		; (020C:1CD2=0)
020C:9C04  C7 06 44FD 0000			mov	data_689,0		; (020C:44FD=575h)
020C:9C0A  C7 06 44FF 0000			mov	data_690,0		; (020C:44FF=749Ah)
020C:9C10  C7 06 451F 0000			mov	data_706,0		; (020C:451F=3C04h)
020C:9C16  E8 DDD8				call	sub_91			; (79F1)
020C:9C19  BE 1212				mov	si,1212h
020C:9C1C  26: 8B 6C 40				mov	bp,es:[si+40h]
020C:9C20  03 EE				add	bp,si
020C:9C22  BF 0000				mov	di,0
020C:9C25  26: 8B 54 44				mov	dx,es:[si+44h]
020C:9C29  0B D2				or	dx,dx			; Zero ?
020C:9C2B  75 03				jnz	loc_1567		; Jump if not zero
020C:9C2D  E9 016D				jmp	loc_1589		; (9D9D)
020C:9C30			loc_1567:
020C:9C30  81 FA 00FA				cmp	dx,0FAh
020C:9C34  76 02				jbe	loc_1568		; Jump if below or =
020C:9C36  B2 FA				mov	dl,0FAh
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 327

020C:9C38			loc_1568:
020C:9C38  C6 06 451C 00			mov	data_703,0		; (020C:451C=74h)
020C:9C3D  88 16 44FC				mov	data_688,dl		; (020C:44FC=1)
020C:9C41  8B C2				mov	ax,dx
020C:9C43  26: 2B 44 18				sub	ax,es:[si+18h]
020C:9C47  40					inc	ax
020C:9C48  A2 450A				mov	data_697,al		; (020C:450A=0A8h)
020C:9C4B  26: 8B 44 1C				mov	ax,es:[si+1Ch]
020C:9C4F  A3 44F2				mov	word ptr ds:[44F2h],ax	; (020C:44F2=1026h)
020C:9C52  26: 8B 44 28				mov	ax,es:[si+28h]
020C:9C56  33 C9				xor	cx,cx			; Zero register
020C:9C58			loc_1569:
020C:9C58  D1 C0				rol	ax,1			; Rotate
020C:9C5A  FE C1				inc	cl
020C:9C5C  A9 8000				test	ax,8000h
020C:9C5F  74 F7				jz	loc_1569		; Jump if zero

020C:9C61			locloop_1570:
020C:9C61  D1 C8				ror	ax,1			; Rotate
020C:9C63  0D 8000				or	ax,8000h
020C:9C66  E2 F9				loop	locloop_1570		; Loop if cx > 0

020C:9C68  A3 44F4				mov	word ptr ds:[44F4h],ax	; (020C:44F4=8342h)
020C:9C6B  8A 0E 44FC				mov	cl,data_688		; (020C:44FC=1)
020C:9C6F  32 ED				xor	ch,ch			; Zero register
020C:9C71  55					push	bp
020C:9C72  C6 06 4513 00			mov	data_702,0		; (020C:4513=0C4h)

020C:9C77			locloop_1571:
020C:9C77  26: 8B 46 06				mov	ax,es:[bp+6]
020C:9C7B  26: 0B 46 04				or	ax,es:[bp+4]
020C:9C7F  75 0A				jnz	loc_1572		; Jump if not zero
020C:9C81  83 C5 18				add	bp,18h
020C:9C84  E2 F1				loop	locloop_1571		; Loop if cx > 0

020C:9C86  C6 06 4513 01			mov	data_702,1		; (020C:4513=0C4h)
020C:9C8B			loc_1572:
020C:9C8B  5D					pop	bp
020C:9C8C  33 C0				xor	ax,ax			; Zero register
020C:9C8E  33 DB				xor	bx,bx			; Zero register
020C:9C90  EB 1E				jmp	short loc_1576		; (9CB0)
020C:9C92			loc_1573:
020C:9C92  26: 8B 46 EA				mov	ax,es:[bp-16h]
020C:9C96  26: 8B 5E E8				mov	bx,es:[bp-18h]
020C:9C9A  23 1E 44F4				and	bx,word ptr ds:[44F4h]	; (020C:44F4=8342h)
020C:9C9E  26: 03 5C 28				add	bx,es:[si+28h]
020C:9CA2  73 01				jnc	loc_1574		; Jump if carry=0
020C:9CA4  40					inc	ax
020C:9CA5			loc_1574:
020C:9CA5  03 1E 44FA				add	bx,data_687		; (020C:44FA=0FC80h)
020C:9CA9  73 01				jnc	loc_1575		; Jump if carry=0
020C:9CAB  40					inc	ax
020C:9CAC			loc_1575:
020C:9CAC  03 06 44F8				add	ax,word ptr ds:[44F8h]	; (020C:44F8=23Dh)
020C:9CB0			loc_1576:
020C:9CB0  A3 44F8				mov	word ptr ds:[44F8h],ax	; (020C:44F8=23Dh)
020C:9CB3  89 1E 44FA				mov	data_687,bx		; (020C:44FA=0FC80h)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 328

020C:9CB7  50					push	ax
020C:9CB8  26: 8B 46 06				mov	ax,es:[bp+6]
020C:9CBC  A9 FFF0				test	ax,0FFF0h
020C:9CBF  74 08				jz	loc_1577		; Jump if zero
020C:9CC1  C6 06 4509 01			mov	data_696,1		; (020C:4509=1Eh)
020C:9CC6  25 FFF0				and	ax,0FFF0h
020C:9CC9			loc_1577:
020C:9CC9  A3 46D4				mov	data_716,ax		; (020C:46D4=21h)
020C:9CCC  26: 8B 46 04				mov	ax,es:[bp+4]
020C:9CD0  A3 46D6				mov	data_717,ax		; (020C:46D6=0C300h)
020C:9CD3  58					pop	ax
020C:9CD4  8B 0E 44FD				mov	cx,data_689		; (020C:44FD=575h)
020C:9CD8  89 0E 44FF				mov	data_690,cx		; (020C:44FF=749Ah)
020C:9CDC  8B D3				mov	dx,bx
020C:9CDE  26: 8B 5E 00				mov	bx,es:[bp]
020C:9CE2  26: 8B 4E 02				mov	cx,es:[bp+2]
020C:9CE6  03 1E 46D6				add	bx,data_717		; (020C:46D6=0C300h)
020C:9CEA  73 01				jnc	loc_1578		; Jump if carry=0
020C:9CEC  41					inc	cx
020C:9CED			loc_1578:
020C:9CED  03 0E 46D4				add	cx,data_716		; (020C:46D4=21h)
020C:9CF1  C6 06 46D9 00			mov	data_719,0		; (020C:46D9=8Bh)
020C:9CF6  C7 06 451F 0000			mov	data_706,0		; (020C:451F=3C04h)
020C:9CFC			loc_1579:
020C:9CFC  3B 0E 46D4				cmp	cx,data_716		; (020C:46D4=21h)
020C:9D00  74 2A				je	loc_1581		; Jump if equal
020C:9D02  53					push	bx
020C:9D03  51					push	cx
020C:9D04  BB FFFF				mov	bx,0FFFFh
020C:9D07  9A 1491:52BC		;*		call	far ptr sub_210		;*(1491:52BC)
020C:9D07  9A					db	9Ah
020C:9D08  52BC 1491				dw	52BCh, 1491h
020C:9D0C  72 1C				jc	loc_1580		; Jump if carry Set
020C:9D0E  59					pop	cx
020C:9D0F  5B					pop	bx
020C:9D10  C6 06 46D9 20			mov	data_719,20h		; (020C:46D9=8Bh) ' '
020C:9D15  40					inc	ax
020C:9D16  81 06 451F 1000			add	data_706,1000h		; (020C:451F=3C04h)
020C:9D1C  FF 06 46D4				inc	data_716		; (020C:46D4=21h)
020C:9D20  C7 06 46D6 0000			mov	data_717,0		; (020C:46D6=0C300h)
020C:9D26  33 D2				xor	dx,dx			; Zero register
020C:9D28  EB D2				jmp	short loc_1579		; (9CFC)
020C:9D2A			loc_1580:
020C:9D2A  EB 71				jmp	short loc_1589		; (9D9D)
020C:9D2C			loc_1581:
020C:9D2C  83 FB 00				cmp	bx,0
020C:9D2F  75 02				jne	loc_1582		; Jump if not equal
020C:9D31  EB 5A				jmp	short loc_1588		; (9D8D)
020C:9D33			loc_1582:
020C:9D33  80 3E 44FC 01			cmp	data_688,1		; (020C:44FC=1)
020C:9D38  74 02				je	loc_1583		; Jump if equal
020C:9D3A  EB 4A				jmp	short loc_1587		; (9D86)
020C:9D3C			loc_1583:
020C:9D3C  53					push	bx
020C:9D3D  26: 8B 9C 0088			mov	bx,word ptr es:[88h][si]	; (1000:0088=215Eh)
020C:9D42  26: 8B 8C 008A			mov	cx,word ptr es:[8Ah][si]	; (1000:008A=0FFFFh)
020C:9D47  26: 2B 9C 0080			sub	bx,word ptr es:[80h][si]	; (1000:0080=9A14h)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 329

020C:9D4C  73 01				jnc	loc_1584		; Jump if carry=0
020C:9D4E  49					dec	cx
020C:9D4F			loc_1584:
020C:9D4F  26: 2B 8C 0082			sub	cx,word ptr es:[82h][si]	; (1000:0082=254h)
020C:9D54  26: 03 9C 008C			add	bx,word ptr es:[8Ch][si]	; (1000:008C=61E8h)
020C:9D59  72 2A				jc	loc_1586		; Jump if carry Set
020C:9D5B  50					push	ax
020C:9D5C  A1 46D4				mov	ax,data_716		; (020C:46D4=21h)
020C:9D5F  0B 06 46D6				or	ax,data_717		; (020C:46D6=0C300h)
020C:9D63  75 05				jnz	loc_1585		; Jump if not zero
020C:9D65  2B DA				sub	bx,dx
020C:9D67  83 D9 00				sbb	cx,0
020C:9D6A			loc_1585:
020C:9D6A  58					pop	ax
020C:9D6B  8B CB				mov	cx,bx
020C:9D6D  26: 2B 8C 008C			sub	cx,word ptr es:[8Ch][si]	; (1000:008C=61E8h)
020C:9D72  41					inc	cx
020C:9D73  89 0E 1CC4				mov	data_242,cx		; (020C:1CC4=0)
020C:9D77  A3 1CC6				mov	data_243,ax		; (020C:1CC6=0)
020C:9D7A  8B CB				mov	cx,bx
020C:9D7C  5B					pop	bx
020C:9D7D  3B CB				cmp	cx,bx
020C:9D7F  76 05				jbe	loc_1587		; Jump if below or =
020C:9D81  8B D9				mov	bx,cx
020C:9D83  EB 01				jmp	short loc_1587		; (9D86)
020C:9D85			loc_1586:
020C:9D85  5B					pop	bx
020C:9D86			loc_1587:
020C:9D86  9A 1491:52BC		;*		call	far ptr sub_210		;*(1491:52BC)
020C:9D86  9A					db	9Ah
020C:9D87  52BC 1491				dw	52BCh, 1491h
020C:9D8B  72 10				jc	loc_1589		; Jump if carry Set
020C:9D8D			loc_1588:
020C:9D8D  83 C5 18				add	bp,18h
020C:9D90  FE 06 451C				inc	data_703		; (020C:451C=74h)
020C:9D94  FE 0E 44FC				dec	data_688		; (020C:44FC=1)
020C:9D98  74 03				jz	loc_1589		; Jump if zero
020C:9D9A  E9 FEF5				jmp	loc_1573		; (9C92)
020C:9D9D			loc_1589:
020C:9D9D  A3 1D0A				mov	data_280,ax		; (020C:1D0A=0)
020C:9DA0  80 3E 4509 01			cmp	data_696,1		; (020C:4509=1Eh)
020C:9DA5  75 09				jne	loc_1590		; Jump if not equal
020C:9DA7  B4 42				mov	ah,42h			; 'B'
020C:9DA9  B0 04				mov	al,4
020C:9DAB  9A 1491:30E8		;*		call	far ptr sub_182		;*(1491:30E8)
020C:9DAB  9A					db	9Ah
020C:9DAC  30E8 1491				dw	30E8h, 1491h
020C:9DB0			loc_1590:
020C:9DB0  9A 1491:6384		;*		call	far ptr sub_217		;*(1491:6384)
020C:9DB0  9A					db	9Ah
020C:9DB1  6384 1491				dw	6384h, 1491h
020C:9DB5  E8 DC39				call	sub_91			; (79F1)
020C:9DB8  BE 1212				mov	si,1212h
020C:9DBB  26: 8B 6C 40				mov	bp,es:[si+40h]
020C:9DBF  03 EE				add	bp,si
020C:9DC1  C6 06 451C 00			mov	data_703,0		; (020C:451C=74h)
020C:9DC6  26: 8B 54 44				mov	dx,es:[si+44h]
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 330

020C:9DCA  80 FA 01				cmp	dl,1
020C:9DCD  77 03				ja	loc_1591		; Jump if above
020C:9DCF  E9 01E9				jmp	loc_1610		; (9FBB)
020C:9DD2			loc_1591:
020C:9DD2  26: 8B 7C 68				mov	di,es:[si+68h]
020C:9DD6  03 FE				add	di,si
020C:9DD8  26: 8B 2D				mov	bp,es:[di]
020C:9DDB  26: 03 6C 6C				add	bp,es:[si+6Ch]
020C:9DDF  03 EE				add	bp,si
020C:9DE1  83 C7 04				add	di,4
020C:9DE4  C7 06 450B 0000			mov	data_698,0		; (020C:450B=323Eh)
020C:9DEA			loc_1592:
020C:9DEA  26: 8B 44 14				mov	ax,es:[si+14h]
020C:9DEE  A1 450B				mov	ax,data_698		; (020C:450B=323Eh)
020C:9DF1  26: 3B 44 14				cmp	ax,es:[si+14h]
020C:9DF5  72 03				jb	loc_1593		; Jump if below
020C:9DF7  E9 01C1				jmp	loc_1610		; (9FBB)
020C:9DFA			loc_1593:
020C:9DFA  9A 1491:63BC		;*		call	far ptr sub_218		;*(1491:63BC)
020C:9DFA  9A					db	9Ah
020C:9DFB  63BC 1491				dw	63BCh, 1491h
020C:9DFF  89 16 450D				mov	data_699,dx		; (020C:450D=3CE4h)
020C:9E03  A3 450F				mov	data_700,ax		; (020C:450F=744Eh)
020C:9E06  26: 8B 05				mov	ax,es:[di]
020C:9E09  26: 03 44 6C				add	ax,es:[si+6Ch]
020C:9E0D  03 C6				add	ax,si
020C:9E0F  A3 4511				mov	data_701,ax		; (020C:4511=0FE3Eh)
020C:9E12  83 C7 04				add	di,4
020C:9E15  8B DD				mov	bx,bp
020C:9E17			loc_1594:
020C:9E17  A1 4511				mov	ax,data_701		; (020C:4511=0FE3Eh)
020C:9E1A  3B D8				cmp	bx,ax
020C:9E1C  72 08				jb	loc_1595		; Jump if below
020C:9E1E  8B E8				mov	bp,ax
020C:9E20  FF 06 450B				inc	data_698		; (020C:450B=323Eh)
020C:9E24  EB C4				jmp	short loc_1592		; (9DEA)
020C:9E26			loc_1595:
020C:9E26  C6 06 4501 00			mov	data_691,0		; (020C:4501=6Fh)
020C:9E2B  26: 8A 4F 01				mov	cl,es:[bx+1]
020C:9E2F  88 0E 451E				mov	data_705,cl		; (020C:451E=0B4h)
020C:9E33  26: 8A 0F				mov	cl,es:[bx]
020C:9E36  8A E9				mov	ch,cl
020C:9E38  80 E5 0F				and	ch,0Fh
020C:9E3B  88 2E 451D				mov	data_704,ch		; (020C:451D=32h)
020C:9E3F  F6 C1 20				test	cl,20h			; ' '
020C:9E42  74 64				jz	loc_1600		; Jump if zero
020C:9E44  8A C1				mov	al,cl
020C:9E46  24 F0				and	al,0F0h
020C:9E48  3C 20				cmp	al,20h			; ' '
020C:9E4A  75 4E				jne	loc_1599		; Jump if not equal
020C:9E4C  80 FD 07				cmp	ch,7
020C:9E4F  74 05				je	loc_1596		; Jump if equal
020C:9E51  80 FD 08				cmp	ch,8
020C:9E54  75 44				jne	loc_1599		; Jump if not equal
020C:9E56			loc_1596:
020C:9E56  8A 0E 451E				mov	cl,data_705		; (020C:451E=0B4h)
020C:9E5A  F6 C1 83				test	cl,83h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 331

020C:9E5D  75 3B				jnz	loc_1599		; Jump if not zero
020C:9E5F  26: 8A 47 02				mov	al,es:[bx+2]
020C:9E63  0A C0				or	al,al			; Zero ?
020C:9E65  74 33				jz	loc_1599		; Jump if zero
020C:9E67  A2 4501				mov	data_691,al		; (020C:4501=6Fh)
020C:9E6A  26: 8A 47 03				mov	al,es:[bx+3]
020C:9E6E  A2 4504				mov	data_693,al		; (020C:4504=0C3h)
020C:9E71  26: 8B 47 04				mov	ax,es:[bx+4]
020C:9E75  A3 4505				mov	data_694,ax		; (020C:4505=0DB87h)
020C:9E78  C7 06 4507 0000			mov	data_695,0		; (020C:4507=8B90h)
020C:9E7E  F6 06 451E 10			test	data_705,10h		; (020C:451E=0B4h)
020C:9E83  74 0A				jz	loc_1597		; Jump if zero
020C:9E85  26: 8B 47 06				mov	ax,es:[bx+6]
020C:9E89  A3 4507				mov	data_695,ax		; (020C:4507=8B90h)
020C:9E8C  83 C3 02				add	bx,2
020C:9E8F			loc_1597:
020C:9E8F  83 C3 06				add	bx,6
020C:9E92			loc_1598:
020C:9E92  26: 8B 07				mov	ax,es:[bx]
020C:9E95  A3 4502				mov	data_692,ax		; (020C:4502=1491h)
020C:9E98  EB 58				jmp	short loc_1603		; (9EF2)
020C:9E9A			loc_1599:
020C:9E9A  26: 8A 47 02				mov	al,es:[bx+2]
020C:9E9E  32 E4				xor	ah,ah			; Zero register
020C:9EA0  D1 E0				shl	ax,1			; Shift w/zeros fill
020C:9EA2  03 D8				add	bx,ax
020C:9EA4  4B					dec	bx
020C:9EA5  E9 00F0				jmp	loc_1607		; (9F98)
020C:9EA8			loc_1600:
020C:9EA8  80 FD 07				cmp	ch,7
020C:9EAB  74 1C				je	loc_1602		; Jump if equal
020C:9EAD  80 FD 08				cmp	ch,8
020C:9EB0  74 17				je	loc_1602		; Jump if equal
020C:9EB2			loc_1601:
020C:9EB2  57					push	di
020C:9EB3  06					push	es
020C:9EB4  33 C0				xor	ax,ax			; Zero register
020C:9EB6  8B F8				mov	di,ax
020C:9EB8  8B D0				mov	dx,ax
020C:9EBA  8E C0				mov	es,ax
020C:9EBC  A3 4502				mov	data_692,ax		; (020C:4502=1491h)
020C:9EBF  9A 1491:62B4		;*		call	far ptr sub_216		;*(1491:62B4)
020C:9EBF  9A					db	9Ah
020C:9EC0  62B4 1491				dw	62B4h, 1491h
020C:9EC4  07					pop	es
020C:9EC5  5F					pop	di
020C:9EC6  E9 00CF				jmp	loc_1607		; (9F98)
020C:9EC9			loc_1602:
020C:9EC9  26: 8B 47 02				mov	ax,es:[bx+2]
020C:9ECD  A3 4502				mov	data_692,ax		; (020C:4502=1491h)
020C:9ED0  26: 8A 47 04				mov	al,es:[bx+4]
020C:9ED4  A2 4504				mov	data_693,al		; (020C:4504=0C3h)
020C:9ED7  26: 8B 47 05				mov	ax,es:[bx+5]
020C:9EDB  A3 4505				mov	data_694,ax		; (020C:4505=0DB87h)
020C:9EDE  C7 06 4507 0000			mov	data_695,0		; (020C:4507=8B90h)
020C:9EE4  F6 06 451E 10			test	data_705,10h		; (020C:451E=0B4h)
020C:9EE9  74 07				jz	loc_1603		; Jump if zero
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 332

020C:9EEB  26: 8B 47 07				mov	ax,es:[bx+7]
020C:9EEF  A3 4507				mov	data_695,ax		; (020C:4507=8B90h)
020C:9EF2			loc_1603:
020C:9EF2  F6 06 451E 40			test	data_705,40h		; (020C:451E=0B4h) '@'
020C:9EF7  75 B9				jnz	loc_1601		; Jump if not zero
020C:9EF9  F6 06 451E 03			test	data_705,3		; (020C:451E=0B4h)
020C:9EFE  75 B2				jnz	loc_1601		; Jump if not zero
020C:9F00  A0 4504				mov	al,data_693		; (020C:4504=0C3h)
020C:9F03  FE C8				dec	al
020C:9F05  9A 1491:5550		;*		call	far ptr sub_212		;*(1491:5550)
020C:9F05  9A					db	9Ah
020C:9F06  5550 1491				dw	5550h, 1491h
020C:9F0A  72 A6				jc	loc_1601		; Jump if carry Set
020C:9F0C  03 06 4505				add	ax,data_694		; (020C:4505=0DB87h)
020C:9F10  13 16 4507				adc	dx,data_695		; (020C:4507=8B90h)
020C:9F14  80 3E 451D 07			cmp	data_704,7		; (020C:451D=32h)
020C:9F19  74 15				je	loc_1604		; Jump if equal
020C:9F1B  2B 06 4502				sub	ax,data_692		; (020C:4502=1491h)
020C:9F1F  83 DA 00				sbb	dx,0
020C:9F22  2B 06 450F				sub	ax,data_700		; (020C:450F=744Eh)
020C:9F26  1B 16 450D				sbb	dx,data_699		; (020C:450D=3CE4h)
020C:9F2A  2D 0004				sub	ax,4
020C:9F2D  83 DA 00				sbb	dx,0
020C:9F30			loc_1604:
020C:9F30  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:9F35  06					push	es
020C:9F36  57					push	di
020C:9F37  53					push	bx
020C:9F38  8B 3E 450F				mov	di,data_700		; (020C:450F=744Eh)
020C:9F3C  8B 1E 450D				mov	bx,data_699		; (020C:450D=3CE4h)
020C:9F40  03 3E 4502				add	di,data_692		; (020C:4502=1491h)
020C:9F44  83 D3 00				adc	bx,0
020C:9F47  F7 C3 FFF0				test	bx,0FFF0h
020C:9F4B  75 1E				jnz	loc_1605		; Jump if not zero
020C:9F4D  B1 0C				mov	cl,0Ch
020C:9F4F  D3 E3				shl	bx,cl			; Shift w/zeros fill
020C:9F51  8E C3				mov	es,bx
020C:9F53  9A 1491:8814		;*		call	far ptr sub_253		;*(1491:8814)
020C:9F53  9A					db	9Ah
020C:9F54  8814 1491				dw	8814h, 1491h
020C:9F58  72 11				jc	loc_1605		; Jump if carry Set
020C:9F5A  83 FF FC				cmp	di,0FFFCh
020C:9F5D  73 0C				jae	loc_1605		; Jump if above or =
020C:9F5F  26: 89 05				mov	es:[di],ax
020C:9F62  26: 89 55 02				mov	es:[di+2],dx
020C:9F66  9A 1491:62B4		;*		call	far ptr sub_216		;*(1491:62B4)
020C:9F66  9A					db	9Ah
020C:9F67  62B4 1491				dw	62B4h, 1491h
020C:9F6B			loc_1605:
020C:9F6B  5B					pop	bx
020C:9F6C  5F					pop	di
020C:9F6D  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:9F72  9C					pushf				; Push flags
020C:9F73  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:9F78  5A					pop	dx
020C:9F79  8E C2				mov	es,dx
020C:9F7B  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 333

020C:9F80  5A					pop	dx
020C:9F81  75 0A				jnz	loc_1606		; Jump if not zero
020C:9F83  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:9F88  74 03				je	loc_1606		; Jump if equal
020C:9F8A  E8 DF23				call	sub_97			; (7EB0)
020C:9F8D			loc_1606:
020C:9F8D  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:9F92  9D					popf				; Pop flags
020C:9F93  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:9F98			loc_1607:
020C:9F98  80 3E 4501 00			cmp	data_691,0		; (020C:4501=6Fh)
020C:9F9D  74 0C				je	loc_1608		; Jump if equal
020C:9F9F  83 C3 02				add	bx,2
020C:9FA2  FE 0E 4501				dec	data_691		; (020C:4501=6Fh)
020C:9FA6  74 10				jz	loc_1609		; Jump if zero
020C:9FA8  E9 FEE7				jmp	loc_1598		; (9E92)
020C:9FAB			loc_1608:
020C:9FAB  83 C3 07				add	bx,7
020C:9FAE  F6 06 451E 10			test	data_705,10h		; (020C:451E=0B4h)
020C:9FB3  74 03				jz	loc_1609		; Jump if zero
020C:9FB5  83 C3 02				add	bx,2
020C:9FB8			loc_1609:
020C:9FB8  E9 FE5C				jmp	loc_1594		; (9E17)
020C:9FBB			loc_1610:
020C:9FBB  80 3E 4897 01			cmp	data_745,1		; (020C:4897=16h)
020C:9FC0  75 07				jne	loc_1611		; Jump if not equal
020C:9FC2  8B 1E 1F68				mov	bx,data_351		; (020C:1F68=0)
020C:9FC6  E8 06FF				call	sub_115			; (A6C8)
020C:9FC9			loc_1611:
020C:9FC9  F7 06 1D48 0008			test	data_312,8		; (020C:1D48=0)
020C:9FCF  75 05				jnz	loc_1612		; Jump if not zero
020C:9FD1  83 0E 1D48 08			or	data_312,8		; (020C:1D48=0)
020C:9FD6			loc_1612:
020C:9FD6  F7 06 1D48 01E0			test	data_312,1E0h		; (020C:1D48=0)
020C:9FDC  75 06				jnz	loc_1613		; Jump if not zero
020C:9FDE  C7 06 1D48 0028			mov	data_312,28h		; (020C:1D48=0)
020C:9FE4			loc_1613:
020C:9FE4  B6 01				mov	dh,1
020C:9FE6  E8 BBCF				call	sub_50			; (5BB8)
020C:9FE9  A0 22FC				mov	al,data_445		; (020C:22FC=0)
020C:9FEC  9A 1491:0A94		;*		call	far ptr sub_170		;*(1491:0A94)
020C:9FEC  9A					db	9Ah
020C:9FED  0A94 1491				dw	0A94h, 1491h
020C:9FF1  E9 0409				jmp	loc_1653		; (A3FD)
020C:9FF4			loc_1614:
020C:9FF4  BB 0000				mov	bx,0
020C:9FF7  E8 D9F7				call	sub_91			; (79F1)
020C:9FFA  26: 80 3E 1212 E9			cmp	byte ptr es:[1212h],0E9h	; (1000:1212=1)
020C:A000  75 4E				jne	loc_1617		; Jump if not equal
020C:A002  BE 35AC				mov	si,35ACh
020C:A005  BF 1215				mov	di,1215h
020C:A008  BBB9			data_819	dw	0BBB9h
020C:A00A  35 E981				xor	ax,0E981h
020C:A00D  AC					lodsb				; String [si] to al
020C:A00E  35 F3FC				xor	ax,0F3FCh
020C:A011  A6					cmpsb				; Cmp [si] to es:[di]
020C:A012  83 F9 00				cmp	cx,0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 334

020C:A015  75 39				jne	loc_1617		; Jump if not equal
020C:A017  C6 06 35BB 01			mov	byte ptr ds:[35BBh],1	; (020C:35BB=9Eh)
020C:A01C  B4 2D				mov	ah,2Dh			; '-'
020C:A01E  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:A01E  9A					db	9Ah
020C:A01F  2F70 1491				dw	2F70h, 1491h
020C:A023  3C 31				cmp	al,31h			; '1'
020C:A025  74 20				je	loc_1616		; Jump if equal
020C:A027  B0 04				mov	al,4
020C:A029  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:A029  9A					db	9Ah
020C:A02A  2F70 1491				dw	2F70h, 1491h
020C:A02E  C6 06 35BB 00			mov	byte ptr ds:[35BBh],0	; (020C:35BB=9Eh)
020C:A033  8C C0				mov	ax,es
020C:A035  2D 0010				sub	ax,10h
020C:A038  8E C0				mov	es,ax
020C:A03A  9A 1491:5D9C		;*		call	far ptr sub_214		;*(1491:5D9C)
020C:A03A  9A					db	9Ah
020C:A03B  5D9C 1491				dw	5D9Ch, 1491h
020C:A03F  73 03				jnc	loc_1615		; Jump if carry=0
020C:A041  E9 0512				jmp	loc_1668		; (A556)
020C:A044			loc_1615:
020C:A044  E9 02CE				jmp	loc_1643		; (A315)
020C:A047			loc_1616:
020C:A047  B0 04				mov	al,4
020C:A049  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:A049  9A					db	9Ah
020C:A04A  2F70 1491				dw	2F70h, 1491h
020C:A04E  EB 3E				jmp	short loc_1619		; (A08E)
020C:A050			loc_1617:
020C:A050  26: 81 3E 1242 4B50			cmp	word ptr es:[1242h],4B50h	; (0FF0:1242=0E2AAh)
020C:A057  75 35				jne	loc_1619		; Jump if not equal
020C:A059  26: 81 3E 1244 494C			cmp	word ptr es:[1244h],494Ch	; (0FF0:1244=0C6F4h)
020C:A060  75 2C				jne	loc_1619		; Jump if not equal
020C:A062  26: 81 3E 1246 4554			cmp	word ptr es:[1246h],4554h	; (0FF0:1246=2005h)
020C:A069  75 23				jne	loc_1619		; Jump if not equal
020C:A06B  C6 06 1F6C 01			mov	data_354,1		; (020C:1F6C=0)
020C:A070  F6 06 46DD 0E			test	data_721,0Eh		; (020C:46DD=33h)
020C:A075  75 17				jnz	loc_1619		; Jump if not zero
020C:A077  B4 37				mov	ah,37h			; '7'
020C:A079  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:A079  9A					db	9Ah
020C:A07A  2F70 1491				dw	2F70h, 1491h
020C:A07E  3C 31				cmp	al,31h			; '1'
020C:A080  74 05				je	loc_1618		; Jump if equal
020C:A082  80 0E 46DD 04			or	data_721,4		; (020C:46DD=33h)
020C:A087			loc_1618:
020C:A087  B0 04				mov	al,4
020C:A089  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:A089  9A					db	9Ah
020C:A08A  2F70 1491				dw	2F70h, 1491h
020C:A08E			loc_1619:
020C:A08E  C7 06 1CC4 0000			mov	data_242,0		; (020C:1CC4=0)
020C:A094  F7 06 1F6E 0080			test	data_356,80h		; (020C:1F6E=0)
020C:A09A  74 17				jz	loc_1620		; Jump if zero
020C:A09C  9A 1491:6C20		;*		call	far ptr sub_228		;*(1491:6C20)
020C:A09C  9A					db	9Ah
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 335

020C:A09D  6C20 1491				dw	6C20h, 1491h
020C:A0A1  73 10				jnc	loc_1620		; Jump if carry=0
020C:A0A3  C6 06 1F6D 05			mov	data_355,5		; (020C:1F6D=0)
020C:A0A8  9A 1491:31D8		;*		call	far ptr sub_186		;*(1491:31D8)
020C:A0A8  9A					db	9Ah
020C:A0A9  31D8 1491				dw	31D8h, 1491h
020C:A0AD  C7 06 1CC4 000A			mov	data_242,0Ah		; (020C:1CC4=0)
020C:A0B3			loc_1620:
020C:A0B3  A1 1CCC				mov	ax,data_247		; (020C:1CCC=0)
020C:A0B6  C7 06 1CD2 0000			mov	data_250,0		; (020C:1CD2=0)
020C:A0BC  80 3E 1F6D 02			cmp	data_355,2		; (020C:1F6D=0)
020C:A0C1  75 09				jne	loc_1621		; Jump if not equal
020C:A0C3  2D 0010				sub	ax,10h
020C:A0C6  A3 1CCC				mov	data_247,ax		; (020C:1CCC=0)
020C:A0C9  A3 1CD2				mov	data_250,ax		; (020C:1CD2=0)
020C:A0CC			loc_1621:
020C:A0CC  E8 D913				call	sub_87			; (79E2)
020C:A0CF  26: 89 07				mov	es:[bx],ax
020C:A0D2  26: 89 47 15				mov	es:[bx+15h],ax
020C:A0D6  26: 89 47 06				mov	es:[bx+6],ax
020C:A0DA  26: 89 47 08				mov	es:[bx+8],ax
020C:A0DE  26: C6 47 0E 00			mov	byte ptr es:[bx+0Eh],0
020C:A0E3  26: C7 47 0C 0000			mov	word ptr es:[bx+0Ch],0
020C:A0E9  A3 1D0A				mov	data_280,ax		; (020C:1D0A=0)
020C:A0EC  33 C0				xor	ax,ax			; Zero register
020C:A0EE  8B 0E 195E				mov	cx,data_223		; (020C:195E=20Ch)
020C:A0F2  8B 16 195C				mov	dx,data_222		; (020C:195C=6B4h)
020C:A0F6  80 3E 1F6D 02			cmp	data_355,2		; (020C:1F6D=0)
020C:A0FB  75 44				jne	loc_1624		; Jump if not equal
020C:A0FD  B8 0100				mov	ax,100h
020C:A100  A3 1CEB				mov	data_266,ax		; (020C:1CEB=0)
020C:A103  50					push	ax
020C:A104  A1 1CD2				mov	ax,data_250		; (020C:1CD2=0)
020C:A107  A3 1CE9				mov	data_265,ax		; (020C:1CE9=0)
020C:A10A  58					pop	ax
020C:A10B  C7 06 1CC4 0100			mov	data_242,100h		; (020C:1CC4=0)
020C:A111  26: 89 47 17				mov	es:[bx+17h],ax
020C:A115  26: 89 47 02				mov	es:[bx+2],ax
020C:A119  83 F9 00				cmp	cx,0
020C:A11C  75 06				jne	loc_1622		; Jump if not equal
020C:A11E  81 FA FEFF				cmp	dx,0FEFFh
020C:A122  72 06				jb	loc_1623		; Jump if below
020C:A124			loc_1622:
020C:A124  B8 0030				mov	ax,30h
020C:A127  E9 042C				jmp	loc_1668		; (A556)
020C:A12A			loc_1623:
020C:A12A  03 C2				add	ax,dx
020C:A12C  48					dec	ax
020C:A12D  A3 1CED				mov	data_267,ax		; (020C:1CED=0)
020C:A130  26: 89 47 04				mov	es:[bx+4],ax
020C:A134  26: C7 47 0A 0000			mov	word ptr es:[bx+0Ah],0
020C:A13A  FE 06 1CD9				inc	data_254		; (020C:1CD9=0)
020C:A13E  E9 02BC				jmp	loc_1653		; (A3FD)
020C:A141			loc_1624:
020C:A141  26: 89 47 02				mov	es:[bx+2],ax
020C:A145  26: 89 47 17				mov	es:[bx+17h],ax
020C:A149  83 F9 01				cmp	cx,1
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 336

020C:A14C  77 20				ja	loc_1628		; Jump if above
020C:A14E  72 07				jc	loc_1625		; Jump if carry Set
020C:A150  83 FA 00				cmp	dx,0
020C:A153  77 19				ja	loc_1628		; Jump if above
020C:A155  EB 05				jmp	short loc_1626		; (A15C)
020C:A157			loc_1625:
020C:A157  83 FA 01				cmp	dx,1
020C:A15A  76 0F				jbe	loc_1627		; Jump if below or =
020C:A15C			loc_1626:
020C:A15C  4A					dec	dx
020C:A15D  26: 89 57 04				mov	es:[bx+4],dx
020C:A161  26: C7 47 0A 0000			mov	word ptr es:[bx+0Ah],0
020C:A167  FE 06 1CD9				inc	data_254		; (020C:1CD9=0)
020C:A16B			loc_1627:
020C:A16B  E9 028F				jmp	loc_1653		; (A3FD)
020C:A16E			loc_1628:
020C:A16E  26: C7 47 04 FFFF			mov	word ptr es:[bx+4],0FFFFh
020C:A174  26: C7 47 0A 0000			mov	word ptr es:[bx+0Ah],0
020C:A17A  FE 06 1CD9				inc	data_254		; (020C:1CD9=0)
020C:A17E  49					dec	cx
020C:A17F  26: 8B 07				mov	ax,es:[bx]
020C:A182  83 C3 19				add	bx,19h
020C:A185  05 1000				add	ax,1000h
020C:A188  26: 89 07				mov	es:[bx],ax
020C:A18B  26: 89 47 15				mov	es:[bx+15h],ax
020C:A18F  26: 89 47 06				mov	es:[bx+6],ax
020C:A193  26: 89 47 08				mov	es:[bx+8],ax
020C:A197  26: C6 47 0E 00			mov	byte ptr es:[bx+0Eh],0
020C:A19C  26: C7 47 0C 0000			mov	word ptr es:[bx+0Ch],0
020C:A1A2  33 C0				xor	ax,ax			; Zero register
020C:A1A4  EB 9B				jmp	short loc_1624		; (A141)
020C:A1A6			loc_1629:
020C:A1A6  C7 06 178D 0042			mov	data_193,42h		; (020C:178D=0)
020C:A1AC  9A 1491:3388		;*		call	far ptr sub_190		;*(1491:3388)
020C:A1AC  9A					db	9Ah
020C:A1AD  3388 1491				dw	3388h, 1491h
020C:A1B1  8B FB				mov	di,bx
020C:A1B3  C7 06 1CC4 0000			mov	data_242,0		; (020C:1CC4=0)
020C:A1B9  9A 1491:6C20		;*		call	far ptr sub_228		;*(1491:6C20)
020C:A1B9  9A					db	9Ah
020C:A1BA  6C20 1491				dw	6C20h, 1491h
020C:A1BE  73 0F				jnc	loc_1630		; Jump if carry=0
020C:A1C0  C6 06 1F6D 05			mov	data_355,5		; (020C:1F6D=0)
020C:A1C5  C6 06 1551 01			mov	data_170,1		; (020C:1551=0)
020C:A1CA  9A 1491:31D8		;*		call	far ptr sub_186		;*(1491:31D8)
020C:A1CA  9A					db	9Ah
020C:A1CB  31D8 1491				dw	31D8h, 1491h
020C:A1CF			loc_1630:
020C:A1CF  E8 D81F				call	sub_91			; (79F1)
020C:A1D2  26: 81 3E 1212 5A4D			cmp	word ptr es:[1212h],5A4Dh	; (0FF0:1212=2BEh)
020C:A1D9  74 06				je	loc_1631		; Jump if equal
020C:A1DB  B8 0014				mov	ax,14h
020C:A1DE  E9 0375				jmp	loc_1668		; (A556)
020C:A1E1			loc_1631:
020C:A1E1  26: 81 3E 1230 4B50			cmp	word ptr es:[1230h],4B50h	; (0FF0:1230=1FA8h)
020C:A1E8  75 35				jne	loc_1633		; Jump if not equal
020C:A1EA  26: 81 3E 1232 494C			cmp	word ptr es:[1232h],494Ch	; (0FF0:1232=2CBFh)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 337

020C:A1F1  75 2C				jne	loc_1633		; Jump if not equal
020C:A1F3  26: 81 3E 1234 4554			cmp	word ptr es:[1234h],4554h	; (0FF0:1234=0B921h)
020C:A1FA  75 23				jne	loc_1633		; Jump if not equal
020C:A1FC  C6 06 1F6C 02			mov	data_354,2		; (020C:1F6C=0)
020C:A201  F6 06 46DD 0E			test	data_721,0Eh		; (020C:46DD=33h)
020C:A206  75 17				jnz	loc_1633		; Jump if not zero
020C:A208  B4 37				mov	ah,37h			; '7'
020C:A20A  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:A20A  9A					db	9Ah
020C:A20B  2F70 1491				dw	2F70h, 1491h
020C:A20F  3C 31				cmp	al,31h			; '1'
020C:A211  74 05				je	loc_1632		; Jump if equal
020C:A213  80 0E 46DD 04			or	data_721,4		; (020C:46DD=33h)
020C:A218			loc_1632:
020C:A218  B0 04				mov	al,4
020C:A21A  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:A21A  9A					db	9Ah
020C:A21B  2F70 1491				dw	2F70h, 1491h
020C:A21F			loc_1633:
020C:A21F  33 C0				xor	ax,ax			; Zero register
020C:A221  26: 39 06 1218			cmp	word ptr es:[1218h],ax	; (0FF0:1218=3F74h)
020C:A226  75 07				jne	loc_1634		; Jump if not equal
020C:A228  26: 39 06 121C			cmp	word ptr es:[121Ch],ax	; (0FF0:121C=8FE8h)
020C:A22D  75			data_828	db	75h
020C:A22E  03 E9				add	bp,cx
020C:A230  84 00				test	al,[bx+si]
020C:A232  26: 81 3E 1226 0100			cmp	word ptr es:[1226h],100h	; (0FF0:1226=174h)
020C:A239  77 07				ja	loc_1635		; Jump if above
020C:A23B  26: 39 06 1228			cmp	word ptr es:[1228h],ax	; (0FF0:1228=0FC47h)
020C:A240  74 74				je	loc_1641		; Jump if equal
020C:A242			loc_1635:
020C:A242  26: 8B 1E 1226			mov	bx,word ptr es:[1226h]	; (0FF0:1226=174h)
020C:A247  83 FB 01				cmp	bx,1
020C:A24A  74 6A				je	loc_1641		; Jump if equal
020C:A24C  A1 1CCC				mov	ax,data_247		; (020C:1CCC=0)
020C:A24F  26: 03 06 1228			add	ax,word ptr es:[1228h]	; (0FF0:1228=0FC47h)
020C:A254  06					push	es
020C:A255  8E C0				mov	es,ax
020C:A257  26: 81 7F FE 4252			cmp	word ptr es:[bx-2],4252h
020C:A25D  07					pop	es
020C:A25E  74 38				jz	loc_1639		; Jump if zero
020C:A260  83 FB 10				cmp	bx,10h
020C:A263  75 18				jne	loc_1637		; Jump if not equal
020C:A265  06					push	es
020C:A266  8E C0				mov	es,ax
020C:A268  26: 81 3E 00C8 2EFB			cmp	word ptr es:[0C8h],2EFBh	; (FC47:00C8=0)
020C:A26F  75 07				jne	loc_1636		; Jump if not equal
020C:A271  26: 81 3E 00CA 2FFF			cmp	word ptr es:[0CAh],2FFFh	; (FC47:00CA=3DE8h)
020C:A278			loc_1636:
020C:A278  07					pop	es
020C:A279  75 3B				jnz	loc_1641		; Jump if not zero
020C:A27B  EB 1B				jmp	short loc_1639		; (A298)
020C:A27D			loc_1637:
020C:A27D  83 FB 0E				cmp	bx,0Eh
020C:A280  75 34				jne	loc_1641		; Jump if not equal
020C:A282  06					push	es
020C:A283  8E C0				mov	es,ax
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 338

020C:A285  26: 81 3E 0154 2EFB			cmp	word ptr es:[154h],2EFBh	; (FC47:0154=84Dh)
020C:A28C  75 07				jne	loc_1638		; Jump if not equal
020C:A28E  26: 81 3E 0156 2FFF			cmp	word ptr es:[156h],2FFFh	; (FC47:0156=2602h)
020C:A295			loc_1638:
020C:A295  07					pop	es
020C:A296  75 1E				jnz	loc_1641		; Jump if not zero
020C:A298			loc_1639:
020C:A298  F6 06 46DD 0E			test	data_721,0Eh		; (020C:46DD=33h)
020C:A29D  75 17				jnz	loc_1641		; Jump if not zero
020C:A29F  B4 21				mov	ah,21h			; '!'
020C:A2A1  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:A2A1  9A					db	9Ah
020C:A2A2  2F70 1491				dw	2F70h, 1491h
020C:A2A6  3C 31				cmp	al,31h			; '1'
020C:A2A8  74 05				je	loc_1640		; Jump if equal
020C:A2AA  80 0E 46DD 04			or	data_721,4		; (020C:46DD=33h)
020C:A2AF			loc_1640:
020C:A2AF  B4 04				mov	ah,4
020C:A2B1  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:A2B1  9A					db	9Ah
020C:A2B2  2F70 1491				dw	2F70h, 1491h
020C:A2B6			loc_1641:
020C:A2B6  26: 83 3E 1218 00			cmp	word ptr es:[1218h],0	; (0FF0:1218=3F74h)
020C:A2BC  75 42				jne	loc_1642		; Jump if not equal
020C:A2BE  26: 83 3E 1220 F0			cmp	word ptr es:[1220h],0FFF0h	; (0FF0:1220=1FC8h)
020C:A2C4  75 3A				jne	loc_1642		; Jump if not equal
020C:A2C6  26: 83 3E 1222 FE			cmp	word ptr es:[1222h],0FFFEh	; (0FF0:1222=7D80h)
020C:A2CC  72 32				jb	loc_1642		; Jump if below
020C:A2CE  26: 81 3E 1226 0100			cmp	word ptr es:[1226h],100h	; (0FF0:1226=174h)
020C:A2D5  75 29				jne	loc_1642		; Jump if not equal
020C:A2D7  26: 83 3E 1228 F0			cmp	word ptr es:[1228h],0FFF0h	; (0FF0:1228=0FC47h)
020C:A2DD  75 21				jne	loc_1642		; Jump if not equal
020C:A2DF  83 3E 195E 00			cmp	data_223,0		; (020C:195E=20Ch)
020C:A2E4  75 1A				jne	loc_1642		; Jump if not equal
020C:A2E6  81 3E 195C FE00			cmp	data_222,0FE00h		; (020C:195C=6B4h)
020C:A2EC  73 12				jae	loc_1642		; Jump if above or =
020C:A2EE  C6 06 1F6B 02			mov	data_353,2		; (020C:1F6B=0)
020C:A2F3  C6 06 1F6D 02			mov	data_355,2		; (020C:1F6D=0)
020C:A2F8  9A 1491:31D8		;*		call	far ptr sub_186		;*(1491:31D8)
020C:A2F8  9A					db	9Ah
020C:A2F9  31D8 1491				dw	31D8h, 1491h
020C:A2FD  E9 FCF4				jmp	loc_1614		; (9FF4)
020C:A300			loc_1642:
020C:A300  C7 06 178D 0043			mov	data_193,43h		; (020C:178D=0)
020C:A306  9A 1491:3388		;*		call	far ptr sub_190		;*(1491:3388)
020C:A306  9A					db	9Ah
020C:A307  3388 1491				dw	3388h, 1491h
020C:A30B  9A 1491:5DF4		;*		call	far ptr sub_215		;*(1491:5DF4)
020C:A30B  9A					db	9Ah
020C:A30C  5DF4 1491				dw	5DF4h, 1491h
020C:A310  73 03				jnc	loc_1643		; Jump if carry=0
020C:A312  E9 0241				jmp	loc_1668		; (A556)
020C:A315			loc_1643:
020C:A315  F7 06 2302 0001			test	data_451,1		; (020C:2302=3104h)
020C:A31B  74 03				jz	loc_1644		; Jump if zero
020C:A31D  E9 00DD				jmp	loc_1653		; (A3FD)
020C:A320			loc_1644:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 339

020C:A320  E8 D6CE				call	sub_91			; (79F1)
020C:A323  33 C9				xor	cx,cx			; Zero register
020C:A325  26: 8B 16 122A			mov	dx,word ptr es:[122Ah]	; (0FF0:122A=0A4F3h)
020C:A32A  B8 4200				mov	ax,4200h
020C:A32D  8B 1E 300B				mov	bx,data_536		; (020C:300B=0)
020C:A331  CD 21				int	21h			; DOS Services  ah=function 42h
										;  move file ptr, bx=file handle
										;   al=method, cx,dx=offset
020C:A333			loc_1645:
020C:A333  BD 1292				mov	bp,1292h
020C:A336  B9 3292				mov	cx,3292h
020C:A339  81 E9 1292				sub	cx,1292h
020C:A33D  BA 1292				mov	dx,1292h
020C:A340  8B 1E 300B				mov	bx,data_536		; (020C:300B=0)
020C:A344  E8 D68C				call	sub_85			; (79D3)
020C:A347  B4 3F				mov	ah,3Fh
020C:A349  CD 21				int	21h			; DOS Services  ah=function 3Fh
										;  read file, bx=file handle
										;   cx=bytes to ds:dx buffer
020C:A34B  E8 D682				call	sub_84			; (79D0)
020C:A34E  73 05				jnc	loc_1646		; Jump if carry=0
020C:A350  B3 0E				mov	bl,0Eh
020C:A352  E9 0201				jmp	loc_1668		; (A556)
020C:A355			loc_1646:
020C:A355  83 3E 3250 00			cmp	word ptr ds:[3250h],0	; (020C:3250=4142h)
020C:A35A  75 03				jne	loc_1647		; Jump if not equal
020C:A35C  E9 009E				jmp	loc_1653		; (A3FD)
020C:A35F			loc_1647:
020C:A35F  E8 D68F				call	sub_91			; (79F1)
020C:A362  26: 8B 5E 00				mov	bx,es:[bp]
020C:A366  A1 1CCC				mov	ax,data_247		; (020C:1CCC=0)
020C:A369  26: 03 46 02				add	ax,es:[bp+2]
020C:A36D  9A 1491:B094		;*		call	far ptr sub_266		;*(1491:B094)
020C:A36D  9A					db	9Ah
020C:A36E  B094 1491				dw	0B094h, 1491h
020C:A372  A3 3252				mov	word ptr ds:[3252h],ax	; (020C:3252=3B54h)
020C:A375  89 1E 3254				mov	word ptr ds:[3254h],bx	; (020C:3254=432Eh)
020C:A379  E8 D666				call	sub_87			; (79E2)
020C:A37C  B9 0019				mov	cx,19h
020C:A37F  BF 0000				mov	di,0
020C:A382			loc_1648:
020C:A382  26: 8B 05				mov	ax,es:[di]
020C:A385  3D FFFF				cmp	ax,0FFFFh
020C:A388  74 60				je	loc_1651		; Jump if equal
020C:A38A  26: 8B 5D 02				mov	bx,es:[di+2]
020C:A38E  9A 1491:B094		;*		call	far ptr sub_266		;*(1491:B094)
020C:A38E  9A					db	9Ah
020C:A38F  B094 1491				dw	0B094h, 1491h
020C:A393  39 06 3252				cmp	word ptr ds:[3252h],ax	; (020C:3252=3B54h)
020C:A397  72 51				jb	loc_1651		; Jump if below
020C:A399  77 06				ja	loc_1649		; Jump if above
020C:A39B  39 1E 3254				cmp	word ptr ds:[3254h],bx	; (020C:3254=432Eh)
020C:A39F  72 49				jb	loc_1651		; Jump if below
020C:A3A1			loc_1649:
020C:A3A1  26: 8B 05				mov	ax,es:[di]
020C:A3A4  26: 8B 5D 04				mov	bx,es:[di+4]
020C:A3A8  9A 1491:B094		;*		call	far ptr sub_266		;*(1491:B094)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 340

020C:A3A8  9A					db	9Ah
020C:A3A9  B094 1491				dw	0B094h, 1491h
020C:A3AD  2B 1E 3254				sub	bx,word ptr ds:[3254h]	; (020C:3254=432Eh)
020C:A3B1  1B 06 3252				sbb	ax,word ptr ds:[3252h]	; (020C:3252=3B54h)
020C:A3B5  73 05				jnc	loc_1650		; Jump if carry=0
020C:A3B7  83 C7 19				add	di,19h
020C:A3BA  EB C6				jmp	short loc_1648		; (A382)
020C:A3BC			loc_1650:
020C:A3BC  26: 8B 05				mov	ax,es:[di]
020C:A3BF  26: 8B 5D 02				mov	bx,es:[di+2]
020C:A3C3  9A 1491:B094		;*		call	far ptr sub_266		;*(1491:B094)
020C:A3C3  9A					db	9Ah
020C:A3C4  B094 1491				dw	0B094h, 1491h
020C:A3C8  8B C3				mov	ax,bx
020C:A3CA  8B 1E 3254				mov	bx,word ptr ds:[3254h]	; (020C:3254=432Eh)
020C:A3CE  2B D8				sub	bx,ax
020C:A3D0  26: 8B 0D				mov	cx,es:[di]
020C:A3D3  BE 4165				mov	si,4165h
020C:A3D6  89 0C				mov	[si],cx
020C:A3D8  89 5C 02				mov	[si+2],bx
020C:A3DB  C6 44 04 5F				mov	byte ptr [si+4],5Fh	; '_'
020C:A3DF  C6 44 05 00				mov	byte ptr [si+5],0
020C:A3E3  C6 44 06 00				mov	byte ptr [si+6],0
020C:A3E7  E8 E4A6				call	sub_107			; (8890)
020C:A3EA			loc_1651:
020C:A3EA  FF 0E 3250				dec	word ptr ds:[3250h]	; (020C:3250=4142h)
020C:A3EE  83 C5 04				add	bp,4
020C:A3F1  81 FD 3292				cmp	bp,3292h
020C:A3F5  72 03				jb	loc_1652		; Jump if below
020C:A3F7  E9 FF39				jmp	loc_1645		; (A333)
020C:A3FA			loc_1652:
020C:A3FA  E9 FF58				jmp	loc_1646		; (A355)
020C:A3FD			loc_1653:
020C:A3FD  BB 0000				mov	bx,0
020C:A400  32 ED				xor	ch,ch			; Zero register
020C:A402  8A 0E 1CD9				mov	cl,data_254		; (020C:1CD9=0)
020C:A406  B8 0019				mov	ax,19h
020C:A409  E8 D5D6				call	sub_87			; (79E2)

020C:A40C			locloop_1654:
020C:A40C  26: 80 67 0B 7F			and	byte ptr es:[bx+0Bh],7Fh
020C:A411  26: 80 4F 0B 1E			or	byte ptr es:[bx+0Bh],1Eh
020C:A416  03 D8				add	bx,ax
020C:A418  E2 F2				loop	locloop_1654		; Loop if cx > 0

020C:A41A  2B D8				sub	bx,ax
020C:A41C  26: 8B 47 04				mov	ax,es:[bx+4]
020C:A420  B1			data_835	db	0B1h
020C:A421  04 D3				add	al,0D3h
020C:A423  E8 2640				call	sub_141			; (CA66)
020C:A426  03 07				add	ax,[bx]
020C:A428  A3 46E6				mov	data_726,ax		; (020C:46E6=0FB80h)
020C:A42B  80 3E 1CCA 03			cmp	data_245,3		; (020C:1CCA=0)
020C:A430  75 03				jne	loc_1655		; Jump if not equal
020C:A432  E9 00B1				jmp	loc_1664		; (A4E6)
020C:A435			loc_1655:
020C:A435  A1 1CCC				mov	ax,data_247		; (020C:1CCC=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 341

020C:A438  80 3E 1F6D 08			cmp	data_355,8		; (020C:1F6D=0)
020C:A43D  75 0D				jne	loc_1657		; Jump if not equal
020C:A43F  83 3E 1CC6 FF			cmp	data_243,0FFFFh		; (020C:1CC6=0)
020C:A444  75 03				jne	loc_1656		; Jump if not equal
020C:A446  E9 009A				jmp	loc_1663		; (A4E3)
020C:A449			loc_1656:
020C:A449  A1 1CC6				mov	ax,data_243		; (020C:1CC6=0)
020C:A44C			loc_1657:
020C:A44C  8E C0				mov	es,ax
020C:A44E  8B F7				mov	si,di
020C:A450  8B 3E 1CC4				mov	di,data_242		; (020C:1CC4=0)
020C:A454  9A 1491:8814		;*		call	far ptr sub_253		;*(1491:8814)
020C:A454  9A					db	9Ah
020C:A455  8814 1491				dw	8814h, 1491h
020C:A459  26: 8A 05				mov	al,es:[di]
020C:A45C  3C EB				cmp	al,0EBh
020C:A45E  74 0C				je	loc_1659		; Jump if equal
020C:A460  3C EA				cmp	al,0EAh
020C:A462  74 07				je	loc_1658		; Jump if equal
020C:A464  3C E9				cmp	al,0E9h
020C:A466  75 07				jne	loc_1660		; Jump if not equal
020C:A468  83 C7 02				add	di,2
020C:A46B			loc_1658:
020C:A46B  47					inc	di
020C:A46C			loc_1659:
020C:A46C  83 C7 02				add	di,2
020C:A46F			loc_1660:
020C:A46F  81 FF 0100				cmp	di,100h
020C:A473  75 01				jne	loc_1661		; Jump if not equal
020C:A475  47					inc	di
020C:A476			loc_1661:
020C:A476  87 F7				xchg	si,di
020C:A478  E8 BC1D				call	sub_56			; (6098)
020C:A47B  E8 D570				call	sub_90			; (79EE)
020C:A47E  80 FB 08				cmp	bl,8
020C:A481  76 63				jbe	loc_1664		; Jump if below or =
020C:A483  8B F7				mov	si,di
020C:A485  BF 0378				mov	di,378h
020C:A488  32 ED				xor	ch,ch			; Zero register
020C:A48A  8A CB				mov	cl,bl
020C:A48C  FC					cld				; Clear direction
020C:A48D  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:A48F  B1 22				mov	cl,22h			; '"'
020C:A491  2A CB				sub	cl,bl
020C:A493  B0 20				mov	al,20h			; ' '
020C:A495  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:A497  A1 1CCC				mov	ax,data_247		; (020C:1CCC=0)
020C:A49A  80 3E 1F6D 08			cmp	data_355,8		; (020C:1F6D=0)
020C:A49F  75 03				jne	loc_1662		; Jump if not equal
020C:A4A1  A1 1CC6				mov	ax,data_243		; (020C:1CC6=0)
020C:A4A4			loc_1662:
020C:A4A4  8E C0				mov	es,ax
020C:A4A6  8B 3E 1CC4				mov	di,data_242		; (020C:1CC4=0)
020C:A4AA  9A 1491:8814		;*		call	far ptr sub_253		;*(1491:8814)
020C:A4AA  9A					db	9Ah
020C:A4AB  8814 1491				dw	8814h, 1491h
020C:A4AF  B0 2E				mov	al,2Eh			; '.'
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 342

020C:A4B1  B9 003C				mov	cx,3Ch
020C:A4B4  FC					cld				; Clear direction
020C:A4B5  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020C:A4B7  E3 2A				jcxz	loc_1663		; Jump if cx=0
020C:A4B9  26: 8B 05				mov	ax,es:[di]
020C:A4BC  2C 30				sub	al,30h			; '0'
020C:A4BE  3C 09				cmp	al,9
020C:A4C0  77 21				ja	loc_1663		; Jump if above
020C:A4C2  80 EC 30				sub	ah,30h			; '0'
020C:A4C5  80 FC 09				cmp	ah,9
020C:A4C8  77 19				ja	loc_1663		; Jump if above
020C:A4CA  83 EF 02				sub	di,2
020C:A4CD  26: 8A 05				mov	al,es:[di]
020C:A4D0  2C 30				sub	al,30h			; '0'
020C:A4D2  3C 09				cmp	al,9
020C:A4D4  77 0D				ja	loc_1663		; Jump if above
020C:A4D6  26: 8B 05				mov	ax,es:[di]
020C:A4D9  A3 5110				mov	data_761,ax		; (020C:5110=0F983h)
020C:A4DC  26: 8B 45 02				mov	ax,es:[di+2]
020C:A4E0  A3 5112				mov	data_762,ax		; (020C:5112=770Ch)
020C:A4E3			loc_1663:
020C:A4E3  E8 D508				call	sub_90			; (79EE)
020C:A4E6			loc_1664:
020C:A4E6  B4 3D				mov	ah,3Dh			; '='
020C:A4E8  B0 00				mov	al,0
020C:A4EA  BA 1E9A				mov	dx,1E9Ah
020C:A4ED  CD 21				int	21h			; DOS Services  ah=function 3Dh
										;  open file, al=mode,name@ds:dx
020C:A4EF  72 31				jc	loc_1665		; Jump if carry Set
020C:A4F1  8B D8				mov	bx,ax
020C:A4F3  A3 300B				mov	data_536,ax		; (020C:300B=0)
020C:A4F6  B4 57				mov	ah,57h			; 'W'
020C:A4F8  32 C0				xor	al,al			; Zero register
020C:A4FA  CD 21				int	21h			; DOS Services  ah=function 57h
										;  get file date+time, bx=handle
										;   returns cx=time, dx=date
020C:A4FC  72 24				jc	loc_1665		; Jump if carry Set
020C:A4FE  89 16 2126				mov	data_372,dx		; (020C:2126=0)
020C:A502  83 26 2126 1F			and	data_372,1Fh		; (020C:2126=0)
020C:A507  B1 05				mov	cl,5
020C:A509  D3 EA				shr	dx,cl			; Shift w/zeros fill
020C:A50B  89 16 2128				mov	data_373,dx		; (020C:2128=0)
020C:A50F  83 26 2128 0F			and	data_373,0Fh		; (020C:2128=0)
020C:A514  B1 04				mov	cl,4
020C:A516  D3 EA				shr	dx,cl			; Shift w/zeros fill
020C:A518  83 E2 3F				and	dx,3Fh
020C:A51B  83 C2 50				add	dx,50h
020C:A51E  89 16 212A				mov	data_374,dx		; (020C:212A=0)
020C:A522			loc_1665:
020C:A522  80 3E 324D 00			cmp	byte ptr ds:[324Dh],0	; (020C:324D=45h)
020C:A527  74 15				je	loc_1667		; Jump if equal
020C:A529  A0 178F				mov	al,data_194		; (020C:178F=0)
020C:A52C  3C 04				cmp	al,4
020C:A52E  77 0B				ja	loc_1666		; Jump if above
020C:A530  B0 04				mov	al,4
020C:A532  80 3E 1F6D 01			cmp	data_355,1		; (020C:1F6D=0)
020C:A537  76 02				jbe	loc_1666		; Jump if below or =
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 343

020C:A539  B0 0A				mov	al,0Ah
020C:A53B			loc_1666:
020C:A53B  E8 BFA2				call	sub_68			; (64E0)
020C:A53E			loc_1667:
020C:A53E  C6 06 2307 20			mov	data_454,20h		; (020C:2307=0) ' '
020C:A543  E8 C95A				call	sub_74			; (6EA0)
020C:A546  E8 BAAB				call	sub_55			; (5FF4)
020C:A549  8B 1E 300B				mov	bx,data_536		; (020C:300B=0)
020C:A54D  E8 0178				call	sub_115			; (A6C8)
020C:A550  E8 11B9				call	sub_130			; (B70C)
020C:A553  F8					clc				; Clear carry flag
020C:A554  EB 0B				jmp	short loc_1669		; (A561)
020C:A556			loc_1668:
020C:A556  E8 D477				call	sub_84			; (79D0)
020C:A559  8B 1E 300B				mov	bx,data_536		; (020C:300B=0)
020C:A55D  E8 0168				call	sub_115			; (A6C8)
020C:A560  F9					stc				; Set carry flag
020C:A561			loc_1669:
020C:A561  C3					retn
							                        ;* No entry point to code
020C:A562  87 DB				xchg	bx,bx
020C:A564  51					push	cx
020C:A565  57					push	di
020C:A566  8B FE				mov	di,si
020C:A568  B9 0034				mov	cx,34h
020C:A56B  03 F1				add	si,cx
020C:A56D  B0 00				mov	al,0
020C:A56F  FC					cld				; Clear direction
020C:A570  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:A572  A0 1CC9				mov	al,data_244		; (020C:1CC9=0)
020C:A575  26: 88 44 FB				mov	es:[si-5],al
020C:A579  C6 06 1CC9 00			mov	data_244,0		; (020C:1CC9=0)
020C:A57E  5F					pop	di
020C:A57F  59					pop	cx
020C:A580  C3					retn
							                        ;* No entry point to code
020C:A581  87 DB				xchg	bx,bx
020C:A583  90					nop
020C:A584  51					push	cx
020C:A585  57					push	di
020C:A586  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:A58B  06					push	es
020C:A58C  E8 D45F				call	sub_90			; (79EE)
020C:A58F  BF 34F2				mov	di,34F2h
020C:A592  B9 35AB				mov	cx,35ABh
020C:A595  81 E9 34F2				sub	cx,34F2h
020C:A599  B0 20				mov	al,20h			; ' '
020C:A59B  FC					cld				; Clear direction
020C:A59C  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:A59E  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:A5A3  9C					pushf				; Push flags
020C:A5A4  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:A5A9  5A					pop	dx
020C:A5AA  8E C2				mov	es,dx
020C:A5AC  2E			data_841	db	2Eh
020C:A5AD  3B 16 3F72				cmp	dx,data_652		; (020C:3F72=0C4FEh)
020C:A5B1  5A					pop	dx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 344

020C:A5B2  75 0A				jnz	loc_1670		; Jump if not zero
020C:A5B4  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:A5B9  74 03				je	loc_1670		; Jump if equal
020C:A5BB  E8 D8F2				call	sub_97			; (7EB0)
020C:A5BE			loc_1670:
020C:A5BE  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:A5C3  9D					popf				; Pop flags
020C:A5C4  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:A5C9  5F					pop	di
020C:A5CA  59					pop	cx
020C:A5CB  C3					retn
							                        ;* No entry point to code
020C:A5CC  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:A5D1  06					push	es
020C:A5D2  E8 D419				call	sub_90			; (79EE)
020C:A5D5  BF 53B7				mov	di,53B7h
020C:A5D8  B9 53E9				mov	cx,53E9h
020C:A5DB  81 E9 53B7				sub	cx,53B7h
020C:A5DF  49					dec	cx
020C:A5E0  B0 20				mov	al,20h			; ' '
020C:A5E2  FC					cld				; Clear direction
020C:A5E3  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:A5E5  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:A5EA  9C					pushf				; Push flags
020C:A5EB  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:A5F0  5A					pop	dx
020C:A5F1  8E C2				mov	es,dx
020C:A5F3  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:A5F8  5A					pop	dx
020C:A5F9  75 0A				jnz	loc_1671		; Jump if not zero
020C:A5FB  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:A600  74 03				je	loc_1671		; Jump if equal
020C:A602  E8 D8AB				call	sub_97			; (7EB0)
020C:A605			loc_1671:
020C:A605  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:A60A  9D					popf				; Pop flags
020C:A60B  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:A610  C3					retn
							                        ;* No entry point to code
020C:A611  87 DB				xchg	bx,bx
020C:A613  90					nop
020C:A614  51					push	cx
020C:A615  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:A61A  06					push	es
020C:A61B  E8 D3D0				call	sub_90			; (79EE)
020C:A61E  BF 5402				mov	di,5402h
020C:A621  B9 5434				mov	cx,5434h
020C:A624  81 E9 5402				sub	cx,5402h
020C:A628  49					dec	cx
020C:A629  B0 20				mov	al,20h			; ' '
020C:A62B  FC					cld				; Clear direction
020C:A62C  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:A62E  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:A633  9C					pushf				; Push flags
020C:A634  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:A639  5A					pop	dx
020C:A63A  8E C2				mov	es,dx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 345

020C:A63C  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:A641  5A					pop	dx
020C:A642  75 0A				jnz	loc_1672		; Jump if not zero
020C:A644  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:A649  74 03				je	loc_1672		; Jump if equal
020C:A64B  E8 D862				call	sub_97			; (7EB0)
020C:A64E			loc_1672:
020C:A64E  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:A653  9D					popf				; Pop flags
020C:A654  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:A659  59					pop	cx
020C:A65A  C3					retn
020C:A65B  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:A65C			sub_114		proc	near
020C:A65C  80 3E 1790 01			cmp	data_195,1		; (020C:1790=0)
020C:A661  75 5E				jne	loc_1674		; Jump if not equal
020C:A663  52					push	dx
020C:A664  56					push	si
020C:A665  57					push	di
020C:A666  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:A66B  06					push	es
020C:A66C  9A 1491:50D0		;*		call	far ptr sub_205		;*(1491:50D0)
020C:A66C  9A					db	9Ah
020C:A66D  50D0 1491				dw	50D0h, 1491h
020C:A671  BA 21FF				mov	dx,21FFh
020C:A674  9A 1491:282C		;*		call	far ptr sub_176		;*(1491:282C)
020C:A674  9A					db	9Ah
020C:A675  282C 1491				dw	282Ch, 1491h
020C:A679  E8 D372				call	sub_90			; (79EE)
020C:A67C  BF 21FF				mov	di,21FFh
020C:A67F  B0 20				mov	al,20h			; ' '
020C:A681  B9 22B7				mov	cx,22B7h
020C:A684  81 E9 21FF				sub	cx,21FFh
020C:A688  FC					cld				; Clear direction
020C:A689  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:A68B  B8 0003				mov	ax,3
020C:A68E  9A 1491:2770		;*		call	far ptr sub_175		;*(1491:2770)
020C:A68E  9A					db	9Ah
020C:A68F  2770 1491				dw	2770h, 1491h
020C:A693  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:A698  9C					pushf				; Push flags
020C:A699  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:A69E  5A					pop	dx
020C:A69F  8E C2				mov	es,dx
020C:A6A1  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:A6A6  5A					pop	dx
020C:A6A7  75 0A				jnz	loc_1673		; Jump if not zero
020C:A6A9  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:A6AE  74 03				je	loc_1673		; Jump if equal
020C:A6B0  E8 D7FD				call	sub_97			; (7EB0)
020C:A6B3			loc_1673:
020C:A6B3  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 346

020C:A6B8  9D					popf				; Pop flags
020C:A6B9  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:A6BE  5F					pop	di
020C:A6BF  5E					pop	si
020C:A6C0  5A					pop	dx
020C:A6C1			loc_1674:
020C:A6C1  C7 06 214F FFFF			mov	data_376,0FFFFh		; (020C:214F=24FFh)
020C:A6C7  C3					retn
				sub_114		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:A6C8			sub_115		proc	near
020C:A6C8  50					push	ax
020C:A6C9  B4 3E				mov	ah,3Eh
020C:A6CB  CD 21				int	21h			; DOS Services  ah=function 3Eh
										;  close file, bx=file handle
020C:A6CD  58					pop	ax
020C:A6CE  C3					retn
				sub_115		endp

020C:A6CF  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:A6D0			sub_116		proc	near
020C:A6D0  80 3E 22FF 00			cmp	data_448,0		; (020C:22FF=0)
020C:A6D5  75 02				jne	loc_1675		; Jump if not equal
020C:A6D7  EB 70				jmp	short loc_1681		; (A749)
020C:A6D9			loc_1675:
020C:A6D9  06					push	es
020C:A6DA  55					push	bp
020C:A6DB  F7 06 3D1A 0040			test	data_595,40h		; (020C:3D1A=176Ah)
020C:A6E1  75 64				jnz	loc_1680		; Jump if not zero
020C:A6E3  80 3E 3C05 01			cmp	data_569,1		; (020C:3C05=0FAh)
020C:A6E8  74 5D				je	loc_1680		; Jump if equal
020C:A6EA  80 3E 1D44 78			cmp	data_308,78h		; (020C:1D44=0) 'x'
020C:A6EF  74 0E				je	loc_1676		; Jump if equal
020C:A6F1  80 3E 1D44 F5			cmp	data_308,0F5h		; (020C:1D44=0)
020C:A6F6  74 07				je	loc_1676		; Jump if equal
020C:A6F8  80 3E 1D44 4F			cmp	data_308,4Fh		; (020C:1D44=0) 'O'
020C:A6FD  75 48				jne	loc_1680		; Jump if not equal
020C:A6FF			loc_1676:
020C:A6FF  83 3E 2FAE FF			cmp	data_525,0FFFFh		; (020C:2FAE=0DA5h)
020C:A704  75 15				jne	loc_1677		; Jump if not equal
020C:A706  80 3E 1F6D 08			cmp	data_355,8		; (020C:1F6D=0)
020C:A70B  74 3A				je	loc_1680		; Jump if equal
020C:A70D  80 3E 1F6D 09			cmp	data_355,9		; (020C:1F6D=0)
020C:A712  74 33				je	loc_1680		; Jump if equal
020C:A714  80 3E 1F6D 0A			cmp	data_355,0Ah		; (020C:1F6D=0)
020C:A719  74 2C				je	loc_1680		; Jump if equal
020C:A71B			loc_1677:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 347

020C:A71B  E8 C696				call	sub_72			; (6DB4)
020C:A71E  3E: C6 46 00 28			mov	byte ptr ds:[bp],28h	; '('
020C:A723  45					inc	bp
020C:A724  A1 2FAE				mov	ax,data_525		; (020C:2FAE=0DA5h)
020C:A727  F7 06 1F6E 8000			test	data_356,8000h		; (020C:1F6E=0)
020C:A72D  75 06				jnz	loc_1678		; Jump if not zero
020C:A72F  3B 06 2154				cmp	ax,data_379		; (020C:2154=5CE9h)
020C:A733  74 05				je	loc_1679		; Jump if equal
020C:A735			loc_1678:
020C:A735  9A 1491:0168		;*		call	far ptr sub_154		;*(1491:0168)
020C:A735  9A					db	9Ah
020C:A736  0168 1491				dw	168h, 1491h
020C:A73A			loc_1679:
020C:A73A  A1 2FB0				mov	ax,data_526		; (020C:2FB0=0DC3h)
020C:A73D  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:A73D  9A					db	9Ah
020C:A73E  0294 1491				dw	294h, 1491h
020C:A742  3E: C6 46 00 29			mov	byte ptr ds:[bp],29h	; ')'
020C:A747			loc_1680:
020C:A747  5D					pop	bp
020C:A748  07					pop	es
020C:A749			loc_1681:
020C:A749  C3					retn
				sub_116		endp

020C:A74A  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:A74C			sub_117		proc	near
020C:A74C  53					push	bx
020C:A74D  80 3E 1F6D 01			cmp	data_355,1		; (020C:1F6D=0)
020C:A752  74 2A				je	loc_1682		; Jump if equal
020C:A754  F6 06 216F 01			test	data_393,1		; (020C:216F=0FFh)
020C:A759  75 23				jnz	loc_1682		; Jump if not zero
020C:A75B  80 3E 178F 06			cmp	data_194,6		; (020C:178F=0)
020C:A760  72 1C				jb	loc_1682		; Jump if below
020C:A762  80 3E 1790 01			cmp	data_195,1		; (020C:1790=0)
020C:A767  74 15				je	loc_1682		; Jump if equal
020C:A769  A1 2156				mov	ax,data_380		; (020C:2156=0FFFFh)
020C:A76C  2B 06 2198				sub	ax,data_416		; (020C:2198=43h)
020C:A770  3D 0064				cmp	ax,64h
020C:A773  77 09				ja	loc_1682		; Jump if above
020C:A775  BB FFFF				mov	bx,0FFFFh
020C:A778  39 1E 219A				cmp	data_417,bx		; (020C:219A=0E1Eh)
020C:A77C  75 03				jne	loc_1683		; Jump if not equal
020C:A77E			loc_1682:
020C:A77E  E9 00B9				jmp	loc_1691		; (A83A)
020C:A781			loc_1683:
020C:A781  51					push	cx
020C:A782  56					push	si
020C:A783  57					push	di
020C:A784  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:A789  06					push	es
020C:A78A  BA 0001				mov	dx,1
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 348

020C:A78D  8B 1E 2154				mov	bx,data_379		; (020C:2154=5CE9h)
020C:A791  A1 2198				mov	ax,data_416		; (020C:2198=43h)
020C:A794  3D FFFF				cmp	ax,0FFFFh
020C:A797  74 73				je	loc_1689		; Jump if equal
020C:A799  E8 BD94				call	sub_69			; (6530)
020C:A79C  73 6E				jnc	loc_1689		; Jump if carry=0
020C:A79E  9A 1491:7CC0		;*		call	far ptr sub_242		;*(1491:7CC0)
020C:A79E  9A					db	9Ah
020C:A79F  7CC0 1491				dw	7CC0h, 1491h
020C:A7A3  72 67				jc	loc_1689		; Jump if carry Set
020C:A7A5  56					push	si
020C:A7A6  8B F7				mov	si,di
020C:A7A8  E8 E335				call	sub_108			; (8AE0)
020C:A7AB  5E					pop	si
020C:A7AC  BE 2180				mov	si,2180h
020C:A7AF  B9 0003				mov	cx,3

020C:A7B2			locloop_1684:
020C:A7B2  8B 7C 02				mov	di,[si+2]
020C:A7B5  83 FF FF				cmp	di,0FFFFh
020C:A7B8  74 20				je	loc_1686		; Jump if equal
020C:A7BA  BA 0001				mov	dx,1
020C:A7BD  8B 1C				mov	bx,[si]
020C:A7BF  8B 44 02				mov	ax,[si+2]
020C:A7C2  E8 BD6B				call	sub_69			; (6530)
020C:A7C5  73 13				jnc	loc_1686		; Jump if carry=0
020C:A7C7  9A 1491:7CC0		;*		call	far ptr sub_242		;*(1491:7CC0)
020C:A7C7  9A					db	9Ah
020C:A7C8  7CC0 1491				dw	7CC0h, 1491h
020C:A7CC  72 07				jc	loc_1685		; Jump if carry Set
020C:A7CE  56					push	si
020C:A7CF  8B F7				mov	si,di
020C:A7D1  E8 E30C				call	sub_108			; (8AE0)
020C:A7D4  5E					pop	si
020C:A7D5			loc_1685:
020C:A7D5  83 C6 04				add	si,4
020C:A7D8  E2 D8				loop	locloop_1684		; Loop if cx > 0

020C:A7DA			loc_1686:
020C:A7DA  89 1E 219A				mov	data_417,bx		; (020C:219A=0E1Eh)
020C:A7DE  BE 218C				mov	si,218Ch
020C:A7E1  B9 0003				mov	cx,3

020C:A7E4			locloop_1687:
020C:A7E4  8B 7C 02				mov	di,[si+2]
020C:A7E7  83 FF FF				cmp	di,0FFFFh
020C:A7EA  74 20				je	loc_1689		; Jump if equal
020C:A7EC  8B 1C				mov	bx,[si]
020C:A7EE  8B 44 02				mov	ax,[si+2]
020C:A7F1  BA 0002				mov	dx,2
020C:A7F4  E8 BD39				call	sub_69			; (6530)
020C:A7F7  73 13				jnc	loc_1689		; Jump if carry=0
020C:A7F9  9A 1491:7CC0		;*		call	far ptr sub_242		;*(1491:7CC0)
020C:A7F9  9A					db	9Ah
020C:A7FA  7CC0 1491				dw	7CC0h, 1491h
020C:A7FE  72 07				jc	loc_1688		; Jump if carry Set
020C:A800  56					push	si
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 349

020C:A801  8B F7				mov	si,di
020C:A803  E8 E2DA				call	sub_108			; (8AE0)
020C:A806  5E					pop	si
020C:A807			loc_1688:
020C:A807  83 C6 04				add	si,4
020C:A80A  E2 D8				loop	locloop_1687		; Loop if cx > 0

020C:A80C			loc_1689:
020C:A80C  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:A811  9C					pushf				; Push flags
020C:A812  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:A817  5A					pop	dx
020C:A818  8E C2				mov	es,dx
020C:A81A  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:A81F  5A					pop	dx
020C:A820  75			data_844	db	75h
020C:A821  0A 2E 163B				or	ch,data_171		; (020C:163B=0)
020C:A825  74 3F				jz	loc_1696		; Jump if zero
020C:A827  74 03				jz	loc_1690		; Jump if zero
020C:A829  E8 D684				call	sub_97			; (7EB0)
020C:A82C			loc_1690:
020C:A82C  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:A831  9D					popf				; Pop flags
020C:A832  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:A837  5F					pop	di
020C:A838  5E					pop	si
020C:A839  59					pop	cx
020C:A83A			loc_1691:
020C:A83A  5B					pop	bx
020C:A83B  C3					retn
020C:A83C  00					db	0
020C:A83D  00 00				add	[bx+si],al
020C:A83F  00 53 52				add	[bp+di+52h],dl
020C:A842  55					push	bp
020C:A843  1E					push	ds
020C:A844  83 3E 3D82 FF			cmp	data_637,0FFFFh		; (020C:3D82=0E432h)
020C:A849  74 06				je	loc_1692		; Jump if equal
020C:A84B  3A 0E 3D84				cmp	cl,data_638		; (020C:3D84=0FEh)
020C:A84F  73 05				jae	loc_1693		; Jump if above or =
020C:A851			loc_1692:
020C:A851  E8 D17F				call	sub_85			; (79D3)
020C:A854  EB 03				jmp	short loc_1694		; (A859)
020C:A856			loc_1693:
020C:A856  E8 D17D				call	sub_86			; (79D6)
020C:A859			loc_1694:
020C:A859  E8 D192				call	sub_90			; (79EE)
020C:A85C  33 F6				xor	si,si			; Zero register
020C:A85E  B3 FF				mov	bl,0FFh
020C:A860  B7 01				mov	bh,1
020C:A862  BD 0005				mov	bp,5
020C:A865			loc_1695:
020C:A865  38 1C				cmp	[si],bl
020C:A867  74 5E				je	loc_1702		; Jump if equal
020C:A869  39 44 03				cmp	[si+3],ax
020C:A86C  73 1A				jae	loc_1699		; Jump if above or =
020C:A86E			loc_1697:
020C:A86E  33 D2				xor	dx,dx			; Zero register
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 350

020C:A870  02 54 02				add	dl,[si+2]
020C:A873  D1 E2				shl	dx,1			; Shift w/zeros fill
020C:A875  84 7C 01				test	bh,[si+1]
020C:A878  75 06				jnz	loc_1698		; Jump if not zero
020C:A87A  03 D5				add	dx,bp
020C:A87C  03 F2				add	si,dx
020C:A87E  EB E5				jmp	short loc_1695		; (A865)
020C:A880			loc_1698:
020C:A880  D1 E2				shl	dx,1			; Shift w/zeros fill
020C:A882  03 D5				add	dx,bp
020C:A884  03 F2				add	si,dx
020C:A886  EB DD				jmp	short loc_1695		; (A865)
020C:A888			loc_1699:
020C:A888  77 3D				ja	loc_1702		; Jump if above
020C:A88A  26: 80 3E 46ED 01			cmp	es:data_730,1		; (020C:46ED=0)
020C:A890  74 0E				je	loc_1700		; Jump if equal
020C:A892  F6 44 01 80				test	byte ptr [si+1],80h
020C:A896  75 D6				jnz	loc_1697		; Jump if not zero
020C:A898  38 0C				cmp	[si],cl
020C:A89A  77 2B				ja	loc_1702		; Jump if above
020C:A89C  75 D0				jnz	loc_1697		; Jump if not zero
020C:A89E  EB 08				jmp	short loc_1701		; (A8A8)
020C:A8A0			loc_1700:
020C:A8A0  80 64 01 7F				and	byte ptr [si+1],7Fh
020C:A8A4  38 0C				cmp	[si],cl
020C:A8A6  75 C6				jne	loc_1697		; Jump if not equal
020C:A8A8			loc_1701:
020C:A8A8  38 6C 01				cmp	[si+1],ch
020C:A8AB  74 1D				je	loc_1703		; Jump if equal
020C:A8AD  50			data_848	db	50h
020C:A8AE  8A 64 01				mov	ah,[si+1]
020C:A8B1  8A C5				mov	al,ch
020C:A8B3  25 0606				and	ax,606h
020C:A8B6  3A E0				cmp	ah,al
020C:A8B8  58					pop	ax
020C:A8B9  75 B3				jnz	loc_1697		; Jump if not zero
020C:A8BB  84 EF				test	ch,bh
020C:A8BD  75 AF				jnz	loc_1697		; Jump if not zero
020C:A8BF  26: 80 3E 46ED 01			cmp	es:data_730,1		; (020C:46ED=0)
020C:A8C5  74 03				je	loc_1703		; Jump if equal
020C:A8C7			loc_1702:
020C:A8C7  F8					clc				; Clear carry flag
020C:A8C8  EB 01				jmp	short loc_1704		; (A8CB)
020C:A8CA			loc_1703:
020C:A8CA  F9					stc				; Set carry flag
020C:A8CB			loc_1704:
020C:A8CB  8C DB				mov	bx,ds
020C:A8CD  8E C3				mov	es,bx
020C:A8CF  1F					pop	ds
020C:A8D0  5D					pop	bp
020C:A8D1  5A					pop	dx
020C:A8D2  5B					pop	bx
020C:A8D3  C3					retn
				sub_117		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 351

				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:A8D4			sub_119		proc	near
020C:A8D4  E8 AF3D				call	sub_41			; (5814)
020C:A8D7  50					push	ax
020C:A8D8  53					push	bx
020C:A8D9  51					push	cx
020C:A8DA  52					push	dx
020C:A8DB  57					push	di
020C:A8DC  56					push	si
020C:A8DD  55					push	bp
020C:A8DE  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:A8E3  06					push	es
020C:A8E4  BD 3D79				mov	bp,3D79h
020C:A8E7  83 3E 3D82 FF			cmp	word ptr ds:[3D82h],0FFFFh	; (ss:3D82=2306h)
020C:A8EC  74 09				je	loc_1705		; Jump if equal
020C:A8EE  3B 1E 3D82				cmp	bx,word ptr ds:[3D82h]	; (ss:3D82=2306h)
020C:A8F2  72 03				jb	loc_1705		; Jump if below
020C:A8F4  BD 3D7B				mov	bp,3D7Bh
020C:A8F7			loc_1705:
020C:A8F7  8B 0E 3D7D				mov	cx,word ptr ds:[3D7Dh]	; (ss:3D7D=0E68Ah)
020C:A8FB  83 E9 0B				sub	cx,0Bh
020C:A8FE  3E: 3B 4E 00				cmp	cx,ds:[bp]
020C:A902  77 03				ja	loc_1706		; Jump if above
020C:A904  E9 012C				jmp	loc_1724		; (AA33)
020C:A907			loc_1706:
020C:A907  9A 1491:6CE8		;*		call	far ptr sub_231		;*(1491:6CE8)
020C:A907  9A					db	9Ah
020C:A908  6CE8 1491				dw	6CE8h, 1491h
020C:A90C  F7 06 1F6E 0040			test	word ptr ds:[1F6Eh],40h	; (ss:1F6E=0A0B4h)
020C:A912  75 24				jnz	loc_1708		; Jump if not zero
020C:A914  83 FB 00				cmp	bx,0
020C:A917  75 10				jne	loc_1707		; Jump if not equal
020C:A919  3D 0400				cmp	ax,400h
020C:A91C  72 0B				jb	loc_1707		; Jump if below
020C:A91E  3D 0500				cmp	ax,500h
020C:A921  77 15				ja	loc_1708		; Jump if above
020C:A923  BB 0040				mov	bx,40h
020C:A926  2D 0400				sub	ax,400h
020C:A929			loc_1707:
020C:A929  83 FB 40				cmp	bx,40h
020C:A92C  75 0A				jne	loc_1708		; Jump if not equal
020C:A92E  3D 0100				cmp	ax,100h
020C:A931  75 05				jne	loc_1708		; Jump if not equal
020C:A933  33 C0				xor	ax,ax			; Zero register
020C:A935  BB 0050				mov	bx,50h
020C:A938			loc_1708:
020C:A938  BE 0000				mov	si,0
020C:A93B  E8 D0A4				call	sub_87			; (79E2)
020C:A93E  B5 01				mov	ch,1
020C:A940			loc_1709:
020C:A940  26: 39 1C				cmp	es:[si],bx
020C:A943  75 0C				jne	loc_1710		; Jump if not equal
020C:A945  26: 3B 44 02				cmp	ax,es:[si+2]
020C:A949  72 06				jb	loc_1710		; Jump if below
020C:A94B  26: 3B 44 04				cmp	ax,es:[si+4]
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 352

020C:A94F  76 0E				jbe	loc_1711		; Jump if below or =
020C:A951			loc_1710:
020C:A951  FE C5				inc	ch
020C:A953  83 C6 19				add	si,19h
020C:A956  3A 2E 1CD9				cmp	ch,byte ptr ds:[1CD9h]	; (ss:1CD9=0)
020C:A95A  76 E4				jbe	loc_1709		; Jump if below or =
020C:A95C  E9 00D4				jmp	loc_1724		; (AA33)
020C:A95F			loc_1711:
020C:A95F  FE CD				dec	ch
020C:A961  80 FD FA				cmp	ch,0FAh
020C:A964  76 01				jbe	$+3			; delay for I/O
020C:A966  90					nop
020C:A967  8A CD				mov	cl,ch
020C:A969  32 ED				xor	ch,ch			; Zero register
020C:A96B  3B 1E 2154				cmp	bx,word ptr ds:[2154h]	; (ss:2154=262Fh)
020C:A96F  74 03				je	loc_1712		; Jump if equal
020C:A971  80 CD 01				or	ch,1
020C:A974			loc_1712:
020C:A974  83 FA 04				cmp	dx,4
020C:A977  74 0D				je	loc_1714		; Jump if equal
020C:A979  83 FA 02				cmp	dx,2
020C:A97C  74 05				je	loc_1713		; Jump if equal
020C:A97E  80 CD 02				or	ch,2
020C:A981  EB 03				jmp	short loc_1714		; (A986)
020C:A983			loc_1713:
020C:A983  80 CD 04				or	ch,4
020C:A986			loc_1714:
020C:A986  E8 FEB7		;*		call	sub_118			;*(A840)
020C:A986  E8 B7 FE				db	0E8h,0B7h,0FEh
020C:A989  72 04				jc	loc_1715		; Jump if carry Set
020C:A98B  B7 01				mov	bh,1
020C:A98D  EB 48				jmp	short loc_1720		; (A9D7)
020C:A98F			loc_1715:
020C:A98F  32 FF				xor	bh,bh			; Zero register
020C:A991  26: 8A 54 02				mov	dl,es:[si+2]
020C:A995  80 FA FF				cmp	dl,0FFh
020C:A998  74 25				je	loc_1717		; Jump if equal
020C:A99A  8B FE				mov	di,si
020C:A99C  83 C6 05				add	si,5
020C:A99F  32 F6				xor	dh,dh			; Zero register
020C:A9A1  D1 E2				shl	dx,1			; Shift w/zeros fill
020C:A9A3  F6 C5 01				test	ch,1
020C:A9A6  74 02				jz	loc_1716		; Jump if zero
020C:A9A8  D1 E2				shl	dx,1			; Shift w/zeros fill
020C:A9AA			loc_1716:
020C:A9AA  03 F2				add	si,dx
020C:A9AC  8B 16 2156				mov	dx,word ptr ds:[2156h]	; (ss:2156=448Ah)
020C:A9B0  2B 16 4451				sub	dx,word ptr ds:[4451h]	; (ss:4451=0E245h)
020C:A9B4  F6 C5 01				test	ch,1
020C:A9B7  75 08				jnz	loc_1718		; Jump if not zero
020C:A9B9  26: 3B 54 FE				cmp	dx,es:[si-2]
020C:A9BD  75 14				jne	loc_1719		; Jump if not equal
020C:A9BF			loc_1717:
020C:A9BF  EB 72				jmp	short loc_1724		; (AA33)
020C:A9C1			loc_1718:
020C:A9C1  26: 3B 54 FC				cmp	dx,es:[si-4]
020C:A9C5  75 0C				jne	loc_1719		; Jump if not equal
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 353

020C:A9C7  8B 16 2154				mov	dx,word ptr ds:[2154h]	; (ss:2154=262Fh)
020C:A9CB  26: 3B 54 FE				cmp	dx,es:[si-2]
020C:A9CF  75 02				jne	loc_1719		; Jump if not equal
020C:A9D1  EB 60				jmp	short loc_1724		; (AA33)
020C:A9D3			loc_1719:
020C:A9D3  26: FE 45 02				inc	byte ptr es:[di+2]
020C:A9D7			loc_1720:
020C:A9D7  8B D6				mov	dx,si
020C:A9D9  8A DD				mov	bl,ch
020C:A9DB  51					push	cx
020C:A9DC  3E: 8B 7E 00				mov	di,ds:[bp]
020C:A9E0  8B F7				mov	si,di
020C:A9E2  8B CF				mov	cx,di
020C:A9E4  2B CA				sub	cx,dx
020C:A9E6  83 C7 02				add	di,2
020C:A9E9  83 C1 02				add	cx,2
020C:A9EC  0A FF				or	bh,bh			; Zero ?
020C:A9EE  74 03				jz	loc_1721		; Jump if zero
020C:A9F0  83 C7 05				add	di,5
020C:A9F3			loc_1721:
020C:A9F3  F6 C3 01				test	bl,1
020C:A9F6  74 03				jz	loc_1722		; Jump if zero
020C:A9F8  83 C7 02				add	di,2
020C:A9FB			loc_1722:
020C:A9FB  3E: 89 7E 00				mov	ds:[bp],di
020C:A9FF  06					push	es
020C:AA00  1F					pop	ds
020C:AA01  FD					std				; Set direction flag
020C:AA02  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:AA04  E8 CFC9				call	sub_84			; (79D0)
020C:AA07  59					pop	cx
020C:AA08  8B F2				mov	si,dx
020C:AA0A  0A FF				or	bh,bh			; Zero ?
020C:AA0C  74 0F				jz	loc_1723		; Jump if zero
020C:AA0E  26: 89 0C				mov	es:[si],cx
020C:AA11  26: C6 44 02 01			mov	byte ptr es:[si+2],1
020C:AA16  26: 89 44 03				mov	es:[si+3],ax
020C:AA1A  83 C6 05				add	si,5
020C:AA1D			loc_1723:
020C:AA1D  A1 2156				mov	ax,word ptr ds:[2156h]	; (444F:2156=2020h)
020C:AA20  2B 06 4451				sub	ax,word ptr ds:[4451h]	; (444F:4451=2020h)
020C:AA24  26: 89 04				mov	es:[si],ax
020C:AA27  F6 C3 01				test	bl,1
020C:AA2A  74 07				jz	loc_1724		; Jump if zero
020C:AA2C  A1 2154				mov	ax,word ptr ds:[2154h]	; (444F:2154=4253h)
020C:AA2F  26: 89 44 02				mov	es:[si+2],ax
020C:AA33			loc_1724:
020C:AA33  FC					cld				; Clear direction
020C:AA34  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:AA39  9C					pushf				; Push flags
020C:AA3A  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:AA3F  5A					pop	dx
020C:AA40  8E C2				mov	es,dx
020C:AA42  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:AA47  5A					pop	dx
020C:AA48  75 0A				jnz	loc_1725		; Jump if not zero
020C:AA4A  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 354

020C:AA4F  74 03				je	loc_1725		; Jump if equal
020C:AA51  E8 D45C				call	sub_97			; (7EB0)
020C:AA54			loc_1725:
020C:AA54  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:AA59  9D					popf				; Pop flags
020C:AA5A  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:AA5F  5D					pop	bp
020C:AA60  5E					pop	si
020C:AA61  5F					pop	di
020C:AA62  5A					pop	dx
020C:AA63  59					pop	cx
020C:AA64  5B					pop	bx
020C:AA65  58					pop	ax
020C:AA66  C3					retn
				sub_119		endp

							                        ;* No entry point to code
020C:AA67  90					nop
020C:AA68  50					push	ax
020C:AA69  53					push	bx
020C:AA6A  51					push	cx
020C:AA6B  52					push	dx
020C:AA6C  56					push	si
020C:AA6D  57					push	di
020C:AA6E  55					push	bp
020C:AA6F  BF 0008				mov	di,8
020C:AA72  8B F7				mov	si,di
020C:AA74  BB 2F78				mov	bx,2F78h
020C:AA77  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020C:0000=1828h)
020C:AA7C  72 03				jb	loc_1726		; Jump if below
020C:AA7E  E9 02FF				jmp	loc_1770		; (AD80)
020C:AA81			loc_1726:
020C:AA81  26: 8A 45 05				mov	al,es:[di+5]
020C:AA85  25 000F				and	ax,0Fh
020C:AA88  D7					xlat				; al=[al+[bx]] table
020C:AA89  0A C0				or	al,al			; Zero ?
020C:AA8B  75 04				jnz	loc_1727		; Jump if not zero
020C:AA8D  26: 8A 45 06				mov	al,es:[di+6]
020C:AA91			loc_1727:
020C:AA91  8B F7				mov	si,di
020C:AA93  03 F0				add	si,ax
020C:AA95  26: 3B 36 0000			cmp	si,word ptr es:[0]	; (020C:0000=1828h)
020C:AA9A  72 03				jb	loc_1728		; Jump if below
020C:AA9C  E9 02E1				jmp	loc_1770		; (AD80)
020C:AA9F			loc_1728:
020C:AA9F  26: F6		data_854	db	0F6h			; Data table (indexed access)
020C:AAA1  45					inc	bp
020C:AAA2  05 7410				add	ax,7410h
020C:AAA5  03			data_855	db	3			; Data table (indexed access)
020C:AAA6  E9 02BC				jmp	loc_1767		; (AD65)
							                        ;* No entry point to code
020C:AAA9  26: F6 44 05 10			test	byte ptr es:[si+5],10h
020C:AAAE  74 03				jz	loc_1729		; Jump if zero
020C:AAB0  E9 02AF				jmp	loc_1766		; (AD62)
020C:AAB3			loc_1729:
020C:AAB3  26: 8B 05				mov	ax,es:[di]
020C:AAB6  26: 3B 04				cmp	ax,es:[si]
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 355

020C:AAB9  74 03				je	loc_1730		; Jump if equal
020C:AABB  E9 02A4				jmp	loc_1766		; (AD62)
020C:AABE			loc_1730:
020C:AABE  26: 8B 45 02				mov	ax,es:[di+2]
020C:AAC2  26: 3B 44 02				cmp	ax,es:[si+2]
020C:AAC6  75 03				jne	loc_1731		; Jump if not equal
020C:AAC8  E9 015B				jmp	loc_1751		; (AC26)
020C:AACB			loc_1731:
020C:AACB  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020C:AAD0  74 03				jz	loc_1732		; Jump if zero
020C:AAD2  E9 028D				jmp	loc_1766		; (AD62)
020C:AAD5			loc_1732:
020C:AAD5  26: 8B 45 08				mov	ax,es:[di+8]
020C:AAD9  26: 03 45 02				add	ax,es:[di+2]
020C:AADD  73 07				jnc	loc_1733		; Jump if carry=0
020C:AADF  40					inc	ax
020C:AAE0  26: 29 45 08				sub	es:[di+8],ax
020C:AAE4  EB E5				jmp	short loc_1731		; (AACB)
020C:AAE6			loc_1733:
020C:AAE6  26: 3B 44 02				cmp	ax,es:[si+2]
020C:AAEA  77 03				ja	loc_1734		; Jump if above
020C:AAEC  E9 0273				jmp	loc_1766		; (AD62)
020C:AAEF			loc_1734:
020C:AAEF  83 3E 1E91 00			cmp	data_341,0		; (020C:1E91=0)
020C:AAF4  75 19				jne	loc_1735		; Jump if not equal
020C:AAF6  26: 8A 45 04				mov	al,es:[di+4]
020C:AAFA  24 3F				and	al,3Fh			; '?'
020C:AAFC  3C 20				cmp	al,20h			; ' '
020C:AAFE  75 0F				jne	loc_1735		; Jump if not equal
020C:AB00  26: 8B 45 02				mov	ax,es:[di+2]
020C:AB04  26: 03 45 08				add	ax,es:[di+8]
020C:AB08  A3 1E91				mov	data_341,ax		; (020C:1E91=0)
020C:AB0B  89 3E 1E93				mov	data_342,di		; (020C:1E93=0)
020C:AB0F			loc_1735:
020C:AB0F  26: 8A 45 04				mov	al,es:[di+4]
020C:AB13  24 3F				and	al,3Fh			; '?'
020C:AB15  3C 21				cmp	al,21h			; '!'
020C:AB17  74 04				je	loc_1736		; Jump if equal
020C:AB19  3C 22				cmp	al,22h			; '"'
020C:AB1B  75 03				jne	loc_1737		; Jump if not equal
020C:AB1D			loc_1736:
020C:AB1D  E9 009A				jmp	loc_1746		; (ABBA)
020C:AB20			loc_1737:
020C:AB20  26: 8A 44 04				mov	al,es:[si+4]
020C:AB24  24 3F				and	al,3Fh			; '?'
020C:AB26  3C 21				cmp	al,21h			; '!'
020C:AB28  75 03				jne	loc_1739		; Jump if not equal
020C:AB2A			loc_1738:
020C:AB2A  E9 00AD				jmp	loc_1748		; (ABDA)
020C:AB2D			loc_1739:
020C:AB2D  3C 22				cmp	al,22h			; '"'
020C:AB2F  74 F9				je	loc_1738		; Jump if equal
020C:AB31  87 F7				xchg	si,di
020C:AB33  9A 1491:7CC0		;*		call	far ptr sub_242		;*(1491:7CC0)
020C:AB33  9A					db	9Ah
020C:AB34  7CC0 1491				dw	7CC0h, 1491h
020C:AB38  87 F7				xchg	si,di
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 356

020C:AB3A  72 7E				jc	loc_1746		; Jump if carry Set
020C:AB3C  9A 1491:7CC0		;*		call	far ptr sub_242		;*(1491:7CC0)
020C:AB3C  9A					db	9Ah
020C:AB3D  7CC0 1491				dw	7CC0h, 1491h
020C:AB41  72 66				jc	loc_1744		; Jump if carry Set
020C:AB43  26: 8B 44 02				mov	ax,es:[si+2]
020C:AB47  26: 2B 45 02				sub	ax,es:[di+2]
020C:AB4B  BA 0004				mov	dx,4
020C:AB4E  26: 8A 4D 04				mov	cl,es:[di+4]
020C:AB52  80 E1 3F				and	cl,3Fh			; '?'
020C:AB55  80 F9 20				cmp	cl,20h			; ' '
020C:AB58  75 03				jne	loc_1740		; Jump if not equal
020C:AB5A  BA 03F0				mov	dx,3F0h
020C:AB5D			loc_1740:
020C:AB5D  3B C2				cmp	ax,dx
020C:AB5F  73 59				jae	loc_1746		; Jump if above or =
020C:AB61  81 FA 03F0				cmp	dx,3F0h
020C:AB65  74 03				je	loc_1741		; Jump if equal
020C:AB67  E9 00C2				jmp	loc_1752		; (AC2C)
020C:AB6A			loc_1741:
020C:AB6A  26: 8A 44 04				mov	al,es:[si+4]
020C:AB6E  24 3F				and	al,3Fh			; '?'
020C:AB70  3C 02				cmp	al,2
020C:AB72  74 46				je	loc_1746		; Jump if equal
020C:AB74  3C 04				cmp	al,4
020C:AB76  74 42				je	loc_1746		; Jump if equal
020C:AB78  3C 20				cmp	al,20h			; ' '
020C:AB7A  75 22				jne	loc_1743		; Jump if not equal
020C:AB7C  57					push	di
020C:AB7D  06					push	es
020C:AB7E  26: 8B 7C 02				mov	di,es:[si+2]
020C:AB82  26: 8B 04				mov	ax,es:[si]
020C:AB85  8E C0				mov	es,ax
020C:AB87  9A 1491:8814		;*		call	far ptr sub_253		;*(1491:8814)
020C:AB87  9A					db	9Ah
020C:AB88  8814 1491				dw	8814h, 1491h
020C:AB8C  B0 01				mov	al,1
020C:AB8E  72 04				jc	loc_1742		; Jump if carry Set
020C:AB90  26: 8A 45 FF				mov	al,es:[di-1]
020C:AB94			loc_1742:
020C:AB94  07					pop	es
020C:AB95  5F					pop	di
020C:AB96  3C 00				cmp	al,0
020C:AB98  74 20				je	loc_1746		; Jump if equal
020C:AB9A  3C 24				cmp	al,24h			; '$'
020C:AB9C  74 1C				je	loc_1746		; Jump if equal
020C:AB9E			loc_1743:
020C:AB9E  26: 8B 44 02				mov	ax,es:[si+2]
020C:ABA2  26: 2B 45 02				sub	ax,es:[di+2]
020C:ABA6  E9 0083				jmp	loc_1752		; (AC2C)
020C:ABA9			loc_1744:
020C:ABA9  26			data_858	db	26h
020C:ABAA  8B 44 02				mov	ax,[si+2]
020C:ABAD  26: 2B 45 02				sub	ax,es:[di+2]
020C:ABB1  3D 03F0				cmp	ax,3F0h
020C:ABB4  73 02				jae	loc_1745		; Jump if above or =
020C:ABB6  EB 74				jmp	short loc_1752		; (AC2C)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 357

020C:ABB8			loc_1745:
020C:ABB8  EB 6C				jmp	short loc_1751		; (AC26)
020C:ABBA			loc_1746:
020C:ABBA  26: 8B 44 02				mov	ax,es:[si+2]
020C:ABBE  26: 2B 45 02				sub	ax,es:[di+2]
020C:ABC2  8B C8				mov	cx,ax
020C:ABC4  26: 87 45 08				xchg	es:[di+8],ax
020C:ABC8  2B C1				sub	ax,cx
020C:ABCA  26: 3B 44 08				cmp	ax,es:[si+8]
020C:ABCE  77 03				ja	loc_1747		; Jump if above
020C:ABD0  E9 018F				jmp	loc_1766		; (AD62)
020C:ABD3			loc_1747:
020C:ABD3  26: 2B 44 02				sub	ax,es:[si+2]
020C:ABD7  E9 0188				jmp	loc_1766		; (AD62)
020C:ABDA			loc_1748:
020C:ABDA  26: 8B 45 02				mov	ax,es:[di+2]
020C:ABDE  26: 03 45 08				add	ax,es:[di+8]
020C:ABE2  26: 8B 4C 02				mov	cx,es:[si+2]
020C:ABE6  26: 03 4C 08				add	cx,es:[si+8]
020C:ABEA  3B C8				cmp	cx,ax
020C:ABEC  76 38				jbe	loc_1751		; Jump if below or =
020C:ABEE  2B C8				sub	cx,ax
020C:ABF0  26: 89 44 02				mov	es:[si+2],ax
020C:ABF4  26: 89 4C 08				mov	es:[si+8],cx
020C:ABF8  57					push	di
020C:ABF9  26: 8A 44 05				mov	al,es:[si+5]
020C:ABFD  25 000F				and	ax,0Fh
020C:AC00  D7					xlat				; al=[al+[bx]] table
020C:AC01  0A C0				or	al,al			; Zero ?
020C:AC03  75 04				jnz	loc_1749		; Jump if not zero
020C:AC05  26: 8A 44 06				mov	al,es:[si+6]
020C:AC09			loc_1749:
020C:AC09  8B FE				mov	di,si
020C:AC0B  03 F8				add	di,ax
020C:AC0D  26: 8B 05				mov	ax,es:[di]
020C:AC10  26: 3B 04				cmp	ax,es:[si]
020C:AC13  75 0D				jne	loc_1750		; Jump if not equal
020C:AC15  26: 8B 45 02				mov	ax,es:[di+2]
020C:AC19  26: 3B 44 02				cmp	ax,es:[si+2]
020C:AC1D  77 03				ja	loc_1750		; Jump if above
020C:AC1F  5F					pop	di
020C:AC20  EB 04				jmp	short loc_1751		; (AC26)
020C:AC22			loc_1750:
020C:AC22  5F					pop	di
020C:AC23  E9 00FB				jmp	loc_1762		; (AD21)
020C:AC26			loc_1751:
020C:AC26  E8 DEBA				call	sub_109			; (8AE3)
020C:AC29  E9 014E				jmp	loc_1769		; (AD7A)
020C:AC2C			loc_1752:
020C:AC2C  26: 80 4C 05 80			or	byte ptr es:[si+5],80h
020C:AC31  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020C:AC36  74 19				jz	loc_1754		; Jump if zero
020C:AC38  26: 8B 4D 06				mov	cx,es:[di+6]
020C:AC3C  81 E1 03FF				and	cx,3FFh
020C:AC40  03 C1				add	ax,cx
020C:AC42  72 05				jc	loc_1753		; Jump if carry Set
020C:AC44  3D 03F0				cmp	ax,3F0h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 358

020C:AC47  76 08				jbe	loc_1754		; Jump if below or =
020C:AC49			loc_1753:
020C:AC49  C7 06 1E91 0000			mov	data_341,0		; (020C:1E91=0)
020C:AC4F  EB D5				jmp	short loc_1751		; (AC26)
020C:AC51			loc_1754:
020C:AC51  26: 81 64 06 FC00			and	word ptr es:[si+6],0FC00h
020C:AC57  26: 09 44 06				or	es:[si+6],ax
020C:AC5B  26: 8A 45 05				mov	al,es:[di+5]
020C:AC5F  24 03				and	al,3
020C:AC61  26: 8A 64 05				mov	ah,es:[si+5]
020C:AC65  80 E4 03				and	ah,3
020C:AC68  D0 C4				rol	ah,1			; Rotate
020C:AC6A  D0 C4				rol	ah,1			; Rotate
020C:AC6C  0A C4				or	al,ah
020C:AC6E  53					push	bx
020C:AC6F  BB 3D70				mov	bx,3D70h
020C:AC72  D7					xlat				; al=[al+[bx]] table
020C:AC73  5B					pop	bx
020C:AC74  8A D0				mov	dl,al
020C:AC76  24 7F				and	al,7Fh
020C:AC78  32 E4				xor	ah,ah			; Zero register
020C:AC7A  8B C8				mov	cx,ax
020C:AC7C  E3 58				jcxz	loc_1758		; Jump if cx=0
020C:AC7E  26: 8A 44 05				mov	al,es:[si+5]
020C:AC82  25 000F				and	ax,0Fh
020C:AC85  D7					xlat				; al=[al+[bx]] table
020C:AC86  57					push	di
020C:AC87  56					push	si
020C:AC88  06					push	es
020C:AC89  1F					pop	ds
020C:AC8A  03 F0				add	si,ax
020C:AC8C  F6 C2 80				test	dl,80h
020C:AC8F  74 19				jz	loc_1755		; Jump if zero
020C:AC91  8B FE				mov	di,si
020C:AC93  2B F9				sub	di,cx
020C:AC95  26: A1 0000				mov	ax,word ptr es:[0]	; (020C:0000=1828h)
020C:AC99  26: 29 0E 0000			sub	word ptr es:[0],cx	; (020C:0000=1828h)
020C:AC9E  E8 00E7				call	sub_120			; (AD88)
020C:ACA1  8B C8				mov	cx,ax
020C:ACA3  2B CE				sub	cx,si
020C:ACA5  FC					cld				; Clear direction
020C:ACA6  F3/ A4		data_860	db	0A4h
020C:ACA8  EB 2A				jmp	short loc_1757		; (ACD4)
020C:ACAA			loc_1755:
020C:ACAA  26: A1 0000				mov	ax,word ptr es:[0]	; (020C:0000=1828h)
020C:ACAE  2B C6				sub	ax,si
020C:ACB0  26: 8B 36 0000			mov	si,word ptr es:[0]	; (020C:0000=1828h)
020C:ACB5  4E					dec	si
020C:ACB6  8B FE				mov	di,si
020C:ACB8  03 F9				add	di,cx
020C:ACBA  26: 01 0E 0000			add	word ptr es:[0],cx	; (020C:0000=1828h)
020C:ACBF  73 0A				jnc	loc_1756		; Jump if carry=0
020C:ACC1  26: 29 0E 0000			sub	word ptr es:[0],cx	; (020C:0000=1828h)
020C:ACC6  73 03				jnc	loc_1756		; Jump if carry=0
020C:ACC8  E9 C51F				jmp	loc_1069		; (71EA)
020C:ACCB			loc_1756:
020C:ACCB  E8 00BA				call	sub_120			; (AD88)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 359

020C:ACCE  8B C8				mov	cx,ax
020C:ACD0  FD					std				; Set direction flag
020C:ACD1  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:ACD3  FC					cld				; Clear direction
020C:ACD4			loc_1757:
020C:ACD4  5E					pop	si
020C:ACD5  5F					pop	di
020C:ACD6			loc_1758:
020C:ACD6  26: 80 4D 04 40			or	byte ptr es:[di+4],40h	; '@'
020C:ACDB  26: 8A 45 04				mov	al,es:[di+4]
020C:ACDF  24 3F				and	al,3Fh			; '?'
020C:ACE1  26: 80 64 04 C0			and	byte ptr es:[si+4],0C0h
020C:ACE6  26: 08 44 04				or	es:[si+4],al
020C:ACEA  26: 8A 45 05				mov	al,es:[di+5]
020C:ACEE  24 03				and	al,3
020C:ACF0  3C 03				cmp	al,3
020C:ACF2  75 02				jne	loc_1759		; Jump if not equal
020C:ACF4  FE C8				dec	al
020C:ACF6			loc_1759:
020C:ACF6  26: 80 64 05 FC			and	byte ptr es:[si+5],0FCh
020C:ACFB  26: 08 44 05				or	es:[si+5],al
020C:ACFF  3C 00				cmp	al,0
020C:AD01  74 1B				je	loc_1761		; Jump if equal
020C:AD03  57					push	di
020C:AD04  56					push	si
020C:AD05  B9 0002				mov	cx,2
020C:AD08  3C 01				cmp	al,1
020C:AD0A  74 03				je	loc_1760		; Jump if equal
020C:AD0C  B9 000F				mov	cx,0Fh
020C:AD0F			loc_1760:
020C:AD0F  83 C7 0A				add	di,0Ah
020C:AD12  83 C6 0A				add	si,0Ah
020C:AD15  87 F7				xchg	si,di
020C:AD17  06					push	es
020C:AD18  1F					pop	ds
020C:AD19  FC					cld				; Clear direction
020C:AD1A  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:AD1C  5E					pop	si
020C:AD1D  5F					pop	di
020C:AD1E			loc_1761:
020C:AD1E  E8 CCAF				call	sub_84			; (79D0)
020C:AD21			loc_1762:
020C:AD21  E8 0080				call	sub_121			; (ADA4)
020C:AD24  26			data_863	db	26h
020C:AD25  8A 44 05				mov	al,[si+5]
020C:AD28  25 000F				and	ax,0Fh
020C:AD2B  D7					xlat				; al=[al+[bx]] table
020C:AD2C  0A C0				or	al,al			; Zero ?
020C:AD2E  75 04				jnz	loc_1763		; Jump if not zero
020C:AD30  26: 8A 44 06				mov	al,es:[si+6]
020C:AD34			loc_1763:
020C:AD34  03 F0				add	si,ax
020C:AD36  26: 3B 36 0000			cmp	si,word ptr es:[0]	; (020C:0000=1828h)
020C:AD3B  73 09				jae	loc_1764		; Jump if above or =
020C:AD3D  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020C:AD41  75 03				jne	loc_1764		; Jump if not equal
020C:AD43  E9 FD59				jmp	loc_1728		; (AA9F)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 360

020C:AD46			loc_1764:
020C:AD46  26: 8A 45 05				mov	al,es:[di+5]
020C:AD4A  25 000F				and	ax,0Fh
020C:AD4D  D7					xlat				; al=[al+[bx]] table
020C:AD4E  0A C0				or	al,al			; Zero ?
020C:AD50  75 04				jnz	loc_1765		; Jump if not zero
020C:AD52  26: 8A 45 06				mov	al,es:[di+6]
020C:AD56			loc_1765:
020C:AD56  03 F8				add	di,ax
020C:AD58  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020C:0000=1828h)
020C:AD5D  73 21				jae	loc_1770		; Jump if above or =
020C:AD5F  E9 FD1F				jmp	loc_1726		; (AA81)
020C:AD62			loc_1766:
020C:AD62  E8 003F				call	sub_121			; (ADA4)
020C:AD65			loc_1767:
020C:AD65  26: 8A 45 05				mov	al,es:[di+5]
020C:AD69  25 000F				and	ax,0Fh
020C:AD6C  D7					xlat				; al=[al+[bx]] table
020C:AD6D  0A C0				or	al,al			; Zero ?
020C:AD6F  75 04				jnz	loc_1768		; Jump if not zero
020C:AD71  26: 8A 45 06				mov	al,es:[di+6]
020C:AD75			loc_1768:
020C:AD75  03 F8				add	di,ax
020C:AD77  E9 FD07				jmp	loc_1726		; (AA81)
020C:AD7A			loc_1769:
020C:AD7A  E8 0027				call	sub_121			; (ADA4)
020C:AD7D  E9 FD01				jmp	loc_1726		; (AA81)
020C:AD80			loc_1770:
020C:AD80  5D					pop	bp
020C:AD81  5F					pop	di
020C:AD82  5E					pop	si
020C:AD83  5A					pop	dx
020C:AD84  59					pop	cx
020C:AD85  5B					pop	bx
020C:AD86  58					pop	ax
020C:AD87  C3					retn

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:AD88			sub_120		proc	near
020C:AD88  50					push	ax
020C:AD89  26: A1 0008				mov	ax,word ptr es:[8]	; (020C:0008=6702h)
020C:AD8D  26: A3 0002				mov	word ptr es:[2],ax	; (020C:0002=10h)
020C:AD91  26: A1 000A				mov	ax,word ptr es:[0Ah]	; (020C:000A=272Dh)
020C:AD95  26: A3 0004				mov	word ptr es:[4],ax	; (020C:0004=808h)
020C:AD99  26: C7 06 0006 0008			mov	word ptr es:[6],8	; (020C:0006=3)
020C:ADA0  58			data_864	db	58h			; Data table (indexed access)
020C:ADA1  C3					retn
				sub_120		endp

020C:ADA2  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 361


020C:ADA4			sub_121		proc	near
020C:ADA4  26: 8A 45 04				mov	al,es:[di+4]
020C:ADA8  24 3F				and	al,3Fh			; '?'
020C:ADAA  8A E0				mov	ah,al
020C:ADAC  26: 8B 4D 08				mov	cx,es:[di+8]
020C:ADB0  3C 21				cmp	al,21h			; '!'
020C:ADB2  75 09				jne	loc_1771		; Jump if not equal
020C:ADB4  83 F9 06				cmp	cx,6
020C:ADB7  77 32				ja	loc_1775		; Jump if above
020C:ADB9  B4 01				mov	ah,1
020C:ADBB  EB 25				jmp	short loc_1774		; (ADE2)
020C:ADBD			loc_1771:
020C:ADBD  3C 22				cmp	al,22h			; '"'
020C:ADBF  75 09				jne	loc_1772		; Jump if not equal
020C:ADC1  83 F9 06				cmp	cx,6
020C:ADC4  77 25				ja	loc_1775		; Jump if above
020C:ADC6  B4 02				mov	ah,2
020C:ADC8  EB 18				jmp	short loc_1774		; (ADE2)
020C:ADCA			loc_1772:
020C:ADCA  3C 04				cmp	al,4
020C:ADCC  75 09				jne	loc_1773		; Jump if not equal
020C:ADCE  83 F9 04				cmp	cx,4
020C:ADD1  73 18				jae	loc_1775		; Jump if above or =
020C:ADD3  B4 02				mov	ah,2
020C:ADD5  B0 02				mov	al,2
020C:ADD7			loc_1773:
020C:ADD7  3C 02				cmp	al,2
020C:ADD9  75 07				jne	loc_1774		; Jump if not equal
020C:ADDB  83 F9 02				cmp	cx,2
020C:ADDE  73 02				jae	loc_1774		; Jump if above or =
020C:ADE0  B4 01				mov	ah,1
020C:ADE2			loc_1774:
020C:ADE2  26: 80 65 04 C0			and	byte ptr es:[di+4],0C0h
020C:ADE7  26: 08 65 04				or	es:[di+4],ah
020C:ADEB			loc_1775:
020C:ADEB  C3					retn
				sub_121		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:ADEC			sub_122		proc	near
020C:ADEC  53					push	bx
020C:ADED  57					push	di
020C:ADEE  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:ADF3  06					push	es
020C:ADF4  26: 8B 05				mov	ax,es:[di]
020C:ADF7  26: 8B 5D 02				mov	bx,es:[di+2]
020C:ADFB  E8 CBE4				call	sub_87			; (79E2)
020C:ADFE  BF 0000				mov	di,0
020C:AE01			loc_1776:
020C:AE01  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020C:AE05  75 07				jne	loc_1777		; Jump if not equal
020C:AE07  26: 83 7D 02 FF			cmp	word ptr es:[di+2],0FFFFh
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 362

020C:AE0C  74 1A				je	loc_1780		; Jump if equal
020C:AE0E			loc_1777:
020C:AE0E  26: 3B 05				cmp	ax,es:[di]
020C:AE11  75 0C				jne	loc_1778		; Jump if not equal
020C:AE13  26: 3B 5D 02				cmp	bx,es:[di+2]
020C:AE17  72 06				jb	loc_1778		; Jump if below
020C:AE19  26: 3B 5D 04				cmp	bx,es:[di+4]
020C:AE1D  76 05				jbe	loc_1779		; Jump if below or =
020C:AE1F			loc_1778:
020C:AE1F  83 C7 19				add	di,19h
020C:AE22  EB DD				jmp	short loc_1776		; (AE01)
020C:AE24			loc_1779:
020C:AE24  F9					stc				; Set carry flag
020C:AE25  9F					lahf				; Load ah from flags
020C:AE26  EB 02				jmp	short loc_1781		; (AE2A)
020C:AE28			loc_1780:
020C:AE28  F8					clc				; Clear carry flag
020C:AE29  9F					lahf				; Load ah from flags
020C:AE2A			loc_1781:
020C:AE2A  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:AE2F  9C					pushf				; Push flags
020C:AE30  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:AE35  5A					pop	dx
020C:AE36  8E C2				mov	es,dx
020C:AE38  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:AE3D  5A					pop	dx
020C:AE3E  75 0A				jnz	loc_1782		; Jump if not zero
020C:AE40  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:AE45  74 03				je	loc_1782		; Jump if equal
020C:AE47  E8 D066				call	sub_97			; (7EB0)
020C:AE4A			loc_1782:
020C:AE4A  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:AE4F  9D					popf				; Pop flags
020C:AE50  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:AE55  5F					pop	di
020C:AE56  5B					pop	bx
020C:AE57  9E					sahf				; Store ah into flags
020C:AE58  C3					retn
				sub_122		endp

020C:AE59  87 DB				xchg	bx,bx
020C:AE5B  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:AE5C			sub_123		proc	near
020C:AE5C  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:AE61  06					push	es
020C:AE62  C7 06 195C 0000			mov	data_222,0		; (020C:195C=6B4h)
020C:AE68  C7 06 195E 0000			mov	data_223,0		; (020C:195E=20Ch)
020C:AE6E  80 3E 1877 00			cmp	byte ptr ds:[1877h],0	; (020C:1877=2)
020C:AE73  74 3A				je	loc_1784		; Jump if equal
020C:AE75  B4 19				mov	ah,19h
020C:AE77  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 363

020C:AE79  8A D0				mov	dl,al
020C:AE7B  04 61				add	al,61h			; 'a'
020C:AE7D  A2 18D7				mov	byte ptr ds:[18D7h],al	; (020C:18D7=0)
020C:AE80  C7 06 18D8 5C3A			mov	data_218,5C3Ah		; (020C:18D8=10EBh)
020C:AE86  B4 47				mov	ah,47h			; 'G'
020C:AE88  FE C2				inc	dl
020C:AE8A  BE 18DA				mov	si,18DAh
020C:AE8D  CD 21				int	21h			; DOS Services  ah=function 47h
										;  get present dir,drive dl,1=a:
										;   ds:si=ASCIIZ directory name
020C:AE8F  80 3E 1878 3A			cmp	data_216,3Ah		; (020C:1878=0EBh) ':'
020C:AE94  75 0E				jne	loc_1783		; Jump if not equal
020C:AE96  8A 16 1877				mov	dl,byte ptr ds:[1877h]	; (020C:1877=2)
020C:AE9A  80 CA 60				or	dl,60h			; '`'
020C:AE9D  80 EA 61				sub	dl,61h			; 'a'
020C:AEA0  B4 0E				mov	ah,0Eh
020C:AEA2  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020C:AEA4			loc_1783:
020C:AEA4  B4 3B				mov	ah,3Bh			; ';'
020C:AEA6  BA 1877				mov	dx,1877h
020C:AEA9  CD 21				int	21h			; DOS Services  ah=function 3Bh
										;  set current dir, path @ ds:dx
020C:AEAB  0273			data_867	dw	273h			; Data table (indexed access)
020C:AEAD  EB			data_868	db	0EBh
020C:AEAE  21 B4 B029				and	data_873[si],si		; (020C:B029=0F9h)
020C:AEB2  01 BE 1869				add	[bp+1869h],di
020C:AEB6  E8 CB35				call	sub_90			; (79EE)
020C:AEB9  BF 1937				mov	di,1937h
020C:AEBC  CD 21				int	21h			; DOS Services  ah=function 3Bh
										;  set current dir, path @ ds:dx
020C:AEBE  3C 00				cmp	al,0
020C:AEC0  74 02				je	loc_1785		; Jump if equal
020C:AEC2  EB 0C				jmp	short loc_1786		; (AED0)
020C:AEC4			loc_1785:
020C:AEC4  B4 23				mov	ah,23h			; '#'
020C:AEC6  8B D7				mov	dx,di
020C:AEC8  C7 06 1945 0001			mov	data_219,1		; (020C:1945=4B02h)
020C:AECE  CD 21				int	21h			; DOS Services  ah=function 23h
										;  get file size, FCB @ ds:dx
020C:AED0			loc_1786:
020C:AED0  80 3E 1877 00			cmp	byte ptr ds:[1877h],0	; (020C:1877=2)
020C:AED5  74 07				je	loc_1787		; Jump if equal
020C:AED7  B4 3B				mov	ah,3Bh			; ';'
020C:AED9  BA 18D7				mov	dx,18D7h
020C:AEDC  CD 21				int	21h			; DOS Services  ah=function 3Bh
										;  set current dir, path @ ds:dx
020C:AEDE			loc_1787:
020C:AEDE  A1 195A				mov	ax,data_221		; (020C:195A=10EBh)
020C:AEE1  A3 195E				mov	data_223,ax		; (020C:195E=20Ch)
020C:AEE4  A1 1958				mov	ax,data_220		; (020C:1958=907Dh)
020C:AEE7  A3 195C				mov	data_222,ax		; (020C:195C=6B4h)
020C:AEEA  B4 3D				mov	ah,3Dh			; '='
020C:AEEC  B0 00				mov	al,0
020C:AEEE  BA 1E9A				mov	dx,1E9Ah
020C:AEF1  CD 21				int	21h			; DOS Services  ah=function 3Dh
										;  open file, al=mode,name@ds:dx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 364

020C:AEF3  73 05				jnc	loc_1788		; Jump if carry=0
020C:AEF5  B3 01				mov	bl,1
020C:AEF7  E9 0277				jmp	loc_1818		; (B171)
020C:AEFA			loc_1788:
020C:AEFA  A3 300B				mov	data_536,ax		; (020C:300B=0)
020C:AEFD  80 3E 183B 02			cmp	data_208,2		; (020C:183B=0)
020C:AF02  74 31				je	loc_1791		; Jump if equal
020C:AF04  8B 0E 48A3				mov	cx,data_746		; (020C:48A3=4072h)
020C:AF08  BA 1212				mov	dx,1212h
020C:AF0B  8B 1E 300B				mov	bx,data_536		; (020C:300B=0)
020C:AF0F  E8 CAC1				call	sub_85			; (79D3)
020C:AF12  B4 3F				mov	ah,3Fh
020C:AF14  CD 21				int	21h			; DOS Services  ah=function 3Fh
										;  read file, bx=file handle
										;   cx=bytes to ds:dx buffer
020C:AF16  E8 CAB7				call	sub_84			; (79D0)
020C:AF19  73 03				jnc	loc_1789		; Jump if carry=0
020C:AF1B  E9 0251				jmp	loc_1817		; (B16F)
020C:AF1E			loc_1789:
020C:AF1E  E8 CAD0				call	sub_91			; (79F1)
020C:AF21  BE 1212				mov	si,1212h
020C:AF24  26: 81 3C 5A4D			cmp	word ptr es:[si],5A4Dh
020C:AF29  75 07				jne	loc_1790		; Jump if not equal
020C:AF2B  80 3E 183B 01			cmp	data_208,1		; (020C:183B=0)
020C:AF30  75 13				jne	loc_1792		; Jump if not equal
020C:AF32			loc_1790:
020C:AF32  E9 023C				jmp	loc_1818		; (B171)
020C:AF35			loc_1791:
020C:AF35  E8 CAB9				call	sub_91			; (79F1)
020C:AF38  BE 1212				mov	si,1212h
020C:AF3B  8B 0E 1864				mov	cx,data_213		; (020C:1864=0F000h)
020C:AF3F  8B 16 1866				mov	dx,data_214		; (020C:1866=0CEE8h)
020C:AF43  EB 28				jmp	short loc_1794		; (AF6D)
020C:AF45			loc_1792:
020C:AF45  26: 83 7C 18 3E			cmp	word ptr es:[si+18h],3Eh
020C:AF4A  74 1E				je	loc_1793		; Jump if equal
020C:AF4C  26: 8B 4C 3E				mov	cx,es:[si+3Eh]
020C:AF50  89 0E 1864				mov	data_213,cx		; (020C:1864=0F000h)
020C:AF54  3B 0E 195E				cmp	cx,data_223		; (020C:195E=20Ch)
020C:AF58  77 10				ja	loc_1793		; Jump if above
020C:AF5A  26: 8B 54 3C				mov	dx,es:[si+3Ch]
020C:AF5E  89 16 1866				mov	data_214,dx		; (020C:1866=0CEE8h)
020C:AF62  0B D2				or	dx,dx			; Zero ?
020C:AF64  75 07				jnz	loc_1794		; Jump if not zero
020C:AF66  0B C9				or	cx,cx			; Zero ?
020C:AF68  75 03				jnz	loc_1794		; Jump if not zero
020C:AF6A			loc_1793:
020C:AF6A  E9 0133				jmp	loc_1806		; (B0A0)
020C:AF6D			loc_1794:
020C:AF6D  B8 4200				mov	ax,4200h
020C:AF70  8B 1E 300B				mov	bx,data_536		; (020C:300B=0)
020C:AF74  CD 21				int	21h			; DOS Services  ah=function 42h
										;  move file ptr, bx=file handle
										;   al=method, cx,dx=offset
020C:AF76  8B 0E 48A3				mov	cx,data_746		; (020C:48A3=4072h)
020C:AF7A  BA 1212				mov	dx,1212h
020C:AF7D  8B 1E 300B				mov	bx,data_536		; (020C:300B=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 365

020C:AF81  E8 CA4F				call	sub_85			; (79D3)
020C:AF84  B4 3F				mov	ah,3Fh
020C:AF86  CD 21				int	21h			; DOS Services  ah=function 3Fh
										;  read file, bx=file handle
										;   cx=bytes to ds:dx buffer
020C:AF88  E8 CA45				call	sub_84			; (79D0)
020C:AF8B  26: 8B 04				mov	ax,es:[si]
020C:AF8E  3D 454C				cmp	ax,454Ch
020C:AF91  75 09				jne	loc_1795		; Jump if not equal
020C:AF93  80 3E 183B 02			cmp	data_208,2		; (020C:183B=0)
020C:AF98  74 4B				je	loc_1803		; Jump if equal
020C:AF9A  EB 29				jmp	short loc_1799		; (AFC5)
020C:AF9C			loc_1795:
020C:AF9C  3D 454E				cmp	ax,454Eh
020C:AF9F  74 0F				je	loc_1796		; Jump if equal
020C:AFA1  3D 4550				cmp	ax,4550h
020C:AFA4  74 0A				je	loc_1796		; Jump if equal
020C:AFA6  3D 3457				cmp	ax,3457h
020C:AFA9  74 05				je	loc_1796		; Jump if equal
020C:AFAB  3D 3357				cmp	ax,3357h
020C:AFAE  75 07				jne	loc_1797		; Jump if not equal
020C:AFB0			loc_1796:
020C:AFB0  A3 1371				mov	data_165,ax		; (020C:1371=0)
020C:AFB3  B4 41				mov	ah,41h			; 'A'
020C:AFB5  EB 10				jmp	short loc_1800		; (AFC7)
020C:AFB7			loc_1797:
020C:AFB7  3D 3350				cmp	ax,3350h
020C:AFBA  74 05				je	loc_1798		; Jump if equal
020C:AFBC  3D 584C				cmp	ax,584Ch
020C:AFBF  75 14				jne	loc_1801		; Jump if not equal
020C:AFC1			loc_1798:
020C:AFC1  B4 20				mov	ah,20h			; ' '
020C:AFC3  EB 02				jmp	short loc_1800		; (AFC7)
020C:AFC5			loc_1799:
020C:AFC5  B4 3E				mov	ah,3Eh			; '>'
020C:AFC7			loc_1800:
020C:AFC7  B0 04				mov	al,4
020C:AFC9  9A 1491:30E8		;*		call	far ptr sub_182		;*(1491:30E8)
020C:AFC9  9A					db	9Ah
020C:AFCA  30E8 1491				dw	30E8h, 1491h
020C:AFCE  26: 81 3C 454C			cmp	word ptr es:[si],454Ch
020C:AFD3  74 03				je	loc_1802		; Jump if equal
020C:AFD5			loc_1801:
020C:AFD5  E9 00A6				jmp	loc_1805		; (B07E)
020C:AFD8			loc_1802:
020C:AFD8  2C 31				sub	al,31h			; '1'
020C:AFDA  3C 01				cmp	al,1
020C:AFDC  77 E7				ja	loc_1799		; Jump if above
020C:AFDE  3C 00				cmp	al,0
020C:AFE0  74 03				je	loc_1803		; Jump if equal
020C:AFE2  E9 0099				jmp	loc_1805		; (B07E)
020C:AFE5			loc_1803:
020C:AFE5  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:AFEA  06					push	es
020C:AFEB  E8 C9FD				call	sub_89			; (79EB)
020C:AFEE  26: C6 06 0001 E8			mov	byte ptr es:data_1+1,0E8h	; (020C:0001=18h)
020C:AFF4  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 366

020C:AFF9  9C					pushf				; Push flags
020C:AFFA  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:AFFF  5A					pop	dx
020C:B000  8E C2				mov	es,dx
020C:B002  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:B007  5A					pop	dx
020C:B008  75 0A				jnz	loc_1804		; Jump if not zero
020C:B00A  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:B00F  74 03				je	loc_1804		; Jump if equal
020C:B011  E8 CE9C				call	sub_97			; (7EB0)
020C:B014			loc_1804:
020C:B014  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:B019  9D					popf				; Pop flags
020C:B01A  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:B01F  C6 06 1F6D 08			mov	data_355,8		; (020C:1F6D=0)
020C:B024  26: 8B 4C 44				mov	cx,es:[si+44h]
020C:B028  83 F9 00				cmp	cx,0
020C:B02B  74 51				je	loc_1805		; Jump if equal
020C:B02D  26: 8B 44 14				mov	ax,es:[si+14h]
020C:B031  3D 0000				cmp	ax,0
020C:B034  74 48				je	loc_1805		; Jump if equal
020C:B036  48					dec	ax
020C:B037  26: F7 64 28				mul	word ptr es:[si+28h]	; dx:ax = data * ax
020C:B03B  92					xchg	dx,ax
020C:B03C  26: 03 54 2C				add	dx,es:[si+2Ch]
020C:B040  26: 13 44 2E				adc	ax,es:[si+2Eh]
020C:B044  26: 03 94 008C			add	dx,word ptr es:[8Ch][si]	; (020C:008C=8250h)
020C:B049  26: 13 84 008E			adc	ax,word ptr es:[8Eh][si]	; (020C:008E=8155h)
020C:B04E  A3 195E				mov	data_223,ax		; (020C:195E=20Ch)
020C:B051  A3 1840				mov	data_211,ax		; (020C:1840=9153h)
020C:B054  89 16 195C				mov	data_222,dx		; (020C:195C=6B4h)
020C:B058  89 16 1842				mov	data_212,dx		; (020C:1842=7E03h)
020C:B05C  26: 8B 84 0080			mov	ax,word ptr es:[80h][si]	; (020C:0080=1850h)
020C:B061  A3 183E				mov	data_210,ax		; (020C:183E=0)
020C:B064  26: 8B 84 0082			mov	ax,word ptr es:[82h][si]	; (020C:0082=10h)
020C:B069  A3 183C				mov	data_209,ax		; (020C:183C=1B5h)
020C:B06C  C6 06 1F6B 03			mov	data_353,3		; (020C:1F6B=0)
020C:B071  9A 1491:31D8		;*		call	far ptr sub_186		;*(1491:31D8)
020C:B071  9A					db	9Ah
020C:B072  31D8 1491				dw	31D8h, 1491h
020C:B076  C6 06 183B 02			mov	data_208,2		; (020C:183B=0)
020C:B07B  E9 00F3				jmp	loc_1818		; (B171)
020C:B07E			loc_1805:
020C:B07E  B8 4200				mov	ax,4200h
020C:B081  8B 1E 300B				mov	bx,data_536		; (020C:300B=0)
020C:B085  33 C9				xor	cx,cx			; Zero register
020C:B087  33 D2				xor	dx,dx			; Zero register
020C:B089  CD 21				int	21h			; DOS Services  ah=function 42h
										;  move file ptr, bx=file handle
										;   al=method, cx,dx=offset
020C:B08B  8B 0E 48A3				mov	cx,data_746		; (020C:48A3=4072h)
020C:B08F  BA 1212				mov	dx,1212h
020C:B092  8B 1E 300B				mov	bx,data_536		; (020C:300B=0)
020C:B096  E8 C93A				call	sub_85			; (79D3)
020C:B099  B4 3F				mov	ah,3Fh
020C:B09B  CD 21				int	21h			; DOS Services  ah=function 3Fh
										;  read file, bx=file handle
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 367

										;   cx=bytes to ds:dx buffer
020C:B09D  E8 C930				call	sub_84			; (79D0)
020C:B0A0			loc_1806:
020C:B0A0  26: 8B 44 04				mov	ax,es:[si+4]
020C:B0A4  33 D2				xor	dx,dx			; Zero register
020C:B0A6  B9 0009				mov	cx,9

020C:B0A9			locloop_1807:
020C:B0A9  D1 E0				shl	ax,1			; Shift w/zeros fill
020C:B0AB  D1 D2				rcl	dx,1			; Rotate thru carry
020C:B0AD  E2 FA				loop	locloop_1807		; Loop if cx > 0

020C:B0AF  26: 8B 4C 02				mov	cx,es:[si+2]
020C:B0B3  83 F9 00				cmp	cx,0
020C:B0B6  74 0C				je	loc_1808		; Jump if equal
020C:B0B8  B9 0200				mov	cx,200h
020C:B0BB  26: 2B 4C 02				sub	cx,es:[si+2]
020C:B0BF  2B C1				sub	ax,cx
020C:B0C1  83 DA 00				sbb	dx,0
020C:B0C4			loc_1808:
020C:B0C4  50					push	ax
020C:B0C5  52					push	dx
020C:B0C6  26: 8B 44 08				mov	ax,es:[si+8]
020C:B0CA  B9 0004				mov	cx,4
020C:B0CD  33 D2				xor	dx,dx			; Zero register

020C:B0CF			locloop_1809:
020C:B0CF  D1 E0				shl	ax,1			; Shift w/zeros fill
020C:B0D1  D1 D2				rcl	dx,1			; Rotate thru carry
020C:B0D3  E2 FA				loop	locloop_1809		; Loop if cx > 0

020C:B0D5  29 06 195C				sub	data_222,ax		; (020C:195C=6B4h)
020C:B0D9  19 16 195E				sbb	data_223,dx		; (020C:195E=20Ch)
020C:B0DD  5A					pop	dx
020C:B0DE  58					pop	ax
020C:B0DF  F6 06 46DD 0F			test	data_721,0Fh		; (020C:46DD=33h)
020C:B0E4  75 1E				jnz	loc_1811		; Jump if not zero
020C:B0E6  3B 16 195E				cmp	dx,data_223		; (020C:195E=20Ch)
020C:B0EA  74 0B				je	loc_1810		; Jump if equal
020C:B0EC  77 16				ja	loc_1811		; Jump if above
020C:B0EE  A3 195C				mov	data_222,ax		; (020C:195C=6B4h)
020C:B0F1  89 16 195E				mov	data_223,dx		; (020C:195E=20Ch)
020C:B0F5  EB 0D				jmp	short loc_1811		; (B104)
020C:B0F7			loc_1810:
020C:B0F7  3B 06 195C				cmp	ax,data_222		; (020C:195C=6B4h)
020C:B0FB  73 07				jae	loc_1811		; Jump if above or =
020C:B0FD  A3 195C				mov	data_222,ax		; (020C:195C=6B4h)
020C:B100  89 16 195E				mov	data_223,dx		; (020C:195E=20Ch)
020C:B104			loc_1811:
020C:B104  26: 8B 44 0E				mov	ax,es:[si+0Eh]
020C:B108  26: 8B 5C 10				mov	bx,es:[si+10h]
020C:B10C  3D FFF0				cmp	ax,0FFF0h
020C:B10F  75 04				jne	loc_1812		; Jump if not equal
020C:B111  33 C0				xor	ax,ax			; Zero register
020C:B113  33 DB				xor	bx,bx			; Zero register
020C:B115			loc_1812:
020C:B115  9A 1491:B094		;*		call	far ptr sub_266		;*(1491:B094)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 368

020C:B115  9A					db	9Ah
020C:B116  B094 1491				dw	0B094h, 1491h
020C:B11A  3B 06 195E				cmp	ax,data_223		; (020C:195E=20Ch)
020C:B11E  72 3E				jb	loc_1816		; Jump if below
020C:B120  77 06				ja	loc_1813		; Jump if above
020C:B122  3B 1E 195C				cmp	bx,data_222		; (020C:195C=6B4h)
020C:B126  76 36				jbe	loc_1816		; Jump if below or =
020C:B128			loc_1813:
020C:B128  F6 06 46DD 0F			test	data_721,0Fh		; (020C:46DD=33h)
020C:B12D  75 28				jnz	loc_1815		; Jump if not zero
020C:B12F  8B 0E 195E				mov	cx,data_223		; (020C:195E=20Ch)
020C:B133  41					inc	cx
020C:B134  3B C1				cmp	ax,cx
020C:B136  72 1F				jb	loc_1815		; Jump if below
020C:B138  77 06				ja	loc_1814		; Jump if above
020C:B13A  3B 1E 195C				cmp	bx,data_222		; (020C:195C=6B4h)
020C:B13E  76 17				jbe	loc_1815		; Jump if below or =
020C:B140			loc_1814:
020C:B140  B4 40				mov	ah,40h			; '@'
020C:B142  B0 04				mov	al,4
020C:B144  9A 1491:30E8		;*		call	far ptr sub_182		;*(1491:30E8)
020C:B144  9A					db	9Ah
020C:B145  30E8 1491				dw	30E8h, 1491h
020C:B149  26: C7 44 0E 0000			mov	word ptr es:[si+0Eh],0
020C:B14F  26: C7 44 10 0000			mov	word ptr es:[si+10h],0
020C:B155  EB 07				jmp	short loc_1816		; (B15E)
020C:B157			loc_1815:
020C:B157  A3 195E				mov	data_223,ax		; (020C:195E=20Ch)
020C:B15A  89 1E 195C				mov	data_222,bx		; (020C:195C=6B4h)
020C:B15E			loc_1816:
020C:B15E  C6 06 1F6B 03			mov	data_353,3		; (020C:1F6B=0)
020C:B163  C6 06 1F6D 03			mov	data_355,3		; (020C:1F6D=0)
020C:B168  9A 1491:31D8		;*		call	far ptr sub_186		;*(1491:31D8)
020C:B168  9A					db	9Ah
020C:B169  31D8 1491				dw	31D8h, 1491h
020C:B16D  EB 02				jmp	short loc_1818		; (B171)
020C:B16F			loc_1817:
020C:B16F  B3 0E				mov	bl,0Eh
020C:B171			loc_1818:
020C:B171  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:B176  9C					pushf				; Push flags
020C:B177  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:B17C  5A					pop	dx
020C:B17D  8E C2				mov	es,dx
020C:B17F  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:B184  5A					pop	dx
020C:B185  75 0A				jnz	loc_1819		; Jump if not zero
020C:B187  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:B18C  74 03				je	loc_1819		; Jump if equal
020C:B18E  E8 CD1F				call	sub_97			; (7EB0)
020C:B191			loc_1819:
020C:B191  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:B196  9D					popf				; Pop flags
020C:B197  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:B19C  C3					retn
				sub_123		endp

           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 369

020C:B19D  87 DB				xchg	bx,bx
020C:B19F  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:B1A0			sub_124		proc	near
020C:B1A0  50					push	ax
020C:B1A1  53					push	bx
020C:B1A2  57					push	di
020C:B1A3  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:B1A8  06					push	es
020C:B1A9  1E					push	ds
020C:B1AA  BF 0008				mov	di,8
020C:B1AD  8B 1E 2154				mov	bx,data_379		; (020C:2154=5CE9h)
020C:B1B1  E8 CE28				call	sub_100			; (7FDC)
020C:B1B4  E8 C819				call	sub_84			; (79D0)
020C:B1B7			loc_1820:
020C:B1B7  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020C:0000=1828h)
020C:B1BC  72 02				jb	loc_1821		; Jump if below
020C:B1BE  EB 1E				jmp	short loc_1823		; (B1DE)
020C:B1C0			loc_1821:
020C:B1C0  26: 80 65 04 FE			and	byte ptr es:[di+4],0FEh
020C:B1C5  EB 00				jmp	short $+2		; delay for I/O
020C:B1C7  BB 2F78				mov	bx,2F78h
020C:B1CA  26: 8A 45 05				mov	al,es:[di+5]
020C:B1CE  25 000F				and	ax,0Fh
020C:B1D1  D7					xlat				; al=[al+[bx]] table
020C:B1D2  0A C0				or	al,al			; Zero ?
020C:B1D4  75 04				jnz	loc_1822		; Jump if not zero
020C:B1D6  26: 8A 45 06				mov	al,es:[di+6]
020C:B1DA			loc_1822:
020C:B1DA  03 F8				add	di,ax
020C:B1DC  EB D9				jmp	short loc_1820		; (B1B7)
020C:B1DE			loc_1823:
020C:B1DE  1F					pop	ds
020C:B1DF  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:B1E4  9C					pushf				; Push flags
020C:B1E5  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:B1EA  5A					pop	dx
020C:B1EB  8E C2				mov	es,dx
020C:B1ED  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:B1F2  5A					pop	dx
020C:B1F3  75 0A				jnz	loc_1824		; Jump if not zero
020C:B1F5  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:B1FA  74 03				je	loc_1824		; Jump if equal
020C:B1FC  E8 CCB1				call	sub_97			; (7EB0)
020C:B1FF			loc_1824:
020C:B1FF  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:B204  9D					popf				; Pop flags
020C:B205  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:B20A  5F					pop	di
020C:B20B  5B					pop	bx
020C:B20C  58					pop	ax
020C:B20D  C3					retn
				sub_124		endp
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 370


020C:B20E  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:B210			sub_125		proc	near
020C:B210  26: 8A 45 13				mov	al,es:[di+13h]
020C:B214  A8 7F				test	al,7Fh
020C:B216  74 17				jz	loc_1826		; Jump if zero
020C:B218  83 3E 2156 FF			cmp	data_380,0FFFFh		; (020C:2156=0FFFFh)
020C:B21D  75 10				jne	loc_1826		; Jump if not equal
020C:B21F  83 3E 230B FF			cmp	data_457,0FFFFh		; (020C:230B=0CE7h)
020C:B224  75 06				jne	loc_1825		; Jump if not equal
020C:B226  A1 215A				mov	ax,data_382		; (020C:215A=0FFFFh)
020C:B229  A3 230B				mov	data_457,ax		; (020C:230B=0CE7h)
020C:B22C			loc_1825:
020C:B22C  E9 00B2				jmp	loc_1838		; (B2E1)
020C:B22F			loc_1826:
020C:B22F  F7 06 1D48 01E0			test	data_312,1E0h		; (020C:1D48=0)
020C:B235  75 02				jnz	loc_1827		; Jump if not zero
020C:B237  0C 01				or	al,1
020C:B239			loc_1827:
020C:B239  F6 D0				not	al
020C:B23B  22 06 230A				and	al,byte ptr ds:[230Ah]	; (020C:230A=0)
020C:B23F  75 03				jnz	loc_1828		; Jump if not zero
020C:B241  E9 00EA				jmp	loc_1840		; (B32E)
020C:B244			loc_1828:
020C:B244  3C 40				cmp	al,40h			; '@'
020C:B246  75 07				jne	loc_1829		; Jump if not equal
020C:B248  F6 06 1D5A 07			test	data_314,7		; (020C:1D5A=0)
020C:B24D  75 03				jnz	loc_1830		; Jump if not zero
020C:B24F			loc_1829:
020C:B24F  E9 0087				jmp	loc_1837		; (B2D9)
020C:B252			loc_1830:
020C:B252  80 26 230A BF			and	byte ptr ds:[230Ah],0BFh	; (020C:230A=0)
020C:B257  F6 06 230A 7F			test	byte ptr ds:[230Ah],7Fh	; (020C:230A=0)
020C:B25C  74 06				jz	loc_1831		; Jump if zero
020C:B25E  FF 06 230B				inc	data_457		; (020C:230B=0CE7h)
020C:B262  EB 06				jmp	short loc_1832		; (B26A)
020C:B264			loc_1831:
020C:B264  C7 06 230B FFFF			mov	data_457,0FFFFh		; (020C:230B=0CE7h)
020C:B26A			loc_1832:
020C:B26A  80 3E 1790 01			cmp	data_195,1		; (020C:1790=0)
020C:B26F  74 03				je	loc_1833		; Jump if equal
020C:B271  E9 00BA				jmp	loc_1840		; (B32E)
020C:B274			loc_1833:
020C:B274  52					push	dx
020C:B275  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:B27A  06					push	es
020C:B27B  BA 1A6C				mov	dx,1A6Ch
020C:B27E  80 3E 1547 02			cmp	data_169,2		; (020C:1547=0)
020C:B283  75 21				jne	loc_1834		; Jump if not equal
020C:B285  80 3E 3D25 FE			cmp	data_601,0FEh		; (020C:3D25=52h)
020C:B28A  74 1A				je	loc_1834		; Jump if equal
020C:B28C  C7 06 1A8C 2A3B			mov	data_236,2A3Bh		; (020C:1A8C=0C626h)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 371

020C:B292  9A 1491:282C		;*		call	far ptr sub_176		;*(1491:282C)
020C:B292  9A					db	9Ah
020C:B293  282C 1491				dw	282Ch, 1491h
020C:B297  C7 06 1A8C 2020			mov	data_236,2020h		; (020C:1A8C=0C626h)
020C:B29D  B0 57				mov	al,57h			; 'W'
020C:B29F  9A 1491:2770		;*		call	far ptr sub_175		;*(1491:2770)
020C:B29F  9A					db	9Ah
020C:B2A0  2770 1491				dw	2770h, 1491h
020C:B2A4  EB 05				jmp	short loc_1835		; (B2AB)
020C:B2A6			loc_1834:
020C:B2A6  9A 1491:282C		;*		call	far ptr sub_176		;*(1491:282C)
020C:B2A6  9A					db	9Ah
020C:B2A7  282C 1491				dw	282Ch, 1491h
020C:B2AB			loc_1835:
020C:B2AB  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:B2B0  9C					pushf				; Push flags
020C:B2B1  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:B2B6  5A					pop	dx
020C:B2B7  8E C2				mov	es,dx
020C:B2B9  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:B2BE  5A					pop	dx
020C:B2BF  75 0A				jnz	loc_1836		; Jump if not zero
020C:B2C1  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:B2C6  74 03				je	loc_1836		; Jump if equal
020C:B2C8  E8 CBE5				call	sub_97			; (7EB0)
020C:B2CB			loc_1836:
020C:B2CB  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:B2D0  9D					popf				; Pop flags
020C:B2D1  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:B2D6  5A					pop	dx
020C:B2D7  EB 55				jmp	short loc_1840		; (B32E)
020C:B2D9			loc_1837:
020C:B2D9  F7 06 3D1D 0010			test	data_597,10h		; (020C:3D1D=0D4E8h)
020C:B2DF  75 4D				jnz	loc_1840		; Jump if not zero
020C:B2E1			loc_1838:
020C:B2E1  A1 230B				mov	ax,data_457		; (020C:230B=0CE7h)
020C:B2E4  A3 215A				mov	data_382,ax		; (020C:215A=0FFFFh)
020C:B2E7  C6 06 230A 00			mov	byte ptr ds:[230Ah],0	; (020C:230A=0)
020C:B2EC  C6 06 3D25 FE			mov	data_601,0FEh		; (020C:3D25=52h)
020C:B2F1  C6 06 2342 00			mov	data_475,0		; (020C:2342=0)
020C:B2F6  C7 06 230B FFFF			mov	data_457,0FFFFh		; (020C:230B=0CE7h)
020C:B2FC  C7 06 1CBF 0000			mov	data_240,0		; (020C:1CBF=0)
020C:B302  80 0E 216F 05			or	data_393,5		; (020C:216F=0FFh)
020C:B307  C6 06 4568 05			mov	data_709,5		; (020C:4568=0E0h)
020C:B30C  C6 06 1D5D 00			mov	data_317,0		; (020C:1D5D=0)
020C:B311  C6 06 1D5E 00			mov	data_318,0		; (020C:1D5E=0)
020C:B316  E8 B057				call	sub_65			; (6370)
020C:B319  80 3E 1790 01			cmp	byte ptr ds:[1790h],1	; (6F63:1790=0Ch)
020C:B31E  75 0B				jne	loc_1839		; Jump if not equal
020C:B320  A1 2156				mov	ax,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:B323  BD 19B8				mov	bp,19B8h
020C:B326  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:B326  9A					db	9Ah
020C:B327  0294 1491				dw	294h, 1491h
020C:B32B			loc_1839:
020C:B32B  F9					stc				; Set carry flag
020C:B32C  EB 01				jmp	short loc_1841		; (B32F)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 372

020C:B32E			loc_1840:
020C:B32E  F8					clc				; Clear carry flag
020C:B32F			loc_1841:
020C:B32F  C3					retn
				sub_125		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:B330			sub_126		proc	near
020C:B330  C7 06 230B FFFF			mov	data_457,0FFFFh		; (020C:230B=0CE7h)
020C:B336  C6 06 230A 00			mov	byte ptr ds:[230Ah],0	; (020C:230A=0)
020C:B33B  C6 06 2342 00			mov	data_475,0		; (020C:2342=0)
020C:B340  2E: C6 06 E9D3 90			mov	byte ptr cs:data_910,90h	; (020C:E9D3=53h)
020C:B346  2E: C6 06 E9D4 90			mov	byte ptr cs:data_911,90h	; (020C:E9D4=4Dh)
020C:B34C  2E: C6 06 E9D5 90			mov	byte ptr cs:data_912,90h	; (020C:E9D5=0A3h)
020C:B352  2E: C6 06 E9D6 90			mov	byte ptr cs:data_913,90h	; (020C:E9D6=0A3h)
020C:B358  C6 06 3C04 20			mov	data_568,20h		; (020C:3C04=0E9h) ' '
020C:B35D  80 26 2308 CF			and	data_455,0CFh		; (020C:2308=0)
020C:B362  80 26 2308 FC			and	data_455,0FCh		; (020C:2308=0)
020C:B367  F6 06 2308 04			test	data_455,4		; (020C:2308=0)
020C:B36C  74 05				jz	loc_1842		; Jump if zero
020C:B36E  80 0E 2308 03			or	data_455,3		; (020C:2308=0)
020C:B373			loc_1842:
020C:B373  C3					retn
				sub_126		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:B374			sub_127		proc	near
020C:B374  50					push	ax
020C:B375  53					push	bx
020C:B376  51					push	cx
020C:B377  52					push	dx
020C:B378  56					push	si
020C:B379  57					push	di
020C:B37A  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:B37F  06					push	es
020C:B380  F6 06 230A 06			test	byte ptr ds:[230Ah],6	; (020C:230A=0)
020C:B385  75 02				jnz	loc_1843		; Jump if not zero
020C:B387  EB 5B				jmp	short loc_1847		; (B3E4)
020C:B389			loc_1843:
020C:B389  FC					cld				; Clear direction
020C:B38A  A0 1D44				mov	al,data_308		; (020C:1D44=0)
020C:B38D  A2 1D46				mov	data_310,al		; (020C:1D46=0)
020C:B390  C6 06 1D44 34			mov	data_308,34h		; (020C:1D44=0) '4'
020C:B395  E8 C656				call	sub_90			; (79EE)
020C:B398  BE 19F3				mov	si,19F3h
020C:B39B  BF 19FB				mov	di,19FBh
020C:B39E  B9 0007				mov	cx,7
020C:B3A1  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:B3A3  BD 19F3				mov	bp,19F3h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 373

020C:B3A6  BE 25AC				mov	si,25ACh
020C:B3A9  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:B3A9  9A					db	9Ah
020C:B3AA  67E0 1491				dw	67E0h, 1491h
020C:B3AE  BD 19F6				mov	bp,19F6h
020C:B3B1  F6 06 230A 04			test	byte ptr ds:[230Ah],4	; (020C:230A=0)
020C:B3B6  75 0E				jnz	loc_1844		; Jump if not zero
020C:B3B8  8A C2				mov	al,dl
020C:B3BA  0C 01				or	al,1
020C:B3BC  3C 71				cmp	al,71h			; 'q'
020C:B3BE  74 15				je	loc_1845		; Jump if equal
020C:B3C0  3C 7B				cmp	al,7Bh			; '{'
020C:B3C2  74 11				je	loc_1845		; Jump if equal
020C:B3C4  EB 1E				jmp	short loc_1847		; (B3E4)
020C:B3C6			loc_1844:
020C:B3C6  C6 06 1D44 35			mov	data_308,35h		; (020C:1D44=0) '5'
020C:B3CB  A0 2961				mov	al,byte ptr ds:[2961h]	; (020C:2961=0A8h)
020C:B3CE  3E: 88 46 00				mov	ds:[bp],al
020C:B3D2  45					inc	bp
020C:B3D3  EB 05				jmp	short loc_1846		; (B3DA)
020C:B3D5			loc_1845:
020C:B3D5  C6 06 1D44 69			mov	data_308,69h		; (020C:1D44=0) 'i'
020C:B3DA			loc_1846:
020C:B3DA  A0 2958				mov	al,byte ptr ds:[2958h]	; (020C:2958=0E2h)
020C:B3DD  3E: 88 46 00				mov	ds:[bp],al
020C:B3E1  45					inc	bp
020C:B3E2  EB 00				jmp	short loc_1847		; (B3E4)
020C:B3E4			loc_1847:
020C:B3E4  80 FA 6F				cmp	dl,6Fh			; 'o'
020C:B3E7  75 03				jne	loc_1848		; Jump if not equal
020C:B3E9  E9 008B				jmp	loc_1857		; (B477)
020C:B3EC			loc_1848:
020C:B3EC  F6 06 230A 08			test	byte ptr ds:[230Ah],8	; (020C:230A=0)
020C:B3F1  75 50				jnz	loc_1853		; Jump if not zero
020C:B3F3  8A 1E 2308				mov	bl,data_455		; (020C:2308=0)
020C:B3F7  80 E3 07				and	bl,7
020C:B3FA  80 FB 00				cmp	bl,0
020C:B3FD  74 65				je	loc_1856		; Jump if equal
020C:B3FF  80 FB 06				cmp	bl,6
020C:B402  74 60				je	loc_1856		; Jump if equal
020C:B404  80 FB 07				cmp	bl,7
020C:B407  75 07				jne	loc_1849		; Jump if not equal
020C:B409  F6 C2 01				test	dl,1
020C:B40C  74 56				jz	loc_1856		; Jump if zero
020C:B40E  EB 15				jmp	short loc_1851		; (B425)
020C:B410			loc_1849:
020C:B410  F6 06 2308 02			test	data_455,2		; (020C:2308=0)
020C:B415  74 07				jz	loc_1850		; Jump if zero
020C:B417  80 FB 07				cmp	bl,7
020C:B41A  74 09				je	loc_1851		; Jump if equal
020C:B41C  EB 25				jmp	short loc_1853		; (B443)
020C:B41E			loc_1850:
020C:B41E  80 FB 01				cmp	bl,1
020C:B421  74 02				je	loc_1851		; Jump if equal
020C:B423  EB 1E				jmp	short loc_1853		; (B443)
020C:B425			loc_1851:
020C:B425  BF 19F3				mov	di,19F3h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 374

020C:B428  F6 06 230A 06			test	byte ptr ds:[230Ah],6	; (020C:230A=0)
020C:B42D  74 03				jz	loc_1852		; Jump if zero
020C:B42F  BF 19FB				mov	di,19FBh
020C:B432			loc_1852:
020C:B432  A0 296A				mov	al,byte ptr ds:[296Ah]	; (020C:296A=0A2h)
020C:B435  B9 0007				mov	cx,7
020C:B438  FC					cld				; Clear direction
020C:B439  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020C:B43B  4F					dec	di
020C:B43C  A0 2957				mov	al,byte ptr ds:[2957h]	; (020C:2957=0A8h)
020C:B43F  88 05				mov	[di],al
020C:B441  EB 21				jmp	short loc_1856		; (B464)
020C:B443			loc_1853:
020C:B443  BF 19F3				mov	di,19F3h
020C:B446  F6 06 230A 06			test	byte ptr ds:[230Ah],6	; (020C:230A=0)
020C:B44B  74 03				jz	loc_1854		; Jump if zero
020C:B44D  BF 19FB				mov	di,19FBh
020C:B450			loc_1854:
020C:B450  A0 296A				mov	al,byte ptr ds:[296Ah]	; (020C:296A=0A2h)
020C:B453  F6 C2 01				test	dl,1
020C:B456  75 03				jnz	loc_1855		; Jump if not zero
020C:B458  A0 2955				mov	al,data_499		; (020C:2955=0A0h)
020C:B45B			loc_1855:
020C:B45B  B9 0007				mov	cx,7
020C:B45E  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020C:B460  4F					dec	di
020C:B461  C6 05 20				mov	byte ptr [di],20h	; ' '
020C:B464			loc_1856:
020C:B464  F6 06 230A 06			test	byte ptr ds:[230Ah],6	; (020C:230A=0)
020C:B469  74 0C				jz	loc_1857		; Jump if zero
020C:B46B  BF 19FB				mov	di,19FBh
020C:B46E  B9 0007				mov	cx,7
020C:B471  B0 20				mov	al,20h			; ' '
020C:B473  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020C:B475  8B EF				mov	bp,di
020C:B477			loc_1857:
020C:B477  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:B47C  9C					pushf				; Push flags
020C:B47D  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:B482  5A					pop	dx
020C:B483  8E C2				mov	es,dx
020C:B485  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:B48A  5A					pop	dx
020C:B48B  75 0A				jnz	loc_1858		; Jump if not zero
020C:B48D  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:B492  74 03				je	loc_1858		; Jump if equal
020C:B494  E8 CA19				call	sub_97			; (7EB0)
020C:B497			loc_1858:
020C:B497  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:B49C  9D					popf				; Pop flags
020C:B49D  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:B4A2  5F					pop	di
020C:B4A3  5E					pop	si
020C:B4A4  5A					pop	dx
020C:B4A5  59					pop	cx
020C:B4A6  5B					pop	bx
020C:B4A7  58					pop	ax
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 375

020C:B4A8  C3					retn
				sub_127		endp

							                        ;* No entry point to code
020C:B4A9  87 DB				xchg	bx,bx
020C:B4AB  90					nop
020C:B4AC  52					push	dx
020C:B4AD  51					push	cx
020C:B4AE  57					push	di
020C:B4AF  56					push	si
020C:B4B0  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:B4B5  06					push	es
020C:B4B6  BE 199E				mov	si,199Eh
020C:B4B9  80 3C 00				cmp	byte ptr [si],0
020C:B4BC  74 19				je	loc_1859		; Jump if equal
020C:B4BE  BF 19BE				mov	di,19BEh
020C:B4C1  9A 1491:3820		;*		call	far ptr sub_193		;*(1491:3820)
020C:B4C1  9A					db	9Ah
020C:B4C2  3820 1491				dw	3820h, 1491h
020C:B4C6  B9 0015				mov	cx,15h
020C:B4C9  E8 C522				call	sub_90			; (79EE)
020C:B4CC  FC					cld				; Clear direction
020C:B4CD  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:B4CF  BA 19B3				mov	dx,19B3h
020C:B4D2  9A 1491:282C		;*		call	far ptr sub_176		;*(1491:282C)
020C:B4D2  9A					db	9Ah
020C:B4D3  282C 1491				dw	282Ch, 1491h
020C:B4D7			loc_1859:
020C:B4D7  C6 06 199E 00			mov	data_228,0		; (020C:199E=0F0h)
020C:B4DC  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:B4E1  9C					pushf				; Push flags
020C:B4E2  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:B4E7  5A					pop	dx
020C:B4E8  8E C2				mov	es,dx
020C:B4EA  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:B4EF  5A					pop	dx
020C:B4F0  75 0A				jnz	loc_1860		; Jump if not zero
020C:B4F2  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:B4F7  74 03				je	loc_1860		; Jump if equal
020C:B4F9  E8 C9B4				call	sub_97			; (7EB0)
020C:B4FC			loc_1860:
020C:B4FC  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:B501  9D					popf				; Pop flags
020C:B502  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:B507  5E					pop	si
020C:B508  5F					pop	di
020C:B509  59					pop	cx
020C:B50A  5A					pop	dx
020C:B50B  C3					retn
							                        ;* No entry point to code
020C:B50C  80 3E 1790 01			cmp	data_195,1		; (020C:1790=0)
020C:B511  75 4D				jne	loc_1862		; Jump if not equal
020C:B513  50					push	ax
020C:B514  51					push	cx
020C:B515  57					push	di
020C:B516  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:B51B  06					push	es
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 376

020C:B51C  E8 C4CF				call	sub_90			; (79EE)
020C:B51F  B9 0007				mov	cx,7
020C:B522  BF 19F3				mov	di,19F3h
020C:B525  B0 20				mov	al,20h			; ' '
020C:B527  FC					cld				; Clear direction
020C:B528  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020C:B52A  4F					dec	di
020C:B52B  8A 0E 2957				mov	cl,byte ptr ds:[2957h]	; (020C:2957=0A8h)
020C:B52F  26: 88 0D				mov	es:[di],cl
020C:B532  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:B537  9C					pushf				; Push flags
020C:B538  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:B53D  5A					pop	dx
020C:B53E  8E C2				mov	es,dx
020C:B540  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:B545  5A					pop	dx
020C:B546  75 0A				jnz	loc_1861		; Jump if not zero
020C:B548  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:B54D  74 03				je	loc_1861		; Jump if equal
020C:B54F  E8 C95E				call	sub_97			; (7EB0)
020C:B552			loc_1861:
020C:B552  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:B557  9D					popf				; Pop flags
020C:B558  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:B55D  5F					pop	di
020C:B55E  59					pop	cx
020C:B55F  58					pop	ax
020C:B560			loc_1862:
020C:B560  C3					retn
							                        ;* No entry point to code
020C:B561  87 DB				xchg	bx,bx
020C:B563  90					nop
020C:B564  80 3E 1790 01			cmp	data_195,1		; (020C:1790=0)
020C:B569  75 54				jne	loc_1864		; Jump if not equal
020C:B56B  50					push	ax
020C:B56C  51					push	cx
020C:B56D  57					push	di
020C:B56E  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:B573  06					push	es
020C:B574  E8 C477				call	sub_90			; (79EE)
020C:B577  B9 0007				mov	cx,7
020C:B57A  BF 19F3				mov	di,19F3h
020C:B57D  A0 2963				mov	al,byte ptr ds:[2963h]	; (020C:2963=0A8h)
020C:B580  FC					cld				; Clear direction
020C:B581  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020C:B583  26: 8B 05				mov	ax,es:[di]
020C:B586  8A 0E 2957				mov	cl,byte ptr ds:[2957h]	; (020C:2957=0A8h)
020C:B58A  26: 88 0D				mov	es:[di],cl
020C:B58D  47					inc	di
020C:B58E  26: 89 05				mov	es:[di],ax
020C:B591  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:B596  9C					pushf				; Push flags
020C:B597  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:B59C  5A					pop	dx
020C:B59D  8E C2				mov	es,dx
020C:B59F  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:B5A4  5A					pop	dx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 377

020C:B5A5  75 0A				jnz	loc_1863		; Jump if not zero
020C:B5A7  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:B5AC  74 03				je	loc_1863		; Jump if equal
020C:B5AE  E8 C8FF				call	sub_97			; (7EB0)
020C:B5B1			loc_1863:
020C:B5B1  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:B5B6  9D					popf				; Pop flags
020C:B5B7  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:B5BC  5F					pop	di
020C:B5BD  59					pop	cx
020C:B5BE  58					pop	ax
020C:B5BF			loc_1864:
020C:B5BF  C3					retn

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:B5C0			sub_128		proc	near
020C:B5C0  80 3E 178A 04			cmp	data_190,4		; (020C:178A=0)
020C:B5C5  75 07				jne	loc_1865		; Jump if not equal
020C:B5C7  F6 06 216F 02			test	data_393,2		; (020C:216F=0FFh)
020C:B5CC  75 03				jnz	loc_1866		; Jump if not zero
020C:B5CE			loc_1865:
020C:B5CE  E9 008B				jmp	loc_1869		; (B65C)
020C:B5D1			loc_1866:
020C:B5D1  50					push	ax
020C:B5D2  53					push	bx
020C:B5D3  52					push	dx
020C:B5D4  57					push	di
020C:B5D5  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:B5DA  06					push	es
020C:B5DB  8B 1E 217C				mov	bx,data_402		; (020C:217C=2EFFh)
020C:B5DF  A1 217E				mov	ax,data_403		; (020C:217E=104h)
020C:B5E2  BA 0004				mov	dx,4
020C:B5E5  E8 AF48				call	sub_69			; (6530)
020C:B5E8  73 43				jnc	loc_1867		; Jump if carry=0
020C:B5EA  26: 8A 45 32				mov	al,es:[di+32h]
020C:B5EE  24 38				and	al,38h			; '8'
020C:B5F0  3C 38				cmp	al,38h			; '8'
020C:B5F2  74 39				je	loc_1867		; Jump if equal
020C:B5F4  26: 80 45 32 08			add	byte ptr es:[di+32h],8
020C:B5F9  80 26 216F FD			and	data_393,0FDh		; (020C:216F=0FFh)
020C:B5FE  26: F6 45 05 20			test	byte ptr es:[di+5],20h	; ' '
020C:B603  75 28				jnz	loc_1867		; Jump if not zero
020C:B605  A1 1CF8				mov	ax,data_271		; (020C:1CF8=0)
020C:B608  2B 06 2156				sub	ax,data_380		; (020C:2156=0FFFFh)
020C:B60C  3D 0018				cmp	ax,18h
020C:B60F  76 1C				jbe	loc_1867		; Jump if below or =
020C:B611  B8 0018				mov	ax,18h
020C:B614  C6 06 420F 01			mov	data_674,1		; (020C:420F=67h)
020C:B619  9A 1491:4BA0		;*		call	far ptr sub_202		;*(1491:4BA0)
020C:B619  9A					db	9Ah
020C:B61A  4BA0 1491				dw	4BA0h, 1491h
020C:B61E  C6 06 420F 00			mov	data_674,0		; (020C:420F=67h)
020C:B623  3D 0017				cmp	ax,17h
020C:B626  72 05				jb	loc_1867		; Jump if below
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 378

020C:B628  26: 80 4D 05 20			or	byte ptr es:[di+5],20h	; ' '
020C:B62D			loc_1867:
020C:B62D  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:B632  9C					pushf				; Push flags
020C:B633  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:B638  5A					pop	dx
020C:B639  8E C2				mov	es,dx
020C:B63B  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:B640  5A					pop	dx
020C:B641  75 0A				jnz	loc_1868		; Jump if not zero
020C:B643  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:B648  74 03				je	loc_1868		; Jump if equal
020C:B64A  E8 C863				call	sub_97			; (7EB0)
020C:B64D			loc_1868:
020C:B64D  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:B652  9D					popf				; Pop flags
020C:B653  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:B658  5F					pop	di
020C:B659  5A					pop	dx
020C:B65A  5B					pop	bx
020C:B65B  58					pop	ax
020C:B65C			loc_1869:
020C:B65C  C3					retn
				sub_128		endp

020C:B65D  87 DB				xchg	bx,bx
020C:B65F  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:B660			sub_129		proc	near
020C:B660  50					push	ax
020C:B661  53					push	bx
020C:B662  51					push	cx
020C:B663  52					push	dx
020C:B664  56					push	si
020C:B665  57					push	di
020C:B666  55					push	bp
020C:B667  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:B66C  1E					push	ds
020C:B66D  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:B672  06					push	es
020C:B673  E8 C35A				call	sub_84			; (79D0)
020C:B676  E8 C39C				call	sub_95			; (7A15)
020C:B679  8B D8				mov	bx,ax
020C:B67B  A1 1791				mov	ax,word ptr ds:[1791h]	; (ss:1791=0)
020C:B67E  8C C9				mov	cx,cs
020C:B680  2B D9				sub	bx,cx
020C:B682  2B C3				sub	ax,bx
020C:B684  B9 0006				mov	cx,6
020C:B687  D3 E8				shr	ax,cl			; Shift w/zeros fill
020C:B689  BD 0706				mov	bp,706h
020C:B68C  B3 01				mov	bl,1
020C:B68E  3D 03E7				cmp	ax,3E7h
020C:B691  77 0D				ja	loc_1870		; Jump if above
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 379

020C:B693  9A 1491:0300		;*		call	far ptr sub_159		;*(1491:0300)
020C:B693  9A					db	9Ah
020C:B694  0300 1491				dw	300h, 1491h
020C:B698  8B 1E 1326				mov	bx,word ptr ds:[1326h]	; (ss:1326=82h)
020C:B69C  C6 47 5E 07				mov	byte ptr [bx+5Eh],7
020C:B6A0			loc_1870:
020C:B6A0  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:B6A6  74 04				je	loc_1871		; Jump if equal
020C:B6A8  C6 47 5D 07				mov	byte ptr [bx+5Dh],7
020C:B6AC			loc_1871:
020C:B6AC  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:B6B1  9C					pushf				; Push flags
020C:B6B2  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:B6B7  5A					pop	dx
020C:B6B8  8E C2				mov	es,dx
020C:B6BA  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:B6BF  5A					pop	dx
020C:B6C0  75 0A				jnz	loc_1872		; Jump if not zero
020C:B6C2  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:B6C7  74 03				je	loc_1872		; Jump if equal
020C:B6C9  E8 C7E4				call	sub_97			; (7EB0)
020C:B6CC			loc_1872:
020C:B6CC  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:B6D1  9D					popf				; Pop flags
020C:B6D2  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:B6D7  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:B6DC  9C					pushf				; Push flags
020C:B6DD  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:B6E2  5A					pop	dx
020C:B6E3  8E DA				mov	ds,dx
020C:B6E5  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:B6EA  5A					pop	dx
020C:B6EB  75 0A				jnz	loc_1873		; Jump if not zero
020C:B6ED  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:B6F2  74 03				je	loc_1873		; Jump if equal
020C:B6F4  E8 C7B9				call	sub_97			; (7EB0)
020C:B6F7			loc_1873:
020C:B6F7  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:B6FC  9D					popf				; Pop flags
020C:B6FD  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:B702  5D					pop	bp
020C:B703  5F					pop	di
020C:B704  5E					pop	si
020C:B705  5A					pop	dx
020C:B706  59					pop	cx
020C:B707  5B					pop	bx
020C:B708  58					pop	ax
020C:B709  C3					retn
				sub_129		endp

020C:B70A  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:B70C			sub_130		proc	near
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 380

020C:B70C  50					push	ax
020C:B70D  53					push	bx
020C:B70E  51					push	cx
020C:B70F  52					push	dx
020C:B710  56					push	si
020C:B711  57					push	di
020C:B712  55					push	bp
020C:B713  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:B718  1E					push	ds
020C:B719  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:B71E  06					push	es
020C:B71F  E8 C2AE				call	sub_84			; (79D0)
020C:B722  E8 C2F0				call	sub_95			; (7A15)
020C:B725  8B D8				mov	bx,ax
020C:B727  A1 1791				mov	ax,data_196		; (020C:1791=0)
020C:B72A  8C C9				mov	cx,cs
020C:B72C  2B D9				sub	bx,cx
020C:B72E  2B C3				sub	ax,bx
020C:B730  B9 0006				mov	cx,6
020C:B733  D3 E8				shr	ax,cl			; Shift w/zeros fill
020C:B735  8B D0				mov	dx,ax
020C:B737  8B 1E 195E				mov	bx,data_223		; (020C:195E=20Ch)
020C:B73B  A1 195C				mov	ax,data_222		; (020C:195C=6B4h)
020C:B73E  B9 000A				mov	cx,0Ah
020C:B741  05 03FF				add	ax,3FFh
020C:B744  83 D3 00				adc	bx,0
020C:B747  F8					clc				; Clear carry flag

020C:B748			locloop_1874:
020C:B748  D1 EB				shr	bx,1			; Shift w/zeros fill
020C:B74A  D1 D8				rcr	ax,1			; Rotate thru carry
020C:B74C  E2 FA				loop	locloop_1874		; Loop if cx > 0

020C:B74E  92					xchg	dx,ax
020C:B74F  2B C2				sub	ax,dx
020C:B751  3D 0000				cmp	ax,0
020C:B754  7D 02				jge	loc_1875		; Jump if > or =
020C:B756  33 C0				xor	ax,ax			; Zero register
020C:B758			loc_1875:
020C:B758  BD 0708				mov	bp,708h
020C:B75B  3E: C7 46 00 2020			mov	word ptr ds:[bp],2020h
020C:B761  3E: C6 46 02 20			mov	byte ptr ds:[bp+2],20h	; ' '
020C:B766  BD 0706				mov	bp,706h
020C:B769  B3 01				mov	bl,1
020C:B76B  3D 03E7				cmp	ax,3E7h
020C:B76E  77 0D				ja	loc_1876		; Jump if above
020C:B770  9A 1491:0300		;*		call	far ptr sub_159		;*(1491:0300)
020C:B770  9A					db	9Ah
020C:B771  0300 1491				dw	300h, 1491h
020C:B775  8B 1E 1326				mov	bx,data_160		; (020C:1326=0)
020C:B779  C6 47 5E 07				mov	byte ptr [bx+5Eh],7
020C:B77D			loc_1876:
020C:B77D  2E: 80 3E 3F70 00			cmp	cs:data_650,0		; (020C:3F70=74h)
020C:B783  74 04				je	loc_1877		; Jump if equal
020C:B785  C6 47 5D 07				mov	byte ptr [bx+5Dh],7
020C:B789			loc_1877:
020C:B789  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 381

020C:B78E  9C					pushf				; Push flags
020C:B78F  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:B794  5A					pop	dx
020C:B795  8E C2				mov	es,dx
020C:B797  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:B79C  5A					pop	dx
020C:B79D  75 0A				jnz	loc_1878		; Jump if not zero
020C:B79F  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:B7A4  74 03				je	loc_1878		; Jump if equal
020C:B7A6  E8 C707				call	sub_97			; (7EB0)
020C:B7A9			loc_1878:
020C:B7A9  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:B7AE  9D					popf				; Pop flags
020C:B7AF  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:B7B4  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:B7B9  9C					pushf				; Push flags
020C:B7BA  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:B7BF  5A					pop	dx
020C:B7C0  8E DA				mov	ds,dx
020C:B7C2  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:B7C7  5A					pop	dx
020C:B7C8  75 0A				jnz	loc_1879		; Jump if not zero
020C:B7CA  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:B7CF  74 03				je	loc_1879		; Jump if equal
020C:B7D1  E8 C6DC				call	sub_97			; (7EB0)
020C:B7D4			loc_1879:
020C:B7D4  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:B7D9  9D					popf				; Pop flags
020C:B7DA  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:B7DF  5D					pop	bp
020C:B7E0  5F					pop	di
020C:B7E1  5E					pop	si
020C:B7E2  5A					pop	dx
020C:B7E3  59					pop	cx
020C:B7E4  5B					pop	bx
020C:B7E5  58					pop	ax
020C:B7E6  C3					retn
				sub_130		endp

020C:B7E7  D8					db	0D8h
020C:B7E8  D9					db	0D9h
020C:B7E9  DA					db	0DAh
020C:B7EA  DB					db	0DBh
020C:B7EB  DC					db	0DCh
							                        ;* No entry point to code
020C:B7EC  DD DE 26DF				fstp	qword ptr ds:[26DFh][bp]	; (020C:26DF=202Ch) Pop st to memory
020C:B7F0  9B					db	9Bh
020C:B7F1  90					nop
020C:B7F2  87 DB				xchg	bx,bx
020C:B7F4  F6 06 1D5A 3F			test	data_314,3Fh		; (020C:1D5A=0) '?'
020C:B7F9  74 59				jz	loc_1885		; Jump if zero
020C:B7FB  F7 06 3D18 0001			test	data_594,1		; (020C:3D18=2680h)
020C:B801  75 51				jnz	loc_1885		; Jump if not zero
020C:B803  50					push	ax
020C:B804  53					push	bx
020C:B805  57					push	di
020C:B806  06					push	es
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 382

020C:B807  1E					push	ds
020C:B808  07					pop	es
020C:B809  BF 1960				mov	di,1960h
020C:B80C  B8 9B9B				mov	ax,9B9Bh
020C:B80F  26: 8B 1D				mov	bx,es:[di]
020C:B812  80 FB CD				cmp	bl,0CDh
020C:B815  74 03				je	loc_1880		; Jump if equal
020C:B817  F8					clc				; Clear carry flag
020C:B818  EB 35				jmp	short loc_1884		; (B84F)
020C:B81A			loc_1880:
020C:B81A  8A DF				mov	bl,bh
020C:B81C  8A C3				mov	al,bl
020C:B81E  3C 3E				cmp	al,3Eh			; '>'
020C:B820  72 03				jb	loc_1881		; Jump if below
020C:B822  F8					clc				; Clear carry flag
020C:B823  EB 2A				jmp	short loc_1884		; (B84F)
020C:B825			loc_1881:
020C:B825  2C 34				sub	al,34h			; '4'
020C:B827  BB 82A7				mov	bx,82A7h
020C:B82A  2E: D7				xlat	cs:[bx]			; al=[al+[bx]] table
020C:B82C  3C 9B				cmp	al,9Bh
020C:B82E  75 04				jne	loc_1882		; Jump if not equal
020C:B830  B0 90				mov	al,90h
020C:B832  EB 02				jmp	short loc_1883		; (B836)
020C:B834			loc_1882:
020C:B834  86 E0				xchg	ah,al
020C:B836			loc_1883:
020C:B836  26: 8B 1D				mov	bx,es:[di]
020C:B839  89 1E 3D1F				mov	data_598,bx		; (020C:3D1F=0E822h)
020C:B83D  26: 89 05				mov	es:[di],ax
020C:B840  A3 3D21				mov	data_599,ax		; (020C:3D21=1FC5h)
020C:B843  C6 06 3D25 02			mov	data_601,2		; (020C:3D25=52h)
020C:B848  A1 2156				mov	ax,data_380		; (020C:2156=0FFFFh)
020C:B84B  A3 3D23				mov	data_600,ax		; (020C:3D23=47C6h)
020C:B84E  F9					stc				; Set carry flag
020C:B84F			loc_1884:
020C:B84F  07					pop	es
020C:B850  5F					pop	di
020C:B851  5B					pop	bx
020C:B852  58					pop	ax
020C:B853  C3					retn
020C:B854			loc_1885:
020C:B854  F8					clc				; Clear carry flag
020C:B855  C3					retn
020C:B856  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:B858			sub_131		proc	near
020C:B858  1E					push	ds
020C:B859  0E					push	cs
020C:B85A  1F					pop	ds
020C:B85B  B8 2523				mov	ax,2523h
020C:B85E  BA 8325				mov	dx,8325h
020C:B861  CD 21				int	21h			; DOS Services  ah=function 25h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 383

										;  set intrpt vector al to ds:dx
020C:B863  1F					pop	ds
020C:B864  C3					retn
				sub_131		endp

							                        ;* No entry point to code
020C:B865  2E: C6 06 00C8 01			mov	byte ptr cs:[0C8h],1	; (020C:00C8=6)
020C:B86B  F8					clc				; Clear carry flag
020C:B86C  CB					retf				; Return far
020C:B86D  00					db	0
020C:B86E  00					db	0
020C:B86F  00 00				add	[bx+si],al
020C:B871  00 87 F7DB				add	data_922[bx],al		; (020C:F7DB=57h)
020C:B875  06					push	es
020C:B876  57					push	di
020C:B877  3D 00E0				cmp	ax,0E0h
020C:B87A  75 01				jne	loc_1886		; Jump if not equal
020C:B87C  C3					retn
020C:B87D			loc_1886:
020C:B87D  2E: A3 8330				mov	word ptr cs:[8330h],ax	; (020C:8330=1EC0h)
020C:B881  50					push	ax
020C:B882  53					push	bx
020C:B883  5251			data_874	dw	5251h			; Data table (indexed access)
020C:B885  56					push	si
020C:B886  57					push	di
020C:B887  55					push	bp
020C:B888  BB FFFF				mov	bx,0FFFFh
020C:B88B  E9 0191				jmp	loc_1903		; (BA1F)
							                        ;* No entry point to code
020C:B88E  87 DB				xchg	bx,bx
020C:B890  83 3E 3D26 FF			cmp	data_602,0FFFFh		; (020C:3D26=0C60Fh)
020C:B895  74 09				je	loc_1887		; Jump if equal
020C:B897  F7 06 3D57 00E0			test	data_627,0E0h		; (020C:3D57=0)
020C:B89D  75 0B				jnz	loc_1888		; Jump if not zero
020C:B89F  C3					retn
020C:B8A0			loc_1887:
020C:B8A0  50					push	ax
020C:B8A1  B0 01				mov	al,1
020C:B8A3  9A 1491:8AD0		;*		call	far ptr sub_257		;*(1491:8AD0)
020C:B8A3  9A					db	9Ah
020C:B8A4  8AD0 1491				dw	8AD0h, 1491h
020C:B8A8  58					pop	ax
020C:B8A9  C3					retn
020C:B8AA			loc_1888:
020C:B8AA  50					push	ax
020C:B8AB  53					push	bx
020C:B8AC  51					push	cx
020C:B8AD  52					push	dx
020C:B8AE  56					push	si
020C:B8AF  57					push	di
020C:B8B0  55					push	bp
020C:B8B1  A1 3D26				mov	ax,data_602		; (020C:3D26=0C60Fh)
020C:B8B4  2E: A3 8330				mov	word ptr cs:[8330h],ax	; (020C:8330=1EC0h)
020C:B8B8  8B 1E 3D28				mov	bx,data_603		; (020C:3D28=7A47h)
020C:B8BC  A1 3D2A				mov	ax,data_604		; (020C:3D2A=0C607h)
020C:B8BF  E9 015D				jmp	loc_1903		; (BA1F)
020C:B8C2  87 DB				xchg	bx,bx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 384


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:B8C4			sub_132		proc	near
020C:B8C4  83 3E 3D2C FF			cmp	data_605,0FFFFh		; (020C:3D2C=6747h)
020C:B8C9  74 09				je	loc_1889		; Jump if equal
020C:B8CB  F7 06 3D57 00E0			test	data_627,0E0h		; (020C:3D57=0)
020C:B8D1  75 0B				jnz	loc_1890		; Jump if not zero
020C:B8D3  C3					retn
020C:B8D4			loc_1889:
020C:B8D4  50					push	ax
020C:B8D5  B0 02				mov	al,2
020C:B8D7  9A 1491:8AD0		;*		call	far ptr sub_257		;*(1491:8AD0)
020C:B8D7  9A					db	9Ah
020C:B8D8  8AD0 1491				dw	8AD0h, 1491h
020C:B8DC  58					pop	ax
020C:B8DD  C3					retn
020C:B8DE			loc_1890:
020C:B8DE  50					push	ax
020C:B8DF  53					push	bx
020C:B8E0  51					push	cx
020C:B8E1  52					push	dx
020C:B8E2  56					push	si
020C:B8E3  57					push	di
020C:B8E4  55					push	bp
020C:B8E5  A1 3D2C				mov	ax,data_605		; (020C:3D2C=6747h)
020C:B8E8  2E: A3 8330				mov	word ptr cs:[8330h],ax	; (020C:8330=1EC0h)
020C:B8EC  8B 1E 3D2E				mov	bx,data_606		; (020C:3D2E=0E800h)
020C:B8F0  A1 3D30				mov	ax,data_607		; (020C:3D30=239Ah)
020C:B8F3  E9 0129				jmp	loc_1903		; (BA1F)
							                        ;* No entry point to code
020C:B8F6  87 DB				xchg	bx,bx
020C:B8F8  83 3E 3D32 FF			cmp	data_608,0FFFFh		; (020C:3D32=17E8h)
020C:B8FD  74 09				je	loc_1891		; Jump if equal
020C:B8FF  F7 06 3D57 00E0			test	data_627,0E0h		; (020C:3D57=0)
020C:B905  75 0B				jnz	loc_1892		; Jump if not zero
020C:B907  C3					retn
020C:B908			loc_1891:
020C:B908  50					push	ax
020C:B909  B0 03				mov	al,3
020C:B90B  9A 1491:8AD0		;*		call	far ptr sub_257		;*(1491:8AD0)
020C:B90B  9A					db	9Ah
020C:B90C  8AD0 1491				dw	8AD0h, 1491h
020C:B910  58					pop	ax
020C:B911  C3					retn
020C:B912			loc_1892:
020C:B912  50					push	ax
020C:B913  53					push	bx
020C:B914  51					push	cx
020C:B915  52					push	dx
020C:B916  56					push	si
020C:B917  57					push	di
020C:B918  55					push	bp
020C:B919  A1 3D32				mov	ax,data_608		; (020C:3D32=17E8h)
020C:B91C  2E: A3 8330				mov	word ptr cs:[8330h],ax	; (020C:8330=1EC0h)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 385

020C:B920  8B 1E 3D34				mov	bx,data_609		; (020C:3D34=0E91Ch)
020C:B924  A1 3D36				mov	ax,data_610		; (020C:3D36=0FAC9h)
020C:B927  E9 00F5				jmp	loc_1903		; (BA1F)
							                        ;* No entry point to code
020C:B92A  87 DB				xchg	bx,bx
020C:B92C  83 3E 3D38 FF			cmp	data_611,0FFFFh		; (020C:3D38=0B3E8h)
020C:B931  74 09				je	loc_1893		; Jump if equal
020C:B933  F7 06 3D57 00E0			test	data_627,0E0h		; (020C:3D57=0)
020C:B939  75 0B				jnz	loc_1894		; Jump if not zero
020C:B93B  C3					retn
020C:B93C			loc_1893:
020C:B93C  50					push	ax
020C:B93D  B0 04				mov	al,4
020C:B93F  9A 1491:8AD0		;*		call	far ptr sub_257		;*(1491:8AD0)
020C:B93F  9A					db	9Ah
020C:B940  8AD0 1491				dw	8AD0h, 1491h
020C:B944  58					pop	ax
020C:B945  C3					retn
020C:B946			loc_1894:
020C:B946  50					push	ax
020C:B947  53					push	bx
020C:B948  51					push	cx
020C:B949  52					push	dx
020C:B94A  56					push	si
020C:B94B  57					push	di
020C:B94C  55					push	bp
020C:B94D  A1 3D38				mov	ax,data_611		; (020C:3D38=0B3E8h)
020C:B950  2E: A3 8330				mov	word ptr cs:[8330h],ax	; (020C:8330=1EC0h)
020C:B954  8B 1E 3D3A				mov	bx,data_612		; (020C:3D3A=0B03Ch)
020C:B958  A1 3D3C				mov	ax,data_613		; (020C:3D3C=8041h)
020C:B95B  E9 00C1				jmp	loc_1903		; (BA1F)
020C:B95E  87 DB				xchg	bx,bx

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

020C:B960			sub_133:
020C:B960  83 3E 3D44 FF			cmp	data_617,0FFFFh		; (020C:3D44=4CB0h)
020C:B965  74 09				je	loc_1895		; Jump if equal
020C:B967  F7 06 3D57 00E0			test	data_627,0E0h		; (020C:3D57=0)
020C:B96D  75 0B				jnz	loc_1896		; Jump if not zero
020C:B96F  C3					retn
020C:B970			loc_1895:
020C:B970  50					push	ax
020C:B971  B0 06				mov	al,6
020C:B973  9A 1491:8AD0		;*		call	far ptr sub_257		;*(1491:8AD0)
020C:B973  9A					db	9Ah
020C:B974  8AD0 1491				dw	8AD0h, 1491h
020C:B978  58					pop	ax
020C:B979  C3					retn
020C:B97A			loc_1896:
020C:B97A  50					push	ax
020C:B97B  53					push	bx
020C:B97C  51					push	cx
020C:B97D  52					push	dx
020C:B97E  56					push	si
020C:B97F  57					push	di
020C:B980  55					push	bp
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 386

020C:B981  A1 3D44				mov	ax,data_617		; (020C:3D44=4CB0h)
020C:B984  2E: A3 8330				mov	word ptr cs:[8330h],ax	; (020C:8330=1EC0h)
020C:B988  8B 1E 3D46				mov	bx,data_618		; (020C:3D46=0B3E8h)
020C:B98C  A1 3D48				mov	ax,data_619		; (020C:3D48=9A03h)
020C:B98F  E9 008D				jmp	loc_1903		; (BA1F)
020C:B992  87 DB				xchg	bx,bx

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

020C:B994			sub_134:
020C:B994  83 3E 3D3E FF			cmp	data_614,0FFFFh		; (020C:3D3E=0FF3Eh)
020C:B999  74 09				je	loc_1897		; Jump if equal
020C:B99B  F7 06 3D57 00E0			test	data_627,0E0h		; (020C:3D57=0)
020C:B9A1  75 0B				jnz	loc_1898		; Jump if not zero
020C:B9A3  C3					retn
020C:B9A4			loc_1897:
020C:B9A4  50					push	ax
020C:B9A5  B0 05				mov	al,5
020C:B9A7  9A 1491:8AD0		;*		call	far ptr sub_257		;*(1491:8AD0)
020C:B9A7  9A					db	9Ah
020C:B9A8  8AD0 1491				dw	8AD0h, 1491h
020C:B9AC  58					pop	ax
020C:B9AD  C3					retn
020C:B9AE			loc_1898:
020C:B9AE  50					push	ax
020C:B9AF  53					push	bx
020C:B9B0  51					push	cx
020C:B9B1  52					push	dx
020C:B9B2  56					push	si
020C:B9B3  57					push	di
020C:B9B4  55					push	bp
020C:B9B5  A1 3D3E				mov	ax,data_614		; (020C:3D3E=0FF3Eh)
020C:B9B8  2E: A3 8330				mov	word ptr cs:[8330h],ax	; (020C:8330=1EC0h)
020C:B9BC  8B 1E 3D40				mov	bx,data_615		; (020C:3D40=122h)
020C:B9C0  A1 3D42				mov	ax,data_616		; (020C:3D42=274h)
020C:B9C3  EB 5A				jmp	short loc_1903		; (BA1F)
							                        ;* No entry point to code
020C:B9C5  87 DB				xchg	bx,bx
020C:B9C7  90					nop
020C:B9C8  83 3E 3D50 FF			cmp	data_623,0FFFFh		; (020C:3D50=0E91Bh)
020C:B9CD  74 08				je	loc_1899		; Jump if equal
020C:B9CF  F7 06 3D57 0060			test	data_627,60h		; (020C:3D57=0)
020C:B9D5  75 01				jnz	loc_1900		; Jump if not zero
020C:B9D7			loc_1899:
020C:B9D7  C3					retn
020C:B9D8			loc_1900:
020C:B9D8  50					push	ax
020C:B9D9  53					push	bx
020C:B9DA  51					push	cx
020C:B9DB  52					push	dx
020C:B9DC  56					push	si
020C:B9DD  57					push	di
020C:B9DE  55					push	bp
020C:B9DF  A1 3D50				mov	ax,data_623		; (020C:3D50=0E91Bh)
020C:B9E2  2E: A3 8330				mov	word ptr cs:[8330h],ax	; (020C:8330=1EC0h)
020C:B9E6  8B 1E 3D52				mov	bx,data_624		; (020C:3D52=0FAADh)
020C:B9EA  A1 3D54				mov	ax,word ptr data_625	; (020C:3D54=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 387

020C:B9ED  EB 30				jmp	short loc_1903		; (BA1F)
020C:B9EF  90					nop

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

020C:B9F0			sub_135:
020C:B9F0  83 3E 3D4A FF			cmp	data_620,0FFFFh		; (020C:3D4A=319Ch)
020C:B9F5  74 09				je	loc_1901		; Jump if equal
020C:B9F7  F7 06 3D57 00E0			test	data_627,0E0h		; (020C:3D57=0)
020C:B9FD  75 0B				jnz	loc_1902		; Jump if not zero
020C:B9FF  C3					retn
020C:BA00			loc_1901:
020C:BA00  50					push	ax
020C:BA01  B0 07				mov	al,7
020C:BA03  9A 1491:8AD0		;*		call	far ptr sub_257		;*(1491:8AD0)
020C:BA03  9A					db	9Ah
020C:BA04  8AD0 1491				dw	8AD0h, 1491h
020C:BA08  58					pop	ax
020C:BA09  C3					retn
020C:BA0A			loc_1902:
020C:BA0A  50					push	ax
020C:BA0B  53					push	bx
020C:BA0C  51					push	cx
020C:BA0D  52					push	dx
020C:BA0E  56					push	si
020C:BA0F  57					push	di
020C:BA10  55					push	bp
020C:BA11  A1 3D4A				mov	ax,data_620		; (020C:3D4A=319Ch)
020C:BA14  2E: A3 8330				mov	word ptr cs:[8330h],ax	; (020C:8330=1EC0h)
020C:BA18  8B 1E 3D4C				mov	bx,data_621		; (020C:3D4C=1491h)
020C:BA1C  A1 3D4E				mov	ax,data_622		; (020C:3D4E=0FBE8h)
020C:BA1F			loc_1903:
020C:BA1F  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:BA24  06					push	es
020C:BA25  FF 36 2FB0				push	data_526		; (020C:2FB0=0DC3h)
020C:BA29  FF 36 2FAE				push	data_525		; (020C:2FAE=0DA5h)
020C:BA2D  80 3E 1790 01			cmp	data_195,1		; (020C:1790=0)
020C:BA32  75 03				jne	loc_1904		; Jump if not equal
020C:BA34  E9 0226				jmp	loc_1933		; (BC5D)
020C:BA37			loc_1904:
020C:BA37  F7 06 1F6E 8000			test	data_356,8000h		; (020C:1F6E=0)
020C:BA3D  74 10				jz	loc_1905		; Jump if zero
020C:BA3F  81 FB C000				cmp	bx,0C000h
020C:BA43  77 0A				ja	loc_1905		; Jump if above
020C:BA45  03 1E 46D2				add	bx,data_715		; (020C:46D2=6C06h)
020C:BA49  72 04				jc	loc_1905		; Jump if carry Set
020C:BA4B  89 1E 3D6A				mov	data_631,bx		; (020C:3D6A=58Ah)
020C:BA4F			loc_1905:
020C:BA4F  8B 1E 2154				mov	bx,data_379		; (020C:2154=5CE9h)
020C:BA53  C6 06 3C07 01			mov	data_571,1		; (020C:3C07=0E8h)
020C:BA58  BA 0001				mov	dx,1
020C:BA5B  E8 AAD2				call	sub_69			; (6530)
020C:BA5E  73 43				jnc	loc_1909		; Jump if carry=0
020C:BA60			loc_1906:
020C:BA60  26: 8A 4D 04				mov	cl,es:[di+4]
020C:BA64  80 E1 1F				and	cl,1Fh
020C:BA67  80 F9 1F				cmp	cl,1Fh
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 388

020C:BA6A  75 11				jne	loc_1907		; Jump if not equal
020C:BA6C  26: 8A 4D 09				mov	cl,es:[di+9]
020C:BA70  80 F9 40				cmp	cl,40h			; '@'
020C:BA73  72 08				jb	loc_1907		; Jump if below
020C:BA75  80 F9 44				cmp	cl,44h			; 'D'
020C:BA78  77 03				ja	loc_1907		; Jump if above
020C:BA7A  E9 01E0				jmp	loc_1933		; (BC5D)
020C:BA7D			loc_1907:
020C:BA7D  50					push	ax
020C:BA7E  53					push	bx
020C:BA7F  BB 2F78				mov	bx,2F78h
020C:BA82  26: 8A 45 05				mov	al,es:[di+5]
020C:BA86  25 000F				and	ax,0Fh
020C:BA89  D7					xlat				; al=[al+[bx]] table
020C:BA8A  0A C0				or	al,al			; Zero ?
020C:BA8C  75 04				jnz	loc_1908		; Jump if not zero
020C:BA8E  26: 8A 45 06				mov	al,es:[di+6]
020C:BA92			loc_1908:
020C:BA92  03 F8				add	di,ax
020C:BA94  5B					pop	bx
020C:BA95  58					pop	ax
020C:BA96  26: 3B 1D				cmp	bx,es:[di]
020C:BA99  75 08				jne	loc_1909		; Jump if not equal
020C:BA9B  26: 3B 45 02				cmp	ax,es:[di+2]
020C:BA9F  75 02				jne	loc_1909		; Jump if not equal
020C:BAA1  EB BD				jmp	short loc_1906		; (BA60)
020C:BAA3			loc_1909:
020C:BAA3  BF 4165				mov	di,4165h
020C:BAA6  89 1D				mov	[di],bx
020C:BAA8  89 45 02				mov	[di+2],ax
020C:BAAB  C6 45 04 5F				mov	byte ptr [di+4],5Fh	; '_'
020C:BAAF  C6 45 05 02				mov	byte ptr [di+5],2
020C:BAB3  C6 45 06 00				mov	byte ptr [di+6],0
020C:BAB7  C7 45 07 203F			mov	word ptr [di+7],203Fh
020C:BABC  06					push	es
020C:BABD  57					push	di
020C:BABE  8E C3				mov	es,bx
020C:BAC0  8B F8				mov	di,ax
020C:BAC2  9A 1491:8814		;*		call	far ptr sub_253		;*(1491:8814)
020C:BAC2  9A					db	9Ah
020C:BAC3  8814 1491				dw	8814h, 1491h
020C:BAC7  26: 80 3D 8D				cmp	byte ptr es:[di],8Dh
020C:BACB  5F					pop	di
020C:BACC  07					pop	es
020C:BACD  75 18				jnz	loc_1910		; Jump if not zero
020C:BACF  B0 0A				mov	al,0Ah
020C:BAD1  F7 06 3D57 0020			test	data_627,20h		; (020C:3D57=0)
020C:BAD7  75 24				jnz	loc_1911		; Jump if not zero
020C:BAD9  B0 09				mov	al,9
020C:BADB  F7 06 3D57 0040			test	data_627,40h		; (020C:3D57=0)
020C:BAE1  75 1A				jnz	loc_1911		; Jump if not zero
020C:BAE3  B0 08				mov	al,8
020C:BAE5  EB 16				jmp	short loc_1911		; (BAFD)
020C:BAE7			loc_1910:
020C:BAE7  B0 44				mov	al,44h			; 'D'
020C:BAE9  F7 06 3D57 0020			test	data_627,20h		; (020C:3D57=0)
020C:BAEF  75 0C				jnz	loc_1911		; Jump if not zero
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 389

020C:BAF1  B0 42				mov	al,42h			; 'B'
020C:BAF3  F7 06 3D57 0040			test	data_627,40h		; (020C:3D57=0)
020C:BAF9  75 02				jnz	loc_1911		; Jump if not zero
020C:BAFB  B0 40				mov	al,40h			; '@'
020C:BAFD			loc_1911:
020C:BAFD  88 45 09				mov	[di+9],al
020C:BB00  A1 3D6A				mov	ax,data_631		; (020C:3D6A=58Ah)
020C:BB03  C7 06 3D6A FFFF			mov	data_631,0FFFFh		; (020C:3D6A=58Ah)
020C:BB09  3D FFFF				cmp	ax,0FFFFh
020C:BB0C  74 07				je	loc_1912		; Jump if equal
020C:BB0E  C7 45 0A 0000			mov	word ptr [di+0Ah],0
020C:BB13  EB 54				jmp	short loc_1918		; (BB69)
020C:BB15			loc_1912:
020C:BB15  A1 2154				mov	ax,data_379		; (020C:2154=5CE9h)
020C:BB18  F7 06 3D57 0004			test	data_627,4		; (020C:3D57=0)
020C:BB1E  75 46				jnz	loc_1917		; Jump if not zero
020C:BB20  A1 3D5B				mov	ax,data_628		; (020C:3D5B=0)
020C:BB23  3D FFFF				cmp	ax,0FFFFh
020C:BB26  75 3E				jne	loc_1917		; Jump if not equal
020C:BB28  A1 2334				mov	ax,data_471		; (020C:2334=0)
020C:BB2B  F6 06 230A 08			test	byte ptr ds:[230Ah],8	; (020C:230A=0)
020C:BB30  74 34				jz	loc_1917		; Jump if zero
020C:BB32  8A 0E 2345				mov	cl,data_477		; (020C:2345=0)
020C:BB36  80 F9 26				cmp	cl,26h			; '&'
020C:BB39  75 05				jne	loc_1913		; Jump if not equal
020C:BB3B  A1 2332				mov	ax,data_470		; (020C:2332=0)
020C:BB3E  EB 26				jmp	short loc_1917		; (BB66)
020C:BB40			loc_1913:
020C:BB40  80 F9 2E				cmp	cl,2Eh			; '.'
020C:BB43  75 05				jne	loc_1914		; Jump if not equal
020C:BB45  A1 2154				mov	ax,data_379		; (020C:2154=5CE9h)
020C:BB48  EB 1C				jmp	short loc_1917		; (BB66)
020C:BB4A			loc_1914:
020C:BB4A  80 F9 36				cmp	cl,36h			; '6'
020C:BB4D  75 05				jne	loc_1915		; Jump if not equal
020C:BB4F  A1 233A				mov	ax,data_474		; (020C:233A=0)
020C:BB52  EB 12				jmp	short loc_1917		; (BB66)
020C:BB54			loc_1915:
020C:BB54  80 F9 64				cmp	cl,64h			; 'd'
020C:BB57  75 05				jne	loc_1916		; Jump if not equal
020C:BB59  A1 2336				mov	ax,data_472		; (020C:2336=0)
020C:BB5C  EB 08				jmp	short loc_1917		; (BB66)
020C:BB5E			loc_1916:
020C:BB5E  80 F9 65				cmp	cl,65h			; 'e'
020C:BB61  75 03				jne	loc_1917		; Jump if not equal
020C:BB63  A1 2338				mov	ax,data_473		; (020C:2338=0)
020C:BB66			loc_1917:
020C:BB66  89 45 0A				mov	[di+0Ah],ax
020C:BB69			loc_1918:
020C:BB69  F7 06 3D18 4000			test	data_594,4000h		; (020C:3D18=2680h)
020C:BB6F  74 03				jz	loc_1919		; Jump if zero
020C:BB71  E9 00E9				jmp	loc_1933		; (BC5D)
020C:BB74			loc_1919:
020C:BB74  E8 CD19				call	sub_107			; (8890)
020C:BB77  8B D8				mov	bx,ax
020C:BB79  BF 4165				mov	di,4165h
020C:BB7C  2E: A1 8330				mov	ax,word ptr cs:[8330h]	; (020C:8330=1EC0h)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 390

020C:BB80  89 1D				mov	[di],bx
020C:BB82  89 45 02				mov	[di+2],ax
020C:BB85  80 3E 163F 01			cmp	data_174,1		; (020C:163F=0)
020C:BB8A  77 04				ja	loc_1920		; Jump if above
020C:BB8C  80 4D 05 01				or	byte ptr [di+5],1
020C:BB90			loc_1920:
020C:BB90  F7 06 3D57 0020			test	data_627,20h		; (020C:3D57=0)
020C:BB96  75 52				jnz	loc_1925		; Jump if not zero
020C:BB98  F7 06 3D57 0040			test	data_627,40h		; (020C:3D57=0)
020C:BB9E  75 08				jnz	loc_1921		; Jump if not zero
020C:BBA0  F7 06 3D57 0080			test	data_627,80h		; (020C:3D57=0)
020C:BBA6  75 1A				jnz	loc_1923		; Jump if not zero
020C:BBA8			loc_1921:
020C:BBA8  C6 06 3C07 00			mov	data_571,0		; (020C:3C07=0E8h)
020C:BBAD  BA 0001				mov	dx,1
020C:BBB0  E8 A97D				call	sub_69			; (6530)
020C:BBB3  73 03				jnc	loc_1922		; Jump if carry=0
020C:BBB5  E9 00A5				jmp	loc_1933		; (BC5D)
020C:BBB8			loc_1922:
020C:BBB8  BF 4165				mov	di,4165h
020C:BBBB  C6 45 04 40				mov	byte ptr [di+4],40h	; '@'
020C:BBBF  E9 0098				jmp	loc_1932		; (BC5A)
020C:BBC2			loc_1923:
020C:BBC2  BA 0004				mov	dx,4
020C:BBC5  E8 A968				call	sub_69			; (6530)
020C:BBC8  73 03				jnc	loc_1924		; Jump if carry=0
020C:BBCA  E9 0090				jmp	loc_1933		; (BC5D)
020C:BBCD			loc_1924:
020C:BBCD  BF 4165				mov	di,4165h
020C:BBD0  C6 45 04 43				mov	byte ptr [di+4],43h	; 'C'
020C:BBD4  80 4D 05 08				or	byte ptr [di+5],8
020C:BBD8  57					push	di
020C:BBD9  1E					push	ds
020C:BBDA  07					pop	es
020C:BBDB  83 C7 09				add	di,9
020C:BBDE  BE 2314				mov	si,2314h
020C:BBE1  B9 0029				mov	cx,29h
020C:BBE4  FC					cld				; Clear direction
020C:BBE5  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:BBE7  5F					pop	di
020C:BBE8  EB 70				jmp	short loc_1932		; (BC5A)
020C:BBEA			loc_1925:
020C:BBEA  BA 0002				mov	dx,2
020C:BBED  E8 A940				call	sub_69			; (6530)
020C:BBF0  72 6B				jc	loc_1933		; Jump if carry Set
020C:BBF2  BF 4165				mov	di,4165h
020C:BBF5  8A 0E 3D65				mov	cl,data_629		; (020C:3D65=80h)
020C:BBF9  88 4D 04				mov	[di+4],cl
020C:BBFC  80 E1 23				and	cl,23h			; '#'
020C:BBFF  80 F9 20				cmp	cl,20h			; ' '
020C:BC02  75 46				jne	loc_1930		; Jump if not equal
020C:BC04  C6 45 04 60				mov	byte ptr [di+4],60h	; '`'
020C:BC08  57					push	di
020C:BC09  06					push	es
020C:BC0A  B9 01F4				mov	cx,1F4h
020C:BC0D  8E C3				mov	es,bx
020C:BC0F  8B F8				mov	di,ax
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 391

020C:BC11  26: 80 3D 00				cmp	byte ptr es:[di],0
020C:BC15  75 0B				jne	loc_1926		; Jump if not equal
020C:BC17  07					pop	es
020C:BC18  5F					pop	di
020C:BC19  B9 0001				mov	cx,1
020C:BC1C  C6 45 04 41				mov	byte ptr [di+4],41h	; 'A'
020C:BC20  EB 21				jmp	short loc_1929		; (BC43)
020C:BC22			loc_1926:
020C:BC22  3D FE0B				cmp	ax,0FE0Bh
020C:BC25  76 06				jbe	loc_1927		; Jump if below or =
020C:BC27  B9 FFFF				mov	cx,0FFFFh
020C:BC2A  2B C8				sub	cx,ax
020C:BC2C  41					inc	cx
020C:BC2D			loc_1927:
020C:BC2D  32 C0				xor	al,al			; Zero register
020C:BC2F  F6 06 3D65 08			test	data_629,8		; (020C:3D65=80h)
020C:BC34  74 02				jz	loc_1928		; Jump if zero
020C:BC36  B0 24				mov	al,24h			; '$'
020C:BC38			loc_1928:
020C:BC38  51					push	cx
020C:BC39  FC					cld				; Clear direction
020C:BC3A  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020C:BC3C  58					pop	ax
020C:BC3D  2B C1				sub	ax,cx
020C:BC3F  8B C8				mov	cx,ax
020C:BC41  07					pop	es
020C:BC42  5F					pop	di
020C:BC43			loc_1929:
020C:BC43  C7 45 06 0000			mov	word ptr [di+6],0
020C:BC48  EB 09				jmp	short loc_1931		; (BC53)
020C:BC4A			loc_1930:
020C:BC4A  8B 0E 3D66				mov	cx,data_630		; (020C:3D66=4FBh)
020C:BC4E  C7 45 06 1000			mov	word ptr [di+6],1000h
020C:BC53			loc_1931:
020C:BC53  89 4D 08				mov	[di+8],cx
020C:BC56  80 4D 05 04				or	byte ptr [di+5],4
020C:BC5A			loc_1932:
020C:BC5A  E8 CC33				call	sub_107			; (8890)
020C:BC5D			loc_1933:
020C:BC5D  C6 06 3C07 00			mov	data_571,0		; (020C:3C07=0E8h)
020C:BC62  8F 06 2FAE				pop	data_525		; (020C:2FAE=0DA5h)
020C:BC66  8F 06 2FB0				pop	data_526		; (020C:2FB0=0DC3h)
020C:BC6A  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:BC6F  9C					pushf				; Push flags
020C:BC70  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:BC75  5A					pop	dx
020C:BC76  8E C2				mov	es,dx
020C:BC78  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:BC7D  5A					pop	dx
020C:BC7E  75 0A				jnz	loc_1934		; Jump if not zero
020C:BC80  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:BC85  74 03				je	loc_1934		; Jump if equal
020C:BC87  E8 C226				call	sub_97			; (7EB0)
020C:BC8A			loc_1934:
020C:BC8A  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:BC8F  9D					popf				; Pop flags
020C:BC90  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 392

020C:BC95  5D					pop	bp
020C:BC96  5F					pop	di
020C:BC97  5E					pop	si
020C:BC98  5A					pop	dx
020C:BC99  59					pop	cx
020C:BC9A  5B					pop	bx
020C:BC9B  58					pop	ax
020C:BC9C  C3					retn
				sub_132		endp

							                        ;* No entry point to code
020C:BC9D  50					push	ax
020C:BC9E  83 B8 EC83 83			cmp	data_916[bx+si],0FF83h	; (020C:EC83=1701h)
020C:BCA3  84 83 8488				test	al,[bp+di-7B78h]
020C:BCA7  B0 84				mov	al,84h
020C:BCA9  54					push	sp
020C:BCAA  84 20				test	ah,[bx+si]
020C:BCAC  84 87 90DB				test	al,data_811[bx]		; (020C:90DB=26h)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:BCB0			sub_136		proc	near
020C:BCB0  53					push	bx
020C:BCB1  33 DB				xor	bx,bx			; Zero register
020C:BCB3  8A D8				mov	bl,al
020C:BCB5  D1 E3				shl	bx,1			; Shift w/zeros fill
020C:BCB7  2E: FF 97 875D			call	cs:data_803[bx]		;*(020C:875D=1BAh)
020C:BCBC  5B					pop	bx
020C:BCBD  C3					retn
				sub_136		endp

							                        ;* No entry point to code
020C:BCBE  50					push	ax
020C:BCBF  83 84 B883 83			add	data_874[si],0FF83h	; (020C:B883=5251h)
020C:BCC4  EC					in	al,dx			; port 0, DMA-1 bas&add ch 0
020C:BCC5  83 54 84 20				adc	word ptr [si-7Ch],20h
020C:BCC9  84 B0 5084				test	dh,byte ptr ds:[5084h][bx+si]	; (020C:5084=68h)
020C:BCCD  53					push	bx
020C:BCCE  51					push	cx
020C:BCCF  52					push	dx
020C:BCD0  56					push	si
020C:BCD1  57					push	di
020C:BCD2  55					push	bp
020C:BCD3  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:BCD8  1E					push	ds
020C:BCD9  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:BCDE  06					push	es
020C:BCDF  A1 217E				mov	ax,data_403		; (020C:217E=104h)
020C:BCE2  8B 1E 217C				mov	bx,data_402		; (020C:217C=2EFFh)
020C:BCE6  BA 0004				mov	dx,4
020C:BCE9  FF 36 2FB0				push	data_526		; (020C:2FB0=0DC3h)
020C:BCED  FF 36 2FAE				push	data_525		; (020C:2FAE=0DA5h)
020C:BCF1  E8 A83C				call	sub_69			; (6530)
020C:BCF4  8F 06 2FAE				pop	data_525		; (020C:2FAE=0DA5h)
020C:BCF8  8F 06 2FB0				pop	data_526		; (020C:2FB0=0DC3h)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 393

020C:BCFC  72 03				jc	loc_1936		; Jump if carry Set
020C:BCFE			loc_1935:
020C:BCFE  E9 00C9				jmp	loc_1945		; (BDCA)
020C:BD01			loc_1936:
020C:BD01  26: 8B 55 07				mov	dx,es:[di+7]
020C:BD05  F7 C2 0777				test	dx,777h
020C:BD09  74 F3				jz	loc_1935		; Jump if zero
020C:BD0B  8B C2				mov	ax,dx
020C:BD0D  25 000F				and	ax,0Fh
020C:BD10  A9 0007				test	ax,7
020C:BD13  74 30				jz	loc_1939		; Jump if zero
020C:BD15  8B 2E 2334				mov	bp,data_471		; (020C:2334=0)
020C:BD19  A9 0008				test	ax,8
020C:BD1C  74 04				jz	loc_1937		; Jump if zero
020C:BD1E  8B 2E 2332				mov	bp,data_470		; (020C:2332=0)
020C:BD22			loc_1937:
020C:BD22  89 2E 3D5B				mov	data_628,bp		; (020C:3D5B=0)
020C:BD26  8B D8				mov	bx,ax
020C:BD28  83 E3 07				and	bx,7
020C:BD2B  4B					dec	bx
020C:BD2C  D1 E3				shl	bx,1			; Shift w/zeros fill
020C:BD2E  C7 06 3D57 0020			mov	data_627,20h		; (020C:3D57=0)
020C:BD34  F7 C2 1000				test	dx,1000h
020C:BD38  74 06				jz	loc_1938		; Jump if zero
020C:BD3A  C7 06 3D57 0040			mov	data_627,40h		; (020C:3D57=0)
020C:BD40			loc_1938:
020C:BD40  2E: FF 97 877E			call	cs:data_804[bx]		;*(020C:877E=8A26h)
020C:BD45			loc_1939:
020C:BD45  8B C2				mov	ax,dx
020C:BD47  B1 04				mov	cl,4
020C:BD49  D3 C8				ror	ax,cl			; Rotate
020C:BD4B  25 000F				and	ax,0Fh
020C:BD4E  A9 0007				test	ax,7
020C:BD51  74 30				jz	loc_1942		; Jump if zero
020C:BD53  8B 2E 2334				mov	bp,data_471		; (020C:2334=0)
020C:BD57  A9 0008				test	ax,8
020C:BD5A  74 04				jz	loc_1940		; Jump if zero
020C:BD5C  8B 2E 2332				mov	bp,data_470		; (020C:2332=0)
020C:BD60			loc_1940:
020C:BD60  89 2E 3D5B				mov	data_628,bp		; (020C:3D5B=0)
020C:BD64  8B D8				mov	bx,ax
020C:BD66  83 E3 07				and	bx,7
020C:BD69  4B					dec	bx
020C:BD6A  D1 E3				shl	bx,1			; Shift w/zeros fill
020C:BD6C  C7 06 3D57 0020			mov	data_627,20h		; (020C:3D57=0)
020C:BD72  F7 C2 2000				test	dx,2000h
020C:BD76  74 06				jz	loc_1941		; Jump if zero
020C:BD78  C7 06 3D57 0040			mov	data_627,40h		; (020C:3D57=0)
020C:BD7E			loc_1941:
020C:BD7E  2E: FF 97 877E			call	cs:data_804[bx]		;*(020C:877E=8A26h)
020C:BD83			loc_1942:
020C:BD83  8B C2				mov	ax,dx
020C:BD85  B1 08				mov	cl,8
020C:BD87  D3 C8				ror	ax,cl			; Rotate
020C:BD89  25 000F				and	ax,0Fh
020C:BD8C  A9 0007				test	ax,7
020C:BD8F  74 39				jz	loc_1945		; Jump if zero
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 394

020C:BD91  26: 8B 2D				mov	bp,es:[di]
020C:BD94  F7 C2 8000				test	dx,8000h
020C:BD98  75 0D				jnz	loc_1943		; Jump if not zero
020C:BD9A  8B 2E 2334				mov	bp,data_471		; (020C:2334=0)
020C:BD9E  A9 0008				test	ax,8
020C:BDA1  74 04				jz	loc_1943		; Jump if zero
020C:BDA3  8B 2E 2332				mov	bp,data_470		; (020C:2332=0)
020C:BDA7			loc_1943:
020C:BDA7  89 2E 3D5B				mov	data_628,bp		; (020C:3D5B=0)
020C:BDAB  8B D8				mov	bx,ax
020C:BDAD  83 E3 07				and	bx,7
020C:BDB0  4B					dec	bx
020C:BDB1  D1 E3				shl	bx,1			; Shift w/zeros fill
020C:BDB3  C7 06 3D57 0020			mov	data_627,20h		; (020C:3D57=0)
020C:BDB9  F7 C2 2000				test	dx,2000h
020C:BDBD  74 06				jz	loc_1944		; Jump if zero
020C:BDBF  C7 06 3D57 0040			mov	data_627,40h		; (020C:3D57=0)
020C:BDC5			loc_1944:
020C:BDC5  2E: FF 97 877E			call	cs:data_804[bx]		;*(020C:877E=8A26h)
020C:BDCA			loc_1945:
020C:BDCA  9A 1491:8990		;*		call	far ptr sub_256		;*(1491:8990)
020C:BDCA  9A					db	9Ah
020C:BDCB  8990 1491				dw	8990h, 1491h
020C:BDCF  C7 06 3D5B FFFF			mov	data_628,0FFFFh		; (020C:3D5B=0)
020C:BDD5  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:BDDA  9C					pushf				; Push flags
020C:BDDB  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:BDE0  5A					pop	dx
020C:BDE1  8E C2				mov	es,dx
020C:BDE3  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:BDE8  5A					pop	dx
020C:BDE9  75 0A				jnz	loc_1946		; Jump if not zero
020C:BDEB  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:BDF0  74 03				je	loc_1946		; Jump if equal
020C:BDF2  E8 C0BB				call	sub_97			; (7EB0)
020C:BDF5			loc_1946:
020C:BDF5  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:BDFA  9D					popf				; Pop flags
020C:BDFB  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:BE00  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:BE05  9C					pushf				; Push flags
020C:BE06  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:BE0B  5A					pop	dx
020C:BE0C  8E DA				mov	ds,dx
020C:BE0E  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:BE13  5A					pop	dx
020C:BE14  75 0A				jnz	loc_1947		; Jump if not zero
020C:BE16  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:BE1B  74 03				je	loc_1947		; Jump if equal
020C:BE1D  E8 C090				call	sub_97			; (7EB0)
020C:BE20			loc_1947:
020C:BE20  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:BE25  9D					popf				; Pop flags
020C:BE26  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:BE2B  5D					pop	bp
020C:BE2C  5F					pop	di
020C:BE2D  5E					pop	si
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 395

020C:BE2E  5A					pop	dx
020C:BE2F  59					pop	cx
020C:BE30  5B					pop	bx
020C:BE31  58					pop	ax
020C:BE32  C3					retn
020C:BE33  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:BE34			sub_137		proc	near
020C:BE34  A0 1D60				mov	al,data_320		; (020C:1D60=0)
020C:BE37  24 07				and	al,7
020C:BE39  3C 07				cmp	al,7
020C:BE3B  75 05				jne	loc_1948		; Jump if not equal
020C:BE3D  E8 FB20				call	sub_133			; (B960)
020C:BE40  EB 19				jmp	short loc_1951		; (BE5B)
020C:BE42			loc_1948:
020C:BE42  3C 06				cmp	al,6
020C:BE44  75 05				jne	loc_1949		; Jump if not equal
020C:BE46  E8 FB4B				call	sub_134			; (B994)
020C:BE49  EB 10				jmp	short loc_1951		; (BE5B)
020C:BE4B			loc_1949:
020C:BE4B  3C 03				cmp	al,3
020C:BE4D  75 05				jne	loc_1950		; Jump if not equal
020C:BE4F  E8 FA72				call	sub_132			; (B8C4)
020C:BE52  EB 07				jmp	short loc_1951		; (BE5B)
020C:BE54			loc_1950:
020C:BE54  3C 05				cmp	al,5
020C:BE56  75 03				jne	loc_1951		; Jump if not equal
020C:BE58  E8 FB95				call	sub_135			; (B9F0)
020C:BE5B			loc_1951:
020C:BE5B  CB					retf				; Return far
				sub_137		endp

020C:BE5C  00					db	0
020C:BE5D  00 00				add	[bx+si],al
020C:BE5F  00 01				add	[bx+di],al
020C:BE61  87 DB				xchg	bx,bx
020C:BE63  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:BE64			sub_138		proc	near
020C:BE64  C6 06 1D1E 00			mov	data_286,0		; (020C:1D1E=0)
020C:BE69  C6 06 4219 00			mov	byte ptr ds:[4219h],0	; (020C:4219=94h)
020C:BE6E  C7 06 2FB6 0000			mov	data_529,0		; (020C:2FB6=0DEEh)
020C:BE74  C6 06 2FA1 00			mov	data_519,0		; (020C:2FA1=0Ch)
020C:BE79  88 3E 1D24				mov	data_291,bh		; (020C:1D24=0)
020C:BE7D  2E: 88 16 8920			mov	byte ptr cs:[8920h],dl	; (020C:8920=0F0h)
020C:BE82  B6 00				mov	dh,0
020C:BE84  8A C2				mov	al,dl
020C:BE86  8A D8				mov	bl,al
020C:BE88			loc_1952:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 396

020C:BE88  50					push	ax
020C:BE89  56					push	si
020C:BE8A  32 E4				xor	ah,ah			; Zero register
020C:BE8C  BE 8962				mov	si,8962h
020C:BE8F  03 F0				add	si,ax
020C:BE91  2E: 8A 04				mov	al,cs:[si]
020C:BE94  D1 E0				shl	ax,1			; Shift w/zeros fill
020C:BE96  BE 8A62				mov	si,8A62h
020C:BE99  03 F0				add	si,ax
020C:BE9B  2E: 8B 0C				mov	cx,cs:[si]
020C:BE9E  5E					pop	si
020C:BE9F  58					pop	ax
020C:BEA0  51					push	cx
020C:BEA1  C3					retn
				sub_138		endp

020C:BEA2  00 01				add	[bx+di],al
020C:BEA4  02 03				add	al,[bp+di]
020C:BEA6  0007[03]				db	7 dup (3)
020C:BEAD  0008[04]				db	8 dup (4)
020C:BEB5  0008[07]				db	8 dup (7)
020C:BEBD  0008[16]				db	8 dup (16h)
020C:BEC5  1C 1C				sbb	al,1Ch
020C:BEC7  1C 05				sbb	al,5
020C:BEC9  06					push	es
020C:BECA  08 09				or	[bx+di],cl
020C:BECC  23 06 0000				and	ax,word ptr ds:[0]	; (020C:0000=1828h)
020C:BED0  00 00				add	[bx+si],al
020C:BED2  00 0A				add	[bp+si],cl
020C:BED4  0A 00				or	al,[bx+si]
020C:BED6  00 0A				add	[bp+si],cl
020C:BED8  0A 22				or	ah,[bp+si]
020C:BEDA  00					db	0
020C:BEDB  00					db	0
020C:BEDC  00 00				add	[bx+si],al
020C:BEDE  00 0B				add	[bp+di],cl
020C:BEE0  0C 00				or	al,0
020C:BEE2  0D 000D				or	ax,0Dh
020C:BEE5  00 0D				add	[di],cl
020C:BEE7  0D 0D0D				or	ax,0D0Dh
020C:BEEA  0D 000D				or	ax,0Dh
020C:BEED  00					db	0
020C:BEEE  00					db	0
020C:BEEF  00 00				add	[bx+si],al
020C:BEF1  00 0E 0E0E				add	data_131,cl		; (020C:0E0E=5Eh)
020C:BEF5  0009[0E]				db	9 dup (0Eh)
020C:BEFE  24 24				and	al,24h			; '$'
020C:BF00  24 0F				and	al,0Fh
020C:BF02  10 10				adc	[bx+si],dl
020C:BF04  1A 10				sbb	dl,[bx+si]
020C:BF06  1F					pop	ds
020C:BF07  1F					pop	ds
020C:BF08  10 00				adc	[bx+si],al
020C:BF0A  05 1D06				add	ax,1D06h
020C:BF0D  1E					push	ds
020C:BF0E  00 00				add	[bx+si],al
020C:BF10  00 21				add	[bx+di],ah
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 397

020C:BF12  0008[12]				db	8 dup (12h)
020C:BF1A  00 00				add	[bx+si],al
020C:BF1C  11 11				adc	[bx+di],dx
020C:BF1E  11 11				adc	[bx+di],dx
020C:BF20  11 11				adc	[bx+di],dx
020C:BF22  0008[1B]				db	8 dup (1Bh)
020C:BF2A  000E[13]				db	14 dup (13h)
020C:BF38  17					pop	ss
020C:BF39  17					pop	ss
020C:BF3A  17					pop	ss
020C:BF3B  00 18				add	[bx+si],bl
020C:BF3D  18 18				sbb	[bx+si],bl
020C:BF3F  18 18				sbb	[bx+si],bl
020C:BF41  18 13				sbb	[bp+di],dl
020C:BF43  0007[13]				db	7 dup (13h)
020C:BF4A  20 20				and	[bx+si],ah
020C:BF4C  00					db	0
020C:BF4D  00					db	0
020C:BF4E  00					db	0
020C:BF4F  00 00				add	[bx+si],al
020C:BF51  00 14				add	[si],dl
020C:BF53  0007[14]				db	7 dup (14h)
020C:BF5A  00 00				add	[bx+si],al
020C:BF5C  19 19				sbb	[bx+di],bx
020C:BF5E  19 19				sbb	[bx+di],bx
020C:BF60			loc_1953:
020C:BF60  19 15				sbb	[di],dx
020C:BF62			loc_1954:
020C:BF62  0020[00]				db	32 dup (0)
020C:BF82  0008[13]				db	8 dup (13h)
020C:BF8A  0018[00]				db	24 dup (0)
020C:BFA2  27					daa				; Decimal adjust
020C:BFA3  A7					cmpsw				; Cmp [si] to es:[di]
020C:BFA4  AC					lodsb				; String [si] to al
020C:BFA5  8A BB E68A				mov	bh,[bp+di-1976h]
020C:BFA9  95					xchg	bp,ax
020C:BFAA  4D					dec	bp
020C:BFAB  96					xchg	si,ax
020C:BFAC  CD 8A				int	8Ah			; ??INT Non-standard interrupt
020C:BFAE  DC					db	0DCh
020C:BFAF  8A A3 5296				mov	ah,[bp+di+5296h]
020C:BFB3  8B 61 8B				mov	sp,[bx+di-75h]
020C:BFB6  B3 9A				mov	bl,9Ah
020C:BFB8  9A A69A:839D		;*		call	far ptr sub_279		;*(A69A:839D)
020C:BFB8  9A					db	9Ah
020C:BFB9  839D A69A				dw	839Dh, 0A69Ah
020C:BFBD  9F					lahf				; Load ah from flags
020C:BFBE  05 5091				add	ax,5091h
020C:BFC1  91					xchg	cx,ax
020C:BFC2  F8					clc				; Clear carry flag
020C:BFC3  8C D8				mov	ax,ds
020C:BFC5  A5					movsw				; Mov [si] to es:[di]
020C:BFC6  92					xchg	dx,ax
020C:BFC7  A5					movsw				; Mov [si] to es:[di]
020C:BFC8  92					xchg	dx,ax
020C:BFC9  8B D3				mov	dx,bx
020C:BFCB  8C CB				mov	bx,cs
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 398

020C:BFCD  8C					db	8Ch
020C:BFCE  71 9A		;*		jno	loc_1955		;*Jump if not overflw
020C:BFCE  71 9A				db	 71h, 9Ah
020C:BFD0  64					db	64h
020C:BFD1  8C					db	8Ch
020C:BFD2  7E 8C				jle	loc_1953		; Jump if < or =
020C:BFD4  73 8C				jnc	loc_1954		; Jump if carry=0
020C:BFD6  A3 2D90				mov	word ptr ds:[2D90h],ax	; (0000:2D90=0EBFBh)
020C:BFD9  8B AA 728C				mov	bp,[bp+si+728Ch]
020C:BFDD  8B 81 EE8B				mov	ax,word ptr ds:[0EE8Bh][bx+di]	; (0000:EE8B=0E806h)
020C:BFE1  90					nop
020C:BFE2  3D 7F8C				cmp	ax,7F8Ch
020C:BFE5  A5					movsw				; Mov [si] to es:[di]
020C:BFE6  BC 0CA8				mov	sp,0CA8h
020C:BFE9  A7					cmpsw				; Cmp [si] to es:[di]
020C:BFEA  CA C693				retf	0C693h
							                        ;* No entry point to code
020C:BFED  06					push	es
020C:BFEE  20 1D				and	[di],bl
020C:BFF0  01 26 5C8A				add	word ptr ds:[5C8Ah],sp	; (020C:5C8A=0E824h)
020C:BFF4  01 B1 D203				add	data_890[bx+di],si	; (020C:D203=802Ah)
020C:BFF8  CB					retf
							                        ;* No entry point to code
020C:BFF9  EB 09				jmp	short loc_1956		; (C004)
							                        ;* No entry point to code
020C:BFFB  C6 06 1D20 01			mov	data_287,1		; (020C:1D20=0)
020C:C000  26: 8A 5C 01				mov	bl,es:[si+1]
020C:C004			loc_1956:
020C:C004  80 E3 07				and	bl,7
020C:C007  80 C3 88				add	bl,88h
020C:C00A  E9 00C5				jmp	loc_1966		; (C0D2)
020C:C00D			loc_1957:
020C:C00D  C6 06 1D20 01			mov	data_287,1		; (020C:1D20=0)
020C:C012  26: 8A 5C 01				mov	bl,es:[si+1]
020C:C016  B1 03				mov	cl,3
020C:C018  D2 CB				ror	bl,cl			; Rotate
020C:C01A  EB 4B				jmp	short loc_1961		; (C067)
							                        ;* No entry point to code
020C:C01C  80 FA 2B				cmp	dl,2Bh			; '+'
020C:C01F  75 22				jne	loc_1959		; Jump if not equal
020C:C021  26: 8A 5C 01				mov	bl,es:[si+1]
020C:C025  8A C3				mov	al,bl
020C:C027  80 E3 07				and	bl,7
020C:C02A  B1 03				mov	cl,3
020C:C02C  D2 E8				shr	al,cl			; Shift w/zeros fill
020C:C02E  24 07				and	al,7
020C:C030  3A C3				cmp	al,bl
020C:C032  75 0F				jne	loc_1959		; Jump if not equal
020C:C034  4D					dec	bp
020C:C035  F7 06 3D1D 4000			test	data_597,4000h		; (020C:3D1D=0D4E8h)
020C:C03B  74 01				jz	loc_1958		; Jump if zero
020C:C03D  4D					dec	bp
020C:C03E			loc_1958:
020C:C03E  B6 00				mov	dh,0
020C:C040  E9 1C0F				jmp	loc_2308		; (DC52)
020C:C043			loc_1959:
020C:C043  F7 06 3D57 0004			test	data_627,4		; (020C:3D57=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 399

020C:C049  74 13				jz	loc_1960		; Jump if zero
020C:C04B  26: 8A 5C 01				mov	bl,es:[si+1]
020C:C04F  80 E3 07				and	bl,7
020C:C052  80 3E 178A 06			cmp	data_190,6		; (020C:178A=0)
020C:C057  72 05				jb	loc_1960		; Jump if below
020C:C059  8A C3				mov	al,bl
020C:C05B  E8 FC52				call	sub_136			; (BCB0)
020C:C05E			loc_1960:
020C:C05E  C6 06 1D20 01			mov	data_287,1		; (020C:1D20=0)
020C:C063  26: 8A 5C 01				mov	bl,es:[si+1]
020C:C067			loc_1961:
020C:C067  80 E3 07				and	bl,7
020C:C06A  80 C3 80				add	bl,80h
020C:C06D  0C 01				or	al,1
020C:C06F  3C 69				cmp	al,69h			; 'i'
020C:C071  74 1D				je	loc_1963		; Jump if equal
020C:C073  80 FA 82				cmp	dl,82h
020C:C076  75 0E				jne	loc_1962		; Jump if not equal
020C:C078  80 3E 1D44 50			cmp	data_308,50h		; (020C:1D44=0) 'P'
020C:C07D  74 11				je	loc_1963		; Jump if equal
020C:C07F  80 3E 1D44 52			cmp	data_308,52h		; (020C:1D44=0) 'R'
020C:C084  74 0A				je	loc_1963		; Jump if equal
020C:C086			loc_1962:
020C:C086  F6 06 2308 01			test	data_455,1		; (020C:2308=0)
020C:C08B  74 03				jz	loc_1963		; Jump if zero
020C:C08D  80 C3 20				add	bl,20h			; ' '
020C:C090			loc_1963:
020C:C090  EB 40				jmp	short loc_1966		; (C0D2)
							                        ;* No entry point to code
020C:C092  C6 06 1D20 01			mov	data_287,1		; (020C:1D20=0)
020C:C097  26: 8A 5C 01				mov	bl,es:[si+1]
020C:C09B  B1 03				mov	cl,3
020C:C09D  D2 CB				ror	bl,cl			; Rotate
020C:C09F  EB 09				jmp	short loc_1964		; (C0AA)
							                        ;* No entry point to code
020C:C0A1  C6 06 1D20 01			mov	data_287,1		; (020C:1D20=0)
020C:C0A6  26: 8A 5C 01				mov	bl,es:[si+1]
020C:C0AA			loc_1964:
020C:C0AA  80 E3 07				and	bl,7
020C:C0AD  80 C3 90				add	bl,90h
020C:C0B0  EB 20				jmp	short loc_1966		; (C0D2)
							                        ;* No entry point to code
020C:C0B2  C6 06 1D20 01			mov	data_287,1		; (020C:1D20=0)
020C:C0B7  26: 8A 5C 01				mov	bl,es:[si+1]
020C:C0BB  B1 03				mov	cl,3
020C:C0BD  D2 CB				ror	bl,cl			; Rotate
020C:C0BF  EB 09				jmp	short loc_1965		; (C0CA)
							                        ;* No entry point to code
020C:C0C1  C6 06 1D20 01			mov	data_287,1		; (020C:1D20=0)
020C:C0C6  26: 8A 5C 01				mov	bl,es:[si+1]
020C:C0CA			loc_1965:
020C:C0CA  80 E3 07				and	bl,7
020C:C0CD  80 C3 A0				add	bl,0A0h
020C:C0D0  EB 00				jmp	short loc_1966		; (C0D2)
020C:C0D2			loc_1966:
020C:C0D2  80 3E 2346 01			cmp	data_478,1		; (020C:2346=0)
020C:C0D7  75 09				jne	loc_1967		; Jump if not equal
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 400

020C:C0D9  F6 06 1D47 04			test	data_311,4		; (020C:1D47=0)
020C:C0DE  74 16				jz	loc_1969		; Jump if zero
020C:C0E0  EB 0E				jmp	short loc_1968		; (C0F0)
020C:C0E2			loc_1967:
020C:C0E2  80 3E 2346 02			cmp	data_478,2		; (020C:2346=0)
020C:C0E7  75 0D				jne	loc_1969		; Jump if not equal
020C:C0E9  F6 06 1D47 02			test	data_311,2		; (020C:1D47=0)
020C:C0EE  74 06				jz	loc_1969		; Jump if zero
020C:C0F0			loc_1968:
020C:C0F0  80 E3 0F				and	bl,0Fh
020C:C0F3  80 CB C0				or	bl,0C0h
020C:C0F6			loc_1969:
020C:C0F6  80 3E 2348 02			cmp	data_479,2		; (020C:2348=0)
020C:C0FB  75 07				jne	loc_1970		; Jump if not equal
020C:C0FD  80 FB 84				cmp	bl,84h
020C:C100  75 2D				jne	loc_1974		; Jump if not equal
020C:C102  EB 0C				jmp	short loc_1971		; (C110)
020C:C104			loc_1970:
020C:C104  80 3E 2348 03			cmp	data_479,3		; (020C:2348=0)
020C:C109  75 24				jne	loc_1974		; Jump if not equal
020C:C10B  80 FB 92				cmp	bl,92h
020C:C10E  75 0E				jne	loc_1972		; Jump if not equal
020C:C110			loc_1971:
020C:C110  80 3E 234C 01			cmp	data_482,1		; (020C:234C=0)
020C:C115  74 13				je	loc_1973		; Jump if equal
020C:C117  C6 06 2348 04			mov	data_479,4		; (020C:2348=0)
020C:C11C  EB 11				jmp	short loc_1974		; (C12F)
020C:C11E			loc_1972:
020C:C11E  80 3E 2346 01			cmp	data_478,1		; (020C:2346=0)
020C:C123  75 0A				jne	loc_1974		; Jump if not equal
020C:C125  80 FB 91				cmp	bl,91h
020C:C128  75 05				jne	loc_1974		; Jump if not equal
020C:C12A			loc_1973:
020C:C12A  C6 06 2348 00			mov	data_479,0		; (020C:2348=0)
020C:C12F			loc_1974:
020C:C12F  32 FF				xor	bh,bh			; Zero register
020C:C131  80 FB E0				cmp	bl,0E0h
020C:C134  73 2B				jae	loc_1976		; Jump if above or =
020C:C136  80 FB C0				cmp	bl,0C0h
020C:C139  73 60				jae	loc_1978		; Jump if above or =
020C:C13B  80 FB 97				cmp	bl,97h
020C:C13E  76 0B				jbe	loc_1975		; Jump if below or =
020C:C140  A0 23ED				mov	al,byte ptr ds:[23EDh]	; (020C:23ED=54h)
020C:C143  3E: 88 46 00				mov	ds:[bp],al
020C:C147  45					inc	bp
020C:C148  80 EB 20				sub	bl,20h			; ' '
020C:C14B			loc_1975:
020C:C14B  80 EB 80				sub	bl,80h
020C:C14E  88 1E 3D56				mov	data_626,bl		; (020C:3D56=0)
020C:C152  D0 E3				shl	bl,1			; Shift w/zeros fill
020C:C154  81 C3 2350				add	bx,2350h
020C:C158  8B 07				mov	ax,[bx]
020C:C15A  3E: 89 46 00				mov	ds:[bp],ax
020C:C15E  45					inc	bp
020C:C15F  EB 16				jmp	short loc_1977		; (C177)
020C:C161			loc_1976:
020C:C161  81 C3 233D				add	bx,233Dh
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 401

020C:C165  8A 07				mov	al,[bx]
020C:C167  3E: 88 46 00				mov	ds:[bp],al
020C:C16B  80 3E 1D44 EF			cmp	data_308,0EFh		; (020C:1D44=0)
020C:C170  75 05				jne	loc_1977		; Jump if not equal
020C:C172  C6 06 1D20 01			mov	data_287,1		; (020C:1D20=0)
020C:C177			loc_1977:
020C:C177  45					inc	bp
020C:C178  B6 00				mov	dh,0
020C:C17A  E9 1AD5				jmp	loc_2308		; (DC52)
							                        ;* No entry point to code
020C:C17D  80 EB A8				sub	bl,0A8h
020C:C180  80 C3 14				add	bl,14h
020C:C183  D0 E3				shl	bl,1			; Shift w/zeros fill
020C:C185  81 C3 2350				add	bx,2350h
020C:C189  8B 07				mov	ax,[bx]
020C:C18B  3E: 89 46 00				mov	ds:[bp],ax
020C:C18F  C6 06 1D20 00			mov	data_287,0		; (020C:1D20=0)
020C:C194  45					inc	bp
020C:C195  45					inc	bp
020C:C196  B6 00				mov	dh,0
020C:C198  E9 1AB7				jmp	loc_2308		; (DC52)
020C:C19B			loc_1978:
020C:C19B  8A C3				mov	al,bl
020C:C19D  2C C0				sub	al,0C0h
020C:C19F  BB 2405				mov	bx,2405h
020C:C1A2  EB 29				jmp	short loc_1981		; (C1CD)
							                        ;* No entry point to code
020C:C1A4  8A C3				mov	al,bl
020C:C1A6  2C 96				sub	al,96h
020C:C1A8  3C 00				cmp	al,0
020C:C1AA  74 02				je	loc_1979		; Jump if equal
020C:C1AC  04 01				add	al,1
020C:C1AE			loc_1979:
020C:C1AE  BB 2380				mov	bx,2380h
020C:C1B1  EB 1A				jmp	short loc_1981		; (C1CD)
							                        ;* No entry point to code
020C:C1B3  8A C3				mov	al,bl
020C:C1B5  2C BA				sub	al,0BAh
020C:C1B7  04 03				add	al,3
020C:C1B9  BB 23D5				mov	bx,23D5h
020C:C1BC  EB 0F				jmp	short loc_1981		; (C1CD)
							                        ;* No entry point to code
020C:C1BE  8A C3				mov	al,bl
020C:C1C0  2C 9A				sub	al,9Ah
020C:C1C2  3C 03				cmp	al,3
020C:C1C4  76 02				jbe	loc_1980		; Jump if below or =
020C:C1C6  04 02				add	al,2
020C:C1C8			loc_1980:
020C:C1C8  BB 2398				mov	bx,2398h
020C:C1CB  EB 00				jmp	short loc_1981		; (C1CD)
020C:C1CD			loc_1981:
020C:C1CD  32 E4				xor	ah,ah			; Zero register
020C:C1CF  24 07				and	al,7
020C:C1D1  03 D8				add	bx,ax
020C:C1D3  03 D8				add	bx,ax
020C:C1D5  03 D8				add	bx,ax
020C:C1D7  8B 07				mov	ax,[bx]
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 402

020C:C1D9  3E: 89 46 00				mov	ds:[bp],ax
020C:C1DD  45					inc	bp
020C:C1DE  45					inc	bp
020C:C1DF  8A 47 02				mov	al,[bx+2]
020C:C1E2  3E: 88 46 00				mov	ds:[bp],al
020C:C1E6  45					inc	bp
020C:C1E7  E9 1A68				jmp	loc_2308		; (DC52)
							                        ;* No entry point to code
020C:C1EA  8A C3				mov	al,bl
020C:C1EC  BB 2380				mov	bx,2380h
020C:C1EF  3C 23				cmp	al,23h			; '#'
020C:C1F1  74 0A				je	loc_1982		; Jump if equal
020C:C1F3  BB 2398				mov	bx,2398h
020C:C1F6  3C 24				cmp	al,24h			; '$'
020C:C1F8  74 03				je	loc_1982		; Jump if equal
020C:C1FA  BB 23D5				mov	bx,23D5h
020C:C1FD			loc_1982:
020C:C1FD  26: 8A 44 01				mov	al,es:[si+1]
020C:C201  D0 C8				ror	al,1			; Rotate
020C:C203  D0 C8				ror	al,1			; Rotate
020C:C205  D0 C8				ror	al,1			; Rotate
020C:C207  24 07				and	al,7
020C:C209  EB C2				jmp	short loc_1981		; (C1CD)
							                        ;* No entry point to code
020C:C20B  26: 8A 44 01				mov	al,es:[si+1]
020C:C20F  24 07				and	al,7
020C:C211  04 B0				add	al,0B0h
020C:C213  56					push	si
020C:C214  BE 23B0				mov	si,23B0h
020C:C217  B9 0002				mov	cx,2
020C:C21A  2C B0				sub	al,0B0h
020C:C21C  74 0C				jz	locloop_1983		; Jump if zero
020C:C21E  FE C8				dec	al
020C:C220  B9 0005				mov	cx,5
020C:C223  F6 E1				mul	cl			; ax = reg * al
020C:C225  05 23B2				add	ax,23B2h
020C:C228  8B F0				mov	si,ax

020C:C22A			locloop_1983:
020C:C22A  8A 04				mov	al,[si]
020C:C22C  3E: 88 46 00				mov	ds:[bp],al
020C:C230  46					inc	si
020C:C231  45					inc	bp
020C:C232  E2 F6				loop	locloop_1983		; Loop if cx > 0

020C:C234  5E					pop	si
020C:C235  E9 1A1A				jmp	loc_2308		; (DC52)
							                        ;* No entry point to code
020C:C238  9A 1491:6D08		;*		call	far ptr sub_232		;*(1491:6D08)
020C:C238  9A					db	9Ah
020C:C239  6D08 1491				dw	6D08h, 1491h
020C:C23D  26: 8A 5C 01				mov	bl,es:[si+1]
020C:C241  B2 36				mov	dl,36h			; '6'
020C:C243  B6 02				mov	dh,2
020C:C245  F6 06 2308 02			test	data_455,2		; (020C:2308=0)
020C:C24A  74 21				jz	loc_1985		; Jump if zero
020C:C24C  3C 63				cmp	al,63h			; 'c'
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 403

020C:C24E  75 1B				jne	loc_1984		; Jump if not equal
020C:C250  8A E3				mov	ah,bl
020C:C252  80 E4 C7				and	ah,0C7h
020C:C255  80 FC 05				cmp	ah,5
020C:C258  75 11				jne	loc_1984		; Jump if not equal
020C:C25A  C6 06 2FA1 18			mov	data_519,18h		; (020C:2FA1=0Ch)
020C:C25F  80 3E 1D44 4F			cmp	data_308,4Fh		; (020C:1D44=0) 'O'
020C:C264  74 05				je	loc_1984		; Jump if equal
020C:C266  80 0E 2FA1 02			or	data_519,2		; (020C:2FA1=0Ch)
020C:C26B			loc_1984:
020C:C26B  EB 4D				jmp	short loc_1992		; (C2BA)
020C:C26D			loc_1985:
020C:C26D  8A E3				mov	ah,bl
020C:C26F  80 E4 C7				and	ah,0C7h
020C:C272  80 FC 06				cmp	ah,6
020C:C275  75 21				jne	loc_1988		; Jump if not equal
020C:C277  3C 63				cmp	al,63h			; 'c'
020C:C279  75 34				jne	loc_1990		; Jump if not equal
020C:C27B  C6 06 2FA1 10			mov	data_519,10h		; (020C:2FA1=0Ch)
020C:C280  80 3E 1D44 4F			cmp	data_308,4Fh		; (020C:1D44=0) 'O'
020C:C285  74 05				je	loc_1986		; Jump if equal
020C:C287  80 0E 2FA1 02			or	data_519,2		; (020C:2FA1=0Ch)
020C:C28C			loc_1986:
020C:C28C  F6 C7 10				test	bh,10h
020C:C28F  74 05				jz	loc_1987		; Jump if zero
020C:C291  80 0E 2FA1 01			or	data_519,1		; (020C:2FA1=0Ch)
020C:C296			loc_1987:
020C:C296  EB 17				jmp	short loc_1990		; (C2AF)
020C:C298			loc_1988:
020C:C298  80 E4 C0				and	ah,0C0h
020C:C29B  80 FC 40				cmp	ah,40h			; '@'
020C:C29E  75 06				jne	loc_1989		; Jump if not equal
020C:C2A0  B2 32				mov	dl,32h			; '2'
020C:C2A2  B6 01				mov	dh,1
020C:C2A4  EB 09				jmp	short loc_1990		; (C2AF)
020C:C2A6			loc_1989:
020C:C2A6  80 FC 00				cmp	ah,0
020C:C2A9  75 04				jne	loc_1990		; Jump if not equal
020C:C2AB  B2 3D				mov	dl,3Dh			; '='
020C:C2AD  B6 00				mov	dh,0
020C:C2AF			loc_1990:
020C:C2AF  3C 61				cmp	al,61h			; 'a'
020C:C2B1  74 02				je	loc_1991		; Jump if equal
020C:C2B3  B6 00				mov	dh,0
020C:C2B5			loc_1991:
020C:C2B5  8A C2				mov	al,dl
020C:C2B7  E9 FBCE				jmp	loc_1952		; (BE88)
020C:C2BA			loc_1992:
020C:C2BA  C6 06 1D20 01			mov	data_287,1		; (020C:1D20=0)
020C:C2BF  88 1E 1D60				mov	data_320,bl		; (020C:1D60=0)
020C:C2C3  C6 06 1D62 00			mov	data_322,0		; (020C:1D62=0)
020C:C2C8  C6 06 230D 00			mov	data_458,0		; (020C:230D=0A7h)
020C:C2CD  C6 06 2312 00			mov	data_461,0		; (020C:2312=0)
020C:C2D2  C6 06 1D64 00			mov	data_324,0		; (020C:1D64=0)
020C:C2D7  C6 06 1D63 00			mov	data_323,0		; (020C:1D63=0)
020C:C2DC  C6 06 2348 00			mov	data_479,0		; (020C:2348=0)
020C:C2E1  8A 26 1D60				mov	ah,data_320		; (020C:1D60=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 404

020C:C2E5  80 E4 07				and	ah,7
020C:C2E8  80 FC 04				cmp	ah,4
020C:C2EB  75 11				jne	loc_1993		; Jump if not equal
020C:C2ED  26: 8A 64 02				mov	ah,es:[si+2]
020C:C2F1  88 26 1D61				mov	data_321,ah		; (020C:1D61=0)
020C:C2F5  C6 06 1D62 01			mov	data_322,1		; (020C:1D62=0)
020C:C2FA  FE 06 1D1E				inc	data_286		; (020C:1D1E=0)
020C:C2FE			loc_1993:
020C:C2FE  8A 26 1D60				mov	ah,data_320		; (020C:1D60=0)
020C:C302  80 E4 C7				and	ah,0C7h
020C:C305  80 FC 05				cmp	ah,5
020C:C308  74 75				je	loc_2001		; Jump if equal
020C:C30A  F6 C4 C0				test	ah,0C0h
020C:C30D  75 70				jnz	loc_2001		; Jump if not zero
020C:C30F  80 3E 1D62 01			cmp	data_322,1		; (020C:1D62=0)
020C:C314  75 11				jne	loc_1995		; Jump if not equal
020C:C316  8A 26 1D61				mov	ah,data_321		; (020C:1D61=0)
020C:C31A  80 E4 07				and	ah,7
020C:C31D  80 FC 05				cmp	ah,5
020C:C320  74 5D				je	loc_2001		; Jump if equal
020C:C322  EB 03				jmp	short loc_1995		; (C327)
020C:C324			loc_1994:
020C:C324  E9 0297				jmp	loc_2030		; (C5BE)
020C:C327			loc_1995:
020C:C327  80 26 1D63 FE			and	data_323,0FEh		; (020C:1D63=0)
020C:C32C  F6 06 216E 80			test	data_392,80h		; (020C:216E=0FFh)
020C:C331  75 18				jnz	loc_1997		; Jump if not zero
020C:C333  A0 2308				mov	al,data_455		; (020C:2308=0)
020C:C336  2E: 80 3E 8920 66			cmp	byte ptr cs:[8920h],66h	; (020C:8920=0F0h) 'f'
020C:C33C  75 05				jne	loc_1996		; Jump if not equal
020C:C33E  80 26 2308 FE			and	data_455,0FEh		; (020C:2308=0)
020C:C343			loc_1996:
020C:C343  9A 1491:09C4		;*		call	far ptr sub_169		;*(1491:09C4)
020C:C343  9A					db	9Ah
020C:C344  09C4 1491				dw	9C4h, 1491h
020C:C348  A2 2308				mov	data_455,al		; (020C:2308=0)
020C:C34B			loc_1997:
020C:C34B  F6 06 230A 08			test	byte ptr ds:[230Ah],8	; (020C:230A=0)
020C:C350  74 05				jz	loc_1998		; Jump if zero
020C:C352  9A 1491:6808		;*		call	far ptr sub_221		;*(1491:6808)
020C:C352  9A					db	9Ah
020C:C353  6808 1491				dw	6808h, 1491h
020C:C357			loc_1998:
020C:C357  80 3E 1D62 01			cmp	data_322,1		; (020C:1D62=0)
020C:C35C  74 C6				je	loc_1994		; Jump if equal
020C:C35E  F6 06 2308 02			test	data_455,2		; (020C:2308=0)
020C:C363  74 0C				jz	loc_1999		; Jump if zero
020C:C365  9A 1491:68D0		;*		call	far ptr sub_222		;*(1491:68D0)
020C:C365  9A					db	9Ah
020C:C366  68D0 1491				dw	68D0h, 1491h
020C:C36A  90					nop
020C:C36B  0E E8 FAC5				callf	sub_137			; (BE34)
020C:C36F  EB 09				jmp	short loc_2000		; (C37A)
020C:C371			loc_1999:
020C:C371  8A 1E 1D60				mov	bl,data_320		; (020C:1D60=0)
020C:C375  33 D2				xor	dx,dx			; Zero register
020C:C377  E9 0FAE				jmp	loc_2185		; (D328)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 405

020C:C37A			loc_2000:
020C:C37A  33 D2				xor	dx,dx			; Zero register
020C:C37C  E9 18D3				jmp	loc_2308		; (DC52)
020C:C37F			loc_2001:
020C:C37F  80 0E 1D63 01			or	data_323,1		; (020C:1D63=0)
020C:C384  8A 3E 1D24				mov	bh,data_291		; (020C:1D24=0)
020C:C388  A0 2308				mov	al,data_455		; (020C:2308=0)
020C:C38B  2E: 80 3E 8920 66			cmp	byte ptr cs:[8920h],66h	; (020C:8920=0F0h) 'f'
020C:C391  75 05				jne	loc_2002		; Jump if not equal
020C:C393  80 26 2308 FE			and	data_455,0FEh		; (020C:2308=0)
020C:C398			loc_2002:
020C:C398  9A 1491:09C4		;*		call	far ptr sub_169		;*(1491:09C4)
020C:C398  9A					db	9Ah
020C:C399  09C4 1491				dw	9C4h, 1491h
020C:C39D  A2 2308				mov	data_455,al		; (020C:2308=0)
020C:C3A0  C6 06 1D64 01			mov	data_324,1		; (020C:1D64=0)
020C:C3A5  F6 06 230A 08			test	byte ptr ds:[230Ah],8	; (020C:230A=0)
020C:C3AA  74 05				jz	loc_2003		; Jump if zero
020C:C3AC  9A 1491:6808		;*		call	far ptr sub_221		;*(1491:6808)
020C:C3AC  9A					db	9Ah
020C:C3AD  6808 1491				dw	6808h, 1491h
020C:C3B1			loc_2003:
020C:C3B1  A1 2334				mov	ax,data_471		; (020C:2334=0)
020C:C3B4  A3 2FA2				mov	data_520,ax		; (020C:2FA2=0CFAh)
020C:C3B7  B6 04				mov	dh,4
020C:C3B9  F6 06 2308 02			test	data_455,2		; (020C:2308=0)
020C:C3BE  75 02				jnz	loc_2004		; Jump if not zero
020C:C3C0  B6 02				mov	dh,2
020C:C3C2			loc_2004:
020C:C3C2  A0 1D60				mov	al,data_320		; (020C:1D60=0)
020C:C3C5  24 C0				and	al,0C0h
020C:C3C7  3C 40				cmp	al,40h			; '@'
020C:C3C9  75 02				jne	loc_2005		; Jump if not equal
020C:C3CB  B6 01				mov	dh,1
020C:C3CD			loc_2005:
020C:C3CD  00 36 1D1E				add	data_286,dh		; (020C:1D1E=0)
020C:C3D1  88 36 230D				mov	data_458,dh		; (020C:230D=0A7h)
020C:C3D5  46					inc	si
020C:C3D6  9A 1491:3330		;*		call	far ptr sub_189		;*(1491:3330)
020C:C3D6  9A					db	9Ah
020C:C3D7  3330 1491				dw	3330h, 1491h
020C:C3DB  4E					dec	si
020C:C3DC  56					push	si
020C:C3DD  46					inc	si
020C:C3DE  46					inc	si
020C:C3DF  80 3E 1D62 01			cmp	data_322,1		; (020C:1D62=0)
020C:C3E4  75 01				jne	loc_2006		; Jump if not equal
020C:C3E6  46					inc	si
020C:C3E7			loc_2006:
020C:C3E7  80 FE 01				cmp	dh,1
020C:C3EA  75 03				jne	loc_2007		; Jump if not equal
020C:C3EC  E9 00FF				jmp	loc_2021		; (C4EE)
020C:C3EF			loc_2007:
020C:C3EF  F6 06 4521 01			test	data_707,1		; (020C:4521=4Fh)
020C:C3F4  74 05				jz	loc_2008		; Jump if zero
020C:C3F6  9A 1491:746C		;*		call	far ptr sub_239		;*(1491:746C)
020C:C3F6  9A					db	9Ah
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 406

020C:C3F7  746C 1491				dw	746Ch, 1491h
020C:C3FB			loc_2008:
020C:C3FB  26: 8B 04				mov	ax,es:[si]
020C:C3FE  A3 230E				mov	data_459,ax		; (020C:230E=0)
020C:C401  80 FE 02				cmp	dh,2
020C:C404  74 1F				je	loc_2010		; Jump if equal
020C:C406  26: 8B 44 02				mov	ax,es:[si+2]
020C:C40A  A3 2310				mov	data_460,ax		; (020C:2310=0)
020C:C40D  A9 FFF0				test	ax,0FFF0h
020C:C410  74 03				jz	loc_2009		; Jump if zero
020C:C412  E9 0166				jmp	loc_2027		; (C57B)
020C:C415			loc_2009:
020C:C415  51					push	cx
020C:C416  B1 0C				mov	cl,0Ch
020C:C418  D3 E0				shl	ax,cl			; Shift w/zeros fill
020C:C41A  59					pop	cx
020C:C41B  A3 2160				mov	data_385,ax		; (020C:2160=5E6Eh)
020C:C41E  9A 1491:8788		;*		call	far ptr sub_252		;*(1491:8788)
020C:C41E  9A					db	9Ah
020C:C41F  8788 1491				dw	8788h, 1491h
020C:C423  EB 00				jmp	short loc_2010		; (C425)
020C:C425			loc_2010:
020C:C425  80 3E 1D62 01			cmp	data_322,1		; (020C:1D62=0)
020C:C42A  75 35				jne	loc_2013		; Jump if not equal
020C:C42C  26: 83 3C 00				cmp	word ptr es:[si],0
020C:C430  75 2F				jne	loc_2013		; Jump if not equal
020C:C432  80 FE 01				cmp	dh,1
020C:C435  75 0E				jne	loc_2011		; Jump if not equal
020C:C437  8A 1E 1D61				mov	bl,data_321		; (020C:1D61=0)
020C:C43B  80 E3 07				and	bl,7
020C:C43E  80 FB 05				cmp	bl,5
020C:C441  75 1E				jne	loc_2013		; Jump if not equal
020C:C443  EB 14				jmp	short loc_2012		; (C459)
020C:C445			loc_2011:
020C:C445  80 FE 04				cmp	dh,4
020C:C448  75 17				jne	loc_2013		; Jump if not equal
020C:C44A  2E: 80 3E 8920 66			cmp	byte ptr cs:[8920h],66h	; (020C:8920=0F0h) 'f'
020C:C450  74 0F				je	loc_2013		; Jump if equal
020C:C452  80 3E 2310 00			cmp	byte ptr data_460,0	; (020C:2310=0)
020C:C457  75 08				jne	loc_2013		; Jump if not equal
020C:C459			loc_2012:
020C:C459  C6 06 2312 01			mov	data_461,1		; (020C:2312=0)
020C:C45E  E9 015C				jmp	loc_2029		; (C5BD)
020C:C461			loc_2013:
020C:C461  A1 230E				mov	ax,data_459		; (020C:230E=0)
020C:C464  8A 1E 1D60				mov	bl,data_320		; (020C:1D60=0)
020C:C468  8A 3E 1D24				mov	bh,data_291		; (020C:1D24=0)
020C:C46C  C6 06 1CD7 01			mov	data_252,1		; (020C:1CD7=0)
020C:C471  8A 0E 2308				mov	cl,data_455		; (020C:2308=0)
020C:C475  51					push	cx
020C:C476  2E: 80 3E 8920 66			cmp	byte ptr cs:[8920h],66h	; (020C:8920=0F0h) 'f'
020C:C47C  75 05				jne	loc_2014		; Jump if not equal
020C:C47E  80 26 2308 FE			and	data_455,0FEh		; (020C:2308=0)
020C:C483			loc_2014:
020C:C483  E8 C8DA				call	sub_111			; (8D60)
020C:C486  59					pop	cx
020C:C487  88 0E 2308				mov	data_455,cl		; (020C:2308=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 407

020C:C48B  9A 1491:8D14		;*		call	far ptr sub_260		;*(1491:8D14)
020C:C48B  9A					db	9Ah
020C:C48C  8D14 1491				dw	8D14h, 1491h
020C:C490  C6 06 230D 00			mov	data_458,0		; (020C:230D=0A7h)
020C:C495  C6 06 2312 01			mov	data_461,1		; (020C:2312=0)
020C:C49A  80 3E 1D62 01			cmp	data_322,1		; (020C:1D62=0)
020C:C49F  74 3B				je	loc_2019		; Jump if equal
020C:C4A1  A0 1D60				mov	al,data_320		; (020C:1D60=0)
020C:C4A4  24 C7				and	al,0C7h
020C:C4A6  3C 05				cmp	al,5
020C:C4A8  75 14				jne	loc_2015		; Jump if not equal
020C:C4AA  B6 04				mov	dh,4
020C:C4AC  2E: 80 3E 8920 60			cmp	byte ptr cs:[8920h],60h	; (020C:8920=0F0h) '`'
020C:C4B2  74 22				je	loc_2017		; Jump if equal
020C:C4B4  2E: 80 3E 8920 66			cmp	byte ptr cs:[8920h],66h	; (020C:8920=0F0h) 'f'
020C:C4BA  74 1A				je	loc_2017		; Jump if equal
020C:C4BC  EB 1A				jmp	short loc_2018		; (C4D8)
020C:C4BE			loc_2015:
020C:C4BE  F6 06 2308 02			test	data_455,2		; (020C:2308=0)
020C:C4C3  74 07				jz	loc_2016		; Jump if zero
020C:C4C5  9A 1491:68D0		;*		call	far ptr sub_222		;*(1491:68D0)
020C:C4C5  9A					db	9Ah
020C:C4C6  68D0 1491				dw	68D0h, 1491h
020C:C4CA  EB 0C				jmp	short loc_2018		; (C4D8)
020C:C4CC			loc_2016:
020C:C4CC  5E					pop	si
020C:C4CD  33 D2				xor	dx,dx			; Zero register
020C:C4CF  8A 1E 1D60				mov	bl,data_320		; (020C:1D60=0)
020C:C4D3  E9 0E52				jmp	loc_2185		; (D328)
020C:C4D6			loc_2017:
020C:C4D6  33 D2				xor	dx,dx			; Zero register
020C:C4D8			loc_2018:
020C:C4D8  5E					pop	si
020C:C4D9  E9 0FC4				jmp	loc_2207		; (D4A0)
020C:C4DC			loc_2019:
020C:C4DC  80 3E 3CFD 00			cmp	data_578,0		; (020C:3CFD=0C6h)
020C:C4E1  75 03				jne	loc_2020		; Jump if not equal
020C:C4E3  E9 00D7				jmp	loc_2029		; (C5BD)
020C:C4E6			loc_2020:
020C:C4E6  C6 06 230D 04			mov	data_458,4		; (020C:230D=0A7h)
020C:C4EB  E9 00CF				jmp	loc_2029		; (C5BD)
020C:C4EE			loc_2021:
020C:C4EE  33 C0				xor	ax,ax			; Zero register
020C:C4F0  26: 8A 04				mov	al,es:[si]
020C:C4F3  8A 1E 1D60				mov	bl,data_320		; (020C:1D60=0)
020C:C4F7  80 E3 C7				and	bl,0C7h
020C:C4FA  80 FB 45				cmp	bl,45h			; 'E'
020C:C4FD  75 14				jne	loc_2022		; Jump if not equal
020C:C4FF  A8 80				test	al,80h
020C:C501  75 10				jnz	loc_2022		; Jump if not zero
020C:C503  80 3E 178B 03			cmp	data_191,3		; (020C:178B=0)
020C:C508  75 09				jne	loc_2022		; Jump if not equal
020C:C50A  3B 06 4701				cmp	ax,data_732		; (020C:4701=0B522h)
020C:C50E  76 03				jbe	loc_2022		; Jump if below or =
020C:C510  A3 4701				mov	data_732,ax		; (020C:4701=0B522h)
020C:C513			loc_2022:
020C:C513  A3 230E				mov	data_459,ax		; (020C:230E=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 408

020C:C516  33 C0				xor	ax,ax			; Zero register
020C:C518  A3 2310				mov	data_460,ax		; (020C:2310=0)
020C:C51B  80 3E 1D62 01			cmp	data_322,1		; (020C:1D62=0)
020C:C520  75 03				jne	loc_2023		; Jump if not equal
020C:C522  E9 0098				jmp	loc_2029		; (C5BD)
020C:C525			loc_2023:
020C:C525  9A 1491:68D0		;*		call	far ptr sub_222		;*(1491:68D0)
020C:C525  9A					db	9Ah
020C:C526  68D0 1491				dw	68D0h, 1491h
020C:C52A  4D					dec	bp
020C:C52B  26: 8A 04				mov	al,es:[si]
020C:C52E  A2 230E				mov	byte ptr data_459,al	; (020C:230E=0)
020C:C531  98					cbw				; Convrt byte to word
020C:C532  A3 2FB0				mov	data_526,ax		; (020C:2FB0=0DC3h)
020C:C535  8A 3E 1D60				mov	bh,data_320		; (020C:1D60=0)
020C:C539  80 E7 C7				and	bh,0C7h
020C:C53C  32 DB				xor	bl,bl			; Zero register
020C:C53E  80 FF 46				cmp	bh,46h			; 'F'
020C:C541  74 15				je	loc_2024		; Jump if equal
020C:C543  FE C3				inc	bl
020C:C545  80 FF 47				cmp	bh,47h			; 'G'
020C:C548  74 0E				je	loc_2024		; Jump if equal
020C:C54A  FE C3				inc	bl
020C:C54C  80 FF 45				cmp	bh,45h			; 'E'
020C:C54F  74 07				je	loc_2024		; Jump if equal
020C:C551  FE C3				inc	bl
020C:C553  80 FF 43				cmp	bh,43h			; 'C'
020C:C556  75 11				jne	loc_2025		; Jump if not equal
020C:C558			loc_2024:
020C:C558  32 FF				xor	bh,bh			; Zero register
020C:C55A  D1 E3				shl	bx,1			; Shift w/zeros fill
020C:C55C  81 C3 46F0				add	bx,46F0h
020C:C560  8B 1F				mov	bx,[bx]
020C:C562  9A 1491:48AC		;*		call	far ptr sub_200		;*(1491:48AC)
020C:C562  9A					db	9Ah
020C:C563  48AC 1491				dw	48ACh, 1491h
020C:C567  72 05				jc	loc_2026		; Jump if carry Set
020C:C569			loc_2025:
020C:C569  9A 1491:8018		;*		call	far ptr sub_248		;*(1491:8018)
020C:C569  9A					db	9Ah
020C:C56A  8018 1491				dw	8018h, 1491h
020C:C56E			loc_2026:
020C:C56E  3E: C6 46 00 5D			mov	byte ptr ds:[bp],5Dh	; ']'
020C:C573  45					inc	bp
020C:C574  C6 06 3CFD 00			mov	data_578,0		; (020C:3CFD=0C6h)
020C:C579  EB 42				jmp	short loc_2029		; (C5BD)
020C:C57B			loc_2027:
020C:C57B  80 3E 1D62 01			cmp	data_322,1		; (020C:1D62=0)
020C:C580  74 3B				je	loc_2029		; Jump if equal
020C:C582  F6 06 230A 08			test	byte ptr ds:[230Ah],8	; (020C:230A=0)
020C:C587  75 05				jnz	loc_2028		; Jump if not zero
020C:C589  9A 1491:6F2C		;*		call	far ptr sub_236		;*(1491:6F2C)
020C:C589  9A					db	9Ah
020C:C58A  6F2C 1491				dw	6F2Ch, 1491h
020C:C58E			loc_2028:
020C:C58E  3E: C6 46 00 5B			mov	byte ptr ds:[bp],5Bh	; '['
020C:C593  45					inc	bp
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 409

020C:C594  53					push	bx
020C:C595  26: 8B 44 02				mov	ax,es:[si+2]
020C:C599  26: 8B 1C				mov	bx,es:[si]
020C:C59C  9A 1491:0414		;*		call	far ptr sub_160		;*(1491:0414)
020C:C59C  9A					db	9Ah
020C:C59D  0414 1491				dw	414h, 1491h
020C:C5A1  5B					pop	bx
020C:C5A2  3E: C6 46 00 5D			mov	byte ptr ds:[bp],5Dh	; ']'
020C:C5A7  45					inc	bp
020C:C5A8  A0 1D60				mov	al,data_320		; (020C:1D60=0)
020C:C5AB  24 C7				and	al,0C7h
020C:C5AD  3C 05				cmp	al,5
020C:C5AF  74 0C				je	loc_2029		; Jump if equal
020C:C5B1  80 3E 1D62 01			cmp	data_322,1		; (020C:1D62=0)
020C:C5B6  74 05				je	loc_2029		; Jump if equal
020C:C5B8  9A 1491:68D0		;*		call	far ptr sub_222		;*(1491:68D0)
020C:C5B8  9A					db	9Ah
020C:C5B9  68D0 1491				dw	68D0h, 1491h
020C:C5BD			loc_2029:
020C:C5BD  5E					pop	si
020C:C5BE			loc_2030:
020C:C5BE  C6 06 2348 00			mov	data_479,0		; (020C:2348=0)
020C:C5C3  9A 1491:7F00		;*		call	far ptr sub_246		;*(1491:7F00)
020C:C5C3  9A					db	9Ah
020C:C5C4  7F00 1491				dw	7F00h, 1491h
020C:C5C8  02 36 1D62				add	dh,data_322		; (020C:1D62=0)
020C:C5CC  2E: 80 3E 8920 60			cmp	byte ptr cs:[8920h],60h	; (020C:8920=0F0h) '`'
020C:C5D2  74 0A				je	loc_2031		; Jump if equal
020C:C5D4  F6 06 1D63 01			test	data_323,1		; (020C:1D63=0)
020C:C5D9  74 03				jz	loc_2031		; Jump if zero
020C:C5DB  E9 0EC2				jmp	loc_2207		; (D4A0)
020C:C5DE			loc_2031:
020C:C5DE  33 D2				xor	dx,dx			; Zero register
020C:C5E0  E9 166F				jmp	loc_2308		; (DC52)
							                        ;* No entry point to code
020C:C5E3  26: 8A 5C 01				mov	bl,es:[si+1]
020C:C5E7  C6 06 1D5F 02			mov	data_319,2		; (020C:1D5F=0)
020C:C5EC  F6 06 2308 02			test	data_455,2		; (020C:2308=0)
020C:C5F1  74 11				jz	loc_2032		; Jump if zero
020C:C5F3  C6 06 1D5F 04			mov	data_319,4		; (020C:1D5F=0)
020C:C5F8  88 1E 1D60				mov	data_320,bl		; (020C:1D60=0)
020C:C5FC  26: 8A 64 02				mov	ah,es:[si+2]
020C:C600  88 26 1D61				mov	data_321,ah		; (020C:1D61=0)
020C:C604			loc_2032:
020C:C604  8A E3				mov	ah,bl
020C:C606  80 E4 C7				and	ah,0C7h
020C:C609  80 FC 06				cmp	ah,6
020C:C60C  74 1B				je	loc_2034		; Jump if equal
020C:C60E  80 E4 C0				and	ah,0C0h
020C:C611  80 FC 40				cmp	ah,40h			; '@'
020C:C614  75 09				jne	loc_2033		; Jump if not equal
020C:C616  B2 32				mov	dl,32h			; '2'
020C:C618  C6 06 1D5F 01			mov	data_319,1		; (020C:1D5F=0)
020C:C61D  EB 0A				jmp	short loc_2034		; (C629)
020C:C61F			loc_2033:
020C:C61F  80 FC 00				cmp	ah,0
020C:C622  75 05				jne	loc_2034		; Jump if not equal
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 410

020C:C624  C6 06 1D5F 00			mov	data_319,0		; (020C:1D5F=0)
020C:C629			loc_2034:
020C:C629  B0 60				mov	al,60h			; '`'
020C:C62B  E9 F85A				jmp	loc_1952		; (BE88)
							                        ;* No entry point to code
020C:C62E  56					push	si
020C:C62F  BE 2527				mov	si,2527h
020C:C632  F6 C2 01				test	dl,1
020C:C635  74 03				jz	loc_2035		; Jump if zero
020C:C637  BE 251D				mov	si,251Dh
020C:C63A			loc_2035:
020C:C63A  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:C63A  9A					db	9Ah
020C:C63B  67E0 1491				dw	67E0h, 1491h
020C:C63F  5E					pop	si
020C:C640  B0 60				mov	al,60h			; '`'
020C:C642  E9 F843				jmp	loc_1952		; (BE88)
							                        ;* No entry point to code
020C:C645  83 3E 1D66 00			cmp	data_326,0		; (020C:1D66=0)
020C:C64A  77 0C				ja	loc_2036		; Jump if above
020C:C64C  C7 06 1D66 0001			mov	data_326,1		; (020C:1D66=0)
020C:C652  C7 06 1D68 0001			mov	data_327,1		; (020C:1D68=0)
020C:C658			loc_2036:
020C:C658  C6 06 1D20 00			mov	data_287,0		; (020C:1D20=0)
020C:C65D  56					push	si
020C:C65E  8B 0E 1D66				mov	cx,data_326		; (020C:1D66=0)
020C:C662  3C 52				cmp	al,52h			; 'R'
020C:C664  75 02				jne	loc_2037		; Jump if not equal
020C:C666  EB 70				jmp	short loc_2046		; (C6D8)
020C:C668			loc_2037:
020C:C668  83 F9 06				cmp	cx,6
020C:C66B  76 03				jbe	loc_2038		; Jump if below or =
020C:C66D  B9 0006				mov	cx,6
020C:C670			loc_2038:
020C:C670  3C 51				cmp	al,51h			; 'Q'
020C:C672  74 39				je	loc_2043		; Jump if equal
020C:C674  3C 53				cmp	al,53h			; 'S'
020C:C676  75 03				jne	loc_2039		; Jump if not equal
020C:C678  E9 0096				jmp	loc_2049		; (C711)
020C:C67B			loc_2039:
020C:C67B  3C 54				cmp	al,54h			; 'T'
020C:C67D  75 03				jne	loc_2040		; Jump if not equal
020C:C67F  E9 022E				jmp	loc_2071		; (C8B0)
020C:C682			loc_2040:
020C:C682  3C 55				cmp	al,55h			; 'U'
020C:C684  75 03				jne	loc_2041		; Jump if not equal
020C:C686  E9 0253				jmp	loc_2072		; (C8DC)
020C:C689			loc_2041:
020C:C689  3C 56				cmp	al,56h			; 'V'
020C:C68B  72 18				jb	loc_2042		; Jump if below
020C:C68D  E9 0303				jmp	loc_2079		; (C993)
							                        ;* No entry point to code
020C:C690  56					push	si
020C:C691  45					inc	bp
020C:C692  8B 0E 1D68				mov	cx,data_327		; (020C:1D68=0)
020C:C696  03 F1				add	si,cx
020C:C698  46					inc	si
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 411

020C:C699  8B 0E 3D08				mov	cx,data_586		; (020C:3D08=268Ah)
020C:C69D  89 0E 1D66				mov	data_326,cx		; (020C:1D66=0)
020C:C6A1  01 0E 1D68				add	data_327,cx		; (020C:1D68=0)
020C:C6A5			loc_2042:
020C:C6A5  9A 1491:6E5C		;*		call	far ptr sub_235		;*(1491:6E5C)
020C:C6A5  9A					db	9Ah
020C:C6A6  6E5C 1491				dw	6E5Ch, 1491h
020C:C6AA  E9 0475				jmp	loc_2096		; (CB22)
020C:C6AD			loc_2043:
020C:C6AD  33 D2				xor	dx,dx			; Zero register

020C:C6AF			locloop_2044:
020C:C6AF  26: 8B 04				mov	ax,es:[si]
020C:C6B2  46					inc	si
020C:C6B3  46					inc	si
020C:C6B4  9A 1491:83DC		;*		call	far ptr sub_250		;*(1491:83DC)
020C:C6B4  9A					db	9Ah
020C:C6B5  83DC 1491				dw	83DCh, 1491h
020C:C6B9  83 C2 02				add	dx,2
020C:C6BC  FF 0E 1D66				dec	data_326		; (020C:1D66=0)
020C:C6C0  FF 0E 1D66				dec	data_326		; (020C:1D66=0)
020C:C6C4  74 0F				jz	loc_2045		; Jump if zero
020C:C6C6  83 F9 02				cmp	cx,2
020C:C6C9  74 0A				je	loc_2045		; Jump if equal
020C:C6CB  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020C:C6D0  45					inc	bp
020C:C6D1  45					inc	bp
020C:C6D2  49					dec	cx
020C:C6D3  E2 DA				loop	locloop_2044		; Loop if cx > 0

020C:C6D5			loc_2045:
020C:C6D5  E9 044A				jmp	loc_2096		; (CB22)
020C:C6D8			loc_2046:
020C:C6D8  26: 8B 44 02				mov	ax,es:[si+2]
020C:C6DC  9A 1491:02B4		;*		call	far ptr sub_158		;*(1491:02B4)
020C:C6DC  9A					db	9Ah
020C:C6DD  02B4 1491				dw	2B4h, 1491h
020C:C6E1  4D					dec	bp
020C:C6E2  3E: 80 7E 00 48			cmp	byte ptr ds:[bp],48h	; 'H'
020C:C6E7  73 01				jae	loc_2047		; Jump if above or =
020C:C6E9  45					inc	bp
020C:C6EA			loc_2047:
020C:C6EA  26: 8B 04				mov	ax,es:[si]
020C:C6ED  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:C6ED  9A					db	9Ah
020C:C6EE  0294 1491				dw	294h, 1491h
020C:C6F2  A0 2517				mov	al,data_493		; (020C:2517=0)
020C:C6F5  3E: 88 46 00				mov	ds:[bp],al
020C:C6F9  83 3E 1D66 04			cmp	data_326,4		; (020C:1D66=0)
020C:C6FE  73 09				jae	loc_2048		; Jump if above or =
020C:C700  C7 06 1D66 0000			mov	data_326,0		; (020C:1D66=0)
020C:C706  E9 0419				jmp	loc_2096		; (CB22)
020C:C709			loc_2048:
020C:C709  83 2E 1D66 04			sub	data_326,4		; (020C:1D66=0)
020C:C70E  E9 0411				jmp	loc_2096		; (CB22)
020C:C711			loc_2049:
020C:C711  52					push	dx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 412

020C:C712  56					push	si
020C:C713  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:C718  06					push	es
020C:C719  8B 36 215A				mov	si,data_382		; (020C:215A=0FFFFh)
020C:C71D  A1 2158				mov	ax,data_381		; (020C:2158=5F63h)
020C:C720  81 FE 8000				cmp	si,8000h
020C:C724  72 07				jb	loc_2050		; Jump if below
020C:C726  81 EE 8000				sub	si,8000h
020C:C72A  05 0800				add	ax,800h
020C:C72D			loc_2050:
020C:C72D  8E C0				mov	es,ax
020C:C72F  8B 16 1D66				mov	dx,data_326		; (020C:1D66=0)
020C:C733  8B CD				mov	cx,bp
020C:C735  C7 06 1D6C 0000			mov	data_329,0		; (020C:1D6C=0)
020C:C73B  B4 00				mov	ah,0
020C:C73D			loc_2051:
020C:C73D  32 C0				xor	al,al			; Zero register
020C:C73F  80 3E 1CDF 0A			cmp	data_257,0Ah		; (020C:1CDF=0)
020C:C744  74 03				je	loc_2052		; Jump if equal
020C:C746  26: 8A 04				mov	al,es:[si]
020C:C749			loc_2052:
020C:C749  80 3E 4210 02			cmp	data_675,2		; (020C:4210=1Fh)
020C:C74E  75 43				jne	loc_2055		; Jump if not equal
020C:C750  8B 1E 215A				mov	bx,data_382		; (020C:215A=0FFFFh)
020C:C754  81 FB 8000				cmp	bx,8000h
020C:C758  72 04				jb	loc_2053		; Jump if below
020C:C75A  81 EB 8000				sub	bx,8000h
020C:C75E			loc_2053:
020C:C75E  3B F3				cmp	si,bx
020C:C760  75 0F				jne	loc_2054		; Jump if not equal
020C:C762  83 FA 01				cmp	dx,1
020C:C765  76 54				jbe	loc_2056		; Jump if below or =
020C:C767  26: 80 7C 01 00			cmp	byte ptr es:[si+1],0
020C:C76C  75 4D				jne	loc_2056		; Jump if not equal
020C:C76E  80 CC 80				or	ah,80h
020C:C771			loc_2054:
020C:C771  F6 C4 80				test	ah,80h
020C:C774  74 45				jz	loc_2056		; Jump if zero
020C:C776  80 E4 DF				and	ah,0DFh
020C:C779  83 FA 01				cmp	dx,1
020C:C77C  74 3D				je	loc_2056		; Jump if equal
020C:C77E  26: 80 7C 01 00			cmp	byte ptr es:[si+1],0
020C:C783  75 36				jne	loc_2056		; Jump if not equal
020C:C785  80 CC A0				or	ah,0A0h
020C:C788  A0 2518				mov	al,data_494		; (020C:2518=0)
020C:C78B  A2 19F5				mov	byte ptr data_232+1,al	; (020C:19F5=22h)
020C:C78E  26: 8A 04				mov	al,es:[si]
020C:C791  EB 28				jmp	short loc_2056		; (C7BB)
020C:C793			loc_2055:
020C:C793  80 3E 4210 01			cmp	data_675,1		; (020C:4210=1Fh)
020C:C798  75 21				jne	loc_2056		; Jump if not equal
020C:C79A  80 E4 EF				and	ah,0EFh
020C:C79D  83 FA 01				cmp	dx,1
020C:C7A0  74 19				je	loc_2056		; Jump if equal
020C:C7A2  50					push	ax
020C:C7A3  8A E0				mov	ah,al
020C:C7A5  26: 8A 44 01				mov	al,es:[si+1]
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 413

020C:C7A9  9A 1491:4F78		;*		call	far ptr sub_204		;*(1491:4F78)
020C:C7A9  9A					db	9Ah
020C:C7AA  4F78 1491				dw	4F78h, 1491h
020C:C7AE  3D 0001				cmp	ax,1
020C:C7B1  58					pop	ax
020C:C7B2  72 07				jc	loc_2056		; Jump if carry Set
020C:C7B4  74 1D				jz	loc_2057		; Jump if zero
020C:C7B6  80 CC 10				or	ah,10h
020C:C7B9  EB 50				jmp	short loc_2062		; (C80B)
020C:C7BB			loc_2056:
020C:C7BB  3C FF				cmp	al,0FFh
020C:C7BD  74 18				je	loc_2058		; Jump if equal
020C:C7BF  3C 27				cmp	al,27h			; '''
020C:C7C1  74 14				je	loc_2058		; Jump if equal
020C:C7C3  3C 7F				cmp	al,7Fh
020C:C7C5  74 10				je	loc_2058		; Jump if equal
020C:C7C7  F7 06 3D1A 0080			test	data_595,80h		; (020C:3D1A=176Ah)
020C:C7CD  74 04				jz	loc_2057		; Jump if zero
020C:C7CF  3C 80				cmp	al,80h
020C:C7D1  73 04				jae	loc_2058		; Jump if above or =
020C:C7D3			loc_2057:
020C:C7D3  3C 20				cmp	al,20h			; ' '
020C:C7D5  73 34				jae	loc_2062		; Jump if above or =
020C:C7D7			loc_2058:
020C:C7D7  3B CD				cmp	cx,bp
020C:C7D9  74 12				je	loc_2060		; Jump if equal
020C:C7DB  F6 C4 01				test	ah,1
020C:C7DE  75 06				jnz	loc_2059		; Jump if not zero
020C:C7E0  3E: C6 46 00 27			mov	byte ptr ds:[bp],27h	; '''
020C:C7E5  45					inc	bp
020C:C7E6			loc_2059:
020C:C7E6  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020C:C7EB  45					inc	bp
020C:C7EC  45					inc	bp
020C:C7ED			loc_2060:
020C:C7ED  9A 1491:0134		;*		call	far ptr sub_153		;*(1491:0134)
020C:C7ED  9A					db	9Ah
020C:C7EE  0134 1491				dw	134h, 1491h
020C:C7F2  80 CC 01				or	ah,1
020C:C7F5  3C 00				cmp	al,0
020C:C7F7  75 61				jne	loc_2067		; Jump if not equal
020C:C7F9  F6 C4 20				test	ah,20h			; ' '
020C:C7FC  74 06				jz	loc_2061		; Jump if zero
020C:C7FE  46					inc	si
020C:C7FF  FF 06 1D6C				inc	data_329		; (020C:1D6C=0)
020C:C803  4A					dec	dx
020C:C804			loc_2061:
020C:C804  8B CD				mov	cx,bp
020C:C806  83 E9 21				sub	cx,21h
020C:C809  EB 4F				jmp	short loc_2067		; (C85A)
020C:C80B			loc_2062:
020C:C80B  F6 C4 01				test	ah,1
020C:C80E  74 0C				jz	loc_2063		; Jump if zero
020C:C810  80 E4 FE				and	ah,0FEh
020C:C813  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020C:C818  45					inc	bp
020C:C819  45					inc	bp
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 414

020C:C81A  EB 04				jmp	short loc_2064		; (C820)
020C:C81C			loc_2063:
020C:C81C  3B CD				cmp	cx,bp
020C:C81E  75 06				jne	loc_2065		; Jump if not equal
020C:C820			loc_2064:
020C:C820  3E: C6 46 00 27			mov	byte ptr ds:[bp],27h	; '''
020C:C825  45					inc	bp
020C:C826			loc_2065:
020C:C826  3E: 88 46 00				mov	ds:[bp],al
020C:C82A  45					inc	bp
020C:C82B  F6 C4 30				test	ah,30h			; '0'
020C:C82E  74 15				jz	loc_2066		; Jump if zero
020C:C830  46					inc	si
020C:C831  FF 06 1D6C				inc	data_329		; (020C:1D6C=0)
020C:C835  4A					dec	dx
020C:C836  F6 C4 20				test	ah,20h			; ' '
020C:C839  75 1F				jnz	loc_2067		; Jump if not zero
020C:C83B  26: 8A 04				mov	al,es:[si]
020C:C83E  3E: 88 46 00				mov	ds:[bp],al
020C:C842  45					inc	bp
020C:C843  EB 15				jmp	short loc_2067		; (C85A)
020C:C845			loc_2066:
020C:C845  3C 24				cmp	al,24h			; '$'
020C:C847  75 11				jne	loc_2067		; Jump if not equal
020C:C849  83 FA 01				cmp	dx,1
020C:C84C  76 0C				jbe	loc_2067		; Jump if below or =
020C:C84E  26: 80 7C 01 24			cmp	byte ptr es:[si+1],24h	; '$'
020C:C853  74 05				je	loc_2067		; Jump if equal
020C:C855  8B CD				mov	cx,bp
020C:C857  83 E9 21				sub	cx,21h
020C:C85A			loc_2067:
020C:C85A  46					inc	si
020C:C85B  FF 06 1D6C				inc	data_329		; (020C:1D6C=0)
020C:C85F  4A					dec	dx
020C:C860  74 0C				jz	loc_2068		; Jump if zero
020C:C862  8B DD				mov	bx,bp
020C:C864  2B D9				sub	bx,cx
020C:C866  83 FB 20				cmp	bx,20h
020C:C869  77 03				ja	loc_2068		; Jump if above
020C:C86B  E9 FECF				jmp	loc_2051		; (C73D)
020C:C86E			loc_2068:
020C:C86E  F6 C4 01				test	ah,1
020C:C871  75 06				jnz	loc_2069		; Jump if not zero
020C:C873  3E: C6 46 00 27			mov	byte ptr ds:[bp],27h	; '''
020C:C878  45					inc	bp
020C:C879			loc_2069:
020C:C879  A1 1D6C				mov	ax,data_329		; (020C:1D6C=0)
020C:C87C  29 06 1D66				sub	data_326,ax		; (020C:1D66=0)
020C:C880  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:C885  9C					pushf				; Push flags
020C:C886  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:C88B  5A					pop	dx
020C:C88C  8E C2				mov	es,dx
020C:C88E  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:C893  5A					pop	dx
020C:C894  75 0A				jnz	loc_2070		; Jump if not zero
020C:C896  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 415

020C:C89B  74 03				je	loc_2070		; Jump if equal
020C:C89D  E8 B610				call	sub_97			; (7EB0)
020C:C8A0			loc_2070:
020C:C8A0  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:C8A5  9D					popf				; Pop flags
020C:C8A6  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:C8AB  5E					pop	si
020C:C8AC  5A					pop	dx
020C:C8AD  E9 0272				jmp	loc_2096		; (CB22)
020C:C8B0			loc_2071:
020C:C8B0  C7 06 1D66 0000			mov	data_326,0		; (020C:1D66=0)
020C:C8B6  A1 1D68				mov	ax,data_327		; (020C:1D68=0)
020C:C8B9  B3 00				mov	bl,0
020C:C8BB  9A 1491:0300		;*		call	far ptr sub_159		;*(1491:0300)
020C:C8BB  9A					db	9Ah
020C:C8BC  0300 1491				dw	300h, 1491h
020C:C8C0  45					inc	bp
020C:C8C1  56					push	si
020C:C8C2  BE 2570				mov	si,2570h
020C:C8C5  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:C8C5  9A					db	9Ah
020C:C8C6  67E0 1491				dw	67E0h, 1491h
020C:C8CA  5E					pop	si
020C:C8CB  26: 8A 04				mov	al,es:[si]
020C:C8CE  9A 1491:0134		;*		call	far ptr sub_153		;*(1491:0134)
020C:C8CE  9A					db	9Ah
020C:C8CF  0134 1491				dw	134h, 1491h
020C:C8D3  3E: C6 46 00 29			mov	byte ptr ds:[bp],29h	; ')'
020C:C8D8  45					inc	bp
020C:C8D9  E9 0246				jmp	loc_2096		; (CB22)
020C:C8DC			loc_2072:
020C:C8DC  C7 06 1D66 0000			mov	data_326,0		; (020C:1D66=0)
020C:C8E2  A1 1D68				mov	ax,data_327		; (020C:1D68=0)
020C:C8E5  D1 E8				shr	ax,1			; Shift w/zeros fill
020C:C8E7  B3 00				mov	bl,0
020C:C8E9  9A 1491:0300		;*		call	far ptr sub_159		;*(1491:0300)
020C:C8E9  9A					db	9Ah
020C:C8EA  0300 1491				dw	300h, 1491h
020C:C8EE  45					inc	bp
020C:C8EF  56					push	si
020C:C8F0  BE 2570				mov	si,2570h
020C:C8F3  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:C8F3  9A					db	9Ah
020C:C8F4  67E0 1491				dw	67E0h, 1491h
020C:C8F8  5E					pop	si
020C:C8F9  26: 8B 04				mov	ax,es:[si]
020C:C8FC  9A 1491:02B4		;*		call	far ptr sub_158		;*(1491:02B4)
020C:C8FC  9A					db	9Ah
020C:C8FD  02B4 1491				dw	2B4h, 1491h
020C:C901  3E: C6 46 00 29			mov	byte ptr ds:[bp],29h	; ')'
020C:C906  45					inc	bp
020C:C907  E9 0218				jmp	loc_2096		; (CB22)
							                        ;* No entry point to code
020C:C90A  C6 06 1D20 00			mov	data_287,0		; (020C:1D20=0)
020C:C90F  56					push	si
020C:C910  83 2E 1D66 04			sub	data_326,4		; (020C:1D66=0)
020C:C915  26: 8B 44 02				mov	ax,es:[si+2]
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 416

020C:C919  A3 2FB6				mov	data_529,ax		; (020C:2FB6=0DEEh)
020C:C91C  A9 FFF0				test	ax,0FFF0h
020C:C91F  74 0F				jz	loc_2074		; Jump if zero
020C:C921			loc_2073:
020C:C921  26: 8B 44 02				mov	ax,es:[si+2]
020C:C925  26: 8B 1C				mov	bx,es:[si]
020C:C928  9A 1491:0414		;*		call	far ptr sub_160		;*(1491:0414)
020C:C928  9A					db	9Ah
020C:C929  0414 1491				dw	414h, 1491h
020C:C92D  E9 01F2				jmp	loc_2096		; (CB22)
020C:C930			loc_2074:
020C:C930  33 DB				xor	bx,bx			; Zero register
020C:C932  80 3E 1F6D 08			cmp	data_355,8		; (020C:1F6D=0)
020C:C937  74 04				je	loc_2075		; Jump if equal
020C:C939  8B 1E 2154				mov	bx,data_379		; (020C:2154=5CE9h)
020C:C93D			loc_2075:
020C:C93D  F6 06 2173 40			test	data_396,40h		; (020C:2173=2) '@'
020C:C942  74 04				jz	loc_2076		; Jump if zero
020C:C944  8B 1E 2174				mov	bx,data_397		; (020C:2174=0FB01h)
020C:C948			loc_2076:
020C:C948  B1 0C				mov	cl,0Ch
020C:C94A  D3 E0				shl	ax,cl			; Shift w/zeros fill
020C:C94C  03 D8				add	bx,ax
020C:C94E  72 D1				jc	loc_2073		; Jump if carry Set
020C:C950  80 FA 5E				cmp	dl,5Eh			; '^'
020C:C953  74 32				je	loc_2078		; Jump if equal
020C:C955  56					push	si
020C:C956  BE 2596				mov	si,2596h
020C:C959  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:C959  9A					db	9Ah
020C:C95A  67E0 1491				dw	67E0h, 1491h
020C:C95E  5E					pop	si
020C:C95F  8A 0E 1D44				mov	cl,data_308		; (020C:1D44=0)
020C:C963  88 0E 367D				mov	data_564,cl		; (020C:367D=81h)
020C:C967  8A 0E 1D45				mov	cl,data_309		; (020C:1D45=0)
020C:C96B  88 0E 367E				mov	data_565,cl		; (020C:367E=0E9h)
020C:C96F  32 C9				xor	cl,cl			; Zero register
020C:C971  80 FA 5D				cmp	dl,5Dh			; ']'
020C:C974  74 0C				je	loc_2077		; Jump if equal
020C:C976  C6 06 1D44 4F			mov	data_308,4Fh		; (020C:1D44=0) 'O'
020C:C97B  C6 06 1D45 00			mov	data_309,0		; (020C:1D45=0)
020C:C980  B1 02				mov	cl,2
020C:C982			loc_2077:
020C:C982  32 C0				xor	al,al			; Zero register
020C:C984  E9 007F				jmp	loc_2085		; (CA06)
020C:C987			loc_2078:
020C:C987  8B CB				mov	cx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:C989			sub_139		proc	near
020C:C989  32 C0				xor	al,al			; Zero register
020C:C98B  C6 06 46EC 01			mov	data_729,1		; (020C:46EC=8Fh)
020C:C990  E9 010D				jmp	loc_2093		; (CAA0)
020C:C993			loc_2079:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 417

020C:C993  FF 0E 1D66				dec	data_326		; (020C:1D66=0)
020C:C997  FF 0E 1D66				dec	data_326		; (020C:1D66=0)
020C:C99B  A8 01				test	al,1
020C:C99D  75 10				jnz	loc_2080		; Jump if not zero
020C:C99F  26: 83 3C 00				cmp	word ptr es:[si],0
020C:C9A3  75 0A				jne	loc_2080		; Jump if not equal
020C:C9A5  33 C0				xor	ax,ax			; Zero register
020C:C9A7  9A 1491:02B4		;*		call	far ptr sub_158		;*(1491:02B4)
020C:C9A7  9A					db	9Ah
020C:C9A8  02B4 1491				dw	2B4h, 1491h
020C:C9AC  E9 0173				jmp	loc_2096		; (CB22)
020C:C9AF			loc_2080:
020C:C9AF  3C 5A				cmp	al,5Ah			; 'Z'
020C:C9B1  72 03				jb	loc_2081		; Jump if below
020C:C9B3  E9 00C9				jmp	loc_2090		; (CA7F)
020C:C9B6			loc_2081:
020C:C9B6  56					push	si
020C:C9B7  BE 258E				mov	si,258Eh
020C:C9BA  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:C9BA  9A					db	9Ah
020C:C9BB  67E0 1491				dw	67E0h, 1491h
020C:C9BF  5E					pop	si
020C:C9C0  8A 1E 1D44				mov	bl,data_308		; (020C:1D44=0)
020C:C9C4  88 1E 367D				mov	data_564,bl		; (020C:367D=81h)
020C:C9C8  8A 1E 1D45				mov	bl,data_309		; (020C:1D45=0)
020C:C9CC  88 1E 367E				mov	data_565,bl		; (020C:367E=0E9h)
020C:C9D0  32 C9				xor	cl,cl			; Zero register
020C:C9D2  A8 02				test	al,2
020C:C9D4  74 0C				jz	loc_2082		; Jump if zero
020C:C9D6  C6 06 1D44 4F			mov	data_308,4Fh		; (020C:1D44=0) 'O'
020C:C9DB  C6 06 1D45 00			mov	data_309,0		; (020C:1D45=0)
020C:C9E0  B1 02				mov	cl,2
020C:C9E2			loc_2082:
020C:C9E2  F6 06 2173 40			test	data_396,40h		; (020C:2173=2) '@'
020C:C9E7  74 06				jz	loc_2083		; Jump if zero
020C:C9E9  8B 1E 2174				mov	bx,data_397		; (020C:2174=0FB01h)
020C:C9ED  EB 04				jmp	short loc_2084		; (C9F3)
020C:C9EF			loc_2083:
020C:C9EF  8B 1E 2154				mov	bx,data_379		; (020C:2154=5CE9h)
020C:C9F3			loc_2084:
020C:C9F3  A8 01				test	al,1
020C:C9F5  74 0F				jz	loc_2085		; Jump if zero
020C:C9F7  26: 8B 5C 02				mov	bx,es:[si+2]
020C:C9FB  80 C9 01				or	cl,1
020C:C9FE  FF 0E 1D66				dec	data_326		; (020C:1D66=0)
020C:CA02  FF 0E 1D66				dec	data_326		; (020C:1D66=0)
020C:CA06			loc_2085:
020C:CA06  50					push	ax
020C:CA07  26: 8B 04				mov	ax,es:[si]
020C:CA0A  53					push	bx
020C:CA0B  51					push	cx
020C:CA0C  C6 06 230D 02			mov	data_458,2		; (020C:230D=0A7h)
020C:CA11  E8 CA98				call	sub_112			; (94AC)
020C:CA14  80 3E 3CFE 01			cmp	data_579,1		; (020C:3CFE=6)
020C:CA19  75 0F				jne	loc_2086		; Jump if not equal
020C:CA1B  C6 06 3CFE 00			mov	data_579,0		; (020C:3CFE=6)
020C:CA20  C6 06 22F5 00			mov	data_440,0		; (020C:22F5=0FFh)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 418

020C:CA25  C6 06 3D00 01			mov	data_580,1		; (020C:3D00=17h)
020C:CA2A			loc_2086:
020C:CA2A  80 3E 3D00 01			cmp	data_580,1		; (020C:3D00=17h)
020C:CA2F  75 0F				jne	loc_2087		; Jump if not equal
020C:CA31  9A 1491:6CAC		;*		call	far ptr sub_230		;*(1491:6CAC)
020C:CA31  9A					db	9Ah
020C:CA32  6CAC 1491				dw	6CACh, 1491h
020C:CA36  8B D8				mov	bx,ax
020C:CA38  A1 2FB6				mov	ax,data_529		; (020C:2FB6=0DEEh)
020C:CA3B  9A 1491:0414		;*		call	far ptr sub_160		;*(1491:0414)
020C:CA3B  9A					db	9Ah
020C:CA3C  0414 1491				dw	414h, 1491h
020C:CA40			loc_2087:
020C:CA40  59					pop	cx
020C:CA41  5B					pop	bx
020C:CA42  58					pop	ax
020C:CA43  A8 01				test	al,1
020C:CA45  74 29				jz	loc_2089		; Jump if zero
020C:CA47  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020C:CA4C  45					inc	bp
020C:CA4D  45					inc	bp
020C:CA4E  80 3E 3D00 01			cmp	data_580,1		; (020C:3D00=17h)
020C:CA53  75 0B				jne	loc_2088		; Jump if not equal
020C:CA55  26: 8B 44 02				mov	ax,es:[si+2]
020C:CA59  9A 1491:02B4		;*		call	far ptr sub_158		;*(1491:02B4)
020C:CA59  9A					db	9Ah
020C:CA5A  02B4 1491				dw	2B4h, 1491h
020C:CA5E  EB 10				jmp	short loc_2089		; (CA70)
020C:CA60			loc_2088:
020C:CA60  56					push	si
020C:CA61  BE 25A0				mov	si,25A0h
020C:CA64  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:CA64  9A					db	9Ah
020C:CA65  67E0 1491				dw	67E0h, 1491h
020C:CA69  5E					pop	si
020C:CA6A  26: 8B 04				mov	ax,es:[si]
020C:CA6D  E8 CA3C				call	sub_112			; (94AC)
020C:CA70			loc_2089:
020C:CA70  A0 367E				mov	al,data_565		; (020C:367E=0E9h)
020C:CA73  A2 1D45				mov	data_309,al		; (020C:1D45=0)
020C:CA76  A0 367D				mov	al,data_564		; (020C:367D=81h)
020C:CA79  A2 1D44				mov	data_308,al		; (020C:1D44=0)
020C:CA7C  E9 00A3				jmp	loc_2096		; (CB22)
020C:CA7F			loc_2090:
020C:CA7F  F6 06 2173 40			test	data_396,40h		; (020C:2173=2) '@'
020C:CA84  74 06				jz	loc_2091		; Jump if zero
020C:CA86  8B 0E 2174				mov	cx,data_397		; (020C:2174=0FB01h)
020C:CA8A  EB 04				jmp	short loc_2092		; (CA90)
020C:CA8C			loc_2091:
020C:CA8C  8B 0E 2154				mov	cx,data_379		; (020C:2154=5CE9h)
020C:CA90			loc_2092:
020C:CA90  A8 01				test	al,1
020C:CA92  74 0C				jz	loc_2093		; Jump if zero
020C:CA94  26: 8B 4C 02				mov	cx,es:[si+2]
020C:CA98  FF 0E 1D66				dec	data_326		; (020C:1D66=0)
020C:CA9C  FF 0E 1D66				dec	data_326		; (020C:1D66=0)
020C:CAA0			loc_2093:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 419

020C:CAA0  FF 36 2FA2				push	data_520		; (020C:2FA2=0CFAh)
020C:CAA4  FF 36 2334				push	data_471		; (020C:2334=0)
020C:CAA8  8A 26 1700				mov	ah,byte ptr ds:[1700h]	; (020C:1700=41h)
020C:CAAC  50					push	ax
020C:CAAD  C6 06 1700 00			mov	byte ptr ds:[1700h],0	; (020C:1700=41h)
020C:CAB2  C6 06 217B 02			mov	data_401,2		; (020C:217B=2Eh)
020C:CAB7  8A 1E 2345				mov	bl,data_477		; (020C:2345=0)
020C:CABB  88 1E 3675				mov	byte ptr ds:[3675h],bl	; (020C:3675=4)
020C:CABF  C6 06 2345 90			mov	data_477,90h		; (020C:2345=0)
020C:CAC4  33 DB				xor	bx,bx			; Zero register
020C:CAC6  89 0E 2FA2				mov	data_520,cx		; (020C:2FA2=0CFAh)
020C:CACA  89 0E 2334				mov	data_471,cx		; (020C:2334=0)
020C:CACE  26: 8B 04				mov	ax,es:[si]
020C:CAD1  E8 C28C				call	sub_111			; (8D60)
020C:CAD4  C6 06 46EC 00			mov	data_729,0		; (020C:46EC=8Fh)
020C:CAD9  58					pop	ax
020C:CADA  50					push	ax
020C:CADB  A8 01				test	al,1
020C:CADD  74 2B				jz	loc_2095		; Jump if zero
020C:CADF  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020C:CAE4  45					inc	bp
020C:CAE5  45					inc	bp
020C:CAE6  80 3E 3D00 01			cmp	data_580,1		; (020C:3D00=17h)
020C:CAEB  74 0F				je	loc_2094		; Jump if equal
020C:CAED  26: 8B 04				mov	ax,es:[si]
020C:CAF0  33 DB				xor	bx,bx			; Zero register
020C:CAF2  C6 06 217B 04			mov	data_401,4		; (020C:217B=2Eh)
020C:CAF7  E8 C266				call	sub_111			; (8D60)
020C:CAFA  EB 0E				jmp	short loc_2095		; (CB0A)
020C:CAFC			loc_2094:
020C:CAFC  26: 8B 44 02				mov	ax,es:[si+2]
020C:CB00  9A 1491:02B4		;*		call	far ptr sub_158		;*(1491:02B4)
020C:CB00  9A					db	9Ah
020C:CB01  02B4 1491				dw	2B4h, 1491h
020C:CB05  C6 06 3D00 00			mov	data_580,0		; (020C:3D00=17h)
020C:CB0A			loc_2095:
020C:CB0A  58					pop	ax
020C:CB0B  88 26 1700				mov	byte ptr ds:[1700h],ah	; (020C:1700=41h)
020C:CB0F  C6 06 217B 00			mov	data_401,0		; (020C:217B=2Eh)
020C:CB14  A0 3675				mov	al,byte ptr ds:[3675h]	; (020C:3675=4)
020C:CB17  A2 2345				mov	data_477,al		; (020C:2345=0)
020C:CB1A  8F 06 2334				pop	data_471		; (020C:2334=0)
020C:CB1E  8F 06 2FA2				pop	data_520		; (020C:2FA2=0CFAh)
020C:CB22			loc_2096:
020C:CB22  5E					pop	si
020C:CB23  E9 112C				jmp	loc_2308		; (DC52)
				sub_139		endp

							                        ;* No entry point to code
020C:CB26  9A 1491:6D3C		;*		call	far ptr sub_233		;*(1491:6D3C)
020C:CB26  9A					db	9Ah
020C:CB27  6D3C 1491				dw	6D3Ch, 1491h
020C:CB2B  C6 06 1D1E 01			mov	data_286,1		; (020C:1D1E=0)
020C:CB30  56					push	si
020C:CB31  2C 02				sub	al,2
020C:CB33  32 E4				xor	ah,ah			; Zero register
020C:CB35  80 3E 1D63 01			cmp	data_323,1		; (020C:1D63=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 420

020C:CB3A  74 04				je	loc_2097		; Jump if equal
020C:CB3C  02 06 1D62				add	al,data_322		; (020C:1D62=0)
020C:CB40			loc_2097:
020C:CB40  03 F0				add	si,ax
020C:CB42  26: 8A 04				mov	al,es:[si]
020C:CB45  5E					pop	si
020C:CB46  A2 2FB8				mov	byte ptr data_530,al	; (020C:2FB8=0Eh)
020C:CB49  C6 06 2FB9 00			mov	byte ptr data_530+1,0	; (020C:2FB9=0Eh)
020C:CB4E  C7 06 2FBA 0000			mov	data_532,0		; (020C:2FBA=0E20h)
020C:CB54  9A 1491:0134		;*		call	far ptr sub_153		;*(1491:0134)
020C:CB54  9A					db	9Ah
020C:CB55  0134 1491				dw	134h, 1491h

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:CB59			sub_143		proc	near
020C:CB59  80 3E 1D44 56			cmp	data_308,56h		; (020C:1D44=0) 'V'
020C:CB5E  74 2A				je	loc_2099		; Jump if equal
020C:CB60  26: 80 3C B4				cmp	byte ptr es:[si],0B4h
020C:CB64  75 07				jne	loc_2098		; Jump if not equal
020C:CB66  26: 80 7C 02 CD			cmp	byte ptr es:[si+2],0CDh
020C:CB6B  74 1D				je	loc_2099		; Jump if equal
020C:CB6D			loc_2098:
020C:CB6D  3C 20				cmp	al,20h			; ' '
020C:CB6F  72 19				jb	loc_2099		; Jump if below
020C:CB71  3C 7F				cmp	al,7Fh
020C:CB73  73 15				jae	loc_2099		; Jump if above or =
020C:CB75  55					push	bp
020C:CB76  E8 A23B				call	sub_72			; (6DB4)
020C:CB79  3E: C6 46 00 27			mov	byte ptr ds:[bp],27h	; '''
020C:CB7E  45					inc	bp
020C:CB7F  3E: 88 46 00				mov	ds:[bp],al
020C:CB83  45					inc	bp
020C:CB84  3E: C6 46 00 27			mov	byte ptr ds:[bp],27h	; '''
020C:CB89  5D					pop	bp
020C:CB8A			loc_2099:
020C:CB8A  E9 10C5				jmp	loc_2308		; (DC52)
				sub_143		endp

							                        ;* No entry point to code
020C:CB8D  C6 06 1D1E 01			mov	data_286,1		; (020C:1D1E=0)
020C:CB92  56					push	si
020C:CB93  2C 0A				sub	al,0Ah

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:CB95			sub_144		proc	near
020C:CB95  32 E4				xor	ah,ah			; Zero register
020C:CB97  80 3E 1D63 01			cmp	data_323,1		; (020C:1D63=0)
020C:CB9C  74 04				je	loc_2100		; Jump if equal
020C:CB9E  02 06 1D62				add	al,data_322		; (020C:1D62=0)
020C:CBA2			loc_2100:
020C:CBA2  03 F0				add	si,ax
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 421

020C:CBA4  26: 8A 04				mov	al,es:[si]
020C:CBA7  98					cbw				; Convrt byte to word
020C:CBA8  5E					pop	si
020C:CBA9  33 DB				xor	bx,bx			; Zero register
020C:CBAB  A9 8000				test	ax,8000h
020C:CBAE  74 03				jz	loc_2101		; Jump if zero
020C:CBB0  BB FFFF				mov	bx,0FFFFh
020C:CBB3			loc_2101:
020C:CBB3  A3 2FB8				mov	data_530,ax		; (020C:2FB8=0E0Eh)
020C:CBB6  89 1E 2FBA				mov	data_532,bx		; (020C:2FBA=0E20h)
020C:CBBA  F6 06 2308 01			test	data_455,1		; (020C:2308=0)
020C:CBBF  74 1F				jz	loc_2103		; Jump if zero
020C:CBC1  93					xchg	bx,ax
020C:CBC2  3D 0000				cmp	ax,0
020C:CBC5  75 11				jne	loc_2102		; Jump if not equal
020C:CBC7  80 3E 2346 01			cmp	data_478,1		; (020C:2346=0)
020C:CBCC  75 0A				jne	loc_2102		; Jump if not equal
020C:CBCE  56					push	si
020C:CBCF  BE 2531				mov	si,2531h
020C:CBD2  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:CBD2  9A					db	9Ah
020C:CBD3  67E0 1491				dw	67E0h, 1491h
020C:CBD7  5E					pop	si
020C:CBD8			loc_2102:
020C:CBD8  9A 1491:0414		;*		call	far ptr sub_160		;*(1491:0414)
020C:CBD8  9A					db	9Ah
020C:CBD9  0414 1491				dw	414h, 1491h
020C:CBDD  E9 1072				jmp	loc_2308		; (DC52)
020C:CBE0			loc_2103:
020C:CBE0  E9 028B				jmp	loc_2133		; (CE6E)
							                        ;* No entry point to code
020C:CBE3  C6 06 1D1E 02			mov	data_286,2		; (020C:1D1E=0)
020C:CBE8  80 3E 1D44 0B			cmp	data_308,0Bh		; (020C:1D44=0)
020C:CBED  74 1A				je	loc_2104		; Jump if equal
020C:CBEF  80 3E 1D44 C2			cmp	data_308,0C2h		; (020C:1D44=0)
020C:CBF4  74 13				je	loc_2104		; Jump if equal

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

020C:CBF6			sub_145:
020C:CBF6  80 3E 1D44 77			cmp	data_308,77h		; (020C:1D44=0) 'w'
020C:CBFB  74 0C				je	loc_2104		; Jump if equal
020C:CBFD  F6 06 2308 01			test	data_455,1		; (020C:2308=0)
020C:CC02  74 05				jz	loc_2104		; Jump if zero
020C:CC04  04 08				add	al,8
020C:CC06  E9 F27F				jmp	loc_1952		; (BE88)
020C:CC09			loc_2104:
020C:CC09  9A 1491:6D3C		;*		call	far ptr sub_233		;*(1491:6D3C)
020C:CC09  9A					db	9Ah
020C:CC0A  6D3C 1491				dw	6D3Ch, 1491h
020C:CC0E  56					push	si
020C:CC0F  26: 8A 0C				mov	cl,es:[si]
020C:CC12  2C 12				sub	al,12h
020C:CC14  32 E4				xor	ah,ah			; Zero register
020C:CC16  80 3E 1D63 01			cmp	data_323,1		; (020C:1D63=0)
020C:CC1B  74 04				je	loc_2105		; Jump if equal
020C:CC1D  02 06 1D62				add	al,data_322		; (020C:1D62=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 422

020C:CC21			loc_2105:
020C:CC21  03 F0				add	si,ax
020C:CC23  F6 06 3D06 01			test	data_584,1		; (020C:3D06=98h)
020C:CC28  74 25				jz	loc_2108		; Jump if zero
020C:CC2A  26: 83 3C 7F				cmp	word ptr es:[si],7Fh
020C:CC2E  72 06				jb	loc_2106		; Jump if below
020C:CC30  26: 83 3C 80				cmp	word ptr es:[si],0FF80h
020C:CC34  72 19				jb	loc_2108		; Jump if below
020C:CC36			loc_2106:
020C:CC36  80 3E 1547 02			cmp	data_169,2		; (020C:1547=0)
020C:CC3B  75 07				jne	loc_2107		; Jump if not equal
020C:CC3D  C6 06 3CFE 01			mov	data_579,1		; (020C:3CFE=6)
020C:CC42  EB 0B				jmp	short loc_2108		; (CC4F)
020C:CC44			loc_2107:
020C:CC44  F6 06 3D05 01			test	data_583,1		; (020C:3D05=0E8h)
020C:CC49  75 04				jnz	loc_2108		; Jump if not zero
020C:CC4B  FE 06 3D07				inc	data_585		; (020C:3D07=31h)
020C:CC4F			loc_2108:
020C:CC4F  26: 8B 04				mov	ax,es:[si]
020C:CC52  A3 2FB8				mov	data_530,ax		; (020C:2FB8=0E0Eh)
020C:CC55  C7 06 2FBA 0000			mov	data_532,0		; (020C:2FBA=0E20h)
020C:CC5B  F6 06 4521 10			test	data_707,10h		; (020C:4521=4Fh)
020C:CC60  74 15				jz	loc_2109		; Jump if zero
020C:CC62  9A 1491:7514		;*		call	far ptr sub_240		;*(1491:7514)
020C:CC62  9A					db	9Ah
020C:CC63  7514 1491				dw	7514h, 1491h
020C:CC67  F6 06 4521 20			test	data_707,20h		; (020C:4521=4Fh) ' '
020C:CC6C  74 09				jz	loc_2109		; Jump if zero
020C:CC6E  80 26 4521 DF			and	data_707,0DFh		; (020C:4521=4Fh)
020C:CC73  5E					pop	si
020C:CC74  E9 0FDB				jmp	loc_2308		; (DC52)
020C:CC77			loc_2109:
020C:CC77  9A 1491:8BFC		;*		call	far ptr sub_259		;*(1491:8BFC)
020C:CC77  9A					db	9Ah
020C:CC78  8BFC 1491				dw	8BFCh, 1491h
020C:CC7C  80 3E 1790 01			cmp	data_195,1		; (020C:1790=0)
020C:CC81  75 77				jne	loc_2115		; Jump if not equal
020C:CC83  80 3E 1551 00			cmp	data_170,0		; (020C:1551=0)
020C:CC88  74 07				je	loc_2110		; Jump if equal
020C:CC8A  80 3E 1F6D 03			cmp	data_355,3		; (020C:1F6D=0)
020C:CC8F  75 69				jne	loc_2115		; Jump if not equal
020C:CC91			loc_2110:
020C:CC91  80 3E 1F6B 03			cmp	data_353,3		; (020C:1F6B=0)
020C:CC96  75 03				jne	loc_2111		; Jump if not equal
020C:CC98  E9 011B				jmp	loc_2123		; (CDB6)
020C:CC9B			loc_2111:
020C:CC9B  3D 0000				cmp	ax,0
020C:CC9E  74 5A				je	loc_2115		; Jump if equal
020C:CCA0  3D FFFF				cmp	ax,0FFFFh
020C:CCA3  74 55				je	loc_2115		; Jump if equal
020C:CCA5  80 E1 B8				and	cl,0B8h
020C:CCA8  80 F9 B8				cmp	cl,0B8h
020C:CCAB  75 4D				jne	loc_2115		; Jump if not equal
020C:CCAD			loc_2112:
020C:CCAD  5E					pop	si
020C:CCAE  56					push	si
020C:CCAF  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 423

020C:CCB4  06					push	es
020C:CCB5  53					push	bx
020C:CCB6  8B DE				mov	bx,si
020C:CCB8  E8 AD27				call	sub_87			; (79E2)
020C:CCBB  BE 0000				mov	si,0
020C:CCBE  8A 0E 1CD9				mov	cl,data_254		; (020C:1CD9=0)
020C:CCC2  32 ED				xor	ch,ch			; Zero register

020C:CCC4			locloop_2113:
020C:CCC4  26: 39 04				cmp	es:[si],ax
020C:CCC7  74 34				je	loc_2116		; Jump if equal
020C:CCC9  83 C6 19				add	si,19h
020C:CCCC  E2 F6				loop	locloop_2113		; Loop if cx > 0

020C:CCCE  5B					pop	bx
020C:CCCF  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:CCD4  9C					pushf				; Push flags
020C:CCD5  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:CCDA  5A					pop	dx
020C:CCDB  8E C2				mov	es,dx
020C:CCDD  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:CCE2  5A					pop	dx
020C:CCE3  75 0A				jnz	loc_2114		; Jump if not zero
020C:CCE5  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:CCEA  74 03				je	loc_2114		; Jump if equal
020C:CCEC  E8 B1C1				call	sub_97			; (7EB0)
020C:CCEF			loc_2114:
020C:CCEF  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:CCF4  9D					popf				; Pop flags
020C:CCF5  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:CCFA			loc_2115:
020C:CCFA  E9 0170				jmp	loc_2132		; (CE6D)
020C:CCFD			loc_2116:
020C:CCFD  80 3F B9				cmp	byte ptr [bx],0B9h
020C:CD00  72 26				jb	loc_2117		; Jump if below
020C:CD02  80 3F BF				cmp	byte ptr [bx],0BFh
020C:CD05  77 21				ja	loc_2117		; Jump if above
020C:CD07  56					push	si
020C:CD08  BE 25A0				mov	si,25A0h
020C:CD0B  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:CD0B  9A					db	9Ah
020C:CD0C  67E0 1491				dw	67E0h, 1491h
020C:CD10  5E					pop	si
020C:CD11  F7 06 13F3 0002			test	data_168,2		; (020C:13F3=0)
020C:CD17  74 0F				jz	loc_2117		; Jump if zero
020C:CD19  56					push	si
020C:CD1A  55					push	bp
020C:CD1B  BE 25A0				mov	si,25A0h
020C:CD1E  BD 19F6				mov	bp,19F6h
020C:CD21  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:CD21  9A					db	9Ah
020C:CD22  67E0 1491				dw	67E0h, 1491h
020C:CD26  5D					pop	bp
020C:CD27  5E					pop	si
020C:CD28			loc_2117:
020C:CD28  26: 8A 4C 0A				mov	cl,es:[si+0Ah]
020C:CD2C  26: 8B 5C 0C				mov	bx,es:[si+0Ch]
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 424

020C:CD30  BE 2576				mov	si,2576h
020C:CD33  80 F9 03				cmp	cl,3
020C:CD36  75 05				jne	loc_2118		; Jump if not equal
020C:CD38  BE 2583				mov	si,2583h
020C:CD3B  EB 3D				jmp	short loc_2120		; (CD7A)
020C:CD3D			loc_2118:
020C:CD3D  80 3E 1F6D 03			cmp	data_355,3		; (020C:1F6D=0)
020C:CD42  74 36				je	loc_2120		; Jump if equal
020C:CD44  80 3E 1551 00			cmp	data_170,0		; (020C:1551=0)
020C:CD49  75 2F				jne	loc_2120		; Jump if not equal
020C:CD4B  5B					pop	bx
020C:CD4C  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:CD51  9C					pushf				; Push flags
020C:CD52  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:CD57  5A					pop	dx
020C:CD58  8E C2				mov	es,dx
020C:CD5A  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:CD5F  5A					pop	dx
020C:CD60  75 0A				jnz	loc_2119		; Jump if not zero
020C:CD62  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:CD67  74 03				je	loc_2119		; Jump if equal
020C:CD69  E8 B144				call	sub_97			; (7EB0)
020C:CD6C			loc_2119:
020C:CD6C  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:CD71  9D					popf				; Pop flags
020C:CD72  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:CD77  E9 00F3				jmp	loc_2132		; (CE6D)
020C:CD7A			loc_2120:
020C:CD7A  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:CD7A  9A					db	9Ah
020C:CD7B  67E0 1491				dw	67E0h, 1491h
020C:CD7F  8B C3				mov	ax,bx
020C:CD81  9A 1491:7E54		;*		call	far ptr sub_244		;*(1491:7E54)
020C:CD81  9A					db	9Ah
020C:CD82  7E54 1491				dw	7E54h, 1491h
020C:CD86  5B					pop	bx
020C:CD87  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:CD8C  9C					pushf				; Push flags
020C:CD8D  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:CD92  5A					pop	dx
020C:CD93  8E C2				mov	es,dx
020C:CD95  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:CD9A  5A					pop	dx
020C:CD9B  75 0A				jnz	loc_2122		; Jump if not zero
020C:CD9D  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:CDA2  74 03				je	loc_2122		; Jump if equal
020C:CDA4  E8 B109				call	sub_97			; (7EB0)
020C:CDA7			loc_2122:
020C:CDA7  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:CDAC  9D					popf				; Pop flags
020C:CDAD  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:CDB2  5E					pop	si
020C:CDB3  E9 0E9C				jmp	loc_2308		; (DC52)
020C:CDB6			loc_2123:
020C:CDB6  80 FA 51				cmp	dl,51h			; 'Q'
020C:CDB9  75 04				jne	loc_2124		; Jump if not equal
020C:CDBB  33 D2				xor	dx,dx			; Zero register
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 425

020C:CDBD  EB 05				jmp	short loc_2125		; (CDC4)
020C:CDBF			loc_2124:
020C:CDBF  80 EA 12				sub	dl,12h
020C:CDC2  32 F6				xor	dh,dh			; Zero register
020C:CDC4			loc_2125:
020C:CDC4  50					push	ax
020C:CDC5  57					push	di
020C:CDC6  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:CDCB  06					push	es
020C:CDCC  E8 AC2B				call	sub_92			; (79FA)
020C:CDCF  A1 2156				mov	ax,data_380		; (020C:2156=0FFFFh)
020C:CDD2  03 C2				add	ax,dx
020C:CDD4  8B 1E 2154				mov	bx,data_379		; (020C:2154=5CE9h)
020C:CDD8  8A 16 3C07				mov	dl,data_571		; (020C:3C07=0E8h)
020C:CDDC  52					push	dx
020C:CDDD  C6 06 3C07 01			mov	data_571,1		; (020C:3C07=0E8h)
020C:CDE2  BA 0040				mov	dx,40h
020C:CDE5  E8 9748				call	sub_69			; (6530)
020C:CDE8  5A					pop	dx
020C:CDE9  88 16 3C07				mov	data_571,dl		; (020C:3C07=0E8h)
020C:CDED  73 0A				jnc	loc_2126		; Jump if carry=0
020C:CDEF  26: 8A 45 04				mov	al,es:[di+4]
020C:CDF3  24 5F				and	al,5Fh			; '_'
020C:CDF5  3C 5F				cmp	al,5Fh			; '_'
020C:CDF7  74 02				je	loc_2127		; Jump if equal
020C:CDF9			loc_2126:
020C:CDF9  EB 45				jmp	short loc_2130		; (CE40)
020C:CDFB			loc_2127:
020C:CDFB  26: F6 45 05 0F			test	byte ptr es:[di+5],0Fh
020C:CE00  74 0E				jz	loc_2128		; Jump if zero
020C:CE02  26: 8B 45 0A				mov	ax,es:[di+0Ah]
020C:CE06  A3 2174				mov	data_397,ax		; (020C:2174=0FB01h)
020C:CE09  C6 06 2173 44			mov	data_396,44h		; (020C:2173=2) 'D'
020C:CE0E  EB 30				jmp	short loc_2130		; (CE40)
020C:CE10			loc_2128:
020C:CE10  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:CE15  9C					pushf				; Push flags
020C:CE16  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:CE1B  5A					pop	dx
020C:CE1C  8E C2				mov	es,dx
020C:CE1E  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:CE23  5A					pop	dx
020C:CE24  75 0A				jnz	loc_2129		; Jump if not zero
020C:CE26  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:CE2B  74 03				je	loc_2129		; Jump if equal
020C:CE2D  E8 B080				call	sub_97			; (7EB0)
020C:CE30			loc_2129:
020C:CE30  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:CE35  9D					popf				; Pop flags
020C:CE36  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:CE3B  5F					pop	di
020C:CE3C  58					pop	ax
020C:CE3D  E9 FE6D				jmp	loc_2112		; (CCAD)
020C:CE40			loc_2130:
020C:CE40  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:CE45  9C					pushf				; Push flags
020C:CE46  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 426

020C:CE4B  5A					pop	dx
020C:CE4C  8E C2				mov	es,dx
020C:CE4E  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:CE53  5A					pop	dx
020C:CE54  75 0A				jnz	loc_2131		; Jump if not zero
020C:CE56  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:CE5B  74 03				je	loc_2131		; Jump if equal
020C:CE5D  E8 B050				call	sub_97			; (7EB0)
020C:CE60			loc_2131:
020C:CE60  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:CE65  9D					popf				; Pop flags
020C:CE66  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:CE6B  5F					pop	di
020C:CE6C  58					pop	ax
020C:CE6D			loc_2132:
020C:CE6D  5E					pop	si
020C:CE6E			loc_2133:
020C:CE6E  80 3E 2173 00			cmp	data_396,0		; (020C:2173=2)
020C:CE73  75 08				jne	loc_2134		; Jump if not equal
020C:CE75  9A 1491:02B4		;*		call	far ptr sub_158		;*(1491:02B4)
020C:CE75  9A					db	9Ah
020C:CE76  02B4 1491				dw	2B4h, 1491h
020C:CE7A  E9 0DD5				jmp	loc_2308		; (DC52)
020C:CE7D			loc_2134:
020C:CE7D  56					push	si
020C:CE7E  57					push	di
020C:CE7F  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:CE84  06					push	es
020C:CE85  E8 AB66				call	sub_90			; (79EE)
020C:CE88  B9 0024				mov	cx,24h
020C:CE8B  BE 1A43				mov	si,1A43h
020C:CE8E  BF 1C97				mov	di,1C97h
020C:CE91  FC					cld				; Clear direction
020C:CE92  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:CE94  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:CE99  9C					pushf				; Push flags
020C:CE9A  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:CE9F  5A					pop	dx
020C:CEA0  8E C2				mov	es,dx
020C:CEA2  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:CEA7  5A					pop	dx
020C:CEA8  75 0A				jnz	loc_2135		; Jump if not zero
020C:CEAA  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:CEAF  74 03				je	loc_2135		; Jump if equal
020C:CEB1  E8 AFFC				call	sub_97			; (7EB0)
020C:CEB4			loc_2135:
020C:CEB4  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:CEB9  9D					popf				; Pop flags
020C:CEBA  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:CEBF  5F					pop	di
020C:CEC0  5E					pop	si
020C:CEC1  80 3E 2173 44			cmp	data_396,44h		; (020C:2173=2) 'D'
020C:CEC6  75 5E				jne	loc_2137		; Jump if not equal
020C:CEC8  C6 06 217B 02			mov	data_401,2		; (020C:217B=2Eh)
020C:CECD  FF 36 2FA2				push	data_520		; (020C:2FA2=0CFAh)
020C:CED1  FF 36 2334				push	data_471		; (020C:2334=0)
020C:CED5  8A 1E 1CE3				mov	bl,data_260		; (020C:1CE3=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 427

020C:CED9  53					push	bx
020C:CEDA  C6 06 1CE3 00			mov	data_260,0		; (020C:1CE3=0)
020C:CEDF  8A 1E 2345				mov	bl,data_477		; (020C:2345=0)
020C:CEE3  88 1E 3675				mov	byte ptr ds:[3675h],bl	; (020C:3675=4)
020C:CEE7  C6 06 2345 90			mov	data_477,90h		; (020C:2345=0)
020C:CEEC  33 DB				xor	bx,bx			; Zero register
020C:CEEE  8B 0E 2154				mov	cx,data_379		; (020C:2154=5CE9h)
020C:CEF2  83 3E 2174 FF			cmp	data_397,0FFFFh		; (020C:2174=0FB01h)
020C:CEF7  74 04				je	loc_2136		; Jump if equal
020C:CEF9  8B 0E 2174				mov	cx,data_397		; (020C:2174=0FB01h)
020C:CEFD			loc_2136:
020C:CEFD  C6 06 1D60 00			mov	data_320,0		; (020C:1D60=0)
020C:CF02  89 0E 2FA2				mov	data_520,cx		; (020C:2FA2=0CFAh)
020C:CF06  89 0E 2334				mov	data_471,cx		; (020C:2334=0)
020C:CF0A  E8 BE53				call	sub_111			; (8D60)
020C:CF0D  58					pop	ax
020C:CF0E  A2 1CE3				mov	data_260,al		; (020C:1CE3=0)
020C:CF11  8F 06 2334				pop	data_471		; (020C:2334=0)
020C:CF15  8F 06 2FA2				pop	data_520		; (020C:2FA2=0CFAh)
020C:CF19  C6 06 217B 00			mov	data_401,0		; (020C:217B=2Eh)
020C:CF1E  A0 3675				mov	al,byte ptr ds:[3675h]	; (020C:3675=4)
020C:CF21  A2 2345				mov	data_477,al		; (020C:2345=0)
020C:CF24  EB 5F				jmp	short loc_2141		; (CF85)
020C:CF26			loc_2137:
020C:CF26  56					push	si
020C:CF27  BE 258E				mov	si,258Eh
020C:CF2A  80 3E 46EC 00			cmp	data_729,0		; (020C:46EC=8Fh)
020C:CF2F  74 03				je	loc_2138		; Jump if equal
020C:CF31  BE 2596				mov	si,2596h
020C:CF34			loc_2138:
020C:CF34  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:CF34  9A					db	9Ah
020C:CF35  67E0 1491				dw	67E0h, 1491h
020C:CF39  5E					pop	si
020C:CF3A  8A 2E 1D44				mov	ch,data_308		; (020C:1D44=0)
020C:CF3E  8A 0E 216F				mov	cl,data_393		; (020C:216F=0FFh)
020C:CF42  51					push	cx
020C:CF43  8A 2E 1D45				mov	ch,data_309		; (020C:1D45=0)
020C:CF47  51					push	cx
020C:CF48  C6 06 1D44 00			mov	data_308,0		; (020C:1D44=0)
020C:CF4D  C6 06 1D45 00			mov	data_309,0		; (020C:1D45=0)
020C:CF52  80 3E 2173 40			cmp	data_396,40h		; (020C:2173=2) '@'
020C:CF57  75 05				jne	loc_2139		; Jump if not equal
020C:CF59  C6 06 1D44 4F			mov	data_308,4Fh		; (020C:1D44=0) 'O'
020C:CF5E			loc_2139:
020C:CF5E  8B 1E 2154				mov	bx,data_379		; (020C:2154=5CE9h)
020C:CF62  83 3E 2174 FF			cmp	data_397,0FFFFh		; (020C:2174=0FB01h)
020C:CF67  74 04				je	loc_2140		; Jump if equal
020C:CF69  8B 1E 2174				mov	bx,data_397		; (020C:2174=0FB01h)
020C:CF6D			loc_2140:
020C:CF6D  B1 00				mov	cl,0
020C:CF6F  C6 06 230D 02			mov	data_458,2		; (020C:230D=0A7h)
020C:CF74  E8 C535				call	sub_112			; (94AC)
020C:CF77  59					pop	cx
020C:CF78  88 2E 1D45				mov	data_309,ch		; (020C:1D45=0)
020C:CF7C  59					pop	cx
020C:CF7D  88 0E 216F				mov	data_393,cl		; (020C:216F=0FFh)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 428

020C:CF81  88 2E 1D44				mov	data_308,ch		; (020C:1D44=0)
020C:CF85			loc_2141:
020C:CF85  C6 06 46EC 00			mov	data_729,0		; (020C:46EC=8Fh)
020C:CF8A  81 FD 1A43				cmp	bp,1A43h
020C:CF8E  72 1E				jb	loc_2144		; Jump if below
020C:CF90  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020C:CF95  45					inc	bp
020C:CF96  56					push	si
020C:CF97  BE 1C97				mov	si,1C97h
020C:CF9A  B9 0024				mov	cx,24h

020C:CF9D			locloop_2142:
020C:CF9D  8A 04				mov	al,[si]
020C:CF9F  3E: 88 46 00				mov	ds:[bp],al
020C:CFA3  46					inc	si
020C:CFA4  45					inc	bp
020C:CFA5  81 FD 1A67				cmp	bp,1A67h
020C:CFA9  73 02				jae	loc_2143		; Jump if above or =
020C:CFAB  E2 F0				loop	locloop_2142		; Loop if cx > 0

020C:CFAD			loc_2143:
020C:CFAD  5E					pop	si
020C:CFAE			loc_2144:
020C:CFAE  E9 0CA1				jmp	loc_2308		; (DC52)
				sub_144		endp

							                        ;* No entry point to code
020C:CFB1  9A 1491:6D74		;*		call	far ptr sub_234		;*(1491:6D74)
020C:CFB1  9A					db	9Ah
020C:CFB2  6D74 1491				dw	6D74h, 1491h
020C:CFB6  73 08				jnc	loc_2145		; Jump if carry=0
020C:CFB8  C6 06 46EC 01			mov	data_729,1		; (020C:46EC=8Fh)
020C:CFBD  E9 FEBD				jmp	loc_2134		; (CE7D)
020C:CFC0			loc_2145:
020C:CFC0  E9 0C8F				jmp	loc_2308		; (DC52)
							                        ;* No entry point to code
020C:CFC3  8B 0E 2334				mov	cx,data_471		; (020C:2334=0)
020C:CFC7  89 0E 2FA2				mov	data_520,cx		; (020C:2FA2=0CFAh)
020C:CFCB  56					push	si
020C:CFCC  BE 25B4				mov	si,25B4h
020C:CFCF  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:CFCF  9A					db	9Ah
020C:CFD0  67E0 1491				dw	67E0h, 1491h
020C:CFD4  C6 06 217B 03			mov	data_401,3		; (020C:217B=2Eh)
020C:CFD9  C6 06 1701 01			mov	byte ptr ds:[1701h],1	; (020C:1701=41h)
020C:CFDE  5E					pop	si
020C:CFDF  56					push	si
020C:CFE0  C6 06 1D1E 01			mov	data_286,1		; (020C:1D1E=0)
020C:CFE5  03 36 1D68				add	si,data_327		; (020C:1D68=0)
020C:CFE9  4E					dec	si
020C:CFEA  9A 1491:3330		;*		call	far ptr sub_189		;*(1491:3330)
020C:CFEA  9A					db	9Ah
020C:CFEB  3330 1491				dw	3330h, 1491h
020C:CFEF  46					inc	si
020C:CFF0  E9 00F4				jmp	loc_2157		; (D0E7)
							                        ;* No entry point to code
020C:CFF3  8B 0E 2334				mov	cx,data_471		; (020C:2334=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 429

020C:CFF7  89 0E 2FA2				mov	data_520,cx		; (020C:2FA2=0CFAh)
020C:CFFB  C6 06 1D1E 01			mov	data_286,1		; (020C:1D1E=0)
020C:D000  3C 31				cmp	al,31h			; '1'
020C:D002  75 03				jne	loc_2147		; Jump if not equal
020C:D004			loc_2146:
020C:D004  E9 00A3				jmp	loc_2155		; (D0AA)
020C:D007			loc_2147:
020C:D007  3C 32				cmp	al,32h			; '2'
020C:D009  74 F9				je	loc_2146		; Jump if equal
020C:D00B  FE 06 1D1E				inc	data_286		; (020C:1D1E=0)
020C:D00F  56					push	si
020C:D010  46					inc	si
020C:D011  3C 35				cmp	al,35h			; '5'
020C:D013  75 07				jne	loc_2148		; Jump if not equal
020C:D015  C6 06 1D60 00			mov	data_320,0		; (020C:1D60=0)
020C:D01A  EB 06				jmp	short loc_2149		; (D022)
020C:D01C			loc_2148:
020C:D01C  9A 1491:3330		;*		call	far ptr sub_189		;*(1491:3330)
020C:D01C  9A					db	9Ah
020C:D01D  3330 1491				dw	3330h, 1491h
020C:D021  46					inc	si
020C:D022			loc_2149:
020C:D022  F6 06 4521 01			test	data_707,1		; (020C:4521=4Fh)
020C:D027  74 05				jz	loc_2150		; Jump if zero
020C:D029  9A 1491:746C		;*		call	far ptr sub_239		;*(1491:746C)
020C:D029  9A					db	9Ah
020C:D02A  746C 1491				dw	746Ch, 1491h
020C:D02E			loc_2150:
020C:D02E  26: 8B 04				mov	ax,es:[si]
020C:D031  5E					pop	si
020C:D032  32 DB				xor	bl,bl			; Zero register
020C:D034  80 FA 36				cmp	dl,36h			; '6'
020C:D037  75 39				jne	loc_2152		; Jump if not equal
020C:D039  26: 8A 5C 01				mov	bl,es:[si+1]
020C:D03D  80 E3 C7				and	bl,0C7h
020C:D040  80 FB 06				cmp	bl,6
020C:D043  74 2D				je	loc_2152		; Jump if equal
020C:D045  26: 8A 5C 01				mov	bl,es:[si+1]
020C:D049  80 CB 08				or	bl,8
020C:D04C  F7 06 13F3 0008			test	data_168,8		; (020C:13F3=0)
020C:D052  75 1E				jnz	loc_2152		; Jump if not zero
020C:D054  3D 007F				cmp	ax,7Fh
020C:D057  72 05				jb	loc_2151		; Jump if below
020C:D059  3D FF80				cmp	ax,0FF80h
020C:D05C  72 14				jb	loc_2152		; Jump if below
020C:D05E			loc_2151:
020C:D05E  26: 80 3C 8B				cmp	byte ptr es:[si],8Bh
020C:D062  74 0E				je	loc_2152		; Jump if equal
020C:D064  80 0E 3D06 40			or	data_584,40h		; (020C:3D06=98h) '@'
020C:D069  3D 0000				cmp	ax,0
020C:D06C  75 04				jne	loc_2152		; Jump if not equal
020C:D06E  FE 06 3D07				inc	data_585		; (020C:3D07=31h)
020C:D072			loc_2152:
020C:D072  F6 06 2308 02			test	data_455,2		; (020C:2308=0)
020C:D077  74 2E				jz	loc_2154		; Jump if zero
020C:D079  C6 06 2348 00			mov	data_479,0		; (020C:2348=0)
020C:D07E  C6 06 1D1E 04			mov	data_286,4		; (020C:1D1E=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 430

020C:D083  26: 8B 44 03				mov	ax,es:[si+3]
020C:D087  3D 0000				cmp	ax,0
020C:D08A  74 11				je	loc_2153		; Jump if equal
020C:D08C  26: 8B 44 03				mov	ax,es:[si+3]
020C:D090  51					push	cx
020C:D091  B1 0C				mov	cl,0Ch
020C:D093  D3 E0				shl	ax,cl			; Shift w/zeros fill
020C:D095  A3 2160				mov	data_385,ax		; (020C:2160=5E6Eh)
020C:D098  59					pop	cx
020C:D099  26: 8B 44 01				mov	ax,es:[si+1]
020C:D09D			loc_2153:
020C:D09D  46					inc	si
020C:D09E  9A 1491:8788		;*		call	far ptr sub_252		;*(1491:8788)
020C:D09E  9A					db	9Ah
020C:D09F  8788 1491				dw	8788h, 1491h
020C:D0A3  26: 8B 04				mov	ax,es:[si]
020C:D0A6  4E					dec	si
020C:D0A7			loc_2154:
020C:D0A7  E9 009A				jmp	loc_2162		; (D144)
020C:D0AA			loc_2155:
020C:D0AA  56					push	si
020C:D0AB  46					inc	si
020C:D0AC  3C 31				cmp	al,31h			; '1'
020C:D0AE  74 37				je	loc_2157		; Jump if equal
020C:D0B0  9A 1491:3330		;*		call	far ptr sub_189		;*(1491:3330)
020C:D0B0  9A					db	9Ah
020C:D0B1  3330 1491				dw	3330h, 1491h
020C:D0B5  9F					lahf				; Load ah from flags
020C:D0B6  46					inc	si
020C:D0B7  F6 06 3CFA 10			test	byte ptr ds:[3CFAh],10h	; (020C:3CFA=6)
020C:D0BC  75 73				jnz	loc_2160		; Jump if not zero
020C:D0BE  9E					sahf				; Store ah into flags
020C:D0BF  73 11				jnc	loc_2156		; Jump if carry=0
020C:D0C1  F6 06 2308 02			test	data_455,2		; (020C:2308=0)
020C:D0C6  75 1F				jnz	loc_2157		; Jump if not zero
020C:D0C8  26: 8A 44 FF				mov	al,es:[si-1]
020C:D0CC  24 C6				and	al,0C6h
020C:D0CE  3C 42				cmp	al,42h			; 'B'
020C:D0D0  75 15				jne	loc_2157		; Jump if not equal
020C:D0D2			loc_2156:
020C:D0D2  26: 80 3C 00				cmp	byte ptr es:[si],0
020C:D0D6  75 0F				jne	loc_2157		; Jump if not equal
020C:D0D8  C6 06 3CFE 01			mov	data_579,1		; (020C:3CFE=6)
020C:D0DD  80 0E 216F 04			or	data_393,4		; (020C:216F=0FFh)
020C:D0E2  C6 06 4568 8D			mov	data_709,8Dh		; (020C:4568=0E0h)
020C:D0E7			loc_2157:
020C:D0E7  26: 8A 04				mov	al,es:[si]
020C:D0EA  5E					pop	si
020C:D0EB  80 0E 3D05 02			or	data_583,2		; (020C:3D05=0E8h)
020C:D0F0  32 DB				xor	bl,bl			; Zero register
020C:D0F2  80 FA 32				cmp	dl,32h			; '2'
020C:D0F5  75 07				jne	loc_2158		; Jump if not equal
020C:D0F7  26: 8A 5C 01				mov	bl,es:[si+1]
020C:D0FB  80 CB 08				or	bl,8
020C:D0FE			loc_2158:
020C:D0FE  98					cbw				; Convrt byte to word
020C:D0FF  C6 06 1CD7 01			mov	data_252,1		; (020C:1CD7=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 431

020C:D104  C6 06 1D13 00			mov	data_283,0		; (020C:1D13=0)
020C:D109  8A 3E 1D24				mov	bh,data_291		; (020C:1D24=0)
020C:D10D  50					push	ax
020C:D10E  E8 BC4F				call	sub_111			; (8D60)
020C:D111  58					pop	ax
020C:D112  F6 C3 08				test	bl,8
020C:D115  75 13				jnz	loc_2159		; Jump if not zero
020C:D117  3B 06 1CE4				cmp	ax,data_261		; (020C:1CE4=0)
020C:D11B  73 0D				jae	loc_2159		; Jump if above or =
020C:D11D  8B 1E 2154				mov	bx,data_379		; (020C:2154=5CE9h)
020C:D121  3B 1E 2FA2				cmp	bx,data_520		; (020C:2FA2=0CFAh)
020C:D125  75 03				jne	loc_2159		; Jump if not equal
020C:D127  A3 1CE4				mov	data_261,ax		; (020C:1CE4=0)
020C:D12A			loc_2159:
020C:D12A  80 26 3D05 FD			and	data_583,0FDh		; (020C:3D05=0E8h)
020C:D12F  EB 51				jmp	short loc_2165		; (D182)
020C:D131			loc_2160:
020C:D131  26: 8A 04				mov	al,es:[si]
020C:D134  5E					pop	si
020C:D135  32 DB				xor	bl,bl			; Zero register
020C:D137  80 FA 32				cmp	dl,32h			; '2'
020C:D13A  75 07				jne	loc_2161		; Jump if not equal
020C:D13C  26: 8A 5C 01				mov	bl,es:[si+1]
020C:D140  80 CB 08				or	bl,8
020C:D143			loc_2161:
020C:D143  98					cbw				; Convrt byte to word
020C:D144			loc_2162:
020C:D144  C6 06 1CD7 01			mov	data_252,1		; (020C:1CD7=0)
020C:D149  F6 06 3CFA 10			test	byte ptr ds:[3CFAh],10h	; (020C:3CFA=6)
020C:D14E  74 03				jz	loc_2163		; Jump if zero
020C:D150  E9 0084				jmp	loc_2169		; (D1D7)
020C:D153			loc_2163:
020C:D153  C6 06 1D13 00			mov	data_283,0		; (020C:1D13=0)
020C:D158  50					push	ax
020C:D159  F7 06 3D1D 8000			test	data_597,8000h		; (020C:3D1D=0D4E8h)
020C:D15F  74 05				jz	loc_2164		; Jump if zero
020C:D161  80 0E 3D05 08			or	data_583,8		; (020C:3D05=0E8h)
020C:D166			loc_2164:
020C:D166  E8 BBF7				call	sub_111			; (8D60)
020C:D169  58					pop	ax
020C:D16A  F6 C3 08				test	bl,8
020C:D16D  75 13				jnz	loc_2165		; Jump if not zero
020C:D16F  3B 06 1CE4				cmp	ax,data_261		; (020C:1CE4=0)
020C:D173  73 0D				jae	loc_2165		; Jump if above or =
020C:D175  8B 1E 2154				mov	bx,data_379		; (020C:2154=5CE9h)
020C:D179  3B 1E 2FA2				cmp	bx,data_520		; (020C:2FA2=0CFAh)
020C:D17D  75 03				jne	loc_2165		; Jump if not equal
020C:D17F  A3 1CE4				mov	data_261,ax		; (020C:1CE4=0)
020C:D182			loc_2165:
020C:D182  80 3E 3CFD 01			cmp	data_578,1		; (020C:3CFD=0C6h)
020C:D187  74 3E				je	loc_2167		; Jump if equal
020C:D189  F6 06 1D13 02			test	data_283,2		; (020C:1D13=0)
020C:D18E  75 37				jnz	loc_2167		; Jump if not zero
020C:D190  A1 2334				mov	ax,data_471		; (020C:2334=0)
020C:D193  3B 06 2FA2				cmp	ax,data_520		; (020C:2FA2=0CFAh)
020C:D197  75 10				jne	loc_2166		; Jump if not equal
020C:D199  3B 06 1D0E				cmp	ax,data_281		; (020C:1D0E=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 432

020C:D19D  74 28				je	loc_2167		; Jump if equal
020C:D19F  C6 06 1D13 01			mov	data_283,1		; (020C:1D13=0)
020C:D1A4  A3 1D0E				mov	data_281,ax		; (020C:1D0E=0)
020C:D1A7  EB 1E				jmp	short loc_2167		; (D1C7)
020C:D1A9			loc_2166:
020C:D1A9  80 3E 1CD4 01			cmp	data_251,1		; (020C:1CD4=0)
020C:D1AE  75 17				jne	loc_2167		; Jump if not equal
020C:D1B0  A1 233A				mov	ax,data_474		; (020C:233A=0)
020C:D1B3  3B 06 2FA2				cmp	ax,data_520		; (020C:2FA2=0CFAh)
020C:D1B7  75 0E				jne	loc_2167		; Jump if not equal
020C:D1B9  3B 06 1D10				cmp	ax,data_282		; (020C:1D10=0)
020C:D1BD  74 08				je	loc_2167		; Jump if equal
020C:D1BF  C6 06 1D13 04			mov	data_283,4		; (020C:1D13=0)
020C:D1C4  A3 1D10				mov	data_282,ax		; (020C:1D10=0)
020C:D1C7			loc_2167:
020C:D1C7  80 FA 32				cmp	dl,32h			; '2'
020C:D1CA  74 08				je	loc_2168		; Jump if equal
020C:D1CC  80 FA 36				cmp	dl,36h			; '6'
020C:D1CF  74 03				je	loc_2168		; Jump if equal
020C:D1D1  E9 0A7E				jmp	loc_2308		; (DC52)
020C:D1D4			loc_2168:
020C:D1D4  E9 013D				jmp	loc_2183		; (D314)
020C:D1D7			loc_2169:
020C:D1D7  F6 06 3CFA 0F			test	byte ptr ds:[3CFAh],0Fh	; (020C:3CFA=6)
020C:D1DC  74 03				jz	loc_2170		; Jump if zero
020C:D1DE  E9 0090				jmp	loc_2177		; (D271)
020C:D1E1			loc_2170:
020C:D1E1  80 26 3CFA EF			and	byte ptr ds:[3CFAh],0EFh	; (020C:3CFA=6)
020C:D1E6  80 FA 32				cmp	dl,32h			; '2'
020C:D1E9  74 05				je	loc_2171		; Jump if equal
020C:D1EB  80 FA 36				cmp	dl,36h			; '6'
020C:D1EE  75 4E				jne	loc_2176		; Jump if not equal
020C:D1F0			loc_2171:
020C:D1F0  26: 8A 5C 01				mov	bl,es:[si+1]
020C:D1F4  80 E3 C7				and	bl,0C7h
020C:D1F7  80 FB 06				cmp	bl,6
020C:D1FA  74 42				je	loc_2176		; Jump if equal
020C:D1FC  80 E3 C0				and	bl,0C0h
020C:D1FF  80 FB 80				cmp	bl,80h
020C:D202  75 2A				jne	loc_2174		; Jump if not equal
020C:D204  80 3E 1547 00			cmp	data_169,0		; (020C:1547=0)
020C:D209  74 33				je	loc_2176		; Jump if equal
020C:D20B  26: 83 7C 02 7F			cmp	word ptr es:[si+2],7Fh
020C:D210  76 07				jbe	loc_2172		; Jump if below or =
020C:D212  26: 83 7C 02 80			cmp	word ptr es:[si+2],0FF80h
020C:D217  72 25				jb	loc_2176		; Jump if below
020C:D219			loc_2172:
020C:D219  80 3E 1547 01			cmp	data_169,1		; (020C:1547=0)
020C:D21E  74 07				je	loc_2173		; Jump if equal
020C:D220  C6 06 3CFE 01			mov	data_579,1		; (020C:3CFE=6)
020C:D225  EB 17				jmp	short loc_2176		; (D23E)
020C:D227			loc_2173:
020C:D227  C6 06 3D07 01			mov	data_585,1		; (020C:3D07=31h)
020C:D22C  EB 10				jmp	short loc_2176		; (D23E)
020C:D22E			loc_2174:
020C:D22E  C6 06 3CFD 01			mov	data_578,1		; (020C:3CFD=0C6h)
020C:D233			loc_2175:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 433

020C:D233  80 26 3D06 FB			and	data_584,0FBh		; (020C:3D06=98h)
020C:D238  A3 2FB0				mov	data_526,ax		; (020C:2FB0=0DC3h)
020C:D23B  E9 00D6				jmp	loc_2183		; (D314)
020C:D23E			loc_2176:
020C:D23E  80 0E 3D06 10			or	data_584,10h		; (020C:3D06=98h)
020C:D243  9A 1491:8BFC		;*		call	far ptr sub_259		;*(1491:8BFC)
020C:D243  9A					db	9Ah
020C:D244  8BFC 1491				dw	8BFCh, 1491h
020C:D248  56					push	si
020C:D249  BE 24B4				mov	si,24B4h
020C:D24C  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:D24C  9A					db	9Ah
020C:D24D  67E0 1491				dw	67E0h, 1491h
020C:D251  5E					pop	si
020C:D252  9A 1491:02B4		;*		call	far ptr sub_158		;*(1491:02B4)
020C:D252  9A					db	9Ah
020C:D253  02B4 1491				dw	2B4h, 1491h
020C:D257  3E: C6 46 00 5D			mov	byte ptr ds:[bp],5Dh	; ']'
020C:D25C  45					inc	bp
020C:D25D  26: 8A 5C 01				mov	bl,es:[si+1]
020C:D261  80 E3 C0				and	bl,0C0h
020C:D264  80 FB 80				cmp	bl,80h
020C:D267  C6 06 3CFD 02			mov	data_578,2		; (020C:3CFD=0C6h)
020C:D26C  74 C5				jz	loc_2175		; Jump if zero
020C:D26E  E9 09E1				jmp	loc_2308		; (DC52)
020C:D271			loc_2177:
020C:D271  8B 0E 2154				mov	cx,data_379		; (020C:2154=5CE9h)
020C:D275  83 3E 3CF8 FF			cmp	word ptr ds:[3CF8h],0FFFFh	; (020C:3CF8=0FE04h)
020C:D27A  74 04				je	loc_2178		; Jump if equal
020C:D27C  8B 0E 3CF8				mov	cx,word ptr ds:[3CF8h]	; (020C:3CF8=0FE04h)
020C:D280			loc_2178:
020C:D280  80 3E 3CFA 1A			cmp	byte ptr ds:[3CFAh],1Ah	; (020C:3CFA=6)
020C:D285  75 2B				jne	loc_2179		; Jump if not equal
020C:D287  FF 36 2FA2				push	data_520		; (020C:2FA2=0CFAh)
020C:D28B  FF 36 2334				push	data_471		; (020C:2334=0)
020C:D28F  89 0E 2FA2				mov	data_520,cx		; (020C:2FA2=0CFAh)
020C:D293  89 0E 2334				mov	data_471,cx		; (020C:2334=0)
020C:D297  32 FF				xor	bh,bh			; Zero register
020C:D299  E8 BAC4				call	sub_111			; (8D60)
020C:D29C  8F 06 2334				pop	data_471		; (020C:2334=0)
020C:D2A0  8F 06 2FA2				pop	data_520		; (020C:2FA2=0CFAh)
020C:D2A4  C7 06 1D73 0000			mov	data_333,0		; (020C:1D73=0)
020C:D2AA  C6 06 217B 00			mov	data_401,0		; (020C:217B=2Eh)
020C:D2AF  E9 FF15				jmp	loc_2167		; (D1C7)
020C:D2B2			loc_2179:
020C:D2B2  8B D9				mov	bx,cx
020C:D2B4  8A 0E 1D44				mov	cl,data_308		; (020C:1D44=0)
020C:D2B8  8A 2E 1D45				mov	ch,data_309		; (020C:1D45=0)
020C:D2BC  51					push	cx
020C:D2BD  B1 02				mov	cl,2
020C:D2BF  80 3E 3CFA 18			cmp	byte ptr ds:[3CFAh],18h	; (020C:3CFA=6)
020C:D2C4  75 05				jne	loc_2180		; Jump if not equal
020C:D2C6  C6 06 1D44 4F			mov	data_308,4Fh		; (020C:1D44=0) 'O'
020C:D2CB			loc_2180:
020C:D2CB  E8 C1DE				call	sub_112			; (94AC)
020C:D2CE  59					pop	cx
020C:D2CF  88 0E 1D44				mov	data_308,cl		; (020C:1D44=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 434

020C:D2D3  88 2E 1D45				mov	data_309,ch		; (020C:1D45=0)
020C:D2D7  E9 FEED				jmp	loc_2167		; (D1C7)
							                        ;* No entry point to code
020C:D2DA  8B 0E 2334				mov	cx,data_471		; (020C:2334=0)
020C:D2DE  89 0E 2FA2				mov	data_520,cx		; (020C:2FA2=0CFAh)
020C:D2E2  F6 06 216E 80			test	data_392,80h		; (020C:216E=0FFh)
020C:D2E7  75 05				jnz	loc_2181		; Jump if not zero
020C:D2E9  9A 1491:09C4		;*		call	far ptr sub_169		;*(1491:09C4)
020C:D2E9  9A					db	9Ah
020C:D2EA  09C4 1491				dw	9C4h, 1491h
020C:D2EE			loc_2181:
020C:D2EE  F6 06 230A 08			test	byte ptr ds:[230Ah],8	; (020C:230A=0)
020C:D2F3  74 05				jz	loc_2182		; Jump if zero
020C:D2F5  9A 1491:6808		;*		call	far ptr sub_221		;*(1491:6808)
020C:D2F5  9A					db	9Ah
020C:D2F6  6808 1491				dw	6808h, 1491h
020C:D2FA			loc_2182:
020C:D2FA  26: 8A 5C 01				mov	bl,es:[si+1]
020C:D2FE  9A 1491:B050		;*		call	far ptr sub_265		;*(1491:B050)
020C:D2FE  9A					db	9Ah
020C:D2FF  B050 1491				dw	0B050h, 1491h
020C:D303  C6 06 234C 01			mov	data_482,1		; (020C:234C=0)
020C:D308  80 3E 2348 04			cmp	data_479,4		; (020C:2348=0)
020C:D30D  75 05				jne	loc_2183		; Jump if not equal
020C:D30F  C6 06 2348 00			mov	data_479,0		; (020C:2348=0)
020C:D314			loc_2183:
020C:D314  26: 8A 5C 01				mov	bl,es:[si+1]
020C:D318  9A 1491:6784		;*		call	far ptr sub_219		;*(1491:6784)
020C:D318  9A					db	9Ah
020C:D319  6784 1491				dw	6784h, 1491h
020C:D31D  73 05				jnc	loc_2184		; Jump if carry=0
020C:D31F  C6 06 234E 01			mov	data_484,1		; (020C:234E=0)
020C:D324			loc_2184:
020C:D324  26: 8A 5C 01				mov	bl,es:[si+1]
020C:D328			loc_2185:
020C:D328  80 E3 C7				and	bl,0C7h
020C:D32B  80 FB 06				cmp	bl,6
020C:D32E  75 03				jne	loc_2186		; Jump if not equal
020C:D330  E9 091F				jmp	loc_2308		; (DC52)
020C:D333			loc_2186:
020C:D333  80 E3 07				and	bl,7
020C:D336  B9 0009				mov	cx,9
020C:D339  F6 C3 04				test	bl,4
020C:D33C  74 03				jz	loc_2187		; Jump if zero
020C:D33E  B9 0006				mov	cx,6
020C:D341			loc_2187:
020C:D341  8A C3				mov	al,bl
020C:D343  24 03				and	al,3
020C:D345  F6 E1				mul	cl			; ax = reg * al
020C:D347  F6 C3 04				test	bl,4
020C:D34A  74 0B				jz	loc_2188		; Jump if zero
020C:D34C  51					push	cx
020C:D34D  B9 2451				mov	cx,2451h
020C:D350  81 E9 242D				sub	cx,242Dh
020C:D354  03 C1				add	ax,cx
020C:D356  59					pop	cx
020C:D357			loc_2188:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 435

020C:D357  53					push	bx
020C:D358  8B D8				mov	bx,ax
020C:D35A  83 E9 02				sub	cx,2

020C:D35D			locloop_2189:
020C:D35D  8A 87 242D				mov	al,data_488[bx]		; (020C:242D=8Eh)
020C:D361  3E: 88 46 00				mov	ds:[bp],al
020C:D365  43					inc	bx
020C:D366  45					inc	bp
020C:D367  E2 F4				loop	locloop_2189		; Loop if cx > 0

020C:D369  8A 87 242D				mov	al,data_488[bx]		; (020C:242D=8Eh)
020C:D36D  A2 234D				mov	data_483,al		; (020C:234D=0)
020C:D370  8A 9F 242E				mov	bl,data_489[bx]		; (020C:242E=0C5h)
020C:D374  32 FF				xor	bh,bh			; Zero register
020C:D376  D1 E3				shl	bx,1			; Shift w/zeros fill
020C:D378  81 C3 46F0				add	bx,46F0h
020C:D37C  8B 1F				mov	bx,[bx]
020C:D37E  80 3E 3CFD 02			cmp	data_578,2		; (020C:3CFD=0C6h)
020C:D383  75 02				jne	loc_2190		; Jump if not equal
020C:D385  EB 5B				jmp	short loc_2196		; (D3E2)
020C:D387			loc_2190:
020C:D387  80 FA 32				cmp	dl,32h			; '2'
020C:D38A  74 08				je	loc_2191		; Jump if equal
020C:D38C  80 FA 36				cmp	dl,36h			; '6'
020C:D38F  74 03				je	loc_2191		; Jump if equal
020C:D391  E9 00AA				jmp	loc_2200		; (D43E)
020C:D394			loc_2191:
020C:D394  80 3E 3CFD 00			cmp	data_578,0		; (020C:3CFD=0C6h)
020C:D399  75 02				jne	loc_2192		; Jump if not equal
020C:D39B  EB 4C				jmp	short loc_2197		; (D3E9)
020C:D39D			loc_2192:
020C:D39D  4D					dec	bp
020C:D39E  3E: C6 46 00 2B			mov	byte ptr ds:[bp],2Bh	; '+'
020C:D3A3  A1 2FB0				mov	ax,data_526		; (020C:2FB0=0DC3h)
020C:D3A6  80 3E 234D 01			cmp	data_483,1		; (020C:234D=0)
020C:D3AB  75 15				jne	loc_2193		; Jump if not equal
020C:D3AD  A9 8000				test	ax,8000h
020C:D3B0  75 10				jnz	loc_2193		; Jump if not zero
020C:D3B2  80 3E 178B 03			cmp	data_191,3		; (020C:178B=0)
020C:D3B7  75 09				jne	loc_2193		; Jump if not equal
020C:D3B9  3B 06 4701				cmp	ax,data_732		; (020C:4701=0B522h)
020C:D3BD  76 03				jbe	loc_2193		; Jump if below or =
020C:D3BF  A3 4701				mov	data_732,ax		; (020C:4701=0B522h)
020C:D3C2			loc_2193:
020C:D3C2  9A 1491:48AC		;*		call	far ptr sub_200		;*(1491:48AC)
020C:D3C2  9A					db	9Ah
020C:D3C3  48AC 1491				dw	48ACh, 1491h
020C:D3C7  72 13				jc	loc_2195		; Jump if carry Set
020C:D3C9  A9 8000				test	ax,8000h
020C:D3CC  74 08				jz	loc_2194		; Jump if zero
020C:D3CE  3E: C6 46 00 2D			mov	byte ptr ds:[bp],2Dh	; '-'
020C:D3D3  F7 D0				not	ax
020C:D3D5  40					inc	ax
020C:D3D6			loc_2194:
020C:D3D6  45					inc	bp
020C:D3D7  9A 1491:02B4		;*		call	far ptr sub_158		;*(1491:02B4)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 436

020C:D3D7  9A					db	9Ah
020C:D3D8  02B4 1491				dw	2B4h, 1491h
020C:D3DC			loc_2195:
020C:D3DC  3E: C6 46 00 5D			mov	byte ptr ds:[bp],5Dh	; ']'
020C:D3E1  45					inc	bp
020C:D3E2			loc_2196:
020C:D3E2  C6 06 3CFD 00			mov	data_578,0		; (020C:3CFD=0C6h)
020C:D3E7  EB 55				jmp	short loc_2200		; (D43E)
020C:D3E9			loc_2197:
020C:D3E9  F6 06 234D 01			test	data_483,1		; (020C:234D=0)
020C:D3EE  74 07				jz	loc_2198		; Jump if zero
020C:D3F0  83 3E 2FB0 00			cmp	data_526,0		; (020C:2FB0=0DC3h)
020C:D3F5  74 47				je	loc_2200		; Jump if equal
020C:D3F7			loc_2198:
020C:D3F7  83 3E 1D73 00			cmp	data_333,0		; (020C:1D73=0)
020C:D3FC  74 40				je	loc_2200		; Jump if equal
020C:D3FE  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:D403  06					push	es
020C:D404  8B 1E 2FA2				mov	bx,data_520		; (020C:2FA2=0CFAh)
020C:D408  E8 AAF9				call	sub_98			; (7F04)
020C:D40B  8B 1E 1D73				mov	bx,data_333		; (020C:1D73=0)
020C:D40F  26: 80 0F 80				or	byte ptr es:[bx],80h
020C:D413  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:D418  9C					pushf				; Push flags
020C:D419  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:D41E  5A					pop	dx
020C:D41F  8E C2				mov	es,dx
020C:D421  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:D426  5A					pop	dx
020C:D427  75 0A				jnz	loc_2199		; Jump if not zero
020C:D429  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:D42E  74 03				je	loc_2199		; Jump if equal
020C:D430  E8 AA7D				call	sub_97			; (7EB0)
020C:D433			loc_2199:
020C:D433  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:D438  9D					popf				; Pop flags
020C:D439  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:D43E			loc_2200:
020C:D43E  5B					pop	bx
020C:D43F  F6 06 2308 04			test	data_455,4		; (020C:2308=0)
020C:D444  75 55				jnz	loc_2206		; Jump if not zero
020C:D446  33 C0				xor	ax,ax			; Zero register
020C:D448  F6 06 234D 08			test	data_483,8		; (020C:234D=0)
020C:D44D  74 07				jz	loc_2201		; Jump if zero
020C:D44F  E8 E50E				call	sub_133			; (B960)
020C:D452  03 06 2328				add	ax,data_468		; (020C:2328=0)
020C:D456			loc_2201:
020C:D456  F6 06 234D 04			test	data_483,4		; (020C:234D=0)
020C:D45B  74 09				jz	loc_2202		; Jump if zero
020C:D45D  E8 E534				call	sub_134			; (B994)
020C:D460  03 06 2324				add	ax,data_467		; (020C:2324=0)
020C:D464  72 35				jc	loc_2206		; Jump if carry Set
020C:D466			loc_2202:
020C:D466  F6 06 234D 02			test	data_483,2		; (020C:234D=0)
020C:D46B  74 09				jz	loc_2203		; Jump if zero
020C:D46D  E8 E454				call	sub_132			; (B8C4)
020C:D470  03 06 2318				add	ax,data_463		; (020C:2318=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 437

020C:D474  72 25				jc	loc_2206		; Jump if carry Set
020C:D476			loc_2203:
020C:D476  F6 06 234D 01			test	data_483,1		; (020C:234D=0)
020C:D47B  74 09				jz	loc_2204		; Jump if zero
020C:D47D  E8 E570				call	sub_135			; (B9F0)
020C:D480  03 06 232C				add	ax,data_469		; (020C:232C=0)
020C:D484  72 15				jc	loc_2206		; Jump if carry Set
020C:D486			loc_2204:
020C:D486  80 FA 3D				cmp	dl,3Dh			; '='
020C:D489  74 06				je	loc_2205		; Jump if equal
020C:D48B  03 06 2FB0				add	ax,data_526		; (020C:2FB0=0DC3h)
020C:D48F  72 0A				jc	loc_2206		; Jump if carry Set
020C:D491			loc_2205:
020C:D491  F6 C7 20				test	bh,20h			; ' '
020C:D494  74 3B				jz	loc_2211		; Jump if zero
020C:D496  3D FFFD				cmp	ax,0FFFDh
020C:D499  72 05				jb	loc_2207		; Jump if below
020C:D49B			loc_2206:
020C:D49B  C6 06 2348 00			mov	data_479,0		; (020C:2348=0)
020C:D4A0			loc_2207:
020C:D4A0  F7 06 1F6E 0040			test	data_356,40h		; (020C:1F6E=0)
020C:D4A6  75 07				jnz	loc_2208		; Jump if not zero
020C:D4A8  83 3E 2FA2 00			cmp	data_520,0		; (020C:2FA2=0CFAh)
020C:D4AD  74 22				je	loc_2211		; Jump if equal
020C:D4AF			loc_2208:
020C:D4AF  80 3E 1D44 4F			cmp	data_308,4Fh		; (020C:1D44=0) 'O'
020C:D4B4  74 07				je	loc_2210		; Jump if equal
020C:D4B6  80 3E 1D44 79			cmp	data_308,79h		; (020C:1D44=0) 'y'
020C:D4BB  75 14				jne	loc_2211		; Jump if not equal
020C:D4BD			loc_2210:
020C:D4BD  F7 06 3D18 0020			test	data_594,20h		; (020C:3D18=2680h)
020C:D4C3  75 0C				jnz	loc_2211		; Jump if not zero
020C:D4C5  80 3E 3CFE 00			cmp	data_579,0		; (020C:3CFE=6)
020C:D4CA  75 05				jne	loc_2211		; Jump if not equal
020C:D4CC  9A 1491:3B10		;*		call	far ptr sub_196		;*(1491:3B10)
020C:D4CC  9A					db	9Ah
020C:D4CD  3B10 1491				dw	3B10h, 1491h
020C:D4D1			loc_2211:
020C:D4D1  2E: 80 3E 8920 60			cmp	byte ptr cs:[8920h],60h	; (020C:8920=0F0h) '`'
020C:D4D7  74 08				je	loc_2212		; Jump if equal
020C:D4D9  2E: 80 3E 8920 66			cmp	byte ptr cs:[8920h],66h	; (020C:8920=0F0h) 'f'
020C:D4DF  75 02				jne	loc_2213		; Jump if not equal
020C:D4E1			loc_2212:
020C:D4E1  32 F6				xor	dh,dh			; Zero register
020C:D4E3			loc_2213:
020C:D4E3  E9 076C				jmp	loc_2308		; (DC52)
							                        ;* No entry point to code
020C:D4E6  3C 40				cmp	al,40h			; '@'
020C:D4E8  75 2C				jne	loc_2215		; Jump if not equal
020C:D4EA  C6 06 230D 01			mov	data_458,1		; (020C:230D=0A7h)
020C:D4EF  80 3E 1D44 78			cmp	data_308,78h		; (020C:1D44=0) 'x'
020C:D4F4  74 16				je	loc_2214		; Jump if equal
020C:D4F6  80 3E 1D44 F5			cmp	data_308,0F5h		; (020C:1D44=0)
020C:D4FB  74 0F				je	loc_2214		; Jump if equal
020C:D4FD  F7 06 1D48 01E0			test	data_312,1E0h		; (020C:1D48=0)
020C:D503  74 11				jz	loc_2215		; Jump if zero
020C:D505  26: F6 44 01 80			test	byte ptr es:[si+1],80h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 438

020C:D50A  75 0A				jnz	loc_2215		; Jump if not zero
020C:D50C			loc_2214:
020C:D50C  56					push	si
020C:D50D  BE 25A5				mov	si,25A5h
020C:D510  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:D510  9A					db	9Ah
020C:D511  67E0 1491				dw	67E0h, 1491h
020C:D515  5E					pop	si
020C:D516			loc_2215:
020C:D516  56					push	si
020C:D517  C6 06 1D20 00			mov	data_287,0		; (020C:1D20=0)
020C:D51C  8A D0				mov	dl,al
020C:D51E  46					inc	si
020C:D51F  F6 C2 01				test	dl,1
020C:D522  74 06				jz	loc_2216		; Jump if zero
020C:D524  46					inc	si
020C:D525  C6 06 1D20 01			mov	data_287,1		; (020C:1D20=0)
020C:D52A			loc_2216:
020C:D52A  F6 06 4521 01			test	data_707,1		; (020C:4521=4Fh)
020C:D52F  74 05				jz	loc_2217		; Jump if zero
020C:D531  9A 1491:746C		;*		call	far ptr sub_239		;*(1491:746C)
020C:D531  9A					db	9Ah
020C:D532  746C 1491				dw	746Ch, 1491h
020C:D536			loc_2217:
020C:D536  FE 06 1D1E				inc	data_286		; (020C:1D1E=0)
020C:D53A  80 FA 41				cmp	dl,41h			; 'A'
020C:D53D  77 0F				ja	loc_2219		; Jump if above
020C:D53F  26: 8A 04				mov	al,es:[si]
020C:D542  98					cbw				; Convrt byte to word
020C:D543  C6 06 230D 01			mov	data_458,1		; (020C:230D=0A7h)
020C:D548  E9 019E				jmp	loc_2237		; (D6E9)
020C:D54B			loc_2218:
020C:D54B  E9 021B				jmp	loc_2246		; (D769)
020C:D54E			loc_2219:
020C:D54E  C6 06 230D 02			mov	data_458,2		; (020C:230D=0A7h)
020C:D553  FE 06 1D1E				inc	data_286		; (020C:1D1E=0)
020C:D557  80 FA 47				cmp	dl,47h			; 'G'
020C:D55A  77 EF				ja	loc_2218		; Jump if above
020C:D55C  74 08				jz	loc_2220		; Jump if zero
020C:D55E  80 FA 46				cmp	dl,46h			; 'F'
020C:D561  74 03				je	loc_2220		; Jump if equal
020C:D563  E9 00FB				jmp	loc_2232		; (D661)
020C:D566			loc_2220:
020C:D566  C6 06 230D 02			mov	data_458,2		; (020C:230D=0A7h)
020C:D56B  F6 06 2308 04			test	data_455,4		; (020C:2308=0)
020C:D570  74 6F				jz	loc_2225		; Jump if zero
020C:D572  C6 06 230D 04			mov	data_458,4		; (020C:230D=0A7h)
020C:D577  26: 8B 04				mov	ax,es:[si]
020C:D57A  A3 230E				mov	data_459,ax		; (020C:230E=0)
020C:D57D  26: 8B 44 02				mov	ax,es:[si+2]
020C:D581  A3 2310				mov	data_460,ax		; (020C:2310=0)
020C:D584  80 06 1D1E 02			add	data_286,2		; (020C:1D1E=0)
020C:D589  3D 0001				cmp	ax,1
020C:D58C  72 53				jb	loc_2225		; Jump if below
020C:D58E  3D FFFF				cmp	ax,0FFFFh
020C:D591  74 4E				je	loc_2225		; Jump if equal
020C:D593  8B D8				mov	bx,ax
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 439

020C:D595  A1 230E				mov	ax,data_459		; (020C:230E=0)
020C:D598  8A 16 230D				mov	dl,data_458		; (020C:230D=0A7h)
020C:D59C  FE C2				inc	dl
020C:D59E  02 16 1D5D				add	dl,data_317		; (020C:1D5D=0)
020C:D5A2  2E: 80 3E 8920 47			cmp	byte ptr cs:[8920h],47h	; (020C:8920=0F0h) 'G'
020C:D5A8  75 02				jne	loc_2221		; Jump if not equal
020C:D5AA  FE C2				inc	dl
020C:D5AC			loc_2221:
020C:D5AC  32 F6				xor	dh,dh			; Zero register
020C:D5AE  03 C2				add	ax,dx
020C:D5B0  83 D3 00				adc	bx,0
020C:D5B3  03 06 2156				add	ax,data_380		; (020C:2156=0FFFFh)
020C:D5B7  83 D3 00				adc	bx,0
020C:D5BA  8B D3				mov	dx,bx
020C:D5BC  B1 0C				mov	cl,0Ch
020C:D5BE  D3 E3				shl	bx,cl			; Shift w/zeros fill
020C:D5C0  83 E2 F0				and	dx,0FFF0h
020C:D5C3  83 FA F0				cmp	dx,0FFF0h
020C:D5C6  74 0C				je	loc_2222		; Jump if equal
020C:D5C8  0B D2				or	dx,dx			; Zero ?
020C:D5CA  75 13				jnz	loc_2224		; Jump if not zero
020C:D5CC  03 1E 2154				add	bx,data_379		; (020C:2154=5CE9h)
020C:D5D0  72 0D				jc	loc_2224		; Jump if carry Set
020C:D5D2  EB 04				jmp	short loc_2223		; (D5D8)
020C:D5D4			loc_2222:
020C:D5D4  03 1E 2154				add	bx,data_379		; (020C:2154=5CE9h)
020C:D5D8			loc_2223:
020C:D5D8  9A 1491:7EAC		;*		call	far ptr sub_245		;*(1491:7EAC)
020C:D5D8  9A					db	9Ah
020C:D5D9  7EAC 1491				dw	7EACh, 1491h
020C:D5DD  73 39				jnc	loc_2227		; Jump if carry=0
020C:D5DF			loc_2224:
020C:D5DF  EB 3C				jmp	short loc_2228		; (D61D)
020C:D5E1			loc_2225:
020C:D5E1  8B 1E 2154				mov	bx,data_379		; (020C:2154=5CE9h)
020C:D5E5  26: 8B 04				mov	ax,es:[si]
020C:D5E8  A3 230E				mov	data_459,ax		; (020C:230E=0)
020C:D5EB  5E					pop	si
020C:D5EC  56					push	si
020C:D5ED  8A 16 230D				mov	dl,data_458		; (020C:230D=0A7h)
020C:D5F1  32 F6				xor	dh,dh			; Zero register
020C:D5F3  03 C2				add	ax,dx
020C:D5F5  40					inc	ax
020C:D5F6  02 06 1D5D				add	al,data_317		; (020C:1D5D=0)
020C:D5FA  80 D4 00				adc	ah,0
020C:D5FD  2E: 80 3E 8920 47			cmp	byte ptr cs:[8920h],47h	; (020C:8920=0F0h) 'G'
020C:D603  75 01				jne	loc_2226		; Jump if not equal
020C:D605  40					inc	ax
020C:D606			loc_2226:
020C:D606  8B D0				mov	dx,ax
020C:D608  03 06 2156				add	ax,data_380		; (020C:2156=0FFFFh)
020C:D60C  3B 06 1CFC				cmp	ax,data_273		; (020C:1CFC=0)
020C:D610  72 0B				jb	loc_2228		; Jump if below
020C:D612  3B 06 1CFE				cmp	ax,data_274		; (020C:1CFE=0)
020C:D616  77 05				ja	loc_2228		; Jump if above
020C:D618			loc_2227:
020C:D618  32 F6				xor	dh,dh			; Zero register
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 440

020C:D61A  E9 022A				jmp	loc_2255		; (D847)
020C:D61D			loc_2228:
020C:D61D  F6 06 4521 02			test	data_707,2		; (020C:4521=4Fh)
020C:D622  74 16				jz	loc_2230		; Jump if zero
020C:D624  80 26 4521 FD			and	data_707,0FDh		; (020C:4521=4Fh)
020C:D629  80 3E 1790 01			cmp	data_195,1		; (020C:1790=0)
020C:D62E  75 08				jne	loc_2229		; Jump if not equal
020C:D630  BE 4522				mov	si,4522h
020C:D633  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:D633  9A					db	9Ah
020C:D634  67E0 1491				dw	67E0h, 1491h
020C:D638			loc_2229:
020C:D638  EB 21				jmp	short loc_2231		; (D65B)
020C:D63A			loc_2230:
020C:D63A  3E: C6 46 00 24			mov	byte ptr ds:[bp],24h	; '$'
020C:D63F  45					inc	bp
020C:D640  33 C0				xor	ax,ax			; Zero register
020C:D642  A0 230D				mov	al,data_458		; (020C:230D=0A7h)
020C:D645  40					inc	ax
020C:D646  02 06 1D5D				add	al,data_317		; (020C:1D5D=0)
020C:D64A  80 D4 00				adc	ah,0
020C:D64D  01 06 230E				add	data_459,ax		; (020C:230E=0)
020C:D651  83 16 2310 00			adc	data_460,0		; (020C:2310=0)
020C:D656  9A 1491:8010		;*		call	far ptr sub_247		;*(1491:8010)
020C:D656  9A					db	9Ah
020C:D657  8010 1491				dw	8010h, 1491h
020C:D65B			loc_2231:
020C:D65B  5E					pop	si
020C:D65C  33 D2				xor	dx,dx			; Zero register
020C:D65E  E9 05F1				jmp	loc_2308		; (DC52)
020C:D661			loc_2232:
020C:D661  80 FA 44				cmp	dl,44h			; 'D'
020C:D664  75 56				jne	loc_2236		; Jump if not equal
020C:D666  F6 06 2308 05			test	data_455,5		; (020C:2308=0)
020C:D66B  74 4F				jz	loc_2236		; Jump if zero
020C:D66D  C6 06 230D 04			mov	data_458,4		; (020C:230D=0A7h)
020C:D672  C6 06 1D1E 04			mov	data_286,4		; (020C:1D1E=0)
020C:D677  26: 8B 44 02				mov	ax,es:[si+2]
020C:D67B  A3 2310				mov	data_460,ax		; (020C:2310=0)
020C:D67E  26: 8B 04				mov	ax,es:[si]
020C:D681  A3 230E				mov	data_459,ax		; (020C:230E=0)
020C:D684  8B 1E 2154				mov	bx,data_379		; (020C:2154=5CE9h)
020C:D688  5E					pop	si
020C:D689  56					push	si
020C:D68A  BA 0005				mov	dx,5
020C:D68D  02 16 1D5D				add	dl,data_317		; (020C:1D5D=0)
020C:D691  03 C2				add	ax,dx
020C:D693  73 04				jnc	loc_2233		; Jump if carry=0
020C:D695  81 C3 1000				add	bx,1000h
020C:D699			loc_2233:
020C:D699  03 06 2156				add	ax,data_380		; (020C:2156=0FFFFh)
020C:D69D  73 04				jnc	loc_2234		; Jump if carry=0
020C:D69F  81 C3 1000				add	bx,1000h
020C:D6A3			loc_2234:
020C:D6A3  8B 16 2310				mov	dx,data_460		; (020C:2310=0)
020C:D6A7  B1 0C				mov	cl,0Ch
020C:D6A9  D3 E2				shl	dx,cl			; Shift w/zeros fill
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 441

020C:D6AB  03 DA				add	bx,dx
020C:D6AD  9A 1491:7EAC		;*		call	far ptr sub_245		;*(1491:7EAC)
020C:D6AD  9A					db	9Ah
020C:D6AE  7EAC 1491				dw	7EACh, 1491h
020C:D6B2  73 03				jnc	loc_2235		; Jump if carry=0
020C:D6B4  E9 FF66				jmp	loc_2228		; (D61D)
020C:D6B7			loc_2235:
020C:D6B7  32 F6				xor	dh,dh			; Zero register
020C:D6B9  E9 018B				jmp	loc_2255		; (D847)
020C:D6BC			loc_2236:
020C:D6BC  C6 06 35BC 01			mov	data_561,1		; (020C:35BC=0A7h)
020C:D6C1  26: 8B 04				mov	ax,es:[si]
020C:D6C4  80 3E 1790 01			cmp	data_195,1		; (020C:1790=0)
020C:D6C9  75 1E				jne	loc_2237		; Jump if not equal
020C:D6CB  80 FA 44				cmp	dl,44h			; 'D'
020C:D6CE  75 19				jne	loc_2237		; Jump if not equal
020C:D6D0  F7 06 13F3 0004			test	data_168,4		; (020C:13F3=0)
020C:D6D6  75 11				jnz	loc_2237		; Jump if not zero
020C:D6D8  3D FF80				cmp	ax,0FF80h
020C:D6DB  72 0C				jb	loc_2237		; Jump if below
020C:D6DD  80 3E 1D44 4F			cmp	data_308,4Fh		; (020C:1D44=0) 'O'
020C:D6E2  74 05				je	loc_2237		; Jump if equal
020C:D6E4  80 0E 3D0B 01			or	data_587,1		; (020C:3D0B=1Fh)
020C:D6E9			loc_2237:
020C:D6E9  8B 1E 1CF2				mov	bx,data_269		; (020C:1CF2=0)
020C:D6ED  80 FA 45				cmp	dl,45h			; 'E'
020C:D6F0  73 05				jae	loc_2238		; Jump if above or =
020C:D6F2  80 FA 41				cmp	dl,41h			; 'A'
020C:D6F5  75 03				jne	loc_2239		; Jump if not equal
020C:D6F7			loc_2238:
020C:D6F7  E9 014D				jmp	loc_2255		; (D847)
020C:D6FA			loc_2239:
020C:D6FA  5E					pop	si
020C:D6FB  56					push	si
020C:D6FC  32 F6				xor	dh,dh			; Zero register
020C:D6FE  8A 16 1D1E				mov	dl,data_286		; (020C:1D1E=0)
020C:D702  42					inc	dx
020C:D703  02 16 1D5D				add	dl,data_317		; (020C:1D5D=0)
020C:D707  80 D6 00				adc	dh,0
020C:D70A  A3 230E				mov	data_459,ax		; (020C:230E=0)
020C:D70D  03 C2				add	ax,dx
020C:D70F  8B D0				mov	dx,ax
020C:D711  03 06 2156				add	ax,data_380		; (020C:2156=0FFFFh)
020C:D715  73 2D				jnc	loc_2241		; Jump if carry=0
020C:D717  F7 C2 8000				test	dx,8000h
020C:D71B  75 0D				jnz	loc_2240		; Jump if not zero
020C:D71D  F6 06 46D1 20			test	data_714,20h		; (020C:46D1=0C7h) ' '
020C:D722  74 20				jz	loc_2241		; Jump if zero
020C:D724  81 C3 1000				add	bx,1000h
020C:D728  EB 37				jmp	short loc_2244		; (D761)
020C:D72A			loc_2240:
020C:D72A  A9 8000				test	ax,8000h
020C:D72D  74 15				jz	loc_2241		; Jump if zero
020C:D72F  F7 06 2156 8000			test	data_380,8000h		; (020C:2156=0FFFFh)
020C:D735  75 0D				jnz	loc_2241		; Jump if not zero
020C:D737  F6 06 46D0 20			test	data_713,20h		; (020C:46D0=14h) ' '
020C:D73C  74 28				jz	loc_2245		; Jump if zero
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 442

020C:D73E  81 EB 1000				sub	bx,1000h
020C:D742  EB 1D				jmp	short loc_2244		; (D761)
020C:D744			loc_2241:
020C:D744  3B 06 1CFC				cmp	ax,data_273		; (020C:1CFC=0)
020C:D748  72 1C				jb	loc_2245		; Jump if below
020C:D74A  53					push	bx
020C:D74B  8B 1E 1CFE				mov	bx,data_274		; (020C:1CFE=0)
020C:D74F  83 FB F1				cmp	bx,0FFF1h
020C:D752  73 05				jae	loc_2242		; Jump if above or =
020C:D754  83 C3 0F				add	bx,0Fh
020C:D757  EB 03				jmp	short loc_2243		; (D75C)
020C:D759			loc_2242:
020C:D759  BB FFFF				mov	bx,0FFFFh
020C:D75C			loc_2243:
020C:D75C  3B C3				cmp	ax,bx
020C:D75E  5B					pop	bx
020C:D75F  77 05				ja	loc_2245		; Jump if above
020C:D761			loc_2244:
020C:D761  32 F6				xor	dh,dh			; Zero register
020C:D763  E9 00E1				jmp	loc_2255		; (D847)
020C:D766			loc_2245:
020C:D766  E9 FEB4				jmp	loc_2228		; (D61D)
020C:D769			loc_2246:
020C:D769  C6 06 1D1E 04			mov	data_286,4		; (020C:1D1E=0)
020C:D76E  26: 8B 04				mov	ax,es:[si]
020C:D771  46					inc	si
020C:D772  46					inc	si
020C:D773  F6 06 2308 01			test	data_455,1		; (020C:2308=0)
020C:D778  74 17				jz	loc_2247		; Jump if zero
020C:D77A  80 06 1D1E 02			add	data_286,2		; (020C:1D1E=0)
020C:D77F  46					inc	si
020C:D780  46					inc	si
020C:D781  26: 83 7C FE 00			cmp	word ptr es:[si-2],0
020C:D786  74 09				je	loc_2247		; Jump if equal
020C:D788  50					push	ax
020C:D789  B0 46				mov	al,46h			; 'F'
020C:D78B  9A 1491:2770		;*		call	far ptr sub_175		;*(1491:2770)
020C:D78B  9A					db	9Ah
020C:D78C  2770 1491				dw	2770h, 1491h
020C:D790  58					pop	ax
020C:D791			loc_2247:
020C:D791  26: 8B 1C				mov	bx,es:[si]
020C:D794  83 FB 6F				cmp	bx,6Fh
020C:D797  77 1F				ja	loc_2248		; Jump if above
020C:D799  51					push	cx
020C:D79A  8B 0E 2156				mov	cx,data_380		; (020C:2156=0FFFFh)
020C:D79E  41					inc	cx
020C:D79F  02 0E 1D1E				add	cl,data_286		; (020C:1D1E=0)
020C:D7A3  80 D5 00				adc	ch,0
020C:D7A6  3B C8				cmp	cx,ax
020C:D7A8  59					pop	cx
020C:D7A9  75 0D				jnz	loc_2248		; Jump if not zero
020C:D7AB  8B 1E 2154				mov	bx,data_379		; (020C:2154=5CE9h)
020C:D7AF  50					push	ax
020C:D7B0  B0 47				mov	al,47h			; 'G'
020C:D7B2  9A 1491:2770		;*		call	far ptr sub_175		;*(1491:2770)
020C:D7B2  9A					db	9Ah
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 443

020C:D7B3  2770 1491				dw	2770h, 1491h
020C:D7B7  58					pop	ax
020C:D7B8			loc_2248:
020C:D7B8  80 3E 178A 04			cmp	data_190,4		; (020C:178A=0)
020C:D7BD  75 7A				jne	loc_2254		; Jump if not equal
020C:D7BF  3D 000F				cmp	ax,0Fh
020C:D7C2  77 75				ja	loc_2254		; Jump if above
020C:D7C4  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:D7C9  06					push	es
020C:D7CA  56					push	si
020C:D7CB  53					push	bx
020C:D7CC  50					push	ax
020C:D7CD  E8 A212				call	sub_87			; (79E2)
020C:D7D0  BE 0000				mov	si,0
020C:D7D3  8A 0E 1CD9				mov	cl,data_254		; (020C:1CD9=0)
020C:D7D7  32 ED				xor	ch,ch			; Zero register

020C:D7D9			locloop_2249:
020C:D7D9  26: 39 1C				cmp	es:[si],bx
020C:D7DC  75 0C				jne	loc_2250		; Jump if not equal
020C:D7DE  26: 39 44 02				cmp	es:[si+2],ax
020C:D7E2  77 06				ja	loc_2250		; Jump if above
020C:D7E4  26: 39 44 04				cmp	es:[si+4],ax
020C:D7E8  73 07				jae	loc_2251		; Jump if above or =
020C:D7EA			loc_2250:
020C:D7EA  83 C6 19				add	si,19h
020C:D7ED  E2 EA				loop	locloop_2249		; Loop if cx > 0

020C:D7EF  EB 1A				jmp	short loc_2252		; (D80B)
020C:D7F1			loc_2251:
020C:D7F1  26: 8A 5C 0B				mov	bl,es:[si+0Bh]
020C:D7F5  80 E3 1E				and	bl,1Eh
020C:D7F8  D0 CB				ror	bl,1			; Rotate
020C:D7FA  3A C3				cmp	al,bl
020C:D7FC  77 0D				ja	loc_2252		; Jump if above
020C:D7FE  D0 C0				rol	al,1			; Rotate
020C:D800  0C 20				or	al,20h			; ' '
020C:D802  26: 80 64 0B E1			and	byte ptr es:[si+0Bh],0E1h
020C:D807  26: 08 44 0B				or	es:[si+0Bh],al
020C:D80B			loc_2252:
020C:D80B  58					pop	ax
020C:D80C  5B					pop	bx
020C:D80D  5E					pop	si
020C:D80E  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:D813  9C					pushf				; Push flags
020C:D814  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:D819  5A					pop	dx
020C:D81A  8E C2				mov	es,dx
020C:D81C  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:D821  5A					pop	dx
020C:D822  75 0A				jnz	loc_2253		; Jump if not zero
020C:D824  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:D829  74 03				je	loc_2253		; Jump if equal
020C:D82B  E8 A682				call	sub_97			; (7EB0)
020C:D82E			loc_2253:
020C:D82E  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:D833  9D					popf				; Pop flags
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 444

020C:D834  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:D839			loc_2254:
020C:D839  56					push	si
020C:D83A  BE 255D				mov	si,255Dh
020C:D83D  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:D83D  9A					db	9Ah
020C:D83E  67E0 1491				dw	67E0h, 1491h
020C:D842  5E					pop	si
020C:D843  B1 01				mov	cl,1
020C:D845  EB 02				jmp	short loc_2256		; (D849)
020C:D847			loc_2255:
020C:D847  B1 00				mov	cl,0
020C:D849			loc_2256:
020C:D849  80 3E 1D44 2A			cmp	data_308,2Ah		; (020C:1D44=0) '*'
020C:D84E  72 18				jb	loc_2258		; Jump if below
020C:D850  80 3E 1D44 2C			cmp	data_308,2Ch		; (020C:1D44=0) ','
020C:D855  76 0E				jbe	loc_2257		; Jump if below or =
020C:D857  80 3E 1D44 F2			cmp	data_308,0F2h		; (020C:1D44=0)
020C:D85C  72 0A				jb	loc_2258		; Jump if below
020C:D85E  80 3E 1D44 F4			cmp	data_308,0F4h		; (020C:1D44=0)
020C:D863  77 03				ja	loc_2258		; Jump if above
020C:D865			loc_2257:
020C:D865  80 C9 08				or	cl,8
020C:D868			loc_2258:
020C:D868  F6 06 4521 02			test	data_707,2		; (020C:4521=4Fh)
020C:D86D  74 16				jz	loc_2260		; Jump if zero
020C:D86F  80 26 4521 FD			and	data_707,0FDh		; (020C:4521=4Fh)
020C:D874  80 3E 1790 01			cmp	data_195,1		; (020C:1790=0)
020C:D879  75 08				jne	loc_2259		; Jump if not equal
020C:D87B  BE 4522				mov	si,4522h
020C:D87E  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:D87E  9A					db	9Ah
020C:D87F  67E0 1491				dw	67E0h, 1491h
020C:D883			loc_2259:
020C:D883  EB 72				jmp	short loc_2264		; (D8F7)
020C:D885			loc_2260:
020C:D885  53					push	bx
020C:D886  E8 0477				call	sub_148			; (DD00)
020C:D889  80 0E 4726 01			or	byte ptr ds:[4726h],1	; (020C:4726=0)
020C:D88E  E8 BC1B				call	sub_112			; (94AC)
020C:D891  80 26 4726 FE			and	byte ptr ds:[4726h],0FEh	; (020C:4726=0)
020C:D896  C6 06 35BC 00			mov	data_561,0		; (020C:35BC=0A7h)
020C:D89B  5B					pop	bx
020C:D89C  3B 06 1CE4				cmp	ax,data_261		; (020C:1CE4=0)
020C:D8A0  73 11				jae	loc_2261		; Jump if above or =
020C:D8A2  3B 1E 2154				cmp	bx,data_379		; (020C:2154=5CE9h)
020C:D8A6  75 0B				jne	loc_2261		; Jump if not equal
020C:D8A8  81 3E 1960 00EB			cmp	data_224,0EBh		; (020C:1960=424Bh)
020C:D8AE  74 03				je	loc_2261		; Jump if equal
020C:D8B0  A3 1CE4				mov	data_261,ax		; (020C:1CE4=0)
020C:D8B3			loc_2261:
020C:D8B3  80 3E 1790 01			cmp	data_195,1		; (020C:1790=0)
020C:D8B8  75 40				jne	loc_2265		; Jump if not equal
020C:D8BA  80 3E 3D00 01			cmp	data_580,1		; (020C:3D00=17h)
020C:D8BF  75 39				jne	loc_2265		; Jump if not equal
020C:D8C1  80 3E 1D1E 02			cmp	data_286,2		; (020C:1D1E=0)
020C:D8C6  75 2F				jne	loc_2264		; Jump if not equal
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 445

020C:D8C8  A1 2FB0				mov	ax,data_526		; (020C:2FB0=0DC3h)
020C:D8CB  2B 06 2156				sub	ax,data_380		; (020C:2156=0FFFFh)
020C:D8CF  48					dec	ax
020C:D8D0  2A 06 1D5D				sub	al,data_317		; (020C:1D5D=0)
020C:D8D4  80 DC 00				sbb	ah,0
020C:D8D7  2A 06 1D1E				sub	al,data_286		; (020C:1D1E=0)
020C:D8DB  80 DC 00				sbb	ah,0
020C:D8DE  A9 8000				test	ax,8000h
020C:D8E1  74 02				jz	loc_2262		; Jump if zero
020C:D8E3  F7 D0				not	ax
020C:D8E5			loc_2262:
020C:D8E5  3D 007F				cmp	ax,7Fh
020C:D8E8  76 03				jbe	loc_2263		; Jump if below or =
020C:D8EA  E9 0159				jmp	loc_2278		; (DA46)
020C:D8ED			loc_2263:
020C:D8ED  C6 06 22F5 01			mov	data_440,1		; (020C:22F5=0FFh)
020C:D8F2  C6 06 3CFE 01			mov	data_579,1		; (020C:3CFE=6)
020C:D8F7			loc_2264:
020C:D8F7  E9 014C				jmp	loc_2278		; (DA46)
020C:D8FA			loc_2265:
020C:D8FA  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:D8FF  06					push	es
020C:D900  8B 36 3D03				mov	si,data_582		; (020C:3D03=3CE9h)
020C:D904  8B 1E 2FAE				mov	bx,data_525		; (020C:2FAE=0DA5h)
020C:D908  80 3E 1D44 4F			cmp	data_308,4Fh		; (020C:1D44=0) 'O'
020C:D90D  74 03				je	loc_2266		; Jump if equal
020C:D90F  E9 00B6				jmp	loc_2271		; (D9C8)
020C:D912			loc_2266:
020C:D912  E8 A6C7				call	sub_100			; (7FDC)
020C:D915  26: F6 44 04 04			test	byte ptr es:[si+4],4
020C:D91A  75 03				jnz	loc_2267		; Jump if not zero
020C:D91C  E9 00AC				jmp	loc_2272		; (D9CB)
020C:D91F			loc_2267:
020C:D91F  B0 9A				mov	al,9Ah
020C:D921  38 06 1960				cmp	byte ptr data_224,al	; (020C:1960=4Bh)
020C:D925  75 26				jne	loc_2268		; Jump if not equal
020C:D927  55					push	bp
020C:D928  BD 19BE				mov	bp,19BEh
020C:D92B  9A 1491:0124		;*		call	far ptr sub_152		;*(1491:0124)
020C:D92B  9A					db	9Ah
020C:D92C  0124 1491				dw	124h, 1491h
020C:D930  45					inc	bp
020C:D931  A1 1963				mov	ax,word ptr data_226+1	; (020C:1963=0CEBh)
020C:D934  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:D934  9A					db	9Ah
020C:D935  0294 1491				dw	294h, 1491h
020C:D939  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020C:D93E  45					inc	bp
020C:D93F  A1 1961				mov	ax,word ptr data_224+1	; (020C:1961=42h)
020C:D942  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:D942  9A					db	9Ah
020C:D943  0294 1491				dw	294h, 1491h
020C:D947  C6 06 4896 01			mov	data_744,1		; (020C:4896=89h)
020C:D94C  5D					pop	bp
020C:D94D			loc_2268:
020C:D94D  26: 8A 54 39				mov	dl,es:[si+39h]
020C:D951  50					push	ax
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 446

020C:D952  53					push	bx
020C:D953  51					push	cx
020C:D954  52					push	dx
020C:D955  56					push	si
020C:D956  57					push	di
020C:D957  55					push	bp
020C:D958  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:D95D  1E					push	ds
020C:D95E  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:D963  06					push	es
020C:D964  9A 1491:B2E0		;*		call	far ptr sub_268		;*(1491:B2E0)
020C:D964  9A					db	9Ah
020C:D965  B2E0 1491				dw	0B2E0h, 1491h
020C:D969  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:D96E  9C					pushf				; Push flags
020C:D96F  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:D974  5A					pop	dx
020C:D975  8E C2				mov	es,dx
020C:D977  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:D97C  5A					pop	dx
020C:D97D  75 0A				jnz	loc_2269		; Jump if not zero
020C:D97F  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:D984  74 03				je	loc_2269		; Jump if equal
020C:D986  E8 A527				call	sub_97			; (7EB0)
020C:D989			loc_2269:
020C:D989  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:D98E  9D					popf				; Pop flags
020C:D98F  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:D994  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:D999  9C					pushf				; Push flags
020C:D99A  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:D99F  5A					pop	dx
020C:D9A0  8E DA				mov	ds,dx
020C:D9A2  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:D9A7  5A					pop	dx
020C:D9A8  75 0A				jnz	loc_2270		; Jump if not zero
020C:D9AA  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:D9AF  74 03				je	loc_2270		; Jump if equal
020C:D9B1  E8 A4FC				call	sub_97			; (7EB0)
020C:D9B4			loc_2270:
020C:D9B4  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:D9B9  9D					popf				; Pop flags
020C:D9BA  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:D9BF  5D					pop	bp
020C:D9C0  5F					pop	di
020C:D9C1  5E					pop	si
020C:D9C2  5A					pop	dx
020C:D9C3  59					pop	cx
020C:D9C4  5B					pop	bx
020C:D9C5  58					pop	ax
020C:D9C6  EB 03				jmp	short loc_2272		; (D9CB)
020C:D9C8			loc_2271:
020C:D9C8  E8 A5A5				call	sub_99			; (7F70)
020C:D9CB			loc_2272:
020C:D9CB  80 3E 1790 01			cmp	data_195,1		; (020C:1790=0)
020C:D9D0  75 49				jne	loc_2276		; Jump if not equal
020C:D9D2  26: F6 44 05 40			test	byte ptr es:[si+5],40h	; '@'
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 447

020C:D9D7  75 42				jnz	loc_2276		; Jump if not zero
020C:D9D9  26: 8B 04				mov	ax,es:[si]
020C:D9DC  3B 06 2154				cmp	ax,data_379		; (020C:2154=5CE9h)
020C:D9E0  77 0C				ja	loc_2273		; Jump if above
020C:D9E2  72 28				jc	loc_2275		; Jump if carry Set
020C:D9E4  26: 8B 44 02				mov	ax,es:[si+2]
020C:D9E8  3B 06 2156				cmp	ax,data_380		; (020C:2156=0FFFFh)
020C:D9EC  72 1E				jb	loc_2275		; Jump if below
020C:D9EE			loc_2273:
020C:D9EE  80 3E 178F 0A			cmp	data_194,0Ah		; (020C:178F=0)
020C:D9F3  72 26				jb	loc_2276		; Jump if below
020C:D9F5  80 3E 1D44 4F			cmp	data_308,4Fh		; (020C:1D44=0) 'O'
020C:D9FA  74 09				je	loc_2274		; Jump if equal
020C:D9FC  26: F6 44 04 80			test	byte ptr es:[si+4],80h
020C:DA01  74 09				jz	loc_2275		; Jump if zero
020C:DA03  EB 16				jmp	short loc_2276		; (DA1B)
020C:DA05			loc_2274:
020C:DA05  26: F6 44 04 20			test	byte ptr es:[si+4],20h	; ' '
020C:DA0A  75 0F				jnz	loc_2276		; Jump if not zero
020C:DA0C			loc_2275:
020C:DA0C  C6 06 22F5 01			mov	data_440,1		; (020C:22F5=0FFh)
020C:DA11  C6 06 3CFE 01			mov	data_579,1		; (020C:3CFE=6)
020C:DA16  80 26 3D0B FE			and	data_587,0FEh		; (020C:3D0B=1Fh)
020C:DA1B			loc_2276:
020C:DA1B  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:DA20  9C					pushf				; Push flags
020C:DA21  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:DA26  5A					pop	dx
020C:DA27  8E C2				mov	es,dx
020C:DA29  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:DA2E  5A					pop	dx
020C:DA2F  75 0A				jnz	loc_2277		; Jump if not zero
020C:DA31  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:DA36  74 03				je	loc_2277		; Jump if equal
020C:DA38  E8 A475				call	sub_97			; (7EB0)
020C:DA3B			loc_2277:
020C:DA3B  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:DA40  9D					popf				; Pop flags
020C:DA41  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:DA46			loc_2278:
020C:DA46  2E: 80 3E 8920 48			cmp	byte ptr cs:[8920h],48h	; (020C:8920=0F0h) 'H'
020C:DA4C  75 13				jne	loc_2279		; Jump if not equal
020C:DA4E  F6 06 2308 01			test	data_455,1		; (020C:2308=0)
020C:DA53  75 0C				jnz	loc_2279		; Jump if not zero
020C:DA55  80 3E 3CFE 01			cmp	data_579,1		; (020C:3CFE=6)
020C:DA5A  75 05				jne	loc_2279		; Jump if not equal
020C:DA5C  80 0E 3D05 04			or	data_583,4		; (020C:3D05=0E8h)
020C:DA61			loc_2279:
020C:DA61  5E					pop	si
020C:DA62  E9 01ED				jmp	loc_2308		; (DC52)
020C:DA65			loc_2280:
020C:DA65  56					push	si
020C:DA66  57					push	di
020C:DA67  E8 D90A				call	sub_127			; (B374)
020C:DA6A  A0 2308				mov	al,data_455		; (020C:2308=0)
020C:DA6D  24 07				and	al,7
020C:DA6F  F6 06 2308 04			test	data_455,4		; (020C:2308=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 448

020C:DA74  74 0A				jz	loc_2281		; Jump if zero
020C:DA76  3C 06				cmp	al,6
020C:DA78  74 10				je	loc_2282		; Jump if equal
020C:DA7A  3C 07				cmp	al,7
020C:DA7C  74 0C				je	loc_2282		; Jump if equal
020C:DA7E  EB 0C				jmp	short loc_2283		; (DA8C)
020C:DA80			loc_2281:
020C:DA80  3C 00				cmp	al,0
020C:DA82  74 06				je	loc_2282		; Jump if equal
020C:DA84  3C 01				cmp	al,1
020C:DA86  74 02				je	loc_2282		; Jump if equal
020C:DA88  EB 02				jmp	short loc_2283		; (DA8C)
020C:DA8A			loc_2282:
020C:DA8A  EB 2E				jmp	short loc_2286		; (DABA)
020C:DA8C			loc_2283:
020C:DA8C  BE 2527				mov	si,2527h
020C:DA8F  BF 2486				mov	di,2486h
020C:DA92  F6 C2 01				test	dl,1
020C:DA95  74 0D				jz	loc_2284		; Jump if zero
020C:DA97  BE 251D				mov	si,251Dh
020C:DA9A  F6 06 2308 01			test	data_455,1		; (020C:2308=0)
020C:DA9F  74 03				jz	loc_2284		; Jump if zero
020C:DAA1  BE 2531				mov	si,2531h
020C:DAA4			loc_2284:
020C:DAA4  F6 06 2308 02			test	data_455,2		; (020C:2308=0)
020C:DAA9  74 03				jz	loc_2285		; Jump if zero
020C:DAAB  BF 2495				mov	di,2495h
020C:DAAE			loc_2285:
020C:DAAE  57					push	di
020C:DAAF  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:DAAF  9A					db	9Ah
020C:DAB0  67E0 1491				dw	67E0h, 1491h
020C:DAB4  5E					pop	si
020C:DAB5  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:DAB5  9A					db	9Ah
020C:DAB6  67E0 1491				dw	67E0h, 1491h
020C:DABA			loc_2286:
020C:DABA  5F					pop	di
020C:DABB  5E					pop	si
020C:DABC  E9 0193				jmp	loc_2308		; (DC52)
							                        ;* No entry point to code
020C:DABF  80 3E 178A 06			cmp	data_190,6		; (020C:178A=0)
020C:DAC4  72 0A				jb	loc_2287		; Jump if below
020C:DAC6  F6 06 2308 07			test	data_455,7		; (020C:2308=0)
020C:DACB  75 03				jnz	loc_2287		; Jump if not zero
020C:DACD  E8 DDF4				call	sub_132			; (B8C4)
020C:DAD0			loc_2287:
020C:DAD0  EB 66				jmp	short loc_2291		; (DB38)
							                        ;* No entry point to code
020C:DAD2  80 FA 73				cmp	dl,73h			; 's'
020C:DAD5  75 0C				jne	loc_2288		; Jump if not equal
020C:DAD7  83 3E 2324 FD			cmp	data_467,0FFFDh		; (020C:2324=0)
020C:DADC  72 05				jb	loc_2288		; Jump if below
020C:DADE  C6 06 2348 00			mov	data_479,0		; (020C:2348=0)
020C:DAE3			loc_2288:
020C:DAE3  80 3E 178A 06			cmp	data_190,6		; (020C:178A=0)
020C:DAE8  72 26				jb	loc_2289		; Jump if below
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 449

020C:DAEA  F6 06 2308 02			test	data_455,2		; (020C:2308=0)
020C:DAEF  75 1F				jnz	loc_2289		; Jump if not zero
020C:DAF1  C7 06 3D5B FFFF			mov	data_628,0FFFFh		; (020C:3D5B=0)
020C:DAF7  E8 DE9A				call	sub_134			; (B994)
020C:DAFA  80 FA 76				cmp	dl,76h			; 'v'
020C:DAFD  73 11				jae	loc_2289		; Jump if above or =
020C:DAFF  8A C2				mov	al,dl
020C:DB01  0C 01				or	al,1
020C:DB03  3C 73				cmp	al,73h			; 's'
020C:DB05  74 09				je	loc_2289		; Jump if equal
020C:DB07  A1 2332				mov	ax,data_470		; (020C:2332=0)
020C:DB0A  A3 3D5B				mov	data_628,ax		; (020C:3D5B=0)
020C:DB0D  E8 DE50				call	sub_133			; (B960)
020C:DB10			loc_2289:
020C:DB10  C7 06 3D5B FFFF			mov	data_628,0FFFFh		; (020C:3D5B=0)
020C:DB16  EB 20				jmp	short loc_2291		; (DB38)
							                        ;* No entry point to code
020C:DB18  80 3E 178A 06			cmp	data_190,6		; (020C:178A=0)
020C:DB1D  72 10				jb	loc_2290		; Jump if below
020C:DB1F  F6 06 2308 02			test	data_455,2		; (020C:2308=0)
020C:DB24  75 09				jnz	loc_2290		; Jump if not zero
020C:DB26  A1 2332				mov	ax,data_470		; (020C:2332=0)
020C:DB29  A3 3D5B				mov	data_628,ax		; (020C:3D5B=0)
020C:DB2C  E8 DE31				call	sub_133			; (B960)
020C:DB2F			loc_2290:
020C:DB2F  C7 06 3D5B FFFF			mov	data_628,0FFFFh		; (020C:3D5B=0)
020C:DB35  E9 FF2D				jmp	loc_2280		; (DA65)
020C:DB38			loc_2291:
020C:DB38  E8 D839				call	sub_127			; (B374)
020C:DB3B  F6 06 230A 08			test	byte ptr ds:[230Ah],8	; (020C:230A=0)
020C:DB40  75 28				jnz	loc_2294		; Jump if not zero
020C:DB42  A0 2308				mov	al,data_455		; (020C:2308=0)
020C:DB45  24 07				and	al,7
020C:DB47  F6 06 2308 04			test	data_455,4		; (020C:2308=0)
020C:DB4C  74 0A				jz	loc_2292		; Jump if zero
020C:DB4E  3C 06				cmp	al,6
020C:DB50  74 10				je	loc_2293		; Jump if equal
020C:DB52  3C 07				cmp	al,7
020C:DB54  74 0C				je	loc_2293		; Jump if equal
020C:DB56  EB 12				jmp	short loc_2294		; (DB6A)
020C:DB58			loc_2292:
020C:DB58  3C 00				cmp	al,0
020C:DB5A  74 06				je	loc_2293		; Jump if equal
020C:DB5C  3C 01				cmp	al,1
020C:DB5E  74 02				je	loc_2293		; Jump if equal
020C:DB60  EB 08				jmp	short loc_2294		; (DB6A)
020C:DB62			loc_2293:
020C:DB62  80 FA 6F				cmp	dl,6Fh			; 'o'
020C:DB65  74 03				je	loc_2294		; Jump if equal
020C:DB67  E9 00E8				jmp	loc_2308		; (DC52)
020C:DB6A			loc_2294:
020C:DB6A  56					push	si
020C:DB6B  80 FA 6F				cmp	dl,6Fh			; 'o'
020C:DB6E  74 57				je	loc_2298		; Jump if equal
020C:DB70  80 FA 76				cmp	dl,76h			; 'v'
020C:DB73  72 16				jb	loc_2295		; Jump if below
020C:DB75  BE 247C				mov	si,247Ch
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 450

020C:DB78  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:DB78  9A					db	9Ah
020C:DB79  67E0 1491				dw	67E0h, 1491h
020C:DB7D  F7 06 3D1D 4000			test	data_597,4000h		; (020C:3D1D=0D4E8h)
020C:DB83  74 06				jz	loc_2295		; Jump if zero
020C:DB85  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020C:DB8A  45					inc	bp
020C:DB8B			loc_2295:
020C:DB8B  9A 1491:09C4		;*		call	far ptr sub_169		;*(1491:09C4)
020C:DB8B  9A					db	9Ah
020C:DB8C  09C4 1491				dw	9C4h, 1491h
020C:DB90  8A C2				mov	al,dl
020C:DB92  0C 01				or	al,1
020C:DB94  3C 75				cmp	al,75h			; 'u'
020C:DB96  75 2F				jne	loc_2298		; Jump if not equal
020C:DB98  BE 2469				mov	si,2469h
020C:DB9B  F6 06 2308 02			test	data_455,2		; (020C:2308=0)
020C:DBA0  74 03				jz	loc_2296		; Jump if zero
020C:DBA2  BE 2472				mov	si,2472h
020C:DBA5			loc_2296:
020C:DBA5  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:DBA5  9A					db	9Ah
020C:DBA6  67E0 1491				dw	67E0h, 1491h
020C:DBAA  F7 06 3D1D 4000			test	data_597,4000h		; (020C:3D1D=0D4E8h)
020C:DBB0  74 06				jz	loc_2297		; Jump if zero
020C:DBB2  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020C:DBB7  45					inc	bp
020C:DBB8			loc_2297:
020C:DBB8  F6 C7 80				test	bh,80h
020C:DBBB  74 0A				jz	loc_2298		; Jump if zero
020C:DBBD  C6 06 4219 00			mov	byte ptr ds:[4219h],0	; (020C:4219=94h)
020C:DBC2  9A 1491:09C4		;*		call	far ptr sub_169		;*(1491:09C4)
020C:DBC2  9A					db	9Ah
020C:DBC3  09C4 1491				dw	9C4h, 1491h
020C:DBC7			loc_2298:
020C:DBC7  F6 06 230A 08			test	byte ptr ds:[230Ah],8	; (020C:230A=0)
020C:DBCC  74 05				jz	loc_2299		; Jump if zero
020C:DBCE  9A 1491:6808		;*		call	far ptr sub_221		;*(1491:6808)
020C:DBCE  9A					db	9Ah
020C:DBCF  6808 1491				dw	6808h, 1491h
020C:DBD3			loc_2299:
020C:DBD3  BE 24A9				mov	si,24A9h
020C:DBD6  F6 06 2308 02			test	data_455,2		; (020C:2308=0)
020C:DBDB  74 03				jz	loc_2300		; Jump if zero
020C:DBDD  BE 24AE				mov	si,24AEh
020C:DBE0			loc_2300:
020C:DBE0  80 FA 6F				cmp	dl,6Fh			; 'o'
020C:DBE3  74 51				je	loc_2305		; Jump if equal
020C:DBE5  BE 249E				mov	si,249Eh
020C:DBE8  F6 06 2308 02			test	data_455,2		; (020C:2308=0)
020C:DBED  74 03				jz	loc_2301		; Jump if zero
020C:DBEF  BE 24A3				mov	si,24A3h
020C:DBF2			loc_2301:
020C:DBF2  8A C2				mov	al,dl
020C:DBF4  0C 01				or	al,1
020C:DBF6  3C 71				cmp	al,71h			; 'q'
020C:DBF8  75 3C				jne	loc_2305		; Jump if not equal
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 451

020C:DBFA  BE 2480				mov	si,2480h
020C:DBFD  F6 06 2308 02			test	data_455,2		; (020C:2308=0)
020C:DC02  74 03				jz	loc_2302		; Jump if zero
020C:DC04  BE 248E				mov	si,248Eh
020C:DC07			loc_2302:
020C:DC07  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:DC07  9A					db	9Ah
020C:DC08  67E0 1491				dw	67E0h, 1491h
020C:DC0C  F7 06 3D1D 4000			test	data_597,4000h		; (020C:3D1D=0D4E8h)
020C:DC12  74 06				jz	loc_2303		; Jump if zero
020C:DC14  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020C:DC19  45					inc	bp
020C:DC1A			loc_2303:
020C:DC1A  BE 2486				mov	si,2486h
020C:DC1D  F6 06 2308 02			test	data_455,2		; (020C:2308=0)
020C:DC22  74 03				jz	loc_2304		; Jump if zero
020C:DC24  BE 2495				mov	si,2495h
020C:DC27			loc_2304:
020C:DC27  F6 C7 80				test	bh,80h
020C:DC2A  74 0A				jz	loc_2305		; Jump if zero
020C:DC2C  C6 06 4219 00			mov	byte ptr ds:[4219h],0	; (020C:4219=94h)
020C:DC31  9A 1491:09C4		;*		call	far ptr sub_169		;*(1491:09C4)
020C:DC31  9A					db	9Ah
020C:DC32  09C4 1491				dw	9C4h, 1491h
020C:DC36			loc_2305:
020C:DC36  80 FA 6F				cmp	dl,6Fh			; 'o'
020C:DC39  75 07				jne	loc_2306		; Jump if not equal
020C:DC3B  F6 06 230A 08			test	byte ptr ds:[230Ah],8	; (020C:230A=0)
020C:DC40  74 05				jz	loc_2307		; Jump if zero
020C:DC42			loc_2306:
020C:DC42  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:DC42  9A					db	9Ah
020C:DC43  67E0 1491				dw	67E0h, 1491h
020C:DC47			loc_2307:
020C:DC47  5E					pop	si
020C:DC48  B6 00				mov	dh,0
020C:DC4A  EB 06				jmp	short loc_2308		; (DC52)
							                        ;* No entry point to code
020C:DC4C  80 EA 04				sub	dl,4
020C:DC4F  E9 E3BB				jmp	loc_1957		; (C00D)
020C:DC52			loc_2308:
020C:DC52  C7 06 2160 FFFF			mov	data_385,0FFFFh		; (020C:2160=5E6Eh)
020C:DC58  C7 06 2162 FFFF			mov	data_386,0FFFFh		; (020C:2162=0FFFFh)
020C:DC5E  C6 06 1CD7 00			mov	data_252,0		; (020C:1CD7=0)
020C:DC63  A0 1D1E				mov	al,data_286		; (020C:1D1E=0)
020C:DC66  C3					retn
							                        ;* No entry point to code
020C:DC67  9A 1491:0100		;*		call	far ptr sub_151		;*(1491:0100)
020C:DC67  9A					db	9Ah
020C:DC68  0100 1491				dw	100h, 1491h
020C:DC6C  57					push	di
020C:DC6D  55					push	bp
020C:DC6E  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:DC73  1E					push	ds
020C:DC74  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:DC79  06					push	es
020C:DC7A  E8 9D4D				call	sub_83			; (79CA)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 452

020C:DC7D  E8 9D6E				call	sub_90			; (79EE)
020C:DC80  BF 0E64				mov	di,0E64h
020C:DC83  89 1D				mov	[di],bx
020C:DC85  BD 0E6B				mov	bp,0E6Bh
020C:DC88  26: A1 2154				mov	ax,es:data_379		; (020C:2154=5CE9h)
020C:DC8C  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:DC8C  9A					db	9Ah
020C:DC8D  0294 1491				dw	294h, 1491h
020C:DC91  45					inc	bp
020C:DC92  26: A1 2156				mov	ax,es:data_380		; (020C:2156=0FFFFh)
020C:DC96  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:DC96  9A					db	9Ah
020C:DC97  0294 1491				dw	294h, 1491h
020C:DC9B  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:DCA0  9C					pushf				; Push flags
020C:DCA1  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:DCA6  5A					pop	dx
020C:DCA7  8E C2				mov	es,dx
020C:DCA9  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:DCAE  5A					pop	dx
020C:DCAF  75 0A				jnz	loc_2309		; Jump if not zero
020C:DCB1  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:DCB6  74 03				je	loc_2309		; Jump if equal
020C:DCB8  E8 A1F5				call	sub_97			; (7EB0)
020C:DCBB			loc_2309:
020C:DCBB  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:DCC0  9D					popf				; Pop flags
020C:DCC1  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:DCC6  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:DCCB  9C					pushf				; Push flags
020C:DCCC  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:DCD1  5A					pop	dx
020C:DCD2  8E DA				mov	ds,dx
020C:DCD4  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:DCD9  5A					pop	dx
020C:DCDA  75 0A				jnz	loc_2310		; Jump if not zero
020C:DCDC  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:DCE1  74 03				je	loc_2310		; Jump if equal
020C:DCE3  E8 A1CA				call	sub_97			; (7EB0)
020C:DCE6			loc_2310:
020C:DCE6  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:DCEB  9D					popf				; Pop flags
020C:DCEC  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:DCF1  5D					pop	bp
020C:DCF2  5F					pop	di
020C:DCF3  B0 30				mov	al,30h			; '0'
020C:DCF5  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:DCF5  9A					db	9Ah
020C:DCF6  2F70 1491				dw	2F70h, 1491h
020C:DCFA  E9 FF55				jmp	loc_2308		; (DC52)
020C:DCFD  87 DB				xchg	bx,bx
020C:DCFF  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 453

020C:DD00			sub_148		proc	near
020C:DD00  80 3E 1D44 78			cmp	data_308,78h		; (020C:1D44=0) 'x'
020C:DD05  75 1A				jne	loc_2311		; Jump if not equal
020C:DD07  80 3E 178A 04			cmp	data_190,4		; (020C:178A=0)
020C:DD0C  72 13				jb	loc_2311		; Jump if below
020C:DD0E  80 3E 1790 01			cmp	data_195,1		; (020C:1790=0)
020C:DD13  74 0C				je	loc_2311		; Jump if equal
020C:DD15  3B 1E 2154				cmp	bx,data_379		; (020C:2154=5CE9h)
020C:DD19  75 09				jne	loc_2312		; Jump if not equal
020C:DD1B  3B 06 2156				cmp	ax,data_380		; (020C:2156=0FFFFh)
020C:DD1F  72 03				jb	loc_2312		; Jump if below
020C:DD21			loc_2311:
020C:DD21  E9 00AB				jmp	loc_2318		; (DDCF)
020C:DD24			loc_2312:
020C:DD24  50					push	ax
020C:DD25  53					push	bx
020C:DD26  51					push	cx
020C:DD27  52					push	dx
020C:DD28  57					push	di
020C:DD29  C6 06 3C07 01			mov	data_571,1		; (020C:3C07=0E8h)
020C:DD2E  BA 0001				mov	dx,1
020C:DD31  E8 87FC				call	sub_69			; (6530)
020C:DD34  C6 06 3C07 00			mov	data_571,0		; (020C:3C07=0E8h)
020C:DD39  8B CB				mov	cx,bx
020C:DD3B  8B D0				mov	dx,ax
020C:DD3D  73 43				jnc	loc_2316		; Jump if carry=0
020C:DD3F  26: 8B 0D				mov	cx,es:[di]
020C:DD42  26: 8B 55 02				mov	dx,es:[di+2]
020C:DD46			loc_2313:
020C:DD46  26: 8A 45 04				mov	al,es:[di+4]
020C:DD4A  24 5F				and	al,5Fh			; '_'
020C:DD4C  3C 5F				cmp	al,5Fh			; '_'
020C:DD4E  75 10				jne	loc_2314		; Jump if not equal
020C:DD50  26: 80 7D 09 50			cmp	byte ptr es:[di+9],50h	; 'P'
020C:DD55  73 73				jae	loc_2317		; Jump if above or =
020C:DD57  26: 80 7D 09 07			cmp	byte ptr es:[di+9],7
020C:DD5C  75 02				jne	loc_2314		; Jump if not equal
020C:DD5E  74 70				jz	loc_2319		; Jump if zero
020C:DD60			loc_2314:
020C:DD60  BB 2F78				mov	bx,2F78h
020C:DD63  26: 8A 45 05				mov	al,es:[di+5]
020C:DD67  25 000F				and	ax,0Fh
020C:DD6A  D7					xlat				; al=[al+[bx]] table
020C:DD6B  0A C0				or	al,al			; Zero ?
020C:DD6D  75 04				jnz	loc_2315		; Jump if not zero
020C:DD6F  26: 8A 45 06				mov	al,es:[di+6]
020C:DD73			loc_2315:
020C:DD73  03 F8				add	di,ax
020C:DD75  26: 39 0D				cmp	es:[di],cx
020C:DD78  75 08				jne	loc_2316		; Jump if not equal
020C:DD7A  26: 39 55 02				cmp	es:[di+2],dx
020C:DD7E  75 02				jne	loc_2316		; Jump if not equal
020C:DD80  EB C4				jmp	short loc_2313		; (DD46)
020C:DD82			loc_2316:
020C:DD82  8B D9				mov	bx,cx
020C:DD84  8B C2				mov	ax,dx
020C:DD86  BF 4165				mov	di,4165h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 454

020C:DD89  89 1D				mov	[di],bx
020C:DD8B  89 45 02				mov	[di+2],ax
020C:DD8E  C6 45 04 5F				mov	byte ptr [di+4],5Fh	; '_'
020C:DD92  C6 45 05 02				mov	byte ptr [di+5],2
020C:DD96  C6 45 06 00				mov	byte ptr [di+6],0
020C:DD9A  C7 45 07 203F			mov	word ptr [di+7],203Fh
020C:DD9F  C6 45 09 07				mov	byte ptr [di+9],7
020C:DDA3  A1 2334				mov	ax,data_471		; (020C:2334=0)
020C:DDA6  89 45 0A				mov	[di+0Ah],ax
020C:DDA9  A1 2332				mov	ax,data_470		; (020C:2332=0)
020C:DDAC  89 45 0C				mov	[di+0Ch],ax
020C:DDAF  A1 2314				mov	ax,data_462		; (020C:2314=0)
020C:DDB2  89 45 0E				mov	[di+0Eh],ax
020C:DDB5  A1 2318				mov	ax,data_463		; (020C:2318=0)
020C:DDB8  89 45 10				mov	[di+10h],ax
020C:DDBB  A1 2324				mov	ax,data_467		; (020C:2324=0)
020C:DDBE  89 45 12				mov	[di+12h],ax
020C:DDC1  A1 2328				mov	ax,data_468		; (020C:2328=0)
020C:DDC4  89 45 14				mov	[di+14h],ax
020C:DDC7  E8 AAC6				call	sub_107			; (8890)
020C:DDCA			loc_2317:
020C:DDCA  5F					pop	di
020C:DDCB  5A					pop	dx
020C:DDCC  59					pop	cx
020C:DDCD  5B					pop	bx
020C:DDCE  58					pop	ax
020C:DDCF			loc_2318:
020C:DDCF  C3					retn
020C:DDD0			loc_2319:
020C:DDD0  A1 2334				mov	ax,data_471		; (020C:2334=0)
020C:DDD3  26: 89 45 0A				mov	es:[di+0Ah],ax
020C:DDD7  A1 2332				mov	ax,data_470		; (020C:2332=0)
020C:DDDA  26: 89 45 0C				mov	es:[di+0Ch],ax
020C:DDDE  A1 2314				mov	ax,data_462		; (020C:2314=0)
020C:DDE1  26: 89 45 0E				mov	es:[di+0Eh],ax
020C:DDE5  A1 2318				mov	ax,data_463		; (020C:2318=0)
020C:DDE8  26: 89 45 10				mov	es:[di+10h],ax
020C:DDEC  A1 2324				mov	ax,data_467		; (020C:2324=0)
020C:DDEF  26: 89 45 12				mov	es:[di+12h],ax
020C:DDF3  A1 2328				mov	ax,data_468		; (020C:2328=0)
020C:DDF6  26: 89 45 14				mov	es:[di+14h],ax
020C:DDFA  EB CE				jmp	short loc_2317		; (DDCA)
				sub_148		endp

020C:DDFC  EA 1491:8CD0		;*		jmp	far ptr loc_2727	;*(1491:8CD0)
020C:DDFC  EA					db	0EAh
020C:DDFD  8CD0 1491				dw	8CD0h, 1491h
020C:DE01  C3					retn
020C:DE02  000E[00]				db	14 dup (0)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

020C:DE10			sub_149		proc	near
020C:DE10  53					push	bx
020C:DE11  51					push	cx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 455

020C:DE12  52					push	dx
020C:DE13  56					push	si
020C:DE14  50					push	ax
020C:DE15  C7 06 1D18 0000			mov	data_284,0		; (020C:1D18=0)
020C:DE1B  8B C8				mov	cx,ax
020C:DE1D  55					push	bp
020C:DE1E  BD 3A3C				mov	bp,3A3Ch
020C:DE21  90					nop
020C:DE22  0E E8 A35E				callf	sub_101			; (8184)
020C:DE26  5D					pop	bp
020C:DE27  3D 0000				cmp	ax,0
020C:DE2A  74 6A				je	loc_2323		; Jump if equal
020C:DE2C  2E: 80 3E 3A38 01			cmp	byte ptr cs:[3A38h],1	; (020C:3A38=31h)
020C:DE32  74 16				je	loc_2320		; Jump if equal
020C:DE34  80 3E 48A5 01			cmp	data_747,1		; (020C:48A5=80h)
020C:DE39  74 31				je	loc_2321		; Jump if equal
020C:DE3B  F7 06 1F6E 8000			test	data_356,8000h		; (020C:1F6E=0)
020C:DE41  75 38				jnz	loc_2322		; Jump if not zero
020C:DE43  80 3E 46D8 00			cmp	data_718,0		; (020C:46D8=55h)
020C:DE48  75 31				jne	loc_2322		; Jump if not equal
020C:DE4A			loc_2320:
020C:DE4A  F7 06 1F6E 8000			test	data_356,8000h		; (020C:1F6E=0)
020C:DE50  75 69				jnz	loc_2325		; Jump if not zero
020C:DE52  8C CA				mov	dx,cs
020C:DE54  3B DA				cmp	bx,dx
020C:DE56  72 3E				jb	loc_2323		; Jump if below
020C:DE58  03 16 1791				add	dx,data_196		; (020C:1791=0)
020C:DE5C  3B DA				cmp	bx,dx
020C:DE5E  77 36				ja	loc_2323		; Jump if above
020C:DE60  A9 8000				test	ax,8000h
020C:DE63  74 07				jz	loc_2321		; Jump if zero
020C:DE65  80 3E 4567 01			cmp	data_708,1		; (020C:4567=8Ah)
020C:DE6A  74 4F				je	loc_2325		; Jump if equal
020C:DE6C			loc_2321:
020C:DE6C  BE 2576				mov	si,2576h
020C:DE6F  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:DE6F  9A					db	9Ah
020C:DE70  67E0 1491				dw	67E0h, 1491h
020C:DE74  9A 1491:7E54		;*		call	far ptr sub_244		;*(1491:7E54)
020C:DE74  9A					db	9Ah
020C:DE75  7E54 1491				dw	7E54h, 1491h
020C:DE79  EB 47				jmp	short loc_2326		; (DEC2)
020C:DE7B			loc_2322:
020C:DE7B  F7 C3 0FFF				test	bx,0FFFh
020C:DE7F  75 C9				jnz	loc_2320		; Jump if not zero
020C:DE81  B1 0C				mov	cl,0Ch
020C:DE83  D3 EB				shr	bx,cl			; Shift w/zeros fill
020C:DE85  83 FB 00				cmp	bx,0
020C:DE88  89 1E 1D18				mov	data_284,bx		; (020C:1D18=0)
020C:DE8C  75 44				jnz	loc_2327		; Jump if not zero
020C:DE8E  3E: C6 46 00 30			mov	byte ptr ds:[bp],30h	; '0'
020C:DE93  45					inc	bp
020C:DE94  EB 41				jmp	short loc_2328		; (DED7)
020C:DE96			loc_2323:
020C:DE96  2E: 80 3E 3A38 01			cmp	byte ptr cs:[3A38h],1	; (020C:3A38=31h)
020C:DE9C  74 06				je	loc_2324		; Jump if equal
020C:DE9E  81 F9 0100				cmp	cx,100h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 456

020C:DEA2  73 17				jae	loc_2325		; Jump if above or =
020C:DEA4			loc_2324:
020C:DEA4  83 3E 1CD2 00			cmp	data_250,0		; (020C:1CD2=0)
020C:DEA9  74 10				je	loc_2325		; Jump if equal
020C:DEAB  3B 1E 1CD2				cmp	bx,data_250		; (020C:1CD2=0)
020C:DEAF  75 0A				jne	loc_2325		; Jump if not equal
020C:DEB1  BE 257B				mov	si,257Bh
020C:DEB4  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:DEB4  9A					db	9Ah
020C:DEB5  67E0 1491				dw	67E0h, 1491h
020C:DEB9  EB 07				jmp	short loc_2326		; (DEC2)
020C:DEBB			loc_2325:
020C:DEBB  8B C3				mov	ax,bx
020C:DEBD  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:DEBD  9A					db	9Ah
020C:DEBE  0294 1491				dw	294h, 1491h
020C:DEC2			loc_2326:
020C:DEC2  58					pop	ax
020C:DEC3  2E: 80 3E 3A38 01			cmp	byte ptr cs:[3A38h],1	; (020C:3A38=31h)
020C:DEC9  74 12				je	loc_2329		; Jump if equal
020C:DECB  50					push	ax
020C:DECC  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020C:DED1  45					inc	bp
020C:DED2			loc_2327:
020C:DED2  9A 1491:A688		;*		call	far ptr sub_262		;*(1491:A688)
020C:DED2  9A					db	9Ah
020C:DED3  A688 1491				dw	0A688h, 1491h
020C:DED7			loc_2328:
020C:DED7  58					pop	ax
020C:DED8  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:DED8  9A					db	9Ah
020C:DED9  0294 1491				dw	294h, 1491h
020C:DEDD			loc_2329:
020C:DEDD  5E					pop	si
020C:DEDE  5A					pop	dx
020C:DEDF  59					pop	cx
020C:DEE0  5B					pop	bx
020C:DEE1  CB					retf
				sub_149		endp

							                        ;* No entry point to code
020C:DEE2  87 DB				xchg	bx,bx
020C:DEE4  2E: C6 06 3A38 01			mov	byte ptr cs:[3A38h],1	; (020C:3A38=31h)
020C:DEEA  0E E8 FF22				callf	sub_149			; (DE10)
020C:DEEE  2E: C6 06 3A38 00			mov	byte ptr cs:[3A38h],0	; (020C:3A38=31h)
020C:DEF4  CB					retf				; Return far
020C:DEF5  000B[00]				db	11 dup (0)
020C:DF00			loc_2330:
020C:DF00  C6 06 178A 02			mov	data_190,2		; (020C:178A=0)
020C:DF05  A0 178F				mov	al,data_194		; (020C:178F=0)
020C:DF08  D0 C8				ror	al,1			; Rotate
020C:DF0A  A2 178B				mov	data_191,al		; (020C:178B=0)
020C:DF0D  80 3E 1F6D 02			cmp	data_355,2		; (020C:1F6D=0)
020C:DF12  77 06				ja	loc_2331		; Jump if above
020C:DF14  81 0E 3D18 0800			or	data_594,800h		; (020C:3D18=2680h)
020C:DF1A			loc_2331:
020C:DF1A  B8 F8D2				mov	ax,0F8D2h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 457

020C:DF1D  8E C0				mov	es,ax
020C:DF1F  26: A1 72D5				mov	ax,word ptr es:[72D5h]	; (F8D2:72D5=3530h)
020C:DF23  05 6E6E				add	ax,6E6Eh
020C:DF26  2E: 3B 06 0078			cmp	ax,word ptr cs:[78h]	; (020C:0078=0)
020C:DF2B  75 17				jne	loc_2332		; Jump if not equal
020C:DF2D  26: A1 72D7				mov	ax,word ptr es:[72D7h]	; (F8D2:72D7=302Fh)
020C:DF31  05 6E6E				add	ax,6E6Eh
020C:DF34  2E: 3B 06 007A			cmp	ax,word ptr cs:[7Ah]	; (020C:007A=0)
020C:DF39  75 09				jne	loc_2332		; Jump if not equal
020C:DF3B  E8 9ABF				call	sub_93			; (79FD)
020C:DF3E  26: C6 06 416D 80			mov	byte ptr es:[416Dh],80h	; (F8D2:416D=66h)
020C:DF44			loc_2332:
020C:DF44  C6 06 1CD8 00			mov	data_253,0		; (020C:1CD8=0)
020C:DF49  B8 FFF0				mov	ax,0FFF0h
020C:DF4C  39 06 1D08				cmp	data_279,ax		; (020C:1D08=0)
020C:DF50  76 03				jbe	loc_2333		; Jump if below or =
020C:DF52  A3 1D08				mov	data_279,ax		; (020C:1D08=0)
020C:DF55			loc_2333:
020C:DF55  A0 1CD8				mov	al,data_253		; (020C:1CD8=0)
020C:DF58  E8 9A87				call	sub_87			; (79E2)
020C:DF5B  B3 19				mov	bl,19h
020C:DF5D  F6 E3				mul	bl			; ax = reg * al
020C:DF5F  05 0000				add	ax,0
020C:DF62  8B F0				mov	si,ax
020C:DF64  BD 018A				mov	bp,18Ah
020C:DF67  8A 0E 22F6				mov	cl,data_441		; (020C:22F6=0)
020C:DF6B  C6 06 22F6 00			mov	data_441,0		; (020C:22F6=0)
020C:DF70  26: 8B 44 0C				mov	ax,es:[si+0Ch]
020C:DF74  E8 9A53				call	sub_83			; (79CA)
020C:DF77  C7 06 018B 2020			mov	word ptr ds:[18Bh],2020h	; (020C:018B=0Eh)
020C:DF7D  9A 1491:7E54		;*		call	far ptr sub_244		;*(1491:7E54)
020C:DF7D  9A					db	9Ah
020C:DF7E  7E54 1491				dw	7E54h, 1491h
020C:DF82  E8 9A4B				call	sub_84			; (79D0)
020C:DF85  88 0E 22F6				mov	data_441,cl		; (020C:22F6=0)
020C:DF89  80 26 2308 FB			and	data_455,0FBh		; (020C:2308=0)
020C:DF8E  26: F6 44 0E 40			test	byte ptr es:[si+0Eh],40h	; '@'
020C:DF93  74 05				jz	loc_2334		; Jump if zero
020C:DF95  80 0E 2308 04			or	data_455,4		; (020C:2308=0)
020C:DF9A			loc_2334:
020C:DF9A  26: 8B 44 0F				mov	ax,es:[si+0Fh]
020C:DF9E  2E: A3 3F8E				mov	cs:data_666,ax		; (020C:3F8E=4075h)
020C:DFA2  26: 8B 44 11				mov	ax,es:[si+11h]
020C:DFA6  2E: A3 3F8A				mov	cs:data_664,ax		; (020C:3F8A=0C4FEh)
020C:DFAA  26: 8B 44 13				mov	ax,es:[si+13h]
020C:DFAE  2E: A3 3F8C				mov	cs:data_665,ax		; (020C:3F8C=503Ch)
020C:DFB2  B4 05				mov	ah,5
020C:DFB4  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:DFB4  9A					db	9Ah
020C:DFB5  2F70 1491				dw	2F70h, 1491h
020C:DFB9  E8 9A26				call	sub_87			; (79E2)
020C:DFBC  9A 1491:B0B4		;*		call	far ptr sub_267		;*(1491:B0B4)
020C:DFBC  9A					db	9Ah
020C:DFBD  B0B4 1491				dw	0B0B4h, 1491h
020C:DFC1  9A 1491:0254		;*		call	far ptr sub_155		;*(1491:0254)
020C:DFC1  9A					db	9Ah
020C:DFC2  0254 1491				dw	254h, 1491h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 458

020C:DFC6  C7 06 215E FFFF			mov	data_384,0FFFFh		; (020C:215E=0FFFFh)
020C:DFCC  E8 D361				call	sub_126			; (B330)
020C:DFCF  C6 06 22B7 00			mov	data_430,0		; (020C:22B7=0)
020C:DFD4  C6 06 1D44 00			mov	data_308,0		; (020C:1D44=0)
020C:DFD9  C6 06 1D45 00			mov	data_309,0		; (020C:1D45=0)
020C:DFDE  C7 06 2FA6 FFFF			mov	data_521,0FFFFh		; (020C:2FA6=0D35h)
020C:DFE4  B2 FF				mov	dl,0FFh
020C:DFE6  E8 36F7		;*		call	sub_22			;*(16E0)
020C:DFE6  E8 F7 36				db	0E8h,0F7h, 36h
020C:DFE9  F6 06 1CE1 40			test	data_258,40h		; (020C:1CE1=0) '@'
020C:DFEE  74 03				jz	loc_2335		; Jump if zero
020C:DFF0  E9 0881				jmp	loc_2447		; (E874)
020C:DFF3			loc_2335:
020C:DFF3  9A 1491:C61C		;*		call	far ptr sub_271		;*(1491:C61C)
020C:DFF3  9A					db	9Ah
020C:DFF4  C61C 1491				dw	0C61Ch, 1491h
020C:DFF8  2E: 80 3E 00C8 01			cmp	byte ptr cs:[0C8h],1	; (020C:00C8=6)
020C:DFFE  74 26				je	loc_2337		; Jump if equal
020C:E000  B4 0B				mov	ah,0Bh
020C:E002  CD 21				int	21h			; DOS Services  ah=function 0Bh
										;  if keybd char available,al=FF
020C:E004  0A C0				or	al,al			; Zero ?
020C:E006  74 2F				jz	loc_2339		; Jump if zero
020C:E008  9A 1491:0800		;*		call	far ptr sub_163		;*(1491:0800)
020C:E008  9A					db	9Ah
020C:E009  0800 1491				dw	800h, 1491h
020C:E00D  3C 1B				cmp	al,1Bh
020C:E00F  74 15				je	loc_2337		; Jump if equal
020C:E011  0C 20				or	al,20h			; ' '
020C:E013  3C 71				cmp	al,71h			; 'q'
020C:E015  74 0F				je	loc_2337		; Jump if equal
020C:E017  3C 76				cmp	al,76h			; 'v'
020C:E019  75 05				jne	loc_2336		; Jump if not equal
020C:E01B  9A 1491:C778		;*		call	far ptr sub_274		;*(1491:C778)
020C:E01B  9A					db	9Ah
020C:E01C  C778 1491				dw	0C778h, 1491h
020C:E020			loc_2336:
020C:E020  3C			data_894	db	3Ch
020C:E021  6A					db	6Ah
020C:E022  74 05				jz	loc_2338		; Jump if zero
020C:E024  EB 11				jmp	short loc_2339		; (E037)
020C:E026			loc_2337:
020C:E026  E9 940D				jmp	loc_1085		; (7436)
020C:E029			loc_2338:
020C:E029  A1 2302				mov	ax,data_451		; (020C:2302=3104h)
020C:E02C  8B 1E 2304				mov	bx,data_452		; (020C:2304=0A70Bh)
020C:E030  A3 2304				mov	data_452,ax		; (020C:2304=0A70Bh)
020C:E033  89 1E 2302				mov	data_451,bx		; (020C:2302=3104h)
020C:E037			loc_2339:
020C:E037  A1 3D16				mov	ax,word ptr ds:[3D16h]	; (020C:3D16=1491h)
020C:E03A  21 06 3D18				and	data_594,ax		; (020C:3D18=2680h)
020C:E03E  C7 06 3D16 FFFF			mov	word ptr ds:[3D16h],0FFFFh	; (020C:3D16=1491h)
020C:E044  9A 1491:6BB8		;*		call	far ptr sub_226		;*(1491:6BB8)
020C:E044  9A					db	9Ah
020C:E045  6BB8 1491				dw	6BB8h, 1491h
020C:E049  33 C0				xor	ax,ax			; Zero register
020C:E04B  A2 3CFA				mov	byte ptr ds:[3CFAh],al	; (020C:3CFA=6)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 459

020C:E04E  A2 2173				mov	data_396,al		; (020C:2173=2)
020C:E051  A2 1D65				mov	data_325,al		; (020C:1D65=0)
020C:E054  A2 1D62				mov	data_322,al		; (020C:1D62=0)
020C:E057  A0 420B				mov	al,byte ptr ds:[420Bh]	; (020C:420B=47h)
020C:E05A  A2 420C				mov	byte ptr ds:[420Ch],al	; (020C:420C=4Ah)
020C:E05D  E8 8310				call	sub_65			; (6370)
020C:E060  E8 7E05				call	sub_54			; (5E68)
020C:E063  E8 837A				call	sub_66			; (63E0)
020C:E066  80 3E 1CDE 01			cmp	byte ptr ds:[1CDEh],1	; (6F63:1CDE=8)
020C:E06B  76 03				jbe	loc_2340		; Jump if below or =
020C:E06D  E9 00D9				jmp	loc_2352		; (E149)
020C:E070			loc_2340:
020C:E070  A1 2156				mov	ax,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:E073  8B 1E 2154				mov	bx,word ptr ds:[2154h]	; (6F63:2154=93Eh)
020C:E077  C6 06 3C07 01			mov	byte ptr ds:[3C07h],1	; (6F63:3C07=0FFh)
020C:E07C  BA 0001				mov	dx,1
020C:E07F  E8 84AE				call	sub_69			; (6530)
020C:E082  C6 06 3C07 00			mov	byte ptr ds:[3C07h],0	; (6F63:3C07=0FFh)
020C:E087  72 03				jc	loc_2341		; Jump if carry Set
020C:E089  E9 00BD				jmp	loc_2352		; (E149)
020C:E08C			loc_2341:
020C:E08C  26: 8A 4D 04				mov	cl,es:[di+4]
020C:E090  80 E1 1F				and	cl,1Fh
020C:E093  80 F9 1F				cmp	cl,1Fh
020C:E096  75 59				jne	loc_2348		; Jump if not equal
020C:E098  E8 A401				call	sub_106			; (849C)
020C:E09B  72 15				jc	loc_2344		; Jump if carry Set
020C:E09D			loc_2342:
020C:E09D  BB 2F78				mov	bx,2F78h
020C:E0A0  26			data_895	db	26h			; Data table (indexed access)
020C:E0A1  8A 45 05				mov	al,[di+5]
020C:E0A4  25 000F				and	ax,0Fh
020C:E0A7  D7					xlat				; al=[al+[bx]] table
020C:E0A8  0A C0				or	al,al			; Zero ?
020C:E0AA  75 04				jnz	loc_2343		; Jump if not zero
020C:E0AC  26: 8A 45 06				mov	al,es:[di+6]
020C:E0B0			loc_2343:
020C:E0B0  03 F8				add	di,ax
020C:E0B2			loc_2344:
020C:E0B2  8B 1E 2FAE				mov	bx,word ptr ds:[2FAEh]	; (6F63:2FAE=0FFFFh)
020C:E0B6  26: 3B 1D				cmp	bx,es:[di]
020C:E0B9  75 34				jne	loc_2347		; Jump if not equal
020C:E0BB  A1 2FB0				mov	ax,word ptr ds:[2FB0h]	; (6F63:2FB0=0FFFFh)
020C:E0BE  26: 3B 45 02				cmp	ax,es:[di+2]
020C:E0C2  75 2B				jne	loc_2347		; Jump if not equal
020C:E0C4  50					push	ax
020C:E0C5  53					push	bx
020C:E0C6  BB 2F78				mov	bx,2F78h
020C:E0C9  26: 8A 45 05				mov	al,es:[di+5]
020C:E0CD  25 000F				and	ax,0Fh
020C:E0D0  D7					xlat				; al=[al+[bx]] table
020C:E0D1  0A C0				or	al,al			; Zero ?
020C:E0D3  75 04				jnz	loc_2345		; Jump if not zero
020C:E0D5  26: 8A 45 06				mov	al,es:[di+6]
020C:E0D9			loc_2345:
020C:E0D9  8B E8				mov	bp,ax
020C:E0DB  5B					pop	bx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 460

020C:E0DC  58					pop	ax
020C:E0DD  BA FFFF				mov	dx,0FFFFh
020C:E0E0  26: 3B 1B				cmp	bx,es:[bp+di]
020C:E0E3  75 04				jne	loc_2346		; Jump if not equal
020C:E0E5  26: 8B 53 02				mov	dx,es:[bp+di+2]
020C:E0E9			loc_2346:
020C:E0E9  89 16 3D87				mov	word ptr ds:[3D87h],dx	; (6F63:3D87=0FFFFh)
020C:E0ED  EB 9D				jmp	short loc_2341		; (E08C)
020C:E0EF			loc_2347:
020C:E0EF  EB 58				jmp	short loc_2352		; (E149)
020C:E0F1			loc_2348:
020C:E0F1  F6 06 230A 7F			test	byte ptr ds:[230Ah],7Fh	; (6F63:230A=40h)
020C:E0F6  75 A5				jnz	loc_2342		; Jump if not zero
020C:E0F8  57					push	di
020C:E0F9  06					push	es
020C:E0FA  26: F6 45 05 30			test	byte ptr es:[di+5],30h	; '0'
020C:E0FF  74 11				jz	loc_2349		; Jump if zero
020C:E101  C6 06 1D44 00			mov	byte ptr ds:[1D44h],0	; (6F63:1D44=0F1h)
020C:E106  C6 06 1D45 00			mov	byte ptr ds:[1D45h],0	; (6F63:1D45=0D7h)
020C:E10B  B2 FF				mov	dl,0FFh
020C:E10D  E8 35D0		;*		call	sub_22			;*(16E0)
020C:E10D  E8 D0 35				db	0E8h,0D0h, 35h
020C:E110  EB 0A				jmp	short loc_2350		; (E11C)
020C:E112			loc_2349:
020C:E112  26: F6 45 04 1F			test	byte ptr es:[di+4],1Fh
020C:E117  74 03				jz	loc_2350		; Jump if zero
020C:E119  E8 A0E4		;*		call	sub_103			;*(8200)
020C:E119  E8 E4 A0				db	0E8h,0E4h,0A0h
020C:E11C			loc_2350:
020C:E11C  26: 8B 05				mov	ax,es:[di]
020C:E11F  3B 06 1CE9				cmp	ax,word ptr ds:[1CE9h]	; (6F63:1CE9=4402h)
020C:E123  75 1F				jne	loc_2351		; Jump if not equal
020C:E125  26: 8B 45 02				mov	ax,es:[di+2]
020C:E129  3B 06 1CEB				cmp	ax,word ptr ds:[1CEBh]	; (6F63:1CEB=40D7h)
020C:E12D  75 15				jne	loc_2351		; Jump if not equal
020C:E12F  F7 06 3D18 1000			test	word ptr ds:[3D18h],1000h	; (6F63:3D18=0FFFFh)
020C:E135  75 0D				jnz	loc_2351		; Jump if not zero
020C:E137  A1 1CD2				mov	ax,word ptr ds:[1CD2h]	; (6F63:1CD2=41h)
020C:E13A  0B C0				or	ax,ax			; Zero ?
020C:E13C  74 06				jz	loc_2351		; Jump if zero
020C:E13E  A3 2334				mov	word ptr ds:[2334h],ax	; (6F63:2334=0C402h)
020C:E141  A3 2332				mov	word ptr ds:[2332h],ax	; (6F63:2332=0C09h)
020C:E144			loc_2351:
020C:E144  07					pop	es
020C:E145  5F					pop	di
020C:E146  E9 FF54				jmp	loc_2342		; (E09D)
020C:E149			loc_2352:
020C:E149  C7 06 178D 0011			mov	word ptr ds:[178Dh],11h	; (6F63:178D=2800h)
020C:E14F  9A 1491:3388		;*		call	far ptr sub_190		;*(1491:3388)
020C:E14F  9A					db	9Ah
020C:E150  3388 1491				dw	3388h, 1491h
020C:E154  A1 2156				mov	ax,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:E157  8B 1E 2154				mov	bx,word ptr ds:[2154h]	; (6F63:2154=93Eh)
020C:E15B  BA 0002				mov	dx,2
020C:E15E  E8 83CF				call	sub_69			; (6530)
020C:E161  9C					pushf				; Push flags
020C:E162  80 3E 2172 01			cmp	byte ptr ds:[2172h],1	; (6F63:2172=2)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 461

020C:E167  75 04				jne	loc_2353		; Jump if not equal
020C:E169  9D					popf				; Pop flags
020C:E16A  E9 02E9				jmp	loc_2399		; (E456)
020C:E16D			loc_2353:
020C:E16D  9D					popf				; Pop flags
020C:E16E  73 77				jnc	loc_2360		; Jump if carry=0
020C:E170  0B C0				or	ax,ax			; Zero ?
020C:E172  74 16				jz	loc_2354		; Jump if zero
020C:E174  48					dec	ax
020C:E175  26: 03 45 08				add	ax,es:[di+8]
020C:E179  73 0F				jnc	loc_2354		; Jump if carry=0
020C:E17B  40					inc	ax
020C:E17C  26: 29 45 08				sub	es:[di+8],ax
020C:E180  26: 80 65 04 C0			and	byte ptr es:[di+4],0C0h
020C:E185  26: 80 4D 04 01			or	byte ptr es:[di+4],1
020C:E18A			loc_2354:
020C:E18A  26: 8B 45 08				mov	ax,es:[di+8]
020C:E18E  A3 1D66				mov	word ptr ds:[1D66h],ax	; (6F63:1D66=20Ch)
020C:E191  A3 1D68				mov	word ptr ds:[1D68h],ax	; (6F63:1D68=0D847h)
020C:E194  26: 8A 55 04				mov	dl,es:[di+4]
020C:E198  BF 6BC0				mov	di,6BC0h
020C:E19B  80 E2 3F				and	dl,3Fh			; '?'
020C:E19E  80 FA 00				cmp	dl,0
020C:E1A1  74 31				je	loc_2357		; Jump if equal
020C:E1A3  80 FA 01				cmp	dl,1
020C:E1A6  74 31				je	loc_2358		; Jump if equal
020C:E1A8  80			data_900	db	80h			; Data table (indexed access)
020C:E1A9  FA					cli				; Disable interrupts
020C:E1AA  02 74 2F				add	dh,[si+2Fh]
020C:E1AD  80 FA 04				cmp	dl,4
020C:E1B0  74 17				je	loc_2356		; Jump if equal
020C:E1B2  F6 C2 10				test	dl,10h
020C:E1B5  75 25				jnz	loc_2359		; Jump if not zero
020C:E1B7  80 FA 21				cmp	dl,21h			; '!'
020C:E1BA  72 03				jb	loc_2355		; Jump if below
020C:E1BC  E9 0291				jmp	loc_2398		; (E450)
020C:E1BF			loc_2355:
020C:E1BF  80 FA 20				cmp	dl,20h			; ' '
020C:E1C2  75 15				jne	loc_2358		; Jump if not equal
020C:E1C4  BF 6BD6				mov	di,6BD6h
020C:E1C7  EB 10				jmp	short loc_2358		; (E1D9)
020C:E1C9			loc_2356:
020C:E1C9  A9 0003				test	ax,3
020C:E1CC  75 0B				jnz	loc_2358		; Jump if not zero
020C:E1CE  BF 6CB2				mov	di,6CB2h
020C:E1D1  E9 04EC				jmp	loc_2432		; (E6C0)
020C:E1D4			loc_2357:
020C:E1D4  3D 0002				cmp	ax,2
020C:E1D7  74 03				je	loc_2359		; Jump if equal
020C:E1D9			loc_2358:
020C:E1D9  E9 04E4				jmp	loc_2432		; (E6C0)
020C:E1DC			loc_2359:
020C:E1DC  A9 0001				test	ax,1
020C:E1DF  75 F8				jnz	loc_2358		; Jump if not zero
020C:E1E1  BF 6C18				mov	di,6C18h
020C:E1E4  E9 04D9				jmp	loc_2432		; (E6C0)
020C:E1E7			loc_2360:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 462

020C:E1E7  83 3E 1CFA 00			cmp	word ptr ds:[1CFAh],0	; (6F63:1CFA=20Ch)
020C:E1EC  75 03				jne	loc_2361		; Jump if not equal
020C:E1EE  E9 0215				jmp	loc_2395		; (E406)
020C:E1F1			loc_2361:
020C:E1F1  8E 06 2158				mov	es,word ptr ds:[2158h]	; (6F63:2158=0E247h)
020C:E1F5  8B 3E 215A				mov	di,word ptr ds:[215Ah]	; (6F63:215A=140h)
020C:E1F9  80 3E 1CDF 0A			cmp	byte ptr ds:[1CDFh],0Ah	; (6F63:1CDF=0Ch)
020C:E1FE  74 06				je	loc_2362		; Jump if equal
020C:E200  26: 80 3D 00				cmp	byte ptr es:[di],0
020C:E204  75 03				jne	loc_2363		; Jump if not equal
020C:E206			loc_2362:
020C:E206  E9 01BB				jmp	loc_2390		; (E3C4)
020C:E209			loc_2363:
020C:E209  8B 3E 215A				mov	di,word ptr ds:[215Ah]	; (6F63:215A=140h)
020C:E20D  8B 0E 1CFA				mov	cx,word ptr ds:[1CFAh]	; (6F63:1CFA=20Ch)
020C:E211  2B CF				sub	cx,di
020C:E213  8B C1				mov	ax,cx
020C:E215  83 F9 FF				cmp	cx,0FFFFh
020C:E218  74 01				je	loc_2364		; Jump if equal
020C:E21A  41					inc	cx
020C:E21B			loc_2364:
020C:E21B  83 F9 20				cmp	cx,20h
020C:E21E  76 16				jbe	loc_2365		; Jump if below or =
020C:E220  8B			data_902	db	8Bh
020C:E221  D1 80 103E				rol	word ptr ds:[103Eh][bx+si],1	; (6F63:103E=758h) Rotate
020C:E225  42					inc	dx
020C:E226  01 75 10				add	[di+10h],si
020C:E229  80 3E 1CDF 0A			cmp	byte ptr ds:[1CDFh],0Ah	; (6F63:1CDF=0Ch)
020C:E22E  74 09				je	loc_2366		; Jump if equal
020C:E230  26: 80 3D 90				cmp	byte ptr es:[di],90h
020C:E234  75 03				jne	loc_2366		; Jump if not equal
020C:E236			loc_2365:
020C:E236  E9 018B				jmp	loc_2390		; (E3C4)
020C:E239			loc_2366:
020C:E239  BB 424E				mov	bx,424Eh
020C:E23C  8B C1				mov	ax,cx
020C:E23E  03 06 215A				add	ax,word ptr ds:[215Ah]	; (6F63:215A=140h)
020C:E242  73 03				jnc	loc_2367		; Jump if carry=0
020C:E244  49					dec	cx
020C:E245  EB 05				jmp	short loc_2368		; (E24C)
020C:E247			loc_2367:
020C:E247  3D FFFF				cmp	ax,0FFFFh
020C:E24A  75 01				jne	loc_2369		; Jump if not equal
020C:E24C			loc_2368:
020C:E24C  49					dec	cx
020C:E24D			loc_2369:
020C:E24D  8B E9				mov	bp,cx
020C:E24F  33 D2				xor	dx,dx			; Zero register
020C:E251  80 3E 1CDF 0A			cmp	byte ptr ds:[1CDFh],0Ah	; (6F63:1CDF=0Ch)
020C:E256  74 05				je	locloop_2370		; Jump if equal
020C:E258  26: 8A 15				mov	dl,es:[di]
020C:E25B  32 F6				xor	dh,dh			; Zero register

020C:E25D			locloop_2370:
020C:E25D  33 C0				xor	ax,ax			; Zero register
020C:E25F  80 3E 1CDF 0A			cmp	byte ptr ds:[1CDFh],0Ah	; (6F63:1CDF=0Ch)
020C:E264  74 03				je	loc_2371		; Jump if equal
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 463

020C:E266  26: 8B 05				mov	ax,es:[di]
020C:E269			loc_2371:
020C:E269  0B C0				or	ax,ax			; Zero ?
020C:E26B  74 63				jz	loc_2377		; Jump if zero
020C:E26D  3A C2				cmp	al,dl
020C:E26F  74 02				je	loc_2372		; Jump if equal
020C:E271  32 D2				xor	dl,dl			; Zero register
020C:E273			loc_2372:
020C:E273  80 3E 4210 01			cmp	byte ptr ds:[4210h],1	; (6F63:4210=0FFh)
020C:E278  75 26				jne	loc_2373		; Jump if not equal
020C:E27A  F7 06 3D18 0002			test	word ptr ds:[3D18h],2	; (6F63:3D18=0FFFFh)
020C:E280  74 1E				jz	loc_2373		; Jump if zero
020C:E282  86 E0				xchg	ah,al
020C:E284  80 FC 00				cmp	ah,0
020C:E287  74 47				je	loc_2377		; Jump if equal
020C:E289  9A 1491:4F78		;*		call	far ptr sub_204		;*(1491:4F78)
020C:E289  9A					db	9Ah
020C:E28A  4F78 1491				dw	4F78h, 1491h
020C:E28E  0B C0				or	ax,ax			; Zero ?
020C:E290  74 3E				jz	loc_2377		; Jump if zero
020C:E292  03 F8				add	di,ax
020C:E294  48					dec	ax
020C:E295  2B C8				sub	cx,ax
020C:E297  83 F9 00				cmp	cx,0
020C:E29A  77 0A				ja	loc_2374		; Jump if above
020C:E29C  03 C8				add	cx,ax
020C:E29E  EB 30				jmp	short loc_2377		; (E2D0)
020C:E2A0			loc_2373:
020C:E2A0  D7					xlat				; al=[al+[bx]] table
020C:E2A1  0A C0				or	al,al			; Zero ?
020C:E2A3  75 2B				jnz	loc_2377		; Jump if not zero
020C:E2A5  47			data_903	db	47h			; Data table (indexed access)
020C:E2A6			loc_2374:
020C:E2A6  80 3E 4210 02			cmp	byte ptr ds:[4210h],2	; (6F63:4210=0FFh)
020C:E2AB  75 21				jne	loc_2376		; Jump if not equal
020C:E2AD  83 F9 02				cmp	cx,2
020C:E2B0  76 1C				jbe	loc_2376		; Jump if below or =
020C:E2B2  80 FE 00				cmp	dh,0
020C:E2B5  75 0A				jne	loc_2375		; Jump if not equal
020C:E2B7  FE C6				inc	dh
020C:E2B9  26: 80 3D 00				cmp	byte ptr es:[di],0
020C:E2BD  75 0F				jne	loc_2376		; Jump if not equal
020C:E2BF  FE C6				inc	dh
020C:E2C1			loc_2375:
020C:E2C1  F6 C6 02				test	dh,2
020C:E2C4  74 08				jz	loc_2376		; Jump if zero
020C:E2C6  26: 80 3D 00				cmp	byte ptr es:[di],0
020C:E2CA  75 04				jne	loc_2377		; Jump if not equal
020C:E2CC  47					inc	di
020C:E2CD  49					dec	cx
020C:E2CE			loc_2376:
020C:E2CE  E2 8D				loop	locloop_2370		; Loop if cx > 0

020C:E2D0			loc_2377:
020C:E2D0  2B E9				sub	bp,cx
020C:E2D2  83 FD 20				cmp	bp,20h
020C:E2D5  77 03				ja	loc_2379		; Jump if above
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 464

020C:E2D7			loc_2378:
020C:E2D7  E9 00EA				jmp	loc_2390		; (E3C4)
020C:E2DA			loc_2379:
020C:E2DA  0A D2				or	dl,dl			; Zero ?
020C:E2DC  74 06				jz	loc_2380		; Jump if zero
020C:E2DE  81 FD 00A0				cmp	bp,0A0h
020C:E2E2  77 F3				ja	loc_2378		; Jump if above
020C:E2E4			loc_2380:
020C:E2E4  80 3E 4210 01			cmp	byte ptr ds:[4210h],1	; (6F63:4210=0FFh)
020C:E2E9  74 08				je	loc_2381		; Jump if equal
020C:E2EB  26: 80 7D FE 00			cmp	byte ptr es:[di-2],0
020C:E2F0  75 01				jne	loc_2381		; Jump if not equal
020C:E2F2  4D					dec	bp
020C:E2F3			loc_2381:
020C:E2F3  A1 3D87				mov	ax,word ptr ds:[3D87h]	; (6F63:3D87=0FFFFh)
020C:E2F6  3B 06 3D89				cmp	ax,word ptr ds:[3D89h]	; (6F63:3D89=0FFFFh)
020C:E2FA  72 03				jb	loc_2382		; Jump if below
020C:E2FC  A1 3D89				mov	ax,word ptr ds:[3D89h]	; (6F63:3D89=0FFFFh)
020C:E2FF			loc_2382:
020C:E2FF  A3 3D8D				mov	word ptr ds:[3D8Dh],ax	; (6F63:3D8D=0FFFFh)
020C:E302  8B D5				mov	dx,bp
020C:E304  80 3E 1CDE 01			cmp	byte ptr ds:[1CDEh],1	; (6F63:1CDE=8)
020C:E309  77 21				ja	loc_2383		; Jump if above
020C:E30B  A1 1CF8				mov	ax,word ptr ds:[1CF8h]	; (6F63:1CF8=8C2h)
020C:E30E  3B 06 3D8D				cmp	ax,word ptr ds:[3D8Dh]	; (6F63:3D8D=0FFFFh)
020C:E312  76 18				jbe	loc_2383		; Jump if below or =
020C:E314  A1 2156				mov	ax,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:E317  03 C2				add	ax,dx
020C:E319  3B 06 3D8D				cmp	ax,word ptr ds:[3D8Dh]	; (6F63:3D8D=0FFFFh)
020C:E31D  76 0D				jbe	loc_2383		; Jump if below or =
020C:E31F  83 FA 50				cmp	dx,50h
020C:E322  77 0B				ja	loc_2384		; Jump if above
020C:E324  8B 16 3D8D				mov	dx,word ptr ds:[3D8Dh]	; (6F63:3D8D=0FFFFh)
020C:E328  2B 16 2156				sub	dx,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:E32C			loc_2383:
020C:E32C  E9 007F				jmp	loc_2389		; (E3AE)
020C:E32F			loc_2384:
020C:E32F  8B 1E 3D89				mov	bx,word ptr ds:[3D89h]	; (6F63:3D89=0FFFFh)
020C:E333  3B 1E 3D8D				cmp	bx,word ptr ds:[3D8Dh]	; (6F63:3D8D=0FFFFh)
020C:E337  74 09				je	loc_2385		; Jump if equal
020C:E339  2D 0028				sub	ax,28h
020C:E33C  3B 06 3D8D				cmp	ax,word ptr ds:[3D8Dh]	; (6F63:3D8D=0FFFFh)
020C:E340  77 0A				ja	loc_2386		; Jump if above
020C:E342			loc_2385:
020C:E342  8B 16 3D8D				mov	dx,word ptr ds:[3D8Dh]	; (6F63:3D8D=0FFFFh)
020C:E346  2B 16 2156				sub	dx,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:E34A  EB 62				jmp	short loc_2389		; (E3AE)
020C:E34C			loc_2386:
020C:E34C  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:E351  06					push	es
020C:E352  52					push	dx
020C:E353  8B 1E 2154				mov	bx,word ptr ds:[2154h]	; (6F63:2154=93Eh)
020C:E357  BA 0001				mov	dx,1
020C:E35A  E8 81D3				call	sub_69			; (6530)
020C:E35D  5A					pop	dx
020C:E35E  26: 8B 05				mov	ax,es:[di]
020C:E361  3B 06 2154				cmp	ax,word ptr ds:[2154h]	; (6F63:2154=93Eh)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 465

020C:E365  75 1C				jne	loc_2387		; Jump if not equal
020C:E367  A1 2156				mov	ax,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:E36A  03 C2				add	ax,dx
020C:E36C  26: 3B 45 02				cmp	ax,es:[di+2]
020C:E370  76 11				jbe	loc_2387		; Jump if below or =
020C:E372  2D 0028				sub	ax,28h
020C:E375  26: 3B 45 02				cmp	ax,es:[di+2]
020C:E379  77 08				ja	loc_2387		; Jump if above
020C:E37B  26: 8B 55 02				mov	dx,es:[di+2]
020C:E37F  2B 16 2156				sub	dx,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:E383			loc_2387:
020C:E383  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:E388  9C					pushf				; Push flags
020C:E389  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:E38E  5A					pop	dx
020C:E38F  8E C2				mov	es,dx
020C:E391  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:E396  5A					pop	dx
020C:E397  75 0A				jnz	loc_2388		; Jump if not zero
020C:E399  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:E39E  74 03				je	loc_2388		; Jump if equal
020C:E3A0  E8 9B0D				call	sub_97			; (7EB0)
020C:E3A3			loc_2388:
020C:E3A3  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:E3A8  9D					popf				; Pop flags
020C:E3A9  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:E3AE			loc_2389:
020C:E3AE  BF 4165				mov	di,4165h
020C:E3B1  A1 2154				mov	ax,word ptr ds:[2154h]	; (6F63:2154=93Eh)
020C:E3B4  89 05				mov	[di],ax
020C:E3B6  A1 2156				mov	ax,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:E3B9  89 45 02				mov	[di+2],ax
020C:E3BC  C6 45 04 20				mov	byte ptr [di+4],20h	; ' '
020C:E3C0  8B DA				mov	bx,dx
020C:E3C2  EB 5C				jmp	short loc_2397		; (E420)
020C:E3C4			loc_2390:
020C:E3C4  8E 06 2158				mov	es,word ptr ds:[2158h]	; (6F63:2158=0E247h)
020C:E3C8  8B 3E 215A				mov	di,word ptr ds:[215Ah]	; (6F63:215A=4140h)
020C:E3CC  8B 0E 1CFA				mov	cx,word ptr ds:[1CFAh]	; (6F63:1CFA=20Ch)
020C:E3D0  2B CF				sub	cx,di
020C:E3D2  83 F9 FE				cmp	cx,0FFFEh
020C:E3D5  73 01				jae	loc_2391		; Jump if above or =
020C:E3D7  41					inc	cx
020C:E3D8			loc_2391:
020C:E3D8  8B D9				mov	bx,cx
020C:E3DA  26: 8A 05				mov	al,es:[di]
020C:E3DD  80 3E 1CDF 0A			cmp	byte ptr ds:[1CDFh],0Ah	; (6F63:1CDF=0Ch)
020C:E3E2  75 06				jne	loc_2392		; Jump if not equal
020C:E3E4  32 C0				xor	al,al			; Zero register
020C:E3E6  33 C9				xor	cx,cx			; Zero register
020C:E3E8  EB 03				jmp	short loc_2393		; (E3ED)
020C:E3EA			loc_2392:
020C:E3EA  FC					cld				; Clear direction
020C:E3EB  F3/ AE				repe	scasb			; Rep zf=1+cx >0 Scan es:[di] for al
020C:E3ED			loc_2393:
020C:E3ED  9C					pushf				; Push flags
020C:E3EE  2B D9				sub	bx,cx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 466

020C:E3F0  9D					popf				; Pop flags
020C:E3F1  74 01				jz	loc_2394		; Jump if zero
020C:E3F3  4B					dec	bx
020C:E3F4			loc_2394:
020C:E3F4  83 FB 07				cmp	bx,7
020C:E3F7  73 0F				jae	loc_2396		; Jump if above or =
020C:E3F9  BF 6BC0				mov	di,6BC0h
020C:E3FC  80 3E 1CDE 02			cmp	byte ptr ds:[1CDEh],2	; (6F63:1CDE=8)
020C:E401  72 03				jb	loc_2395		; Jump if below
020C:E403  E9 FDD3				jmp	loc_2358		; (E1D9)
020C:E406			loc_2395:
020C:E406  EB 4E				jmp	short loc_2399		; (E456)
020C:E408			loc_2396:
020C:E408  38 06 1960				cmp	byte ptr ds:[1960h],al	; (6F63:1960=41h)
020C:E40C  75 F8				jne	loc_2395		; Jump if not equal
020C:E40E  BF 4165				mov	di,4165h
020C:E411  A1 2154				mov	ax,word ptr ds:[2154h]	; (6F63:2154=93Eh)
020C:E414  89 05				mov	[di],ax
020C:E416  A1 2156				mov	ax,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:E419  89 45 02				mov	[di+2],ax
020C:E41C  C6 45 04 21				mov	byte ptr [di+4],21h	; '!'
020C:E420			loc_2397:
020C:E420  C6			data_906	db	0C6h
020C:E421  45					inc	bp
020C:E422  05 F605				add	ax,0F605h
020C:E425  06					push	es
020C:E426  3F					aas				; Ascii adjust
020C:E427  16					push	ss
020C:E428  02 74 04				add	dh,[si+4]
020C:E42B  C6 45 05 04				mov	byte ptr [di+5],4
020C:E42F  89 5D 08				mov	[di+8],bx
020C:E432  C7 45 06 0000			mov	word ptr [di+6],0
020C:E437  8A 55 04				mov	dl,[di+4]
020C:E43A  E8 A453				call	sub_107			; (8890)
020C:E43D  89 1E 1D66				mov	word ptr ds:[1D66h],bx	; (6F63:1D66=20Ch)
020C:E441  89 1E 1D68				mov	word ptr ds:[1D68h],bx	; (6F63:1D68=0D847h)
020C:E445  80 FA 21				cmp	dl,21h			; '!'
020C:E448  74 06				je	loc_2398		; Jump if equal
020C:E44A  BF 6BD6				mov	di,6BD6h
020C:E44D  E9 0270				jmp	loc_2432		; (E6C0)
020C:E450			loc_2398:
020C:E450  BF 6BEC				mov	di,6BECh
020C:E453  E9 026A				jmp	loc_2432		; (E6C0)
020C:E456			loc_2399:
020C:E456  C7 06 178D 0012			mov	word ptr ds:[178Dh],12h	; (6F63:178D=2800h)
020C:E45C  9A 1491:3388		;*		call	far ptr sub_190		;*(1491:3388)
020C:E45C  9A					db	9Ah
020C:E45D  3388 1491				dw	3388h, 1491h
020C:E461  F6 06 230A 7F			test	byte ptr ds:[230Ah],7Fh	; (6F63:230A=40h)
020C:E466  75 12				jnz	loc_2400		; Jump if not zero
020C:E468  BE 1960				mov	si,1960h
020C:E46B  9A 1491:85FC		;*		call	far ptr sub_251		;*(1491:85FC)
020C:E46B  9A					db	9Ah
020C:E46C  85FC 1491				dw	85FCh, 1491h
020C:E470  73 08				jnc	loc_2400		; Jump if carry=0
020C:E472  C6 06 2348 00			mov	byte ptr ds:[2348h],0	; (6F63:2348=0E5h)
020C:E477  E9 03CD				jmp	loc_2445		; (E847)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 467

020C:E47A			loc_2400:
020C:E47A  E8 8A8B				call	sub_75			; (6F08)
020C:E47D  72 03				jc	loc_2401		; Jump if carry Set
020C:E47F  E9 011C				jmp	loc_2419		; (E59E)
020C:E482			loc_2401:
020C:E482  26: 8A 55 01				mov	dl,es:[di+1]
020C:E486  80 FA FF				cmp	dl,0FFh
020C:E489  74 34				je	loc_2403		; Jump if equal
020C:E48B  86 C4				xchg	al,ah
020C:E48D  8A D8				mov	bl,al
020C:E48F  8A F2				mov	dh,dl
020C:E491  80 E6 07				and	dh,7
020C:E494  80 FE 00				cmp	dh,0
020C:E497  74 51				je	loc_2406		; Jump if equal
020C:E499  80 FE 01				cmp	dh,1
020C:E49C  74 54				je	loc_2407		; Jump if equal
020C:E49E  80 FE 02				cmp	dh,2
020C:E4A1  74 57				je	loc_2408		; Jump if equal
020C:E4A3  80 FE 03				cmp	dh,3
020C:E4A6  74 17				je	loc_2403		; Jump if equal
020C:E4A8  80 FE 04				cmp	dh,4
020C:E4AB  74 55				je	loc_2409		; Jump if equal
020C:E4AD  80 FE 05				cmp	dh,5
020C:E4B0  74 54				je	loc_2410		; Jump if equal
020C:E4B2  80 FE 06				cmp	dh,6
020C:E4B5  75 02				jne	loc_2402		; Jump if not equal
020C:E4B7  EB 7D				jmp	short loc_2413		; (E536)
020C:E4B9			loc_2402:
020C:E4B9  BB 0005				mov	bx,5
020C:E4BC  E9 8E2F				jmp	loc_1076		; (72EE)
020C:E4BF			loc_2403:
020C:E4BF  26: 8A 45 0E				mov	al,es:[di+0Eh]
020C:E4C3  24 07				and	al,7
020C:E4C5  08 06 1D5C				or	byte ptr ds:[1D5Ch],al	; (6F63:1D5C=8)
020C:E4C9  22 06 1D5A				and	al,byte ptr ds:[1D5Ah]	; (6F63:1D5A=0)
020C:E4CD  75 0D				jnz	loc_2404		; Jump if not zero
020C:E4CF  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020C:E4D3  23 06 1D48				and	ax,word ptr ds:[1D48h]	; (6F63:1D48=0CB00h)
020C:E4D7  75 03				jnz	loc_2404		; Jump if not zero
020C:E4D9  E9 00A5				jmp	loc_2418		; (E581)
020C:E4DC			loc_2404:
020C:E4DC  E8 CD31				call	sub_125			; (B210)
020C:E4DF  72 06				jc	loc_2405		; Jump if carry Set
020C:E4E1  E8 8A74				call	sub_76			; (6F58)
020C:E4E4  E9 0128				jmp	loc_2425		; (E60F)
020C:E4E7			loc_2405:
020C:E4E7  E9 00B4				jmp	loc_2419		; (E59E)
020C:E4EA			loc_2406:
020C:E4EA  80 E2 38				and	dl,38h			; '8'
020C:E4ED  80 E3 38				and	bl,38h			; '8'
020C:E4F0  EB 59				jmp	short loc_2415		; (E54B)
020C:E4F2			loc_2407:
020C:E4F2  80 E2 C0				and	dl,0C0h
020C:E4F5  80 E3 C0				and	bl,0C0h
020C:E4F8  EB 51				jmp	short loc_2415		; (E54B)
020C:E4FA			loc_2408:
020C:E4FA  80 E2 F8				and	dl,0F8h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 468

020C:E4FD  80 E3 F8				and	bl,0F8h
020C:E500  EB 49				jmp	short loc_2415		; (E54B)
020C:E502			loc_2409:
020C:E502  B2 0A				mov	dl,0Ah
020C:E504  EB 45				jmp	short loc_2415		; (E54B)
020C:E506			loc_2410:
020C:E506  F6 C2 10				test	dl,10h
020C:E509  74 09				jz	loc_2411		; Jump if zero
020C:E50B  8A 44 02				mov	al,[si+2]
020C:E50E  26: 3A 45 0B				cmp	al,es:[di+0Bh]
020C:E512  75 6D				jne	loc_2418		; Jump if not equal
020C:E514			loc_2411:
020C:E514  8A C2				mov	al,dl
020C:E516  24 18				and	al,18h
020C:E518  3C 18				cmp	al,18h
020C:E51A  75 07				jne	loc_2412		; Jump if not equal
020C:E51C  C6 06 1D5E 01			mov	byte ptr ds:[1D5Eh],1	; (6F63:1D5E=2)
020C:E521  EB 1F				jmp	short loc_2414		; (E542)
020C:E523			loc_2412:
020C:E523  F6 C2 08				test	dl,8
020C:E526  74 1A				jz	loc_2414		; Jump if zero
020C:E528  80 E2 C0				and	dl,0C0h
020C:E52B  8A 44 02				mov	al,[si+2]
020C:E52E  24 C0				and	al,0C0h
020C:E530  3A C2				cmp	al,dl
020C:E532  75 4D				jne	loc_2418		; Jump if not equal
020C:E534  EB 0C				jmp	short loc_2414		; (E542)
020C:E536			loc_2413:
020C:E536  80 E2 F8				and	dl,0F8h
020C:E539  8A 44 02				mov	al,[si+2]
020C:E53C  24 F8				and	al,0F8h
020C:E53E  3A C2				cmp	al,dl
020C:E540  75 3F				jne	loc_2418		; Jump if not equal
020C:E542			loc_2414:
020C:E542  C6 06 1D5D 01			mov	byte ptr ds:[1D5Dh],1	; (6F63:1D5D=0Ch)
020C:E547  26: 8A 55 12				mov	dl,es:[di+12h]
020C:E54B			loc_2415:
020C:E54B  3A D3				cmp	dl,bl
020C:E54D  75 32				jne	loc_2418		; Jump if not equal
020C:E54F  26: 8A 45 0E				mov	al,es:[di+0Eh]
020C:E553  24 07				and	al,7
020C:E555  08 06 1D5C				or	byte ptr ds:[1D5Ch],al	; (6F63:1D5C=8)
020C:E559  22 06 1D5A				and	al,byte ptr ds:[1D5Ah]	; (6F63:1D5A=0)
020C:E55D  75 15				jnz	loc_2416		; Jump if not zero
020C:E55F  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020C:E563  23 06 1D48				and	ax,word ptr ds:[1D48h]	; (6F63:1D48=0CB00h)
020C:E567  74 18				jz	loc_2418		; Jump if zero
020C:E569  E8 CCA4				call	sub_125			; (B210)
020C:E56C  72 11				jc	loc_2417		; Jump if carry Set
020C:E56E  E8 89E7				call	sub_76			; (6F58)
020C:E571  E9 0097				jmp	loc_2424		; (E60B)
020C:E574			loc_2416:
020C:E574  E8 CC99				call	sub_125			; (B210)
020C:E577  72 06				jc	loc_2417		; Jump if carry Set
020C:E579  E8 89DC				call	sub_76			; (6F58)
020C:E57C  E9 0082				jmp	loc_2423		; (E601)
020C:E57F			loc_2417:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 469

020C:E57F  EB 1D				jmp	short loc_2419		; (E59E)
020C:E581			loc_2418:
020C:E581  32 C0				xor	al,al			; Zero register
020C:E583  A2 1D5D				mov	byte ptr ds:[1D5Dh],al	; (6F63:1D5D=0Ch)
020C:E586  A2 1D5E				mov	byte ptr ds:[1D5Eh],al	; (6F63:1D5E=2)
020C:E589  A2 1D65				mov	byte ptr ds:[1D65h],al	; (6F63:1D65=8)
020C:E58C  B8 1446				mov	ax,1446h
020C:E58F  2D 1430				sub	ax,1430h
020C:E592  03 F8				add	di,ax
020C:E594  8B 04				mov	ax,[si]
020C:E596  26: 3A 05				cmp	al,es:[di]
020C:E599  75 03				jne	loc_2419		; Jump if not equal
020C:E59B  E9 FEE4				jmp	loc_2401		; (E482)
020C:E59E			loc_2419:
020C:E59E  F6 06 1D5C 80			test	byte ptr ds:[1D5Ch],80h	; (6F63:1D5C=8)
020C:E5A3  74 24				jz	loc_2421		; Jump if zero
020C:E5A5  F6 06 1D5C 07			test	byte ptr ds:[1D5Ch],7	; (6F63:1D5C=8)
020C:E5AA  74 1D				jz	loc_2421		; Jump if zero
020C:E5AC  FE 06 1D5B				inc	byte ptr ds:[1D5Bh]	; (6F63:1D5B=0CDh)
020C:E5B0  80 3E 1D5B 32			cmp	byte ptr ds:[1D5Bh],32h	; (6F63:1D5B=0CDh) '2'
020C:E5B5  72 0D				jb	loc_2420		; Jump if below
020C:E5B7  C6 06 1D5A 01			mov	byte ptr ds:[1D5Ah],1	; (6F63:1D5A=0)
020C:E5BC  C6 06 1D5C 00			mov	byte ptr ds:[1D5Ch],0	; (6F63:1D5C=8)
020C:E5C1  E8 60C3				call	sub_37			; (4687)
020C:E5C4			loc_2420:
020C:E5C4  80 26 1D5C F8			and	byte ptr ds:[1D5Ch],0F8h	; (6F63:1D5C=8)
020C:E5C9			loc_2421:
020C:E5C9  F6 06 230A 7F			test	byte ptr ds:[230Ah],7Fh	; (6F63:230A=40h)
020C:E5CE  74 29				jz	loc_2422		; Jump if zero
020C:E5D0  A1 230B				mov	ax,word ptr ds:[230Bh]	; (6F63:230B=41h)
020C:E5D3  A3 215A				mov	word ptr ds:[215Ah],ax	; (6F63:215A=4140h)
020C:E5D6  C6 06 230A 00			mov	byte ptr ds:[230Ah],0	; (6F63:230A=40h)
020C:E5DB  C6 06 2342 00			mov	byte ptr ds:[2342h],0	; (6F63:2342=0)
020C:E5E0  C7 06 230B FFFF			mov	word ptr ds:[230Bh],0FFFFh	; (6F63:230B=41h)
020C:E5E6  C7 06 1CBF 0000			mov	word ptr ds:[1CBFh],0	; (6F63:1CBF=4140h)
020C:E5EC  C6 06 1D5D 00			mov	byte ptr ds:[1D5Dh],0	; (6F63:1D5D=0Ch)
020C:E5F1  C6 06 1D5E 00			mov	byte ptr ds:[1D5Eh],0	; (6F63:1D5E=2)
020C:E5F6  E8 7D77				call	sub_65			; (6370)
020C:E5F9			loc_2422:
020C:E5F9  E8 93F2				call	sub_90			; (79EE)
020C:E5FC  BF 6BC0				mov	di,6BC0h
020C:E5FF  EB 0E				jmp	short loc_2425		; (E60F)
020C:E601			loc_2423:
020C:E601  C6 06 1D5D 00			mov	byte ptr ds:[1D5Dh],0	; (6F63:1D5D=0Ch)
020C:E606  C6 06 1D5E 00			mov	byte ptr ds:[1D5Eh],0	; (6F63:1D5E=2)
020C:E60B			loc_2424:
020C:E60B  FE 06 1D20				inc	byte ptr ds:[1D20h]	; (6F63:1D20=91h)
020C:E60F			loc_2425:
020C:E60F  C7 06 178D 0013			mov	word ptr ds:[178Dh],13h	; (6F63:178D=2800h)
020C:E615  9A 1491:3388		;*		call	far ptr sub_190		;*(1491:3388)
020C:E615  9A					db	9Ah
020C:E616  3388 1491				dw	3388h, 1491h
020C:E61A  A1 2156				mov	ax,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:E61D  8B 1E 2154				mov	bx,word ptr ds:[2154h]	; (6F63:2154=93Eh)
020C:E621  57					push	di
020C:E622  3B 1E 2158				cmp	bx,word ptr ds:[2158h]	; (6F63:2158=0E247h)
020C:E626  75 04				jne	loc_2426		; Jump if not equal
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 470

020C:E628  0B DB				or	bx,bx			; Zero ?
020C:E62A  74 08				jz	loc_2427		; Jump if zero
020C:E62C			loc_2426:
020C:E62C  BA 0004				mov	dx,4
020C:E62F  E8 7EFE				call	sub_69			; (6530)
020C:E632  72 03				jc	loc_2428		; Jump if carry Set
020C:E634			loc_2427:
020C:E634  E9 0088				jmp	loc_2431		; (E6BF)
020C:E637			loc_2428:
020C:E637  A1 2FAA				mov	ax,word ptr ds:[2FAAh]	; (6F63:2FAA=0FFFFh)
020C:E63A  A3 2FAC				mov	word ptr ds:[2FACh],ax	; (6F63:2FAC=0FFFFh)
020C:E63D  A1 2FA8				mov	ax,word ptr ds:[2FA8h]	; (6F63:2FA8=0FFFFh)
020C:E640  A3 2FAA				mov	word ptr ds:[2FAAh],ax	; (6F63:2FAA=0FFFFh)
020C:E643  A1 2FA6				mov	ax,word ptr ds:[2FA6h]	; (6F63:2FA6=0FFFFh)
020C:E646  A3 2FA8				mov	word ptr ds:[2FA8h],ax	; (6F63:2FA8=0FFFFh)
020C:E649  26: 8B 45 02				mov	ax,es:[di+2]
020C:E64D  A3 2FA6				mov	word ptr ds:[2FA6h],ax	; (6F63:2FA6=0FFFFh)
020C:E650  26: 8A 45 04				mov	al,es:[di+4]
020C:E654  83 C7 09				add	di,9
020C:E657  24 07				and	al,7
020C:E659  75 55				jnz	loc_2429		; Jump if not zero
020C:E65B  53					push	bx
020C:E65C  51					push	cx
020C:E65D  B9 2314				mov	cx,2314h
020C:E660  BB 2334				mov	bx,2334h
020C:E663  2B D9				sub	bx,cx
020C:E665  03 DF				add	bx,di
020C:E667  A1 1D00				mov	ax,word ptr ds:[1D00h]	; (6F63:1D00=0C300h)
020C:E66A  26: 89 07				mov	es:[bx],ax
020C:E66D  BB 2332				mov	bx,2332h
020C:E670  2B D9				sub	bx,cx
020C:E672  03 DF				add	bx,di
020C:E674  A1 1D02				mov	ax,word ptr ds:[1D02h]	; (6F63:1D02=0C08h)
020C:E677  26: 89 07				mov	es:[bx],ax
020C:E67A  BB 2336				mov	bx,2336h
020C:E67D  2B D9				sub	bx,cx
020C:E67F  03 DF				add	bx,di
020C:E681  A1 1D04				mov	ax,word ptr ds:[1D04h]	; (6F63:1D04=6102h)
020C:E684  26: 89 07				mov	es:[bx],ax
020C:E687  BB 2338				mov	bx,2338h
020C:E68A  2B D9				sub	bx,cx
020C:E68C  03 DF				add	bx,di
020C:E68E  A1 1D06				mov	ax,word ptr ds:[1D06h]	; (6F63:1D06=40D7h)
020C:E691  26: 89 07				mov	es:[bx],ax
020C:E694  BB 233A				mov	bx,233Ah
020C:E697  2B D9				sub	bx,cx
020C:E699  03 DF				add	bx,di
020C:E69B  A1 1D0A				mov	ax,word ptr ds:[1D0Ah]	; (6F63:1D0A=8C4h)
020C:E69E  26: 89 07				mov	es:[bx],ax
020C:E6A1  BB 2330				mov	bx,2330h
020C:E6A4  2B D9				sub	bx,cx
020C:E6A6  03 DF				add	bx,di
020C:E6A8  A1 1D08				mov	ax,word ptr ds:[1D08h]	; (6F63:1D08=41h)
020C:E6AB  26: 89 07				mov	es:[bx],ax
020C:E6AE  59					pop	cx
020C:E6AF  5B					pop	bx
020C:E6B0			loc_2429:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 471

020C:E6B0  BB 2314				mov	bx,2314h
020C:E6B3  B9 0029				mov	cx,29h

020C:E6B6			locloop_2430:
020C:E6B6  26: 8A 05				mov	al,es:[di]
020C:E6B9  88 07				mov	[bx],al
020C:E6BB  47					inc	di
020C:E6BC  43					inc	bx
020C:E6BD  E2 F7				loop	locloop_2430		; Loop if cx > 0

020C:E6BF			loc_2431:
020C:E6BF  5F					pop	di
020C:E6C0			loc_2432:
020C:E6C0  89 3E 1D70				mov	word ptr ds:[1D70h],di	; (6F63:1D70=4902h)
020C:E6C4  8A 45 10				mov	al,[di+10h]
020C:E6C7  F6 45 15 01				test	byte ptr [di+15h],1
020C:E6CB  74 05				jz	loc_2433		; Jump if zero
020C:E6CD  A2 1D45				mov	byte ptr ds:[1D45h],al	; (6F63:1D45=0D7h)
020C:E6D0  EB 0C				jmp	short loc_2434		; (E6DE)
020C:E6D2			loc_2433:
020C:E6D2  A2 1D44				mov	byte ptr ds:[1D44h],al	; (6F63:1D44=0F1h)
020C:E6D5  3C 25				cmp	al,25h			; '%'
020C:E6D7  75 05				jne	loc_2434		; Jump if not equal
020C:E6D9  80 0E 3CFA 10			or	byte ptr ds:[3CFAh],10h	; (6F63:3CFA=0FFh)
020C:E6DE			loc_2434:
020C:E6DE  8B 45 0C				mov	ax,[di+0Ch]
020C:E6E1  A3 234A				mov	word ptr ds:[234Ah],ax	; (6F63:234A=41h)
020C:E6E4  8A 45 11				mov	al,[di+11h]
020C:E6E7  A2 2348				mov	byte ptr ds:[2348h],al	; (6F63:2348=0E5h)
020C:E6EA  8A 45 0F				mov	al,[di+0Fh]
020C:E6ED  A2 2344				mov	byte ptr ds:[2344h],al	; (6F63:2344=9)
020C:E6F0  8A 45 13				mov	al,[di+13h]
020C:E6F3  A2 2349				mov	byte ptr ds:[2349h],al	; (6F63:2349=40h)
020C:E6F6  8A 45 15				mov	al,[di+15h]
020C:E6F9  A2 1D47				mov	byte ptr ds:[1D47h],al	; (6F63:1D47=41h)
020C:E6FC  C7 06 178D 0014			mov	word ptr ds:[178Dh],14h	; (6F63:178D=2800h)
020C:E702  9A 1491:3388		;*		call	far ptr sub_190		;*(1491:3388)
020C:E702  9A					db	9Ah
020C:E703  3388 1491				dw	3388h, 1491h
020C:E707  E8 92E4				call	sub_90			; (79EE)
020C:E70A  BE 1960				mov	si,1960h
020C:E70D  80 3E 1D5D 01			cmp	byte ptr ds:[1D5Dh],1	; (6F63:1D5D=0Ch)
020C:E712  75 01				jne	loc_2435		; Jump if not equal
020C:E714  46					inc	si
020C:E715			loc_2435:
020C:E715  80 3E 420B 00			cmp	byte ptr ds:[420Bh],0	; (6F63:420B=0FFh)
020C:E71A  74 11				je	loc_2436		; Jump if equal
020C:E71C  FE 0E 420C				dec	byte ptr ds:[420Ch]	; (6F63:420C=0FFh)
020C:E720  75 0B				jnz	loc_2436		; Jump if not zero
020C:E722  8A 16 420B				mov	dl,byte ptr ds:[420Bh]	; (6F63:420B=0FFh)
020C:E726  88 16 420C				mov	byte ptr ds:[420Ch],dl	; (6F63:420C=0FFh)
020C:E72A  E8 6EA3				call	sub_40			; (55D0)
020C:E72D			loc_2436:
020C:E72D  C6 06 2346 01			mov	byte ptr ds:[2346h],1	; (6F63:2346=2)
020C:E732  BD 19FB				mov	bp,19FBh
020C:E735  8A 55 09				mov	dl,[di+9]
020C:E738  80 FA 00				cmp	dl,0
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 472

020C:E73B  74 5B				je	loc_2437		; Jump if equal
020C:E73D  8A 7D 0E				mov	bh,[di+0Eh]
020C:E740  C6 06 216E 00			mov	byte ptr ds:[216Eh],0	; (6F63:216E=0)
020C:E745  57					push	di
020C:E746  8D 7D 09				lea	di,[di+9]		; Load effective addr
020C:E749  E8 D718				call	sub_138			; (BE64)
020C:E74C  5F					pop	di
020C:E74D  FE 06 2346				inc	byte ptr ds:[2346h]	; (6F63:2346=2)
020C:E751  A2 1D21				mov	byte ptr ds:[1D21h],al	; (6F63:1D21=0D7h)
020C:E754  80 3E 1D65 00			cmp	byte ptr ds:[1D65h],0	; (6F63:1D65=8)
020C:E759  75 3D				jne	loc_2437		; Jump if not equal
020C:E75B  8A 55 0A				mov	dl,[di+0Ah]
020C:E75E  80 FA 00				cmp	dl,0
020C:E761  74 35				je	loc_2437		; Jump if equal
020C:E763  02 D6				add	dl,dh
020C:E765  8A 7D 0E				mov	bh,[di+0Eh]
020C:E768  57					push	di
020C:E769  8D 7D 0A				lea	di,[di+0Ah]		; Load effective addr
020C:E76C  E8 D6F5				call	sub_138			; (BE64)
020C:E76F  5F					pop	di
020C:E770  FE 06 2346				inc	byte ptr ds:[2346h]	; (6F63:2346=2)
020C:E774  A2 1D22				mov	byte ptr ds:[1D22h],al	; (6F63:1D22=40h)
020C:E777  8A 55 0B				mov	dl,[di+0Bh]
020C:E77A  80 FA 00				cmp	dl,0
020C:E77D  74 19				je	loc_2437		; Jump if equal
020C:E77F  02 D6				add	dl,dh
020C:E781  8A 7D 0E				mov	bh,[di+0Eh]
020C:E784  57					push	di
020C:E785  8D 7D 0B				lea	di,[di+0Bh]		; Load effective addr
020C:E788  02 16 1D5F				add	dl,byte ptr ds:[1D5Fh]	; (6F63:1D5F=39h)
020C:E78C  C6 06 1D5F 00			mov	byte ptr ds:[1D5Fh],0	; (6F63:1D5F=39h)
020C:E791  E8 D6D0				call	sub_138			; (BE64)
020C:E794  5F					pop	di
020C:E795  A2 1D23				mov	byte ptr ds:[1D23h],al	; (6F63:1D23=41h)
020C:E798			loc_2437:
020C:E798  80 3E 1D5D 01			cmp	byte ptr ds:[1D5Dh],1	; (6F63:1D5D=0Ch)
020C:E79D  75 0A				jne	loc_2438		; Jump if not equal
020C:E79F  4E					dec	si
020C:E7A0  FE 06 1D20				inc	byte ptr ds:[1D20h]	; (6F63:1D20=91h)
020C:E7A4  C6 06 1D5D 00			mov	byte ptr ds:[1D5Dh],0	; (6F63:1D5D=0Ch)
020C:E7A9			loc_2438:
020C:E7A9  A1 1D68				mov	ax,word ptr ds:[1D68h]	; (6F63:1D68=0D847h)
020C:E7AC  3D 0000				cmp	ax,0
020C:E7AF  77 13				ja	loc_2439		; Jump if above
020C:E7B1  B8 0001				mov	ax,1
020C:E7B4  02 06 1D20				add	al,byte ptr ds:[1D20h]	; (6F63:1D20=91h)
020C:E7B8  02 06 1D21				add	al,byte ptr ds:[1D21h]	; (6F63:1D21=0D7h)
020C:E7BC  02 06 1D22				add	al,byte ptr ds:[1D22h]	; (6F63:1D22=40h)
020C:E7C0  02 06 1D23				add	al,byte ptr ds:[1D23h]	; (6F63:1D23=41h)
020C:E7C4			loc_2439:
020C:E7C4  C7 06 178D 0015			mov	word ptr ds:[178Dh],15h	; (6F63:178D=2800h)
020C:E7CA  9A 1491:3388		;*		call	far ptr sub_190		;*(1491:3388)
020C:E7CA  9A					db	9Ah
020C:E7CB  3388 1491				dw	3388h, 1491h
020C:E7CF  8B DE				mov	bx,si
020C:E7D1  03 D8				add	bx,ax
020C:E7D3  53					push	bx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 473

020C:E7D4  A3 1D1C				mov	word ptr ds:[1D1Ch],ax	; (6F63:1D1C=8C6h)
020C:E7D7  8B C8				mov	cx,ax
020C:E7D9  8A 16 2348				mov	dl,byte ptr ds:[2348h]	; (6F63:2348=0E5h)
020C:E7DD  E8 2F00		;*		call	sub_22			;*(16E0)
020C:E7DD  E8 00 2F				db	0E8h, 00h, 2Fh
020C:E7E0  80 3E 1D44 56			cmp	byte ptr ds:[1D44h],56h	; (6F63:1D44=0F1h) 'V'
020C:E7E5  75 25				jne	loc_2441		; Jump if not equal
020C:E7E7  E8 9A72				call	sub_104			; (825C)
020C:E7EA  26: 80 7C 01 3F			cmp	byte ptr es:[si+1],3Fh	; '?'
020C:E7EF  75 07				jne	loc_2440		; Jump if not equal
020C:E7F1  83 06 1D1C 03			add	word ptr ds:[1D1Ch],3	; (6F63:1D1C=8C6h)
020C:E7F6  EB 14				jmp	short loc_2441		; (E80C)
020C:E7F8			loc_2440:
020C:E7F8  26: 80 7C 01 20			cmp	byte ptr es:[si+1],20h	; ' '
020C:E7FD  75 0D				jne	loc_2441		; Jump if not equal
020C:E7FF  F7 06 1F6E 0800			test	word ptr ds:[1F6Eh],800h	; (6F63:1F6E=908h)
020C:E805  74 05				jz	loc_2441		; Jump if zero
020C:E807  83 06 1D1C 04			add	word ptr ds:[1D1Ch],4	; (6F63:1D1C=8C6h)
020C:E80C			loc_2441:
020C:E80C  C7 06 178D 0018			mov	word ptr ds:[178Dh],18h	; (6F63:178D=2800h)
020C:E812  9A 1491:3388		;*		call	far ptr sub_190		;*(1491:3388)
020C:E812  9A					db	9Ah
020C:E813  3388 1491				dw	3388h, 1491h
020C:E817  5E					pop	si
020C:E818  80 3E 2348 05			cmp	byte ptr ds:[2348h],5	; (6F63:2348=0E5h)
020C:E81D  74 21				je	loc_2444		; Jump if equal
020C:E81F  80 3E 2348 0D			cmp	byte ptr ds:[2348h],0Dh	; (6F63:2348=0E5h)
020C:E824  77 07				ja	loc_2442		; Jump if above
020C:E826  80 3E 2348 08			cmp	byte ptr ds:[2348h],8	; (6F63:2348=0E5h)
020C:E82B  77 13				ja	loc_2444		; Jump if above
020C:E82D			loc_2442:
020C:E82D  80 3E 2348 33			cmp	byte ptr ds:[2348h],33h	; (6F63:2348=0E5h) '3'
020C:E832  77 07				ja	loc_2443		; Jump if above
020C:E834  80 3E 2348 30			cmp	byte ptr ds:[2348h],30h	; (6F63:2348=0E5h) '0'
020C:E839  73 05				jae	loc_2444		; Jump if above or =
020C:E83B			loc_2443:
020C:E83B  E8 CAF2				call	sub_126			; (B330)
020C:E83E  EB 07				jmp	short loc_2445		; (E847)
020C:E840			loc_2444:
020C:E840  A0 19BD				mov	al,byte ptr ds:[19BDh]	; (6F63:19BD=8)
020C:E843  08 06 3C04				or	byte ptr ds:[3C04h],al	; (6F63:3C04=0FFh)
020C:E847			loc_2445:
020C:E847  A1 215A				mov	ax,word ptr ds:[215Ah]	; (6F63:215A=4140h)
020C:E84A  03 06 1D1C				add	ax,word ptr ds:[1D1Ch]	; (6F63:1D1C=8C6h)
020C:E84E  72 24				jc	loc_2447		; Jump if carry Set
020C:E850  83 3E 1CFA 00			cmp	word ptr ds:[1CFAh],0	; (6F63:1CFA=20Ch)
020C:E855  74 1D				je	loc_2447		; Jump if equal
020C:E857  3B 06 1CFA				cmp	ax,word ptr ds:[1CFAh]	; (6F63:1CFA=20Ch)
020C:E85B  77 17				ja	loc_2447		; Jump if above
020C:E85D  75 0C				jnz	loc_2446		; Jump if not zero
020C:E85F  C7 06 1CFA 0000			mov	word ptr ds:[1CFAh],0	; (6F63:1CFA=20Ch)
020C:E865  C7 06 1CF8 0000			mov	word ptr ds:[1CF8h],0	; (6F63:1CF8=8C2h)
020C:E86B			loc_2446:
020C:E86B  A3 215A				mov	word ptr ds:[215Ah],ax	; (6F63:215A=4140h)
020C:E86E  E8 917D				call	sub_90			; (79EE)
020C:E871  E9 F77F				jmp	loc_2335		; (DFF3)
020C:E874			loc_2447:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 474

020C:E874  9A 1491:C638		;*		call	far ptr sub_272		;*(1491:C638)
020C:E874  9A					db	9Ah
020C:E875  C638 1491				dw	0C638h, 1491h
020C:E879  FE 06 1CD8				inc	byte ptr ds:[1CD8h]	; (6F63:1CD8=0FAh)
020C:E87D  A0 1CD8				mov	al,byte ptr ds:[1CD8h]	; (6F63:1CD8=0FAh)
020C:E880  3A 06 1CD9				cmp	al,byte ptr ds:[1CD9h]	; (6F63:1CD9=0D6h)
020C:E884  73 03				jae	loc_2448		; Jump if above or =
020C:E886  E9 F6CC				jmp	loc_2333		; (DF55)
020C:E889			loc_2448:
020C:E889  C7 06 178D 0020			mov	word ptr ds:[178Dh],20h	; (6F63:178D=2800h)
020C:E88F  9A 1491:3388		;*		call	far ptr sub_190		;*(1491:3388)
020C:E88F  9A					db	9Ah
020C:E890  3388 1491				dw	3388h, 1491h
020C:E894  FE 06 178A				inc	byte ptr ds:[178Ah]	; (6F63:178A=0CAh)
020C:E898  FE 0E 178B				dec	byte ptr ds:[178Bh]	; (6F63:178B=40h)
020C:E89C  80 3E 1795 01			cmp	byte ptr ds:[1795h],1	; (6F63:1795=41h)
020C:E8A1  74 07				je	loc_2449		; Jump if equal
020C:E8A3  B4 25				mov	ah,25h			; '%'
020C:E8A5  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:E8A5  9A					db	9Ah
020C:E8A6  2F70 1491				dw	2F70h, 1491h
020C:E8AA			loc_2449:
020C:E8AA  F7 06 2302 0200			test	word ptr ds:[2302h],200h	; (6F63:2302=41h)
020C:E8B0  75 03				jnz	loc_2450		; Jump if not zero
020C:E8B2  E8 8567				call	sub_73			; (6E1C)
020C:E8B5			loc_2450:
020C:E8B5  E8 C8E8				call	sub_124			; (B1A0)
020C:E8B8  80 3E 178F 0A			cmp	byte ptr ds:[178Fh],0Ah	; (6F63:178F=8)
020C:E8BD  72 10				jb	loc_2451		; Jump if below
020C:E8BF  80 3E 178B 02			cmp	byte ptr ds:[178Bh],2	; (6F63:178B=40h)
020C:E8C4  75 09				jne	loc_2451		; Jump if not equal
020C:E8C6  BA 8002				mov	dx,8002h
020C:E8C9  BB 8520				mov	bx,8520h
020C:E8CC  E8 3881		;*		call	sub_27			;*(2150)
020C:E8CC  E8 81 38				db	0E8h, 81h, 38h
020C:E8CF			loc_2451:
020C:E8CF  C7 06 178D 0021			mov	word ptr ds:[178Dh],21h	; (6F63:178D=2800h)
020C:E8D5  9A 1491:3388		;*		call	far ptr sub_190		;*(1491:3388)
020C:E8D5  9A					db	9Ah
020C:E8D6  3388 1491				dw	3388h, 1491h
020C:E8DA  A0 178A				mov	al,byte ptr ds:[178Ah]	; (6F63:178A=0CAh)
020C:E8DD  FE C0				inc	al
020C:E8DF  3A 06 178F				cmp	al,byte ptr ds:[178Fh]	; (6F63:178F=8)
020C:E8E3  72 10				jb	loc_2452		; Jump if below
020C:E8E5  B4 1F				mov	ah,1Fh
020C:E8E7  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:E8E7  9A					db	9Ah
020C:E8E8  2F70 1491				dw	2F70h, 1491h
020C:E8EC  BA 8007				mov	dx,8007h
020C:E8EF  BB B240				mov	bx,0B240h
020C:E8F2  E8 385B		;*		call	sub_27			;*(2150)
020C:E8F2  E8 5B 38				db	0E8h, 5Bh, 38h
020C:E8F5			loc_2452:
020C:E8F5  E8 90F6				call	sub_90			; (79EE)
020C:E8F8  BF 06AE				mov	di,6AEh
020C:E8FB  B0 20				mov	al,20h			; ' '
020C:E8FD  B9 0005				mov	cx,5
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 475

020C:E900  FC					cld				; Clear direction
020C:E901  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:E903  BF 074E				mov	di,74Eh
020C:E906  B9 0005				mov	cx,5
020C:E909  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:E90B  BF 06FE				mov	di,6FEh
020C:E90E  B9 0005				mov	cx,5
020C:E911  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:E913  E8 7406				call	sub_53			; (5D1C)
020C:E916  C7 06 178D 0022			mov	word ptr ds:[178Dh],22h	; (6F63:178D=2800h)
020C:E91C  9A 1491:3388		;*		call	far ptr sub_190		;*(1491:3388)
020C:E91C  9A					db	9Ah
020C:E91D  3388 1491				dw	3388h, 1491h
020C:E921  FE 06 178A				inc	byte ptr ds:[178Ah]	; (6F63:178A=0CAh)
020C:E925  A1 3D12				mov	ax,word ptr ds:[3D12h]	; (6F63:3D12=0FFFFh)
020C:E928  A3 3D18				mov	word ptr ds:[3D18h],ax	; (6F63:3D18=0FFFFh)
020C:E92B  A1 3D14				mov	ax,word ptr ds:[3D14h]	; (6F63:3D14=0FFFFh)
020C:E92E  A3 3D1A				mov	word ptr ds:[3D1Ah],ax	; (6F63:3D1A=0FFFFh)
020C:E931  C6 06 1CD8 00			mov	byte ptr ds:[1CD8h],0	; (6F63:1CD8=0FAh)
020C:E936  8A 1E 178A				mov	bl,byte ptr ds:[178Ah]	; (6F63:178A=0CAh)
020C:E93A  3A 1E 178F				cmp	bl,byte ptr ds:[178Fh]	; (6F63:178F=8)
020C:E93E  75 27				jne	loc_2453		; Jump if not equal
020C:E940  C6 06 1790 01			mov	byte ptr ds:[1790h],1	; (6F63:1790=0Ch)
020C:E945  C6 06 1D13 00			mov	byte ptr ds:[1D13h],0	; (6F63:1D13=0C5h)
020C:E94A  BA 8002				mov	dx,8002h
020C:E94D  BB 08B0				mov	bx,8B0h
020C:E950  E8 37FD		;*		call	sub_27			;*(2150)
020C:E950  E8 FD 37				db	0E8h,0FDh, 37h
020C:E953  F7 06 2302 0400			test	word ptr ds:[2302h],400h	; (6F63:2302=41h)
020C:E959  75 0C				jnz	loc_2453		; Jump if not zero
020C:E95B  BA 0002				mov	dx,2
020C:E95E  BB 7528				mov	bx,7528h
020C:E961  E8 37EC		;*		call	sub_27			;*(2150)
020C:E961  E8 EC 37				db	0E8h,0ECh, 37h
020C:E964  E8 54B9		;*		call	sub_35			;*(3E20)
020C:E964  E8 B9 54				db	0E8h,0B9h, 54h
020C:E967			loc_2453:
020C:E967  8A 1E 178A				mov	bl,byte ptr ds:[178Ah]	; (6F63:178A=0CAh)
020C:E96B  D0 EB				shr	bl,1			; Shift w/zeros fill
020C:E96D  80 C3 30				add	bl,30h			; '0'
020C:E970  E8 9075				call	sub_88			; (79E8)
020C:E973  26: 88 1E 021B			mov	byte ptr es:[21Bh],bl	; (E247:021B=0)
020C:E978  C7 06 215E FFFF			mov	word ptr ds:[215Eh],0FFFFh	; (6F63:215E=0C09h)
020C:E97E  E8 6C4F				call	sub_40			; (55D0)
020C:E981  A0 1CD8				mov	al,byte ptr ds:[1CD8h]	; (6F63:1CD8=0FAh)
020C:E984  B1 19				mov	cl,19h
020C:E986  F6 E1				mul	cl			; ax = reg * al
020C:E988  BE 0000				mov	si,0
020C:E98B  03 F0				add	si,ax
020C:E98D  E8 9052				call	sub_87			; (79E2)
020C:E990  BD 0222				mov	bp,222h
020C:E993  8A 0E 22F6				mov	cl,byte ptr ds:[22F6h]	; (6F63:22F6=36h)
020C:E997  C6 06 22F6 00			mov	byte ptr ds:[22F6h],0	; (6F63:22F6=36h)
020C:E99C  26: 8B 44 0C				mov	ax,es:[si+0Ch]
020C:E9A0  E8 9027				call	sub_83			; (79CA)
020C:E9A3  C7 06 0223 2020			mov	word ptr ds:[223h],2020h	; (6F63:0223=41h)
020C:E9A9  9A 1491:7E54		;*		call	far ptr sub_244		;*(1491:7E54)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 476

020C:E9A9  9A					db	9Ah
020C:E9AA  7E54 1491				dw	7E54h, 1491h
020C:E9AE  E8 901F				call	sub_84			; (79D0)
020C:E9B1  88 0E 22F6				mov	byte ptr ds:[22F6h],cl	; (6F63:22F6=36h)
020C:E9B5  C7 06 4D67 2020			mov	word ptr ds:[4D67h],2020h	; (6F63:4D67=0FFFFh)
020C:E9BB  BD 4D66				mov	bp,4D66h
020C:E9BE  26: 8B 44 0C				mov	ax,es:[si+0Ch]
020C:E9C2  9A 1491:7E54		;*		call	far ptr sub_244		;*(1491:7E54)
020C:E9C2  9A					db	9Ah
020C:E9C3  7E54 1491				dw	7E54h, 1491h
020C:E9C7  A1 4D66				mov	ax,word ptr ds:[4D66h]	; (6F63:4D66=0FFFFh)
020C:E9CA  8A 1E 4D68				mov	bl,byte ptr ds:[4D68h]	; (6F63:4D68=0FFh)
020C:E9CE  A3 4D51				mov	word ptr ds:[4D51h],ax	; (6F63:4D51=0FFFFh)
020C:E9D1  88 1E 4D53				mov	byte ptr ds:[4D53h],bl	; (6F63:4D53=0FFh)
020C:E9D5  A3			data_912	db	0A3h
020C:E9D6  A3			data_913	db	0A3h
020C:E9D7  4D					dec	bp
020C:E9D8  88 1E 4DA5				mov	byte ptr ds:[4DA5h],bl	; (6F63:4DA5=0FFh)
020C:E9DC  A3 4ED8				mov	word ptr ds:[4ED8h],ax	; (6F63:4ED8=0FFFFh)
020C:E9DF  88 1E 4EDA				mov	byte ptr ds:[4EDAh],bl	; (6F63:4EDA=0FFh)
020C:E9E3  A3 57A3				mov	word ptr ds:[57A3h],ax	; (6F63:57A3=0FFFFh)
020C:E9E6  88 1E 57A5				mov	byte ptr ds:[57A5h],bl	; (6F63:57A5=0FFh)
020C:E9EA  A3 578E				mov	word ptr ds:[578Eh],ax	; (6F63:578E=0FFFFh)
020C:E9ED  88 1E 5790				mov	byte ptr ds:[5790h],bl	; (6F63:5790=0FFh)
020C:E9F1  F6 06 22FD 01			test	byte ptr ds:[22FDh],1	; (6F63:22FD=0Ch)
020C:E9F6  74 30				jz	loc_2454		; Jump if zero
020C:E9F8  80 3E 22FF 00			cmp	byte ptr ds:[22FFh],0	; (6F63:22FF=42h)
020C:E9FD  74 29				je	loc_2454		; Jump if equal
020C:E9FF  26: 8B 04				mov	ax,es:[si]
020C:EA02  BD 4D5A				mov	bp,4D5Ah
020C:EA05  3E: C6 46 00 28			mov	byte ptr ds:[bp],28h	; '('
020C:EA0A  45					inc	bp
020C:EA0B  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:EA0B  9A					db	9Ah
020C:EA0C  0294 1491				dw	294h, 1491h
020C:EA10  3E: C6 46 00 29			mov	byte ptr ds:[bp],29h	; ')'
020C:EA15  BD 5797				mov	bp,5797h
020C:EA18  3E: C6 46 00 28			mov	byte ptr ds:[bp],28h	; '('
020C:EA1D  45					inc	bp
020C:EA1E  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:EA1E  9A					db	9Ah
020C:EA1F  0294 1491				dw	294h, 1491h
020C:EA23  3E: C6 46 00 29			mov	byte ptr ds:[bp],29h	; ')'
020C:EA28			loc_2454:
020C:EA28  80 26 2308 FB			and	byte ptr ds:[2308h],0FBh	; (6F63:2308=4Bh)
020C:EA2D  26: F6 44 0E 40			test	byte ptr es:[si+0Eh],40h	; '@'
020C:EA32  74 05				jz	loc_2455		; Jump if zero
020C:EA34  80 0E 2308 04			or	byte ptr ds:[2308h],4	; (6F63:2308=4Bh)
020C:EA39			loc_2455:
020C:EA39  26: 8B 44 0F				mov	ax,es:[si+0Fh]
020C:EA3D  2E: A3 3F8E				mov	cs:data_666,ax		; (020C:3F8E=4075h)
020C:EA41  26: 8B 44 11				mov	ax,es:[si+11h]
020C:EA45  2E: A3 3F8A				mov	cs:data_664,ax		; (020C:3F8A=0C4FEh)
020C:EA49  26: 8B 44 13				mov	ax,es:[si+13h]
020C:EA4D  2E: A3 3F8C				mov	cs:data_665,ax		; (020C:3F8C=503Ch)
020C:EA51  A0 420B				mov	al,byte ptr ds:[420Bh]	; (6F63:420B=0FFh)
020C:EA54  A2 420C				mov	byte ptr ds:[420Ch],al	; (6F63:420C=0FFh)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 477

020C:EA57  B4 07				mov	ah,7
020C:EA59  9A 1491:2F70		;*		call	far ptr sub_181		;*(1491:2F70)
020C:EA59  9A					db	9Ah
020C:EA5A  2F70 1491				dw	2F70h, 1491h
020C:EA5E  E8 8F8D				call	sub_90			; (79EE)
020C:EA61  80 3E 1CD8 00			cmp	byte ptr ds:[1CD8h],0	; (6F63:1CD8=0FAh)
020C:EA66  74 02				je	loc_2456		; Jump if equal
020C:EA68  EB 05				jmp	short loc_2457		; (EA6F)
020C:EA6A			loc_2456:
020C:EA6A  9A 1491:A6A0		;*		call	far ptr sub_263		;*(1491:A6A0)
020C:EA6A  9A					db	9Ah
020C:EA6B  A6A0 1491				dw	0A6A0h, 1491h
020C:EA6F			loc_2457:
020C:EA6F  80 3E 1790 01			cmp	byte ptr ds:[1790h],1	; (6F63:1790=0Ch)
020C:EA74  75 48				jne	loc_2462		; Jump if not equal
020C:EA76  80 3E 1CD8 00			cmp	byte ptr ds:[1CD8h],0	; (6F63:1CD8=0FAh)
020C:EA7B  75 41				jne	loc_2462		; Jump if not equal
020C:EA7D  B4 3C				mov	ah,3Ch			; '<'
020C:EA7F  BA 1EFD				mov	dx,1EFDh
020C:EA82  80 3E 1EFE 3A			cmp	byte ptr ds:[1EFEh],3Ah	; (6F63:1EFE=0DBh) ':'
020C:EA87  74 03				je	loc_2458		; Jump if equal
020C:EA89  BA 1EFB				mov	dx,1EFBh
020C:EA8C			loc_2458:
020C:EA8C  B9 0000				mov	cx,0
020C:EA8F  CD 21				int	21h			; DOS Services  ah=function 3Ch
										;  create/truncate file @ ds:dx
020C:EA91  73 03				jnc	loc_2459		; Jump if carry=0
020C:EA93  E9 8901				jmp	loc_1081		; (7397)
020C:EA96			loc_2459:
020C:EA96  A3 1F68				mov	word ptr ds:[1F68h],ax	; (6F63:1F68=2402h)
020C:EA99  80 3E 3256 00			cmp	byte ptr ds:[3256h],0	; (6F63:3256=0FFh)
020C:EA9E  74 1E				je	loc_2462		; Jump if equal
020C:EAA0  B4 3D				mov	ah,3Dh			; '='
020C:EAA2  B0 00				mov	al,0
020C:EAA4  BA 32A3				mov	dx,32A3h
020C:EAA7  80 3E 32A6 3A			cmp	byte ptr ds:[32A6h],3Ah	; (6F63:32A6=0FFh) ':'
020C:EAAC  75 03				jne	loc_2460		; Jump if not equal
020C:EAAE  BA 32A5				mov	dx,32A5h
020C:EAB1			loc_2460:
020C:EAB1  B9 0000				mov	cx,0
020C:EAB4  CD 21				int	21h			; DOS Services  ah=function 3Dh
										;  open file, al=mode,name@ds:dx
020C:EAB6  73 03				jnc	loc_2461		; Jump if carry=0
020C:EAB8  E9 88E6				jmp	loc_1082		; (73A1)
020C:EABB			loc_2461:
020C:EABB  A3 3009				mov	word ptr ds:[3009h],ax	; (6F63:3009=0FFFFh)
020C:EABE			loc_2462:
020C:EABE  E8 8F2D				call	sub_90			; (79EE)
020C:EAC1  80 3E 1790 01			cmp	byte ptr ds:[1790h],1	; (6F63:1790=0Ch)
020C:EAC6  74 02				je	loc_2463		; Jump if equal
020C:EAC8  EB 05				jmp	short loc_2464		; (EACF)
020C:EACA			loc_2463:
020C:EACA  9A 1491:A7AC		;*		call	far ptr sub_264		;*(1491:A7AC)
020C:EACA  9A					db	9Ah
020C:EACB  A7AC 1491				dw	0A7ACh, 1491h
020C:EACF			loc_2464:
020C:EACF  C7 06 178D 0023			mov	word ptr ds:[178Dh],23h	; (6F63:178D=2800h)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 478

020C:EAD5  9A 1491:3388		;*		call	far ptr sub_190		;*(1491:3388)
020C:EAD5  9A					db	9Ah
020C:EAD6  3388 1491				dw	3388h, 1491h
020C:EADA  E8 8F05				call	sub_87			; (79E2)
020C:EADD  9A 1491:B0B4		;*		call	far ptr sub_267		;*(1491:B0B4)
020C:EADD  9A					db	9Ah
020C:EADE  B0B4 1491				dw	0B0B4h, 1491h
020C:EAE2  9A 1491:0254		;*		call	far ptr sub_155		;*(1491:0254)
020C:EAE2  9A					db	9Ah
020C:EAE3  0254 1491				dw	254h, 1491h
020C:EAE7  E8 8F04				call	sub_90			; (79EE)
020C:EAEA  33 C0				xor	ax,ax			; Zero register
020C:EAEC  A3 1D25				mov	word ptr ds:[1D25h],ax	; (6F63:1D25=8C7h)
020C:EAEF  A3 1D27				mov	word ptr ds:[1D27h],ax	; (6F63:1D27=20Ch)
020C:EAF2  A2 1D29				mov	byte ptr ds:[1D29h],al	; (6F63:1D29=0B8h)
020C:EAF5  A2 325A				mov	byte ptr ds:[325Ah],al	; (6F63:325A=0FFh)
020C:EAF8  A2 1D44				mov	byte ptr ds:[1D44h],al	; (6F63:1D44=0F1h)
020C:EAFB  A2 1D45				mov	byte ptr ds:[1D45h],al	; (6F63:1D45=0D7h)
020C:EAFE  C7 06 2FA6 FFFF			mov	word ptr ds:[2FA6h],0FFFFh	; (6F63:2FA6=0FFFFh)
020C:EB04  C7 06 214F FFFF			mov	word ptr ds:[214Fh],0FFFFh	; (6F63:214F=0E239h)
020C:EB0A  B2 FF				mov	dl,0FFh
020C:EB0C  E8 2BD1		;*		call	sub_22			;*(16E0)
020C:EB0C  E8 D1 2B				db	0E8h,0D1h, 2Bh
020C:EB0F  83 3E 46CE 00			cmp	word ptr ds:[46CEh],0	; (6F63:46CE=0FFFFh)
020C:EB14  75 72				jne	loc_2467		; Jump if not equal
020C:EB16  C6 06 22B7 00			mov	byte ptr ds:[22B7h],0	; (6F63:22B7=0EAh)
020C:EB1B  C6 06 216F 00			mov	byte ptr ds:[216Fh],0	; (6F63:216F=41h)
020C:EB20  80 3E 1F6D 01			cmp	byte ptr ds:[1F6Dh],1	; (6F63:1F6D=0)
020C:EB25  74 61				je	loc_2467		; Jump if equal
020C:EB27  80 3E 1CDE 01			cmp	byte ptr ds:[1CDEh],1	; (6F63:1CDE=8)
020C:EB2C  74 5A				je	loc_2467		; Jump if equal
020C:EB2E  77 42				ja	loc_2465		; Jump if above
020C:EB30  A1 2156				mov	ax,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:EB33  8B 1E 2154				mov	bx,word ptr ds:[2154h]	; (6F63:2154=93Eh)
020C:EB37  BA 0004				mov	dx,4
020C:EB3A  E8 79F3				call	sub_69			; (6530)
020C:EB3D  72 49				jc	loc_2467		; Jump if carry Set
020C:EB3F  BA 0001				mov	dx,1
020C:EB42  C6 06 3C07 00			mov	byte ptr ds:[3C07h],0	; (6F63:3C07=0FFh)
020C:EB47  E8 79E6				call	sub_69			; (6530)
020C:EB4A  72 3C				jc	loc_2467		; Jump if carry Set
020C:EB4C  BA 0002				mov	dx,2
020C:EB4F  C6 06 4568 03			mov	byte ptr ds:[4568h],3	; (6F63:4568=0FFh)
020C:EB54  E8 79D9				call	sub_69			; (6530)
020C:EB57  72 2A				jc	loc_2466		; Jump if carry Set
020C:EB59  C6 06 4568 00			mov	byte ptr ds:[4568h],0	; (6F63:4568=0FFh)
020C:EB5E  C7 06 1D1C 0000			mov	word ptr ds:[1D1Ch],0	; (6F63:1D1C=8C6h)
020C:EB64  9A 1491:4EA8		;*		call	far ptr sub_203		;*(1491:4EA8)
020C:EB64  9A					db	9Ah
020C:EB65  4EA8 1491				dw	4EA8h, 1491h
020C:EB69  73 1D				jnc	loc_2467		; Jump if carry=0
020C:EB6B  C6 06 4568 02			mov	byte ptr ds:[4568h],2	; (6F63:4568=0FFh)
020C:EB70  EB 11				jmp	short loc_2466		; (EB83)
020C:EB72			loc_2465:
020C:EB72  C6 06 4568 01			mov	byte ptr ds:[4568h],1	; (6F63:4568=0FFh)
020C:EB77  80 3E 1CDE 03			cmp	byte ptr ds:[1CDEh],3	; (6F63:1CDE=8)
020C:EB7C  75 05				jne	loc_2466		; Jump if not equal
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 479

020C:EB7E  C6 06 4568 0C			mov	byte ptr ds:[4568h],0Ch	; (6F63:4568=0FFh)
020C:EB83			loc_2466:
020C:EB83  C6 06 216F 05			mov	byte ptr ds:[216Fh],5	; (6F63:216F=41h)
020C:EB88			loc_2467:
020C:EB88  E8 C7A5				call	sub_126			; (B330)
020C:EB8B  9A 1491:8990		;*		call	far ptr sub_256		;*(1491:8990)
020C:EB8B  9A					db	9Ah
020C:EB8C  8990 1491				dw	8990h, 1491h
020C:EB90  C6 06 1D62 00			mov	byte ptr ds:[1D62h],0	; (6F63:1D62=41h)
020C:EB95  F6 06 230A 7F			test	byte ptr ds:[230Ah],7Fh	; (6F63:230A=40h)
020C:EB9A  75 18				jnz	loc_2468		; Jump if not zero
020C:EB9C  2E: C6 06 E9D3 90			mov	byte ptr cs:[0E9D3h],90h	; (020C:E9D3=53h)
020C:EBA2  2E: C6 06 E9D4 90			mov	byte ptr cs:[0E9D4h],90h	; (020C:E9D4=4Dh)
020C:EBA8  2E: C6 06 E9D5 90			mov	cs:data_912,90h		; (020C:E9D5=0A3h)
020C:EBAE  2E: C6 06 E9D6 90			mov	cs:data_913,90h		; (020C:E9D6=0A3h)
020C:EBB4			loc_2468:
020C:EBB4  9A 1491:6B60		;*		call	far ptr sub_224		;*(1491:6B60)
020C:EBB4  9A					db	9Ah
020C:EBB5  6B60 1491				dw	6B60h, 1491h
020C:EBB9  9A 1491:6BF8		;*		call	far ptr sub_227		;*(1491:6BF8)
020C:EBB9  9A					db	9Ah
020C:EBBA  6BF8 1491				dw	6BF8h, 1491h
020C:EBBE  C7 06 4705 FFFF			mov	word ptr ds:[4705h],0FFFFh	; (6F63:4705=0FFFFh)
020C:EBC4  C6 06 4725 00			mov	byte ptr ds:[4725h],0	; (6F63:4725=0FFh)
020C:EBC9  83 3E 46CE 00			cmp	word ptr ds:[46CEh],0	; (6F63:46CE=0FFFFh)
020C:EBCE  75 07				jne	loc_2469		; Jump if not equal
020C:EBD0  9A 1491:8388		;*		call	far ptr sub_249		;*(1491:8388)
020C:EBD0  9A					db	9Ah
020C:EBD1  8388 1491				dw	8388h, 1491h
020C:EBD5  EB 06				jmp	short loc_2470		; (EBDD)
020C:EBD7			loc_2469:
020C:EBD7  A1 2156				mov	ax,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:EBDA  A3 22B8				mov	word ptr ds:[22B8h],ax	; (6F63:22B8=40E4h)
020C:EBDD			loc_2470:
020C:EBDD  C7 06 46CE 0000			mov	word ptr ds:[46CEh],0	; (6F63:46CE=0FFFFh)
020C:EBE3  F6 06 1CE1 40			test	byte ptr ds:[1CE1h],40h	; (6F63:1CE1=2Ah) '@'
020C:EBE8  74 03				jz	loc_2471		; Jump if zero
020C:EBEA  E9 27DC		;*		jmp	loc_135			;*(13C9)
020C:EBEA  E9 DC 27				db	0E9h,0DCh, 27h
020C:EBED			loc_2471:
020C:EBED  9A 1491:C61C		;*		call	far ptr sub_271		;*(1491:C61C)
020C:EBED  9A					db	9Ah
020C:EBEE  C61C 1491				dw	0C61Ch, 1491h
020C:EBF2  2E: 80 3E 00C8 01			cmp	byte ptr cs:[0C8h],1	; (020C:00C8=6)
020C:EBF8  74 26				je	loc_2473		; Jump if equal
020C:EBFA  B4 0B				mov	ah,0Bh
020C:EBFC  CD 21				int	21h			; DOS Services  ah=function 0Bh
										;  if keybd char available,al=FF
020C:EBFE  0A C0				or	al,al			; Zero ?
020C:EC00  74 2F				jz	loc_2475		; Jump if zero
020C:EC02  9A 1491:0800		;*		call	far ptr sub_163		;*(1491:0800)
020C:EC02  9A					db	9Ah
020C:EC03  0800 1491				dw	800h, 1491h
020C:EC07  3C 1B				cmp	al,1Bh
020C:EC09  74 15				je	loc_2473		; Jump if equal
020C:EC0B  0C 20				or	al,20h			; ' '
020C:EC0D  3C 71				cmp	al,71h			; 'q'
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 480

020C:EC0F  74 0F				je	loc_2473		; Jump if equal
020C:EC11  3C 76				cmp	al,76h			; 'v'
020C:EC13  75 05				jne	loc_2472		; Jump if not equal
020C:EC15  9A 1491:C778		;*		call	far ptr sub_274		;*(1491:C778)
020C:EC15  9A					db	9Ah
020C:EC16  C778 1491				dw	0C778h, 1491h
020C:EC1A			loc_2472:
020C:EC1A  3C 6A				cmp	al,6Ah			; 'j'
020C:EC1C  74 05				je	loc_2474		; Jump if equal
020C:EC1E  EB 11				jmp	short loc_2475		; (EC31)
020C:EC20			loc_2473:
020C:EC20  E9 880A				jmp	loc_1084		; (742D)
020C:EC23			loc_2474:
020C:EC23  A1 2302				mov	ax,word ptr ds:[2302h]	; (6F63:2302=41h)
020C:EC26  8B 1E 2304				mov	bx,word ptr ds:[2304h]	; (6F63:2304=96Eh)
020C:EC2A  A3 2304				mov	word ptr ds:[2304h],ax	; (6F63:2304=96Eh)
020C:EC2D  89 1E 2302				mov	word ptr ds:[2302h],bx	; (6F63:2302=41h)
020C:EC31			loc_2475:
020C:EC31  A1 3D16				mov	ax,word ptr ds:[3D16h]	; (6F63:3D16=0FFFFh)
020C:EC34  21 06 3D18				and	word ptr ds:[3D18h],ax	; (6F63:3D18=0FFFFh)
020C:EC38  C7 06 3D16 FFFF			mov	word ptr ds:[3D16h],0FFFFh	; (6F63:3D16=0FFFFh)
020C:EC3E  9A 1491:6BB8		;*		call	far ptr sub_226		;*(1491:6BB8)
020C:EC3E  9A					db	9Ah
020C:EC3F  6BB8 1491				dw	6BB8h, 1491h
020C:EC43  33 C0				xor	ax,ax			; Zero register
020C:EC45  A2 1D44				mov	byte ptr ds:[1D44h],al	; (6F63:1D44=0F1h)
020C:EC48  A2 1D45				mov	byte ptr ds:[1D45h],al	; (6F63:1D45=0D7h)
020C:EC4B  A2 1D46				mov	byte ptr ds:[1D46h],al	; (6F63:1D46=40h)
020C:EC4E  A2 4568				mov	byte ptr ds:[4568h],al	; (6F63:4568=0FFh)
020C:EC51  A2 2176				mov	byte ptr ds:[2176h],al	; (6F63:2176=41h)
020C:EC54  A3 2177				mov	word ptr ds:[2177h],ax	; (6F63:2177=42FFh)
020C:EC57  A3 2179				mov	word ptr ds:[2179h],ax	; (6F63:2179=0C09h)
020C:EC5A  80 3E 325A 01			cmp	byte ptr ds:[325Ah],1	; (6F63:325A=0FFh)
020C:EC5F  74 05				je	loc_2476		; Jump if equal
020C:EC61  C6 06 3259 04			mov	byte ptr ds:[3259h],4	; (6F63:3259=0FFh)
020C:EC66			loc_2476:
020C:EC66  F6 06 230A 7F			test	byte ptr ds:[230Ah],7Fh	; (6F63:230A=40h)
020C:EC6B  75 1D				jnz	loc_2477		; Jump if not zero
020C:EC6D  A2 3CFA				mov	byte ptr ds:[3CFAh],al	; (6F63:3CFA=0FFh)
020C:EC70  A2 3C08				mov	byte ptr ds:[3C08h],al	; (6F63:3C08=0FFh)
020C:EC73  A2 2173				mov	byte ptr ds:[2173h],al	; (6F63:2173=5Dh)
020C:EC76  A2 22F5				mov	byte ptr ds:[22F5h],al	; (6F63:22F5=2)
020C:EC79  A2 3D06				mov	byte ptr ds:[3D06h],al	; (6F63:3D06=0FFh)
020C:EC7C  A2 3D05				mov	byte ptr ds:[3D05h],al	; (6F63:3D05=0FFh)
020C:EC7F  A2 1D65				mov	byte ptr ds:[1D65h],al	; (6F63:1D65=8)
020C:EC82  A2 1701				mov	byte ptr ds:[1701h],al	; (6F63:1701=2)
020C:EC85  C6 06 1D62 00			mov	byte ptr ds:[1D62h],0	; (6F63:1D62=41h)
020C:EC8A			loc_2477:
020C:EC8A  E8 76E3				call	sub_65			; (6370)
020C:EC8D  80 3E 3D25 FE			cmp	byte ptr ds:[3D25h],0FEh	; (6F63:3D25=0FFh)
020C:EC92  73 1B				jae	loc_2479		; Jump if above or =
020C:EC94  33 DB				xor	bx,bx			; Zero register
020C:EC96  FE 0E 3D25				dec	byte ptr ds:[3D25h]	; (6F63:3D25=0FFh)
020C:EC9A  74 0B				jz	loc_2478		; Jump if zero
020C:EC9C  78 11				js	loc_2479		; Jump if sign=1
020C:EC9E  8A 26 3D21				mov	ah,byte ptr ds:[3D21h]	; (6F63:3D21=0FFh)
020C:ECA2  88			data_917	db	88h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 481

020C:ECA3  26					db	26h
020C:ECA4  60					db	60h
020C:ECA5  19 43 8A				sbb	[bp+di-76h],ax
020C:ECA8  26: 22 3D				and	bh,es:[di]
020C:ECAB  88 A7 1960				mov	byte ptr ds:[1960h][bx],ah	; (6F63:1960=41h)
020C:ECAF			loc_2479:
020C:ECAF  80 3E 1790 01			cmp	byte ptr ds:[1790h],1	; (6F63:1790=0Ch)
020C:ECB4  75 27				jne	loc_2480		; Jump if not equal
020C:ECB6  BF 1F88				mov	di,1F88h
020C:ECB9  B0 20				mov	al,20h			; ' '
020C:ECBB  B9 1A69				mov	cx,1A69h
020C:ECBE  81 E9 19B3				sub	cx,19B3h
020C:ECC2  FC					cld				; Clear direction
020C:ECC3  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:ECC5  9A 1491:3820		;*		call	far ptr sub_193		;*(1491:3820)
020C:ECC5  9A					db	9Ah
020C:ECC6  3820 1491				dw	3820h, 1491h
020C:ECCA  BD 19B3				mov	bp,19B3h
020C:ECCD  BE 2F0B				mov	si,2F0Bh
020C:ECD0  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:ECD0  9A					db	9Ah
020C:ECD1  67E0 1491				dw	67E0h, 1491h
020C:ECD5  A1 2156				mov	ax,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:ECD8  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:ECD8  9A					db	9Ah
020C:ECD9  0294 1491				dw	294h, 1491h
020C:ECDD			loc_2480:
020C:ECDD  E8 7188				call	sub_54			; (5E68)
020C:ECE0  80 3E 3D25 01			cmp	byte ptr ds:[3D25h],1	; (6F63:3D25=0FFh)
020C:ECE5  75 03				jne	loc_2481		; Jump if not equal
020C:ECE7  E9 0DC1				jmp	loc_2648		; (FAAB)
020C:ECEA			loc_2481:
020C:ECEA  80 3E 1CDE 01			cmp	byte ptr ds:[1CDEh],1	; (6F63:1CDE=8)
020C:ECEF  76 03				jbe	loc_2482		; Jump if below or =
020C:ECF1  E9 0440				jmp	loc_2525		; (F134)
020C:ECF4			loc_2482:
020C:ECF4  C7 06 178D 0024			mov	word ptr ds:[178Dh],24h	; (6F63:178D=2800h)
020C:ECFA  9A 1491:3388		;*		call	far ptr sub_190		;*(1491:3388)
020C:ECFA  9A					db	9Ah
020C:ECFB  3388 1491				dw	3388h, 1491h
020C:ECFF  A1 2156				mov	ax,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:ED02  8B 1E 2154				mov	bx,word ptr ds:[2154h]	; (6F63:2154=93Eh)
020C:ED06  83 FB 01				cmp	bx,1
020C:ED09  75 05				jne	loc_2483		; Jump if not equal
020C:ED0B  3D 03FF				cmp	ax,3FFh
020C:ED0E  72 08				jb	loc_2484		; Jump if below
020C:ED10			loc_2483:
020C:ED10  BA 0004				mov	dx,4
020C:ED13  E8 781A				call	sub_69			; (6530)
020C:ED16  72 03				jc	loc_2485		; Jump if carry Set
020C:ED18			loc_2484:
020C:ED18  E9 0419				jmp	loc_2525		; (F134)
020C:ED1B			loc_2485:
020C:ED1B  C7 06 472B 0000			mov	word ptr ds:[472Bh],0	; (6F63:472B=0FFFFh)
020C:ED21  9A 1491:8BC4		;*		call	far ptr sub_258		;*(1491:8BC4)
020C:ED21  9A					db	9Ah
020C:ED22  8BC4 1491				dw	8BC4h, 1491h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 482

020C:ED26  B8 0004				mov	ax,4
020C:ED29  26: F6 45 04 80			test	byte ptr es:[di+4],80h
020C:ED2E  74 03				jz	loc_2486		; Jump if zero
020C:ED30  05 0002				add	ax,2
020C:ED33			loc_2486:
020C:ED33  F6 06 2308 04			test	byte ptr ds:[2308h],4	; (6F63:2308=4Bh)
020C:ED38  74 03				jz	loc_2487		; Jump if zero
020C:ED3A  05 0004				add	ax,4
020C:ED3D			loc_2487:
020C:ED3D  F7 06 3D1D 0100			test	word ptr ds:[3D1Dh],100h	; (6F63:3D1D=0FFFFh)
020C:ED43  74 14				jz	loc_2489		; Jump if zero
020C:ED45  26: 8B 5D 3B				mov	bx,es:[di+3Bh]
020C:ED49  F6 06 2308 04			test	byte ptr ds:[2308h],4	; (6F63:2308=4Bh)
020C:ED4E  74 07				jz	loc_2488		; Jump if zero
020C:ED50  2B D8				sub	bx,ax
020C:ED52  83 E3 FC				and	bx,0FFFCh
020C:ED55  03 D8				add	bx,ax
020C:ED57			loc_2488:
020C:ED57  8B C3				mov	ax,bx
020C:ED59			loc_2489:
020C:ED59  A3 4703				mov	word ptr ds:[4703h],ax	; (6F63:4703=0FFFFh)
020C:ED5C  80 0E 1D29 10			or	byte ptr ds:[1D29h],10h	; (6F63:1D29=0B8h)
020C:ED61  C6 06 2151 00			mov	byte ptr ds:[2151h],0	; (6F63:2151=40h)
020C:ED66  26: F6 45 05 02			test	byte ptr es:[di+5],2
020C:ED6B  75 0F				jnz	loc_2490		; Jump if not zero
020C:ED6D  26: F6 45 05 01			test	byte ptr es:[di+5],1
020C:ED72  74 0D				jz	loc_2491		; Jump if zero
020C:ED74  26: F7 45 3D 8000			test	word ptr es:[di+3Dh],8000h
020C:ED7A  74 05				jz	loc_2491		; Jump if zero
020C:ED7C			loc_2490:
020C:ED7C  C6 06 2151 01			mov	byte ptr ds:[2151h],1	; (6F63:2151=40h)
020C:ED81			loc_2491:
020C:ED81  80 3E 1790 01			cmp	byte ptr ds:[1790h],1	; (6F63:1790=0Ch)
020C:ED86  75 39				jne	loc_2493		; Jump if not equal
020C:ED88  C6 06 2170 00			mov	byte ptr ds:[2170h],0	; (6F63:2170=9)
020C:ED8D  26: 8A 45 32				mov	al,es:[di+32h]
020C:ED91  A2 2F9C				mov	byte ptr ds:[2F9Ch],al	; (6F63:2F9C=0FFh)
020C:ED94  26: 8B 45 33				mov	ax,es:[di+33h]
020C:ED98  A3 2F98				mov	word ptr ds:[2F98h],ax	; (6F63:2F98=0FFFFh)
020C:ED9B  26: 8B 45 35				mov	ax,es:[di+35h]
020C:ED9F  A3 2F9A				mov	word ptr ds:[2F9Ah],ax	; (6F63:2F9A=0FFFFh)
020C:EDA2  26: 8B 45 3B				mov	ax,es:[di+3Bh]
020C:EDA6  A3 2F9F				mov	word ptr ds:[2F9Fh],ax	; (6F63:2F9F=0FFFFh)
020C:EDA9  26: 8B 45 07				mov	ax,es:[di+7]
020C:EDAD  A3 2F9D				mov	word ptr ds:[2F9Dh],ax	; (6F63:2F9D=0FFFFh)
020C:EDB0  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020C:EDB5  75 03				jnz	loc_2492		; Jump if not zero
020C:EDB7  E9 037A				jmp	loc_2525		; (F134)
020C:EDBA			loc_2492:
020C:EDBA  26: 80 4D 05 40			or	byte ptr es:[di+5],40h	; '@'
020C:EDBF  EB 18				jmp	short loc_2494		; (EDD9)
020C:EDC1			loc_2493:
020C:EDC1  26: 80 65 32 FE			and	byte ptr es:[di+32h],0FEh
020C:EDC6  80 3E 178F 0A			cmp	byte ptr ds:[178Fh],0Ah	; (6F63:178F=8)
020C:EDCB  72 0C				jb	loc_2494		; Jump if below
020C:EDCD  80 3E 178B 02			cmp	byte ptr ds:[178Bh],2	; (6F63:178B=40h)
020C:EDD2  75 05				jne	loc_2494		; Jump if not equal
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 483

020C:EDD4  26: 80 4D 04 20			or	byte ptr es:[di+4],20h	; ' '
020C:EDD9			loc_2494:
020C:EDD9  C6 06 216F 00			mov	byte ptr ds:[216Fh],0	; (6F63:216F=41h)
020C:EDDE  33 C0				xor	ax,ax			; Zero register
020C:EDE0  80 3E 1790 01			cmp	byte ptr ds:[1790h],1	; (6F63:1790=0Ch)
020C:EDE5  75 23				jne	loc_2496		; Jump if not equal
020C:EDE7  26: 8A 45 06				mov	al,es:[di+6]
020C:EDEB  B4 16				mov	ah,16h
020C:EDED  BB 003D				mov	bx,3Dh
020C:EDF0  BE 325C				mov	si,325Ch
020C:EDF3  9A 1491:692C		;*		call	far ptr sub_223		;*(1491:692C)
020C:EDF3  9A					db	9Ah
020C:EDF4  692C 1491				dw	692Ch, 1491h
020C:EDF8  72 10				jc	loc_2496		; Jump if carry Set
020C:EDFA  80 3E 2151 01			cmp	byte ptr ds:[2151h],1	; (6F63:2151=40h)
020C:EDFF  75 04				jne	loc_2495		; Jump if not equal
020C:EE01  26: 8A 45 06				mov	al,es:[di+6]
020C:EE05			loc_2495:
020C:EE05  C6 06 3259 06			mov	byte ptr ds:[3259h],6	; (6F63:3259=0FFh)
020C:EE0A			loc_2496:
020C:EE0A  A3 3257				mov	word ptr ds:[3257h],ax	; (6F63:3257=0FFFFh)
020C:EE0D  57					push	di
020C:EE0E  26: 8A 45 04				mov	al,es:[di+4]
020C:EE12  83 C7 09				add	di,9
020C:EE15  24 07				and	al,7
020C:EE17  75 51				jnz	loc_2497		; Jump if not zero
020C:EE19  B9 2314				mov	cx,2314h
020C:EE1C  BB 2334				mov	bx,2334h
020C:EE1F  2B D9				sub	bx,cx
020C:EE21  03 DF				add	bx,di
020C:EE23  A1 1D00				mov	ax,word ptr ds:[1D00h]	; (6F63:1D00=0C300h)
020C:EE26  26: 89 07				mov	es:[bx],ax
020C:EE29  BB 2332				mov	bx,2332h
020C:EE2C  2B D9				sub	bx,cx
020C:EE2E  03 DF				add	bx,di
020C:EE30  A1 1D02				mov	ax,word ptr ds:[1D02h]	; (6F63:1D02=0C08h)
020C:EE33  26: 89 07				mov	es:[bx],ax
020C:EE36  BB 2336				mov	bx,2336h
020C:EE39  2B D9				sub	bx,cx
020C:EE3B  03 DF				add	bx,di
020C:EE3D  A1 1D04				mov	ax,word ptr ds:[1D04h]	; (6F63:1D04=6102h)
020C:EE40  26: 89 07				mov	es:[bx],ax
020C:EE43  BB 2338				mov	bx,2338h
020C:EE46  2B D9				sub	bx,cx
020C:EE48  03 DF				add	bx,di
020C:EE4A  A1 1D06				mov	ax,word ptr ds:[1D06h]	; (6F63:1D06=40D7h)
020C:EE4D  26: 89 07				mov	es:[bx],ax
020C:EE50  BB 233A				mov	bx,233Ah
020C:EE53  2B D9				sub	bx,cx
020C:EE55  03 DF				add	bx,di
020C:EE57  A1 1D0A				mov	ax,word ptr ds:[1D0Ah]	; (6F63:1D0A=8C4h)
020C:EE5A  26: 89 07				mov	es:[bx],ax
020C:EE5D  BB 2330				mov	bx,2330h
020C:EE60  2B D9				sub	bx,cx
020C:EE62  03 DF				add	bx,di
020C:EE64  A1 1D08				mov	ax,word ptr ds:[1D08h]	; (6F63:1D08=41h)
020C:EE67  26: 89 07				mov	es:[bx],ax
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 484

020C:EE6A			loc_2497:
020C:EE6A  BB 2314				mov	bx,2314h
020C:EE6D  B9 0029				mov	cx,29h

020C:EE70			locloop_2498:
020C:EE70  26: 8A 05				mov	al,es:[di]
020C:EE73  88 07				mov	[bx],al
020C:EE75  47					inc	di
020C:EE76  43					inc	bx
020C:EE77  E2 F7				loop	locloop_2498		; Loop if cx > 0

020C:EE79  5F					pop	di
020C:EE7A  C6 06 22F4 09			mov	byte ptr ds:[22F4h],9	; (6F63:22F4=0Ch)
020C:EE7F  A1 2154				mov	ax,word ptr ds:[2154h]	; (6F63:2154=93Eh)
020C:EE82  A3 214D				mov	word ptr ds:[214Dh],ax	; (6F63:214D=20Ch)
020C:EE85  A1 2156				mov	ax,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:EE88  A3 214F				mov	word ptr ds:[214Fh],ax	; (6F63:214F=0E239h)
020C:EE8B  3E80			data_918	dw	3E80h			; Data table (indexed access)
020C:EE8D  E8 011C				call	sub_150			; (EFAC)
020C:EE90  75 19				jnz	loc_2499		; Jump if not zero
020C:EE92  C6 06 1CE8 00			mov	byte ptr ds:[1CE8h],0	; (6F63:1CE8=0Ch)
020C:EE97  C6 06 22B7 00			mov	byte ptr ds:[22B7h],0	; (6F63:22B7=0EAh)
020C:EE9C  B0 0E				mov	al,0Eh
020C:EE9E  9A 1491:2770		;*		call	far ptr sub_175		;*(1491:2770)
020C:EE9E  9A					db	9Ah
020C:EE9F  2770 1491				dw	2770h, 1491h
020C:EEA3  9A 1491:50D0		;*		call	far ptr sub_205		;*(1491:50D0)
020C:EEA3  9A					db	9Ah
020C:EEA4  50D0 1491				dw	50D0h, 1491h
020C:EEA8  E9 007F				jmp	loc_2503		; (EF2A)
020C:EEAB			loc_2499:
020C:EEAB  F6 06 22B7 04			test	byte ptr ds:[22B7h],4	; (6F63:22B7=0EAh)
020C:EEB0  75 1A				jnz	loc_2501		; Jump if not zero
020C:EEB2  F6 06 22B7 01			test	byte ptr ds:[22B7h],1	; (6F63:22B7=0EAh)
020C:EEB7  74 71				jz	loc_2503		; Jump if zero
020C:EEB9  A1 2156				mov	ax,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:EEBC  3B 06 22B8				cmp	ax,word ptr ds:[22B8h]	; (6F63:22B8=40E4h)
020C:EEC0  76 07				jbe	loc_2500		; Jump if below or =
020C:EEC2  F6 06 22B7 02			test	byte ptr ds:[22B7h],2	; (6F63:22B7=0EAh)
020C:EEC7  75 03				jnz	loc_2501		; Jump if not zero
020C:EEC9			loc_2500:
020C:EEC9  E9 00B9				jmp	loc_2506		; (EF85)
020C:EECC			loc_2501:
020C:EECC  52					push	dx
020C:EECD  8A 16 1D44				mov	dl,byte ptr ds:[1D44h]	; (6F63:1D44=0F1h)
020C:EED1  8A 36 1D45				mov	dh,byte ptr ds:[1D45h]	; (6F63:1D45=0D7h)
020C:EED5  52					push	dx
020C:EED6  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:EEDB  06					push	es
020C:EEDC  57					push	di
020C:EEDD  B2 FF				mov	dl,0FFh
020C:EEDF  C6 06 1D44 77			mov	byte ptr ds:[1D44h],77h	; (6F63:1D44=0F1h) 'w'
020C:EEE4  C6 06 1D45 00			mov	byte ptr ds:[1D45h],0	; (6F63:1D45=0D7h)
020C:EEE9  E8 27F4		;*		call	sub_22			;*(16E0)
020C:EEE9  E8 F4 27				db	0E8h,0F4h, 27h
020C:EEEC  5F					pop	di
020C:EEED  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 485

020C:EEF2  9C					pushf				; Push flags
020C:EEF3  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:EEF8  5A					pop	dx
020C:EEF9  8E C2				mov	es,dx
020C:EEFB  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:EF00  5A					pop	dx
020C:EF01  75 0A				jnz	loc_2502		; Jump if not zero
020C:EF03  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:EF08  74 03				je	loc_2502		; Jump if equal
020C:EF0A  E8 8FA3				call	sub_97			; (7EB0)
020C:EF0D			loc_2502:
020C:EF0D  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:EF12  9D					popf				; Pop flags
020C:EF13  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:EF18  5A					pop	dx
020C:EF19  88 16 1D44				mov	byte ptr ds:[1D44h],dl	; (6F63:1D44=0F1h)
020C:EF1D  88 36 1D45				mov	byte ptr ds:[1D45h],dh	; (6F63:1D45=0D7h)
020C:EF21  5A					pop	dx
020C:EF22  C6 06 22B7 00			mov	byte ptr ds:[22B7h],0	; (6F63:22B7=0EAh)
020C:EF27  E8 B732				call	sub_114			; (A65C)
020C:EF2A			loc_2503:
020C:EF2A  A1 2FAA				mov	ax,word ptr ds:[2FAAh]	; (6F63:2FAA=0FFFFh)
020C:EF2D  A3 2FAC				mov	word ptr ds:[2FACh],ax	; (6F63:2FAC=0FFFFh)
020C:EF30  A1 2FA8				mov	ax,word ptr ds:[2FA8h]	; (6F63:2FA8=0FFFFh)
020C:EF33  A3 2FAA				mov	word ptr ds:[2FAAh],ax	; (6F63:2FAA=0FFFFh)
020C:EF36  A1 2FA6				mov	ax,word ptr ds:[2FA6h]	; (6F63:2FA6=0FFFFh)
020C:EF39  A3 2FA8				mov	word ptr ds:[2FA8h],ax	; (6F63:2FA8=0FFFFh)
020C:EF3C  A1 2156				mov	ax,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:EF3F  A3 22B8				mov	word ptr ds:[22B8h],ax	; (6F63:22B8=40E4h)
020C:EF42  A3 2FA6				mov	word ptr ds:[2FA6h],ax	; (6F63:2FA6=0FFFFh)
020C:EF45  80 3E 1790 01			cmp	byte ptr ds:[1790h],1	; (6F63:1790=0Ch)
020C:EF4A  75 40				jne	loc_2507		; Jump if not equal
020C:EF4C  55					push	bp
020C:EF4D  BD 4AEE				mov	bp,4AEEh
020C:EF50  26: 8A 45 05				mov	al,es:[di+5]
020C:EF54  24 03				and	al,3
020C:EF56  3C 01				cmp	al,1
020C:EF58  75 1D				jne	loc_2504		; Jump if not equal
020C:EF5A  26: F7 45 3D 8000			test	word ptr es:[di+3Dh],8000h
020C:EF60  74 15				jz	loc_2504		; Jump if zero
020C:EF62  BE 2EEA				mov	si,2EEAh
020C:EF65  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:EF65  9A					db	9Ah
020C:EF66  67E0 1491				dw	67E0h, 1491h
020C:EF6A  BD 4AEE				mov	bp,4AEEh
020C:EF6D  B9 003D				mov	cx,3Dh
020C:EF70  9A 1491:34C0		;*		call	far ptr sub_191		;*(1491:34C0)
020C:EF70  9A					db	9Ah
020C:EF71  34C0 1491				dw	34C0h, 1491h
020C:EF75  EB 08				jmp	short loc_2505		; (EF7F)
020C:EF77			loc_2504:
020C:EF77  BE 2EC9				mov	si,2EC9h
020C:EF7A  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:EF7A  9A					db	9Ah
020C:EF7B  67E0 1491				dw	67E0h, 1491h
020C:EF7F			loc_2505:
020C:EF7F  5D					pop	bp
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 486

020C:EF80  E8 33FD		;*		call	sub_31			;*(2380)
020C:EF80  E8 FD 33				db	0E8h,0FDh, 33h
020C:EF83  EB 1B				jmp	short loc_2509		; (EFA0)
020C:EF85			loc_2506:
020C:EF85  80 3E 1790 01			cmp	byte ptr ds:[1790h],1	; (6F63:1790=0Ch)
020C:EF8A  74 14				je	loc_2509		; Jump if equal
020C:EF8C			loc_2507:
020C:EF8C  80 3E 178B 02			cmp	byte ptr ds:[178Bh],2	; (6F63:178B=40h)
020C:EF91  75 05				jne	loc_2508		; Jump if not equal
020C:EF93  9A 1491:44AC		;*		call	far ptr sub_198		;*(1491:44AC)
020C:EF93  9A					db	9Ah
020C:EF94  44AC 1491				dw	44ACh, 1491h
020C:EF98			loc_2508:
020C:EF98  80 0E 22B7 01			or	byte ptr ds:[22B7h],1	; (6F63:22B7=0EAh)
020C:EF9D  E9 0194				jmp	loc_2525		; (F134)
020C:EFA0			loc_2509:
020C:EFA0  26: 8A 45 32				mov	al,es:[di+32h]
020C:EFA4  24 38				and	al,38h			; '8'
020C:EFA6  3C 38				cmp	al,38h			; '8'
020C:EFA8  75 08				jne	loc_2510		; Jump if not equal
020C:EFAA  B8 001C				mov	ax,1Ch
020C:EFAD  9A			data_921	db	9Ah
020C:EFAE  70 27				jo	loc_2511		; Jump if overflow=1
020C:EFB0  91					xchg	cx,ax
020C:EFB1  14 55				adc	al,55h			; 'U'
020C:EFB3  BD 1FA8				mov	bp,1FA8h
020C:EFB6  B9 003D				mov	cx,3Dh
020C:EFB9  9A 1491:34C0		;*		call	far ptr sub_191		;*(1491:34C0)
020C:EFB9  9A					db	9Ah
020C:EFBA  34C0 1491				dw	34C0h, 1491h
020C:EFBE  F6 06 22B7 01			test	byte ptr ds:[22B7h],1	; (6F63:22B7=0EAh)
020C:EFC3  74 3B				jz	loc_2513		; Jump if zero
020C:EFC5  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020C:EFCA  80 3E 13F0 0D			cmp	byte ptr ds:[13F0h],0Dh	; (6F63:13F0=7)
020C:EFCF  72 0C				jb	loc_2512		; Jump if below
020C:EFD1  80 3E 13F0 0F			cmp	byte ptr ds:[13F0h],0Fh	; (6F63:13F0=7)
020C:EFD6  77 05				ja	loc_2512		; Jump if above
020C:EFD8  3E: C6 46 01 3A			mov	byte ptr ds:[bp+1],3Ah	; ':'
020C:EFDD			loc_2512:
020C:EFDD  5D					pop	bp
020C:EFDE  FE 0E 3259				dec	byte ptr ds:[3259h]	; (6F63:3259=0FFh)
020C:EFE2  E8 339B		;*		call	sub_31			;*(2380)
020C:EFE2  E8 9B 33				db	0E8h, 9Bh, 33h
020C:EFE5  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:EFEA  06					push	es
020C:EFEB  57					push	di
020C:EFEC  E8 89FF				call	sub_90			; (79EE)
020C:EFEF  B9 2502				mov	cx,2502h
020C:EFF2  81 E9 24F5				sub	cx,24F5h
020C:EFF6  BF 1FC8				mov	di,1FC8h
020C:EFF9  B0 20				mov	al,20h			; ' '
020C:EFFB  FC					cld				; Clear direction
020C:EFFC  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:EFFE  EB 6C				jmp	short loc_2519		; (F06C)
020C:F000			loc_2513:
020C:F000  BD 221F				mov	bp,221Fh
020C:F003  B9 003D				mov	cx,3Dh
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 487

020C:F006  9A 1491:34C0		;*		call	far ptr sub_191		;*(1491:34C0)
020C:F006  9A					db	9Ah
020C:F007  34C0 1491				dw	34C0h, 1491h
020C:F00B  B9 223F				mov	cx,223Fh
020C:F00E  2B CD				sub	cx,bp
020C:F010  E3 0D				jcxz	loc_2515		; Jump if cx=0
020C:F012  79 03				jns	locloop_2514		; Jump if not sign
020C:F014  B9 0002				mov	cx,2

020C:F017			locloop_2514:
020C:F017  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020C:F01C  45					inc	bp
020C:F01D  E2 F8				loop	locloop_2514		; Loop if cx > 0

020C:F01F			loc_2515:
020C:F01F  BE 250F				mov	si,250Fh
020C:F022  BD 223F				mov	bp,223Fh
020C:F025  3E: 80 7E FF 20			cmp	byte ptr ds:[bp-1],20h	; ' '
020C:F02A  74 01				je	loc_2516		; Jump if equal
020C:F02C  45					inc	bp
020C:F02D			loc_2516:
020C:F02D  8A 04				mov	al,[si]
020C:F02F  3E: 88 46 00				mov	ds:[bp],al
020C:F033  46					inc	si
020C:F034  45					inc	bp
020C:F035  81 FE 2514				cmp	si,2514h
020C:F039  72 F2				jb	loc_2516		; Jump if below
020C:F03B  5D					pop	bp
020C:F03C  C6 06 22B7 01			mov	byte ptr ds:[22B7h],1	; (6F63:22B7=0EAh)
020C:F041  B9 2502				mov	cx,2502h
020C:F044  81 E9 24F5				sub	cx,24F5h
020C:F048  BE 24F5				mov	si,24F5h
020C:F04B  26: F6 45 04 80			test	byte ptr es:[di+4],80h
020C:F050  74 03				jz	loc_2517		; Jump if zero
020C:F052  BE 2502				mov	si,2502h
020C:F055			loc_2517:
020C:F055  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:F05A  06					push	es
020C:F05B  57					push	di
020C:F05C  E8 898F				call	sub_90			; (79EE)
020C:F05F  BF 1FC8				mov	di,1FC8h
020C:F062  80 7D FF 20				cmp	byte ptr [di-1],20h	; ' '
020C:F066  74 01				je	loc_2518		; Jump if equal
020C:F068  47					inc	di
020C:F069			loc_2518:
020C:F069  FC					cld				; Clear direction
020C:F06A  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:F06C			loc_2519:
020C:F06C  E8 897F				call	sub_90			; (79EE)
020C:F06F  BE 1FA8				mov	si,1FA8h
020C:F072  BF 212C				mov	di,212Ch
020C:F075  B9 0020				mov	cx,20h
020C:F078  FC					cld				; Clear direction

020C:F079			locloop_2520:
020C:F079  AC					lodsb				; String [si] to al
020C:F07A  3C 20				cmp	al,20h			; ' '
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 488

020C:F07C  74 07				je	loc_2521		; Jump if equal
020C:F07E  3C 3A				cmp	al,3Ah			; ':'
020C:F080  74 03				je	loc_2521		; Jump if equal
020C:F082  AA					stosb				; Store al to es:[di]
020C:F083  E2 F4				loop	locloop_2520		; Loop if cx > 0

020C:F085			loc_2521:
020C:F085  C6 05 20				mov	byte ptr [di],20h	; ' '
020C:F088  BE 19B3				mov	si,19B3h
020C:F08B  BF 1F88				mov	di,1F88h
020C:F08E  B9 0009				mov	cx,9
020C:F091  1E					push	ds
020C:F092  07					pop	es
020C:F093  FC					cld				; Clear direction
020C:F094  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:F096  BA 1F88				mov	dx,1F88h
020C:F099  E8 3530				call	sub_32			; (25CC)
020C:F09C  80 0E 22B7 01			or	byte ptr ds:[22B7h],1	; (6F63:22B7=0EAh)
020C:F0A1  5F					pop	di
020C:F0A2  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:F0A7  9C					pushf				; Push flags
020C:F0A8  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:F0AD  5A					pop	dx
020C:F0AE  8E C2				mov	es,dx
020C:F0B0  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:F0B5  5A					pop	dx
020C:F0B6  75 0A				jnz	loc_2522		; Jump if not zero
020C:F0B8  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:F0BD  74 03				je	loc_2522		; Jump if equal
020C:F0BF  E8 8DEE				call	sub_97			; (7EB0)
020C:F0C2			loc_2522:
020C:F0C2  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:F0C7  9D					popf				; Pop flags
020C:F0C8  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:F0CD  BB 2F78				mov	bx,2F78h
020C:F0D0  26: 8A 45 05				mov	al,es:[di+5]
020C:F0D4  25 000F				and	ax,0Fh
020C:F0D7  D7					xlat				; al=[al+[bx]] table
020C:F0D8  0A C0				or	al,al			; Zero ?
020C:F0DA  75 04				jnz	loc_2523		; Jump if not zero
020C:F0DC  26: 8A 45 06				mov	al,es:[di+6]
020C:F0E0			loc_2523:
020C:F0E0  03 F8				add	di,ax
020C:F0E2  8B 1E 2154				mov	bx,word ptr ds:[2154h]	; (6F63:2154=93Eh)
020C:F0E6  26: 3B 1D				cmp	bx,es:[di]
020C:F0E9  75 49				jne	loc_2525		; Jump if not equal
020C:F0EB  A1 2156				mov	ax,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:F0EE  26: 3B 45 02				cmp	ax,es:[di+2]
020C:F0F2  75 40				jne	loc_2525		; Jump if not equal
020C:F0F4  55					push	bp
020C:F0F5  BD 1FA8				mov	bp,1FA8h
020C:F0F8  B9 003D				mov	cx,3Dh
020C:F0FB  9A 1491:34C0		;*		call	far ptr sub_191		;*(1491:34C0)
020C:F0FB  9A					db	9Ah
020C:F0FC  34C0 1491				dw	34C0h, 1491h
020C:F100  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020C:F105  45					inc	bp
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 489

020C:F106  80 3E 13F0 0D			cmp	byte ptr ds:[13F0h],0Dh	; (6F63:13F0=7)
020C:F10B  72 0D				jb	loc_2524		; Jump if below
020C:F10D  80 3E 13F0 0F			cmp	byte ptr ds:[13F0h],0Fh	; (6F63:13F0=7)
020C:F112  77 06				ja	loc_2524		; Jump if above
020C:F114  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020C:F119  45					inc	bp
020C:F11A			loc_2524:
020C:F11A  E8 88D1				call	sub_90			; (79EE)
020C:F11D  B9 2041				mov	cx,2041h
020C:F120  2B CD				sub	cx,bp
020C:F122  8B FD				mov	di,bp
020C:F124  B0 20				mov	al,20h			; ' '
020C:F126  FC					cld				; Clear direction
020C:F127  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:F129  BA 1F88				mov	dx,1F88h
020C:F12C  C6 06 3259 04			mov	byte ptr ds:[3259h],4	; (6F63:3259=0FFh)
020C:F131  E8 3498				call	sub_32			; (25CC)
020C:F134			loc_2525:
020C:F134  C7 06 178D 0025			mov	word ptr ds:[178Dh],25h	; (6F63:178D=2800h)
020C:F13A  9A 1491:3388		;*		call	far ptr sub_190		;*(1491:3388)
020C:F13A  9A					db	9Ah
020C:F13B  3388 1491				dw	3388h, 1491h
020C:F13F  80 26 4700 7F			and	byte ptr ds:[4700h],7Fh	; (6F63:4700=0FFh)
020C:F144  A1 2156				mov	ax,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:F147  8B 1E 2154				mov	bx,word ptr ds:[2154h]	; (6F63:2154=93Eh)
020C:F14B  BA 0001				mov	dx,1
020C:F14E  C6 06 3C07 01			mov	byte ptr ds:[3C07h],1	; (6F63:3C07=0FFh)
020C:F153  E8 73DA				call	sub_69			; (6530)
020C:F156  C6 06 3C07 00			mov	byte ptr ds:[3C07h],0	; (6F63:3C07=0FFh)
020C:F15B  72 07				jc	loc_2526		; Jump if carry Set
020C:F15D  9A 1491:3784		;*		call	far ptr sub_192		;*(1491:3784)
020C:F15D  9A					db	9Ah
020C:F15E  3784 1491				dw	3784h, 1491h
020C:F162  EB 63				jmp	short loc_2532		; (F1C7)
020C:F164			loc_2526:
020C:F164  26: 8A 4D 04				mov	cl,es:[di+4]
020C:F168  80 E1 1F				and	cl,1Fh
020C:F16B  80 F9 1F				cmp	cl,1Fh
020C:F16E  75 72				jne	loc_2534		; Jump if not equal
020C:F170  E8 9329				call	sub_106			; (849C)
020C:F173  72 15				jc	loc_2529		; Jump if carry Set
020C:F175			loc_2527:
020C:F175  BB 2F78				mov	bx,2F78h
020C:F178  26: 8A 45 05				mov	al,es:[di+5]
020C:F17C  25 000F				and	ax,0Fh
020C:F17F  D7					xlat				; al=[al+[bx]] table
020C:F180  0A C0				or	al,al			; Zero ?
020C:F182  75 04				jnz	loc_2528		; Jump if not zero
020C:F184  26: 8A 45 06				mov	al,es:[di+6]
020C:F188			loc_2528:
020C:F188  03 F8				add	di,ax
020C:F18A			loc_2529:
020C:F18A  8B 1E 2FAE				mov	bx,word ptr ds:[2FAEh]	; (6F63:2FAE=0FFFFh)
020C:F18E  26: 3B 1D				cmp	bx,es:[di]
020C:F191  75 34				jne	loc_2532		; Jump if not equal
020C:F193  A1 2FB0				mov	ax,word ptr ds:[2FB0h]	; (6F63:2FB0=0FFFFh)
020C:F196  26: 3B 45 02				cmp	ax,es:[di+2]
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 490

020C:F19A  75 2B				jne	loc_2532		; Jump if not equal
020C:F19C  50					push	ax
020C:F19D  53					push	bx
020C:F19E  BB 2F78				mov	bx,2F78h
020C:F1A1  26: 8A 45 05				mov	al,es:[di+5]
020C:F1A5  25 000F				and	ax,0Fh
020C:F1A8  D7					xlat				; al=[al+[bx]] table
020C:F1A9  0A C0				or	al,al			; Zero ?
020C:F1AB  75 04				jnz	loc_2530		; Jump if not zero
020C:F1AD  26: 8A 45 06				mov	al,es:[di+6]
020C:F1B1			loc_2530:
020C:F1B1  8B E8				mov	bp,ax
020C:F1B3  5B					pop	bx
020C:F1B4  58					pop	ax
020C:F1B5  BA FFFF				mov	dx,0FFFFh
020C:F1B8  26: 3B 1B				cmp	bx,es:[bp+di]
020C:F1BB  75 04				jne	loc_2531		; Jump if not equal
020C:F1BD  26: 8B 53 02				mov	dx,es:[bp+di+2]
020C:F1C1			loc_2531:
020C:F1C1  89 16 3D87				mov	word ptr ds:[3D87h],dx	; (6F63:3D87=0FFFFh)
020C:F1C5  EB 9D				jmp	short loc_2526		; (F164)
020C:F1C7			loc_2532:
020C:F1C7  C6 06 4735 00			mov	byte ptr ds:[4735h],0	; (6F63:4735=0FFh)
020C:F1CC  F6 06 4700 80			test	byte ptr ds:[4700h],80h	; (6F63:4700=0FFh)
020C:F1D1  74 0C				jz	loc_2533		; Jump if zero
020C:F1D3  B0 03				mov	al,3
020C:F1D5  9A 1491:2770		;*		call	far ptr sub_175		;*(1491:2770)
020C:F1D5  9A					db	9Ah
020C:F1D6  2770 1491				dw	2770h, 1491h
020C:F1DA  80 26 4700 7F			and	byte ptr ds:[4700h],7Fh	; (6F63:4700=0FFh)
020C:F1DF			loc_2533:
020C:F1DF  E9 03D2				jmp	loc_2580		; (F5B4)
020C:F1E2			loc_2534:
020C:F1E2  80 3E 1CDE 01			cmp	byte ptr ds:[1CDEh],1	; (6F63:1CDE=8)
020C:F1E7  77 8C				ja	loc_2527		; Jump if above
020C:F1E9  F6 06 230A 7F			test	byte ptr ds:[230Ah],7Fh	; (6F63:230A=40h)
020C:F1EE  75 85				jnz	loc_2527		; Jump if not zero
020C:F1F0  80 3E 178A 06			cmp	byte ptr ds:[178Ah],6	; (6F63:178A=0CAh)
020C:F1F5  72 0A				jb	loc_2536		; Jump if below
020C:F1F7  26: F6 45 04 20			test	byte ptr es:[di+4],20h	; ' '
020C:F1FC  74 03				jz	loc_2536		; Jump if zero
020C:F1FE			loc_2535:
020C:F1FE  E9 FF74				jmp	loc_2527		; (F175)
020C:F201			loc_2536:
020C:F201  83 3E 1960 00			cmp	word ptr ds:[1960h],0	; (6F63:1960=41h)
020C:F206  75 0E				jne	loc_2537		; Jump if not equal
020C:F208  F6 06 216F 04			test	byte ptr ds:[216Fh],4	; (6F63:216F=41h)
020C:F20D  74 07				jz	loc_2537		; Jump if zero
020C:F20F  26: F6 45 05 02			test	byte ptr es:[di+5],2
020C:F214  74 E8				jz	loc_2535		; Jump if zero
020C:F216			loc_2537:
020C:F216  80 3E 1790 01			cmp	byte ptr ds:[1790h],1	; (6F63:1790=0Ch)
020C:F21B  75 16				jne	loc_2539		; Jump if not equal
020C:F21D  C6 06 2170 00			mov	byte ptr ds:[2170h],0	; (6F63:2170=9)
020C:F222  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020C:F227  75 03				jnz	loc_2538		; Jump if not zero
020C:F229  E9 037E				jmp	loc_2579		; (F5AA)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 491

020C:F22C			loc_2538:
020C:F22C  26: 80 4D 05 40			or	byte ptr es:[di+5],40h	; '@'
020C:F231  EB 13				jmp	short loc_2540		; (F246)
020C:F233			loc_2539:
020C:F233  80 3E 178F 0A			cmp	byte ptr ds:[178Fh],0Ah	; (6F63:178F=8)
020C:F238  72 0C				jb	loc_2540		; Jump if below
020C:F23A  80 3E 178B 02			cmp	byte ptr ds:[178Bh],2	; (6F63:178B=40h)
020C:F23F  75 05				jne	loc_2540		; Jump if not equal
020C:F241  26: 80 4D 04 80			or	byte ptr es:[di+4],80h
020C:F246			loc_2540:
020C:F246  80 0E 1D29 10			or	byte ptr ds:[1D29h],10h	; (6F63:1D29=0B8h)
020C:F24B  C6 06 216F 00			mov	byte ptr ds:[216Fh],0	; (6F63:216F=41h)
020C:F250  9A 1491:6B60		;*		call	far ptr sub_224		;*(1491:6B60)
020C:F250  9A					db	9Ah
020C:F251  6B60 1491				dw	6B60h, 1491h
020C:F255  A1 2156				mov	ax,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:F258  A3 2198				mov	word ptr ds:[2198h],ax	; (6F63:2198=40E2h)
020C:F25B  3B 06 214F				cmp	ax,word ptr ds:[214Fh]	; (6F63:214F=0E239h)
020C:F25F  75 7E				jne	loc_2547		; Jump if not equal
020C:F261  A1 2154				mov	ax,word ptr ds:[2154h]	; (6F63:2154=93Eh)
020C:F264  3B 06 214D				cmp	ax,word ptr ds:[214Dh]	; (6F63:214D=20Ch)
020C:F268  75 75				jne	loc_2547		; Jump if not equal
020C:F26A  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:F26F  06					push	es
020C:F270  BE 212C				mov	si,212Ch
020C:F273  26: F6 45 05 02			test	byte ptr es:[di+5],2
020C:F278  75 1F				jnz	loc_2541		; Jump if not zero
020C:F27A  26: F6 45 05 01			test	byte ptr es:[di+5],1
020C:F27F  74 33				jz	loc_2545		; Jump if zero
020C:F281  26: F7 45 07 8000			test	word ptr es:[di+7],8000h
020C:F287  74 2B				jz	loc_2545		; Jump if zero
020C:F289  26: 8B 45 07				mov	ax,es:[di+7]
020C:F28D  57					push	di
020C:F28E  E8 8F3F				call	sub_102			; (81D0)
020C:F291  B9 0020				mov	cx,20h
020C:F294  8B DF				mov	bx,di
020C:F296  5F					pop	di
020C:F297  EB 08				jmp	short loc_2542		; (F2A1)
020C:F299			loc_2541:
020C:F299  B9 000F				mov	cx,0Fh
020C:F29C  8B DF				mov	bx,di
020C:F29E  83 C3 07				add	bx,7
020C:F2A1			loc_2542:
020C:F2A1  FC					cld				; Clear direction

020C:F2A2			locloop_2543:
020C:F2A2  AC					lodsb				; String [si] to al
020C:F2A3  26: 3A 07				cmp	al,es:[bx]
020C:F2A6  75 0C				jne	loc_2545		; Jump if not equal
020C:F2A8  3C 20				cmp	al,20h			; ' '
020C:F2AA  74 03				je	loc_2544		; Jump if equal
020C:F2AC  43					inc	bx
020C:F2AD  E2 F3				loop	locloop_2543		; Loop if cx > 0

020C:F2AF			loc_2544:
020C:F2AF  C6 06 2152 01			mov	byte ptr ds:[2152h],1	; (6F63:2152=41h)
020C:F2B4			loc_2545:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 492

020C:F2B4  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:F2B9  9C					pushf				; Push flags
020C:F2BA  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:F2BF  5A					pop	dx
020C:F2C0  8E C2				mov	es,dx
020C:F2C2  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:F2C7  5A					pop	dx
020C:F2C8  75 0A				jnz	loc_2546		; Jump if not zero
020C:F2CA  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:F2CF  74 03				je	loc_2546		; Jump if equal
020C:F2D1  E8 8BDC				call	sub_97			; (7EB0)
020C:F2D4			loc_2546:
020C:F2D4  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:F2D9  9D					popf				; Pop flags
020C:F2DA  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:F2DF			loc_2547:
020C:F2DF  F6 06 4700 80			test	byte ptr ds:[4700h],80h	; (6F63:4700=0FFh)
020C:F2E4  74 0C				jz	loc_2548		; Jump if zero
020C:F2E6  B0 03				mov	al,3
020C:F2E8  9A 1491:2770		;*		call	far ptr sub_175		;*(1491:2770)
020C:F2E8  9A					db	9Ah
020C:F2E9  2770 1491				dw	2770h, 1491h
020C:F2ED  80 26 4700 7F			and	byte ptr ds:[4700h],7Fh	; (6F63:4700=0FFh)
020C:F2F2			loc_2548:
020C:F2F2  89 3E 219A				mov	word ptr ds:[219Ah],di	; (6F63:219A=41h)
020C:F2F6  89 3E 219C				mov	word ptr ds:[219Ch],di	; (6F63:219C=946h)
020C:F2FA  80 3E 2152 01			cmp	byte ptr ds:[2152h],1	; (6F63:2152=41h)
020C:F2FF  75 02				jne	loc_2549		; Jump if not equal
020C:F301  EB 72				jmp	short loc_2552		; (F375)
020C:F303			loc_2549:
020C:F303  26: F6 45 05 30			test	byte ptr es:[di+5],30h	; '0'
020C:F308  74 4E				jz	loc_2550		; Jump if zero
020C:F30A  C6 06 1D44 00			mov	byte ptr ds:[1D44h],0	; (6F63:1D44=0F1h)
020C:F30F  C6 06 1D45 00			mov	byte ptr ds:[1D45h],0	; (6F63:1D45=0D7h)
020C:F314  B2 FF				mov	dl,0FFh
020C:F316  E8 23C7		;*		call	sub_22			;*(16E0)
020C:F316  E8 C7 23				db	0E8h,0C7h, 23h
020C:F319  B8 FFFF				mov	ax,0FFFFh
020C:F31C  A3 2198				mov	word ptr ds:[2198h],ax	; (6F63:2198=40E2h)
020C:F31F  A3 218C				mov	word ptr ds:[218Ch],ax	; (6F63:218C=20Ch)
020C:F322  A3 218E				mov	word ptr ds:[218Eh],ax	; (6F63:218E=0E2A0h)
020C:F325  A3 2180				mov	word ptr ds:[2180h],ax	; (6F63:2180=4300h)
020C:F328  A3 2182				mov	word ptr ds:[2182h],ax	; (6F63:2182=0C09h)
020C:F32B  26: 8B 05				mov	ax,es:[di]
020C:F32E  3B 06 1CE9				cmp	ax,word ptr ds:[1CE9h]	; (6F63:1CE9=4402h)
020C:F332  75 24				jne	loc_2550		; Jump if not equal
020C:F334  26: 8B 45 02				mov	ax,es:[di+2]
020C:F338  3B 06 1CEB				cmp	ax,word ptr ds:[1CEBh]	; (6F63:1CEB=40D7h)
020C:F33C  75 1A				jne	loc_2550		; Jump if not equal
020C:F33E  F7 06 3D18 1000			test	word ptr ds:[3D18h],1000h	; (6F63:3D18=0FFFFh)
020C:F344  75 12				jnz	loc_2550		; Jump if not zero
020C:F346  A1 1CD2				mov	ax,word ptr ds:[1CD2h]	; (6F63:1CD2=41h)
020C:F349  0B C0				or	ax,ax			; Zero ?
020C:F34B  74 0B				jz	loc_2550		; Jump if zero
020C:F34D  A3 2334				mov	word ptr ds:[2334h],ax	; (6F63:2334=0C402h)
020C:F350  A3 2332				mov	word ptr ds:[2332h],ax	; (6F63:2332=0C09h)
020C:F353  C6 06 22F4 07			mov	byte ptr ds:[22F4h],7	; (6F63:22F4=0Ch)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 493

020C:F358			loc_2550:
020C:F358  26: F6 45 04 1F			test	byte ptr es:[di+4],1Fh
020C:F35D  74 16				jz	loc_2552		; Jump if zero
020C:F35F  26: F6 45 05 20			test	byte ptr es:[di+5],20h	; ' '
020C:F364  75 07				jnz	loc_2551		; Jump if not zero
020C:F366  B0 1B				mov	al,1Bh
020C:F368  9A 1491:2770		;*		call	far ptr sub_175		;*(1491:2770)
020C:F368  9A					db	9Ah
020C:F369  2770 1491				dw	2770h, 1491h
020C:F36D			loc_2551:
020C:F36D  E8 8E90		;*		call	sub_103			;*(8200)
020C:F36D  E8 90 8E				db	0E8h, 90h, 8Eh
020C:F370  C6 06 22F4 04			mov	byte ptr ds:[22F4h],4	; (6F63:22F4=0Ch)
020C:F375			loc_2552:
020C:F375  9A 1491:7CC0		;*		call	far ptr sub_242		;*(1491:7CC0)
020C:F375  9A					db	9Ah
020C:F376  7CC0 1491				dw	7CC0h, 1491h
020C:F37A  73 05				jnc	loc_2553		; Jump if carry=0
020C:F37C  C6 06 2172 01			mov	byte ptr ds:[2172h],1	; (6F63:2172=2)
020C:F381			loc_2553:
020C:F381  80 3E 1790 01			cmp	byte ptr ds:[1790h],1	; (6F63:1790=0Ch)
020C:F386  74 03				je	loc_2554		; Jump if equal
020C:F388  E9 021F				jmp	loc_2579		; (F5AA)
020C:F38B			loc_2554:
020C:F38B  57					push	di
020C:F38C  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:F391  06					push	es
020C:F392  E8 8659				call	sub_90			; (79EE)
020C:F395  BF 1F88				mov	di,1F88h
020C:F398  B9 1A69				mov	cx,1A69h
020C:F39B  81 E9 19B3				sub	cx,19B3h
020C:F39F  B0 20				mov	al,20h			; ' '
020C:F3A1  FC					cld				; Clear direction
020C:F3A2  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020C:F3A4  BE 19B3				mov	si,19B3h
020C:F3A7  BF 1F88				mov	di,1F88h
020C:F3AA  B9 0009				mov	cx,9
020C:F3AD  FC					cld				; Clear direction
020C:F3AE  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020C:F3B0  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:F3B5  9C					pushf				; Push flags
020C:F3B6  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:F3BB  5A					pop	dx
020C:F3BC  8E C2				mov	es,dx
020C:F3BE  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:F3C3  5A					pop	dx
020C:F3C4  75 0A				jnz	loc_2555		; Jump if not zero
020C:F3C6  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:F3CB  74 03				je	loc_2555		; Jump if equal
020C:F3CD  E8 8AE0				call	sub_97			; (7EB0)
020C:F3D0			loc_2555:
020C:F3D0  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:F3D5  9D					popf				; Pop flags
020C:F3D6  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:F3DB  5F					pop	di
020C:F3DC  26: F6 45 06 FF			test	byte ptr es:[di+6],0FFh
020C:F3E1  74 07				jz	loc_2556		; Jump if zero
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 494

020C:F3E3  B0 03				mov	al,3
020C:F3E5  9A 1491:2770		;*		call	far ptr sub_175		;*(1491:2770)
020C:F3E5  9A					db	9Ah
020C:F3E6  2770 1491				dw	2770h, 1491h
020C:F3EA			loc_2556:
020C:F3EA  33 C0				xor	ax,ax			; Zero register
020C:F3EC  80 3E 1790 01			cmp	byte ptr ds:[1790h],1	; (6F63:1790=0Ch)
020C:F3F1  75 32				jne	loc_2559		; Jump if not equal
020C:F3F3  26: 8A 45 06				mov	al,es:[di+6]
020C:F3F7  B4 11				mov	ah,11h
020C:F3F9  BB 0007				mov	bx,7
020C:F3FC  BE 325C				mov	si,325Ch
020C:F3FF  9A 1491:692C		;*		call	far ptr sub_223		;*(1491:692C)
020C:F3FF  9A					db	9Ah
020C:F400  692C 1491				dw	692Ch, 1491h
020C:F404  72 1F				jc	loc_2559		; Jump if carry Set
020C:F406  26: F6 45 05 02			test	byte ptr es:[di+5],2
020C:F40B  75 0F				jnz	loc_2557		; Jump if not zero
020C:F40D  26: F6 45 05 01			test	byte ptr es:[di+5],1
020C:F412  74 0C				jz	loc_2558		; Jump if zero
020C:F414  26: F7 45 07 8000			test	word ptr es:[di+7],8000h
020C:F41A  74 04				jz	loc_2558		; Jump if zero
020C:F41C			loc_2557:
020C:F41C  26: 8A 45 06				mov	al,es:[di+6]
020C:F420			loc_2558:
020C:F420  C6 06 3259 01			mov	byte ptr ds:[3259h],1	; (6F63:3259=0FFh)
020C:F425			loc_2559:
020C:F425  A3 3257				mov	word ptr ds:[3257h],ax	; (6F63:3257=0FFFFh)
020C:F428  80 3E 2152 01			cmp	byte ptr ds:[2152h],1	; (6F63:2152=41h)
020C:F42D  75 12				jne	loc_2561		; Jump if not equal
020C:F42F  C6 06 2152 00			mov	byte ptr ds:[2152h],0	; (6F63:2152=41h)
020C:F434  F6 06 3D78 02			test	byte ptr ds:[3D78h],2	; (6F63:3D78=0FFh)
020C:F439  74 03				jz	loc_2560		; Jump if zero
020C:F43B  E9 0164				jmp	loc_2578		; (F5A2)
020C:F43E			loc_2560:
020C:F43E  E9 0169				jmp	loc_2579		; (F5AA)
020C:F441			loc_2561:
020C:F441  BD 1FA8				mov	bp,1FA8h
020C:F444  B9 0007				mov	cx,7
020C:F447  9A 1491:34C0		;*		call	far ptr sub_191		;*(1491:34C0)
020C:F447  9A					db	9Ah
020C:F448  34C0 1491				dw	34C0h, 1491h
020C:F44C  26: F6 45 05 20			test	byte ptr es:[di+5],20h	; ' '
020C:F451  75 0D				jnz	loc_2563		; Jump if not zero
020C:F453  26: F6 45 05 10			test	byte ptr es:[di+5],10h
020C:F458  74 03				jz	loc_2562		; Jump if zero
020C:F45A  E9 008A				jmp	loc_2569		; (F4E7)
020C:F45D			loc_2562:
020C:F45D  E9 012A				jmp	loc_2577		; (F58A)
020C:F460			loc_2563:
020C:F460  80 3E 1CE8 01			cmp	byte ptr ds:[1CE8h],1	; (6F63:1CE8=0Ch)
020C:F465  75 2B				jne	loc_2565		; Jump if not equal
020C:F467  26: 8B 05				mov	ax,es:[di]
020C:F46A  3B 06 1CE9				cmp	ax,word ptr ds:[1CE9h]	; (6F63:1CE9=4402h)
020C:F46E  75 0A				jne	loc_2564		; Jump if not equal
020C:F470  26: 8B 45 02				mov	ax,es:[di+2]
020C:F474  3B 06 1CEB				cmp	ax,word ptr ds:[1CEBh]	; (6F63:1CEB=40D7h)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 495

020C:F478  74 18				je	loc_2565		; Jump if equal
020C:F47A			loc_2564:
020C:F47A  C6 06 1CE8 00			mov	byte ptr ds:[1CE8h],0	; (6F63:1CE8=0Ch)
020C:F47F  C6 06 22B7 00			mov	byte ptr ds:[22B7h],0	; (6F63:22B7=0EAh)
020C:F484  B0 0E				mov	al,0Eh
020C:F486  9A 1491:2770		;*		call	far ptr sub_175		;*(1491:2770)
020C:F486  9A					db	9Ah
020C:F487  2770 1491				dw	2770h, 1491h
020C:F48B  9A 1491:50D0		;*		call	far ptr sub_205		;*(1491:50D0)
020C:F48B  9A					db	9Ah
020C:F48C  50D0 1491				dw	50D0h, 1491h
020C:F490  EB 0F				jmp	short loc_2566		; (F4A1)
020C:F492			loc_2565:
020C:F492  F6 06 22B7 05			test	byte ptr ds:[22B7h],5	; (6F63:22B7=0EAh)
020C:F497  74 08				jz	loc_2566		; Jump if zero
020C:F499  C6 06 22B7 00			mov	byte ptr ds:[22B7h],0	; (6F63:22B7=0EAh)
020C:F49E  E8 B1BB				call	sub_114			; (A65C)
020C:F4A1			loc_2566:
020C:F4A1  26: F6 45 04 1F			test	byte ptr es:[di+4],1Fh
020C:F4A6  74 07				jz	loc_2567		; Jump if zero
020C:F4A8  B0 1B				mov	al,1Bh
020C:F4AA  9A 1491:2770		;*		call	far ptr sub_175		;*(1491:2770)
020C:F4AA  9A					db	9Ah
020C:F4AB  2770 1491				dw	2770h, 1491h
020C:F4AF			loc_2567:
020C:F4AF  26: 8B 05				mov	ax,es:[di]
020C:F4B2  3B 06 1CE9				cmp	ax,word ptr ds:[1CE9h]	; (6F63:1CE9=4402h)
020C:F4B6  75 2F				jne	loc_2569		; Jump if not equal
020C:F4B8  26: 8B 45 02				mov	ax,es:[di+2]
020C:F4BC  3B 06 1CEB				cmp	ax,word ptr ds:[1CEBh]	; (6F63:1CEB=40D7h)
020C:F4C0  75 25				jne	loc_2569		; Jump if not equal
020C:F4C2  80 3E 3CFC 01			cmp	byte ptr ds:[3CFCh],1	; (6F63:3CFC=0FFh)
020C:F4C7  74 03				je	loc_2568		; Jump if equal
020C:F4C9  E9 00BE				jmp	loc_2577		; (F58A)
020C:F4CC			loc_2568:
020C:F4CC  C6 06 1CE8 01			mov	byte ptr ds:[1CE8h],1	; (6F63:1CE8=0Ch)
020C:F4D1  C6 06 3CFC 00			mov	byte ptr ds:[3CFCh],0	; (6F63:3CFC=0FFh)
020C:F4D6  B0 10				mov	al,10h
020C:F4D8  9A 1491:2770		;*		call	far ptr sub_175		;*(1491:2770)
020C:F4D8  9A					db	9Ah
020C:F4D9  2770 1491				dw	2770h, 1491h
020C:F4DD  B0 0D				mov	al,0Dh
020C:F4DF  9A 1491:2770		;*		call	far ptr sub_175		;*(1491:2770)
020C:F4DF  9A					db	9Ah
020C:F4E0  2770 1491				dw	2770h, 1491h
020C:F4E4  E9 00A3				jmp	loc_2577		; (F58A)
020C:F4E7			loc_2569:
020C:F4E7  26: 8A 4D 05				mov	cl,es:[di+5]
020C:F4EB  80 E1 03				and	cl,3
020C:F4EE  80 F9 03				cmp	cl,3
020C:F4F1  74 0F				je	loc_2570		; Jump if equal
020C:F4F3  81 3E 3257 00FE			cmp	word ptr ds:[3257h],0FEh	; (6F63:3257=0FFFFh)
020C:F4F9  73 07				jae	loc_2570		; Jump if above or =
020C:F4FB  83 3E 3257 00			cmp	word ptr ds:[3257h],0	; (6F63:3257=0FFFFh)
020C:F500  75 13				jne	loc_2571		; Jump if not equal
020C:F502			loc_2570:
020C:F502  B0 1A				mov	al,1Ah
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 496

020C:F504  9A 1491:2770		;*		call	far ptr sub_175		;*(1491:2770)
020C:F504  9A					db	9Ah
020C:F505  2770 1491				dw	2770h, 1491h
020C:F509  9A 1491:50EC		;*		call	far ptr sub_206		;*(1491:50EC)
020C:F509  9A					db	9Ah
020C:F50A  50EC 1491				dw	50ECh, 1491h
020C:F50E  B0 29				mov	al,29h			; ')'
020C:F510  9A 1491:2770		;*		call	far ptr sub_175		;*(1491:2770)
020C:F510  9A					db	9Ah
020C:F511  2770 1491				dw	2770h, 1491h
020C:F515			loc_2571:
020C:F515  26: F6 45 05 20			test	byte ptr es:[di+5],20h	; ' '
020C:F51A  74 6E				jz	loc_2577		; Jump if zero
020C:F51C  B9 250F				mov	cx,250Fh
020C:F51F  81 E9 2502				sub	cx,2502h
020C:F523  BD 1FC8				mov	bp,1FC8h
020C:F526  3E: 80 7E FF 20			cmp	byte ptr ds:[bp-1],20h	; ' '
020C:F52B  74 01				je	loc_2572		; Jump if equal
020C:F52D  45					inc	bp
020C:F52E			loc_2572:
020C:F52E  BE 2502				mov	si,2502h
020C:F531  26: F6 45 05 10			test	byte ptr es:[di+5],10h
020C:F536  75 03				jnz	locloop_2573		; Jump if not zero
020C:F538  BE 24F5				mov	si,24F5h

020C:F53B			locloop_2573:
020C:F53B  8A 04				mov	al,[si]
020C:F53D  3E: 88 46 00				mov	ds:[bp],al
020C:F541  46					inc	si
020C:F542  45					inc	bp
020C:F543  E2 F6				loop	locloop_2573		; Loop if cx > 0

020C:F545  BD 221F				mov	bp,221Fh
020C:F548  B9 0007				mov	cx,7
020C:F54B  9A 1491:34C0		;*		call	far ptr sub_191		;*(1491:34C0)
020C:F54B  9A					db	9Ah
020C:F54C  34C0 1491				dw	34C0h, 1491h
020C:F550  B9 223E				mov	cx,223Eh
020C:F553  2B CD				sub	cx,bp
020C:F555  E3 0D				jcxz	loc_2575		; Jump if cx=0
020C:F557  79 03				jns	locloop_2574		; Jump if not sign
020C:F559  B9 0002				mov	cx,2

020C:F55C			locloop_2574:
020C:F55C  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020C:F561  45					inc	bp
020C:F562  E2 F8				loop	locloop_2574		; Loop if cx > 0

020C:F564			loc_2575:
020C:F564  BE 250F				mov	si,250Fh
020C:F567  B9 2514				mov	cx,2514h
020C:F56A  81 E9 250F				sub	cx,250Fh
020C:F56E  BD 223F				mov	bp,223Fh
020C:F571  3E: 80 7E FF 20			cmp	byte ptr ds:[bp-1],20h	; ' '
020C:F576  74 01				je	locloop_2576		; Jump if equal
020C:F578  45					inc	bp

           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 497

020C:F579			locloop_2576:
020C:F579  8A 04				mov	al,[si]
020C:F57B  3E: 88 46 00				mov	ds:[bp],al
020C:F57F  46					inc	si
020C:F580  45					inc	bp
020C:F581  E2 F6				loop	locloop_2576		; Loop if cx > 0

020C:F583  C6 06 22B7 04			mov	byte ptr ds:[22B7h],4	; (6F63:22B7=0EAh)
020C:F588  EB 18				jmp	short loc_2578		; (F5A2)
020C:F58A			loc_2577:
020C:F58A  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020C:F58F  80 3E 13F0 0D			cmp	byte ptr ds:[13F0h],0Dh	; (6F63:13F0=7)
020C:F594  72 0C				jb	loc_2578		; Jump if below
020C:F596  80 3E 13F0 0F			cmp	byte ptr ds:[13F0h],0Fh	; (6F63:13F0=7)
020C:F59B  77 05				ja	loc_2578		; Jump if above
020C:F59D  3E: C6 46 01 3A			mov	byte ptr ds:[bp+1],3Ah	; ':'
020C:F5A2			loc_2578:
020C:F5A2  BA 1F88				mov	dx,1F88h
020C:F5A5  9A 1491:2470		;*		call	far ptr sub_174		;*(1491:2470)
020C:F5A5  9A					db	9Ah
020C:F5A6  2470 1491				dw	2470h, 1491h
020C:F5AA			loc_2579:
020C:F5AA  8B 1E 2154				mov	bx,word ptr ds:[2154h]	; (6F63:2154=93Eh)
020C:F5AE  E8 89BF				call	sub_99			; (7F70)
020C:F5B1  E9 FBC1				jmp	loc_2527		; (F175)
020C:F5B4			loc_2580:
020C:F5B4  C7 06 178D 0026			mov	word ptr ds:[178Dh],26h	; (6F63:178D=2800h)
020C:F5BA  9A 1491:3388		;*		call	far ptr sub_190		;*(1491:3388)
020C:F5BA  9A					db	9Ah
020C:F5BB  3388 1491				dw	3388h, 1491h
020C:F5BF  E8 6EAE				call	sub_67			; (6470)
020C:F5C2  A1 2156				mov	ax,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:F5C5  8B 1E 2154				mov	bx,word ptr ds:[2154h]	; (6F63:2154=93Eh)
020C:F5C9  BA 0002				mov	dx,2
020C:F5CC  E8 6F61				call	sub_69			; (6530)
020C:F5CF  72 6A				jc	loc_2589		; Jump if carry Set
020C:F5D1			loc_2581:
020C:F5D1  83 3E 1D6A 00			cmp	word ptr ds:[1D6Ah],0	; (6F63:1D6A=4140h)
020C:F5D6  75 4D				jne	loc_2588		; Jump if not equal
020C:F5D8			loc_2582:
020C:F5D8  80 3E 1CDE 02			cmp	byte ptr ds:[1CDEh],2	; (6F63:1CDE=8)
020C:F5DD  73 40				jae	loc_2587		; Jump if above or =
020C:F5DF  F6 06 216F 04			test	byte ptr ds:[216Fh],4	; (6F63:216F=41h)
020C:F5E4  75 23				jnz	loc_2585		; Jump if not zero
020C:F5E6  83 3E 1960 00			cmp	word ptr ds:[1960h],0	; (6F63:1960=41h)
020C:F5EB  75 07				jne	loc_2583		; Jump if not equal
020C:F5ED  83 3E 1962 00			cmp	word ptr ds:[1962h],0	; (6F63:1962=85Ch)
020C:F5F2  74 10				je	loc_2584		; Jump if equal
020C:F5F4			loc_2583:
020C:F5F4  81 3E 1960 2020			cmp	word ptr ds:[1960h],2020h	; (6F63:1960=41h)
020C:F5FA  75 1B				jne	loc_2586		; Jump if not equal
020C:F5FC  81 3E 1962 2020			cmp	word ptr ds:[1962h],2020h	; (6F63:1962=85Ch)
020C:F602  75 13				jne	loc_2586		; Jump if not equal
020C:F604			loc_2584:
020C:F604  80 0E 216F 04			or	byte ptr ds:[216Fh],4	; (6F63:216F=41h)
020C:F609			loc_2585:
020C:F609  80 3E 1F6D 01			cmp	byte ptr ds:[1F6Dh],1	; (6F63:1F6D=0)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 498

020C:F60E  74 07				je	loc_2586		; Jump if equal
020C:F610  80 3E 1CDE 01			cmp	byte ptr ds:[1CDEh],1	; (6F63:1CDE=8)
020C:F615  75 08				jne	loc_2587		; Jump if not equal
020C:F617			loc_2586:
020C:F617  80 26 216F FB			and	byte ptr ds:[216Fh],0FBh	; (6F63:216F=41h)
020C:F61C  E9 048C				jmp	loc_2648		; (FAAB)
020C:F61F			loc_2587:
020C:F61F  E8 83CC				call	sub_90			; (79EE)
020C:F622  E9 079C				jmp	loc_2696		; (FDC1)
020C:F625			loc_2588:
020C:F625  8B 1E 2154				mov	bx,word ptr ds:[2154h]	; (6F63:2154=93Eh)
020C:F629  E8 88D8				call	sub_98			; (7F04)
020C:F62C  8B 3E 1D6E				mov	di,word ptr ds:[1D6Eh]	; (6F63:1D6E=0C08h)
020C:F630  8B 1E 1D6A				mov	bx,word ptr ds:[1D6Ah]	; (6F63:1D6A=4140h)
020C:F634  8A 16 1D72				mov	dl,byte ptr ds:[1D72h]	; (6F63:1D72=0D8h)
020C:F638  E9 01CA				jmp	loc_2612		; (F805)
020C:F63B			loc_2589:
020C:F63B  80 3E 2172 01			cmp	byte ptr ds:[2172h],1	; (6F63:2172=2)
020C:F640  75 18				jne	loc_2591		; Jump if not equal
020C:F642  26: 8A 45 04				mov	al,es:[di+4]
020C:F646  24 3F				and	al,3Fh			; '?'
020C:F648  3C 22				cmp	al,22h			; '"'
020C:F64A  74 0E				je	loc_2591		; Jump if equal
020C:F64C  3C 20				cmp	al,20h			; ' '
020C:F64E  75 07				jne	loc_2590		; Jump if not equal
020C:F650  26: 83 7D 08 14			cmp	word ptr es:[di+8],14h
020C:F655  73 03				jae	loc_2591		; Jump if above or =
020C:F657			loc_2590:
020C:F657  E9 FF77				jmp	loc_2581		; (F5D1)
020C:F65A			loc_2591:
020C:F65A  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020C:F65F  74 03				jz	loc_2592		; Jump if zero
020C:F661  E9 FF74				jmp	loc_2582		; (F5D8)
020C:F664			loc_2592:
020C:F664  80 3E 1790 01			cmp	byte ptr ds:[1790h],1	; (6F63:1790=0Ch)
020C:F669  74 1C				je	loc_2593		; Jump if equal
020C:F66B  F6 06 216F 04			test	byte ptr ds:[216Fh],4	; (6F63:216F=41h)
020C:F670  75 15				jnz	loc_2593		; Jump if not zero
020C:F672  26: 8A 45 04				mov	al,es:[di+4]
020C:F676  A8 10				test	al,10h
020C:F678  74 0D				jz	loc_2593		; Jump if zero
020C:F67A  9A 1491:7CC0		;*		call	far ptr sub_242		;*(1491:7CC0)
020C:F67A  9A					db	9Ah
020C:F67B  7CC0 1491				dw	7CC0h, 1491h
020C:F67F  72 06				jc	loc_2593		; Jump if carry Set
020C:F681  E8 8DA0				call	sub_105			; (8424)
020C:F684  E9 0424				jmp	loc_2648		; (FAAB)
020C:F687			loc_2593:
020C:F687  A1 2156				mov	ax,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:F68A  0B C0				or	ax,ax			; Zero ?
020C:F68C  74 16				jz	loc_2594		; Jump if zero
020C:F68E  48					dec	ax
020C:F68F  26: 03 45 08				add	ax,es:[di+8]
020C:F693  73 0F				jnc	loc_2594		; Jump if carry=0
020C:F695  40					inc	ax
020C:F696  26: 29 45 08				sub	es:[di+8],ax
020C:F69A  26: 80 65 04 C0			and	byte ptr es:[di+4],0C0h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 499

020C:F69F  26: 80 4D 04 01			or	byte ptr es:[di+4],1
020C:F6A4			loc_2594:
020C:F6A4  80 3E 178F 06			cmp	byte ptr ds:[178Fh],6	; (6F63:178F=8)
020C:F6A9  73 12				jae	loc_2597		; Jump if above or =
020C:F6AB			loc_2595:
020C:F6AB  C6 06 4568 09			mov	byte ptr ds:[4568h],9	; (6F63:4568=0FFh)
020C:F6B0  80 0E 216F 04			or	byte ptr ds:[216Fh],4	; (6F63:216F=41h)
020C:F6B5			loc_2596:
020C:F6B5  80 0E 1D29 20			or	byte ptr ds:[1D29h],20h	; (6F63:1D29=0B8h) ' '
020C:F6BA  E9 00AD				jmp	loc_2604		; (F76A)
020C:F6BD			loc_2597:
020C:F6BD  F6 06 216F 04			test	byte ptr ds:[216Fh],4	; (6F63:216F=41h)
020C:F6C2  75 F1				jnz	loc_2596		; Jump if not zero
020C:F6C4  26: 83 7D 08 20			cmp	word ptr es:[di+8],20h
020C:F6C9  72 0A				jb	loc_2598		; Jump if below
020C:F6CB  26: 8A 45 04				mov	al,es:[di+4]
020C:F6CF  24 3F				and	al,3Fh			; '?'
020C:F6D1  3C 20				cmp	al,20h			; ' '
020C:F6D3  73 D6				jae	loc_2595		; Jump if above or =
020C:F6D5			loc_2598:
020C:F6D5  F7 06 3D18 0004			test	word ptr ds:[3D18h],4	; (6F63:3D18=0FFFFh)
020C:F6DB  75 0A				jnz	loc_2599		; Jump if not zero
020C:F6DD  9A 1491:7CC0		;*		call	far ptr sub_242		;*(1491:7CC0)
020C:F6DD  9A					db	9Ah
020C:F6DE  7CC0 1491				dw	7CC0h, 1491h
020C:F6E2  72 03				jc	loc_2599		; Jump if carry Set
020C:F6E4  E9 FEEA				jmp	loc_2581		; (F5D1)
020C:F6E7			loc_2599:
020C:F6E7  26: 8A 45 04				mov	al,es:[di+4]
020C:F6EB  A8 40				test	al,40h			; '@'
020C:F6ED  75 18				jnz	loc_2601		; Jump if not zero
020C:F6EF  24 3F				and	al,3Fh			; '?'
020C:F6F1  3C 21				cmp	al,21h			; '!'
020C:F6F3  73 0A				jae	loc_2600		; Jump if above or =
020C:F6F5  80 3E 1790 01			cmp	byte ptr ds:[1790h],1	; (6F63:1790=0Ch)
020C:F6FA  75 0B				jne	loc_2601		; Jump if not equal
020C:F6FC  E9 FED2				jmp	loc_2581		; (F5D1)
020C:F6FF			loc_2600:
020C:F6FF  E8 B04A				call	sub_117			; (A74C)
020C:F702  C6 06 4568 09			mov	byte ptr ds:[4568h],9	; (6F63:4568=0FFh)
020C:F707			loc_2601:
020C:F707  80 0E 216F 04			or	byte ptr ds:[216Fh],4	; (6F63:216F=41h)
020C:F70C  A1 2156				mov	ax,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:F70F  3B 06 2198				cmp	ax,word ptr ds:[2198h]	; (6F63:2198=40E2h)
020C:F713  75 55				jne	loc_2604		; Jump if not equal
020C:F715  57					push	di
020C:F716  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:F71B  06					push	es
020C:F71C  8B 3E 219A				mov	di,word ptr ds:[219Ah]	; (6F63:219A=41h)
020C:F720  83 FF FF				cmp	di,0FFFFh
020C:F723  74 19				je	loc_2602		; Jump if equal
020C:F725  8B 1E 2154				mov	bx,word ptr ds:[2154h]	; (6F63:2154=93Eh)
020C:F729  E8 8844				call	sub_99			; (7F70)
020C:F72C  26: 3B 45 02				cmp	ax,es:[di+2]
020C:F730  75 0C				jne	loc_2602		; Jump if not equal
020C:F732  9A 1491:7CC0		;*		call	far ptr sub_242		;*(1491:7CC0)
020C:F732  9A					db	9Ah
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 500

020C:F733  7CC0 1491				dw	7CC0h, 1491h
020C:F737  72 05				jc	loc_2602		; Jump if carry Set
020C:F739  8B F7				mov	si,di
020C:F73B  E8 93A2				call	sub_108			; (8AE0)
020C:F73E			loc_2602:
020C:F73E  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:F743  9C					pushf				; Push flags
020C:F744  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:F749  5A					pop	dx
020C:F74A  8E C2				mov	es,dx
020C:F74C  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:F751  5A					pop	dx
020C:F752  75 0A				jnz	loc_2603		; Jump if not zero
020C:F754  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:F759  74 03				je	loc_2603		; Jump if equal
020C:F75B  E8 8752				call	sub_97			; (7EB0)
020C:F75E			loc_2603:
020C:F75E  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:F763  9D					popf				; Pop flags
020C:F764  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:F769  5F					pop	di
020C:F76A			loc_2604:
020C:F76A  26: 8A 45 04				mov	al,es:[di+4]
020C:F76E  24 3F				and	al,3Fh			; '?'
020C:F770  3C 20				cmp	al,20h			; ' '
020C:F772  75 03				jne	loc_2605		; Jump if not equal
020C:F774  E8 BE49				call	sub_128			; (B5C0)
020C:F777			loc_2605:
020C:F777  80 3E 178B 02			cmp	byte ptr ds:[178Bh],2	; (6F63:178B=40h)
020C:F77C  77 05				ja	loc_2606		; Jump if above
020C:F77E  26: 80 4D 05 20			or	byte ptr es:[di+5],20h	; ' '
020C:F783			loc_2606:
020C:F783  26: F6 45 04 80			test	byte ptr es:[di+4],80h
020C:F788  74 0B				jz	loc_2607		; Jump if zero
020C:F78A  BD 1A43				mov	bp,1A43h
020C:F78D  BE 2F23				mov	si,2F23h
020C:F790  9A 1491:67E0		;*		call	far ptr sub_220		;*(1491:67E0)
020C:F790  9A					db	9Ah
020C:F791  67E0 1491				dw	67E0h, 1491h
020C:F795			loc_2607:
020C:F795  57					push	di
020C:F796  9A 1491:7CC0		;*		call	far ptr sub_242		;*(1491:7CC0)
020C:F796  9A					db	9Ah
020C:F797  7CC0 1491				dw	7CC0h, 1491h
020C:F79B  72 07				jc	loc_2608		; Jump if carry Set
020C:F79D  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020C:F7A2  74 58				jz	loc_2611		; Jump if zero
020C:F7A4			loc_2608:
020C:F7A4  80 3E 3259 13			cmp	byte ptr ds:[3259h],13h	; (6F63:3259=0FFh)
020C:F7A9  74 46				je	loc_2610		; Jump if equal
020C:F7AB  33 C0				xor	ax,ax			; Zero register
020C:F7AD  80 3E 1790 01			cmp	byte ptr ds:[1790h],1	; (6F63:1790=0Ch)
020C:F7B2  75 48				jne	loc_2611		; Jump if not equal
020C:F7B4  26: 8A 45 06				mov	al,es:[di+6]
020C:F7B8  B4 12				mov	ah,12h
020C:F7BA  BB 000A				mov	bx,0Ah
020C:F7BD  BE 325C				mov	si,325Ch
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 501

020C:F7C0  9A 1491:692C		;*		call	far ptr sub_223		;*(1491:692C)
020C:F7C0  9A					db	9Ah
020C:F7C1  692C 1491				dw	692Ch, 1491h
020C:F7C5  72 13				jc	loc_2609		; Jump if carry Set
020C:F7C7  26: F6 45 07 04			test	byte ptr es:[di+7],4
020C:F7CC  75 0C				jnz	loc_2609		; Jump if not zero
020C:F7CE  26: 8B 45 06				mov	ax,es:[di+6]
020C:F7D2  25 03FF				and	ax,3FFh
020C:F7D5  C6 06 3259 02			mov	byte ptr ds:[3259h],2	; (6F63:3259=0FFh)
020C:F7DA			loc_2609:
020C:F7DA  A3 3257				mov	word ptr ds:[3257h],ax	; (6F63:3257=0FFFFh)
020C:F7DD  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020C:F7E2  74 0D				jz	loc_2610		; Jump if zero
020C:F7E4  26: 80 65 04 BF			and	byte ptr es:[di+4],0BFh
020C:F7E9  C7 06 3257 0000			mov	word ptr ds:[3257h],0	; (6F63:3257=0FFFFh)
020C:F7EF  EB 0B				jmp	short loc_2611		; (F7FC)
020C:F7F1			loc_2610:
020C:F7F1  BD 19D3				mov	bp,19D3h
020C:F7F4  B9 000A				mov	cx,0Ah
020C:F7F7  9A 1491:34C0		;*		call	far ptr sub_191		;*(1491:34C0)
020C:F7F7  9A					db	9Ah
020C:F7F8  34C0 1491				dw	34C0h, 1491h
020C:F7FC			loc_2611:
020C:F7FC  5F					pop	di
020C:F7FD  26: 8A 55 04				mov	dl,es:[di+4]
020C:F801  26: 8B 5D 08				mov	bx,es:[di+8]
020C:F805			loc_2612:
020C:F805  89 1E 1D66				mov	word ptr ds:[1D66h],bx	; (6F63:1D66=20Ch)
020C:F809  89 1E 1D68				mov	word ptr ds:[1D68h],bx	; (6F63:1D68=0D847h)
020C:F80D  53					push	bx
020C:F80E  BB 2F78				mov	bx,2F78h
020C:F811  26: 8A 45 05				mov	al,es:[di+5]
020C:F815  25 000F				and	ax,0Fh
020C:F818  D7					xlat				; al=[al+[bx]] table
020C:F819  0A C0				or	al,al			; Zero ?
020C:F81B  75 04				jnz	loc_2613		; Jump if not zero
020C:F81D  26: 8A 45 06				mov	al,es:[di+6]
020C:F821			loc_2613:
020C:F821  5B					pop	bx
020C:F822  8B E8				mov	bp,ax
020C:F824  8B 0E 2154				mov	cx,word ptr ds:[2154h]	; (6F63:2154=93Eh)
020C:F828  26: 3B 0B				cmp	cx,es:[bp+di]
020C:F82B  75 3D				jne	loc_2616		; Jump if not equal
020C:F82D  26: 8B 4B 02				mov	cx,es:[bp+di+2]
020C:F831  3B 0E 2156				cmp	cx,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:F835  76 33				jbe	loc_2616		; Jump if below or =
020C:F837  8B C3				mov	ax,bx
020C:F839  03 06 2156				add	ax,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:F83D  73 04				jnc	loc_2614		; Jump if carry=0
020C:F83F  B8 FFFF				mov	ax,0FFFFh
020C:F842  49					dec	cx
020C:F843			loc_2614:
020C:F843  3B C1				cmp	ax,cx
020C:F845  76 23				jbe	loc_2616		; Jump if below or =
020C:F847  80 3E 1790 01			cmp	byte ptr ds:[1790h],1	; (6F63:1790=0Ch)
020C:F84C  74 0E				je	loc_2615		; Jump if equal
020C:F84E  2B C1				sub	ax,cx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 502

020C:F850  2B D8				sub	bx,ax
020C:F852  89 1E 1D66				mov	word ptr ds:[1D66h],bx	; (6F63:1D66=20Ch)
020C:F856  89 1E 1D68				mov	word ptr ds:[1D68h],bx	; (6F63:1D68=0D847h)
020C:F85A  EB 0E				jmp	short loc_2616		; (F86A)
020C:F85C			loc_2615:
020C:F85C  26: F6 43 05 80			test	byte ptr es:[bp+di+5],80h
020C:F861  75 07				jnz	loc_2616		; Jump if not zero
020C:F863  26: 8B 43 02				mov	ax,es:[bp+di+2]
020C:F867  A3 3D7F				mov	word ptr ds:[3D7Fh],ax	; (6F63:3D7F=0FFFFh)
020C:F86A			loc_2616:
020C:F86A  80 3E 1790 01			cmp	byte ptr ds:[1790h],1	; (6F63:1790=0Ch)
020C:F86F  75 05				jne	loc_2617		; Jump if not equal
020C:F871  26: 80 4D 05 40			or	byte ptr es:[di+5],40h	; '@'
020C:F876			loc_2617:
020C:F876  8B F7				mov	si,di
020C:F878  BF 6BC0				mov	di,6BC0h
020C:F87B  80 E2 3F				and	dl,3Fh			; '?'
020C:F87E  80 FA 00				cmp	dl,0
020C:F881  74 2A				je	loc_2622		; Jump if equal
020C:F883  80 FA 01				cmp	dl,1
020C:F886  74 2B				je	loc_2624		; Jump if equal
020C:F888  80 FA 02				cmp	dl,2
020C:F88B  74 23				je	loc_2623		; Jump if equal
020C:F88D  80 FA 04				cmp	dl,4
020C:F890  75 03				jne	loc_2618		; Jump if not equal
020C:F892  E9 0082				jmp	loc_2628		; (F917)
020C:F895			loc_2618:
020C:F895  F6 C2 10				test	dl,10h
020C:F898  75 16				jnz	loc_2623		; Jump if not zero
020C:F89A  80 FA 21				cmp	dl,21h			; '!'
020C:F89D  72 03				jb	loc_2619		; Jump if below
020C:F89F  E9 01AD				jmp	loc_2642		; (FA4F)
020C:F8A2			loc_2619:
020C:F8A2  80 FA 20				cmp	dl,20h			; ' '
020C:F8A5  75 03				jne	loc_2621		; Jump if not equal
020C:F8A7			loc_2620:
020C:F8A7  BF 6BD6				mov	di,6BD6h
020C:F8AA			loc_2621:
020C:F8AA  E9 01DE				jmp	loc_2645		; (FA8B)
020C:F8AD			loc_2622:
020C:F8AD  E9 009B				jmp	loc_2631		; (F94B)
020C:F8B0			loc_2623:
020C:F8B0  E9 00A0				jmp	loc_2633		; (F953)
020C:F8B3			loc_2624:
020C:F8B3  80 3E 178B 02			cmp	byte ptr ds:[178Bh],2	; (6F63:178B=40h)
020C:F8B8  77 F0				ja	loc_2621		; Jump if above
020C:F8BA  87 F7				xchg	si,di
020C:F8BC  9A 1491:7CC0		;*		call	far ptr sub_242		;*(1491:7CC0)
020C:F8BC  9A					db	9Ah
020C:F8BD  7CC0 1491				dw	7CC0h, 1491h
020C:F8C1  87 F7				xchg	si,di
020C:F8C3  72 E5				jc	loc_2621		; Jump if carry Set
020C:F8C5  26: 83 7C 08 01			cmp	word ptr es:[si+8],1
020C:F8CA  77 DE				ja	loc_2621		; Jump if above
020C:F8CC  A1 3D85				mov	ax,word ptr ds:[3D85h]	; (6F63:3D85=0FFFFh)
020C:F8CF  8B 0E 1CF8				mov	cx,word ptr ds:[1CF8h]	; (6F63:1CF8=8C2h)
020C:F8D3  41					inc	cx
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 503

020C:F8D4  2B 0E 2156				sub	cx,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:F8D8  2B 06 2156				sub	ax,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:F8DC  3B C1				cmp	ax,cx
020C:F8DE  72 02				jb	loc_2625		; Jump if below
020C:F8E0  8B C1				mov	ax,cx
020C:F8E2			loc_2625:
020C:F8E2  3D 0027				cmp	ax,27h
020C:F8E5  76 03				jbe	loc_2626		; Jump if below or =
020C:F8E7  B8 0027				mov	ax,27h
020C:F8EA			loc_2626:
020C:F8EA  3D 0007				cmp	ax,7
020C:F8ED  76 BB				jbe	loc_2621		; Jump if below or =
020C:F8EF  9A 1491:4BA0		;*		call	far ptr sub_202		;*(1491:4BA0)
020C:F8EF  9A					db	9Ah
020C:F8F0  4BA0 1491				dw	4BA0h, 1491h
020C:F8F4  3D 0007				cmp	ax,7
020C:F8F7  76 B1				jbe	loc_2621		; Jump if below or =
020C:F8F9  3D 0027				cmp	ax,27h
020C:F8FC  72 03				jb	loc_2627		; Jump if below
020C:F8FE  B8 0020				mov	ax,20h
020C:F901			loc_2627:
020C:F901  26: 80 64 04 C0			and	byte ptr es:[si+4],0C0h
020C:F906  26: 80 4C 04 20			or	byte ptr es:[si+4],20h	; ' '
020C:F90B  26: 89 44 08				mov	es:[si+8],ax
020C:F90F  A3 1D66				mov	word ptr ds:[1D66h],ax	; (6F63:1D66=20Ch)
020C:F912  A3 1D68				mov	word ptr ds:[1D68h],ax	; (6F63:1D68=0D847h)
020C:F915  EB 90				jmp	short loc_2620		; (F8A7)
020C:F917			loc_2628:
020C:F917  F7 C3 0003				test	bx,3
020C:F91B  74 28				jz	loc_2630		; Jump if zero
020C:F91D  F7 C3 FFFC				test	bx,0FFFCh
020C:F921  75 13				jnz	loc_2629		; Jump if not zero
020C:F923  80 3E 1790 01			cmp	byte ptr ds:[1790h],1	; (6F63:1790=0Ch)
020C:F928  75 29				jne	loc_2633		; Jump if not equal
020C:F92A  26: 80 64 04 C0			and	byte ptr es:[si+4],0C0h
020C:F92F  26: 80 4C 04 02			or	byte ptr es:[si+4],2
020C:F934  EB 1D				jmp	short loc_2633		; (F953)
020C:F936			loc_2629:
020C:F936  83 E3 FC				and	bx,0FFFCh
020C:F939  26: 89 5C 08				mov	es:[si+8],bx
020C:F93D  89 1E 1D66				mov	word ptr ds:[1D66h],bx	; (6F63:1D66=20Ch)
020C:F941  89 1E 1D68				mov	word ptr ds:[1D68h],bx	; (6F63:1D68=0D847h)
020C:F945			loc_2630:
020C:F945  BF 6CB2				mov	di,6CB2h
020C:F948  E9 0140				jmp	loc_2645		; (FA8B)
020C:F94B			loc_2631:
020C:F94B  83 FB 02				cmp	bx,2
020C:F94E  74 03				je	loc_2633		; Jump if equal
020C:F950			loc_2632:
020C:F950  E9 0138				jmp	loc_2645		; (FA8B)
020C:F953			loc_2633:
020C:F953  F7 C3 0001				test	bx,1
020C:F957  74 24				jz	loc_2635		; Jump if zero
020C:F959  F7 C3 FFFE				test	bx,0FFFEh
020C:F95D  75 13				jnz	loc_2634		; Jump if not zero
020C:F95F  80 3E 1790 01			cmp	byte ptr ds:[1790h],1	; (6F63:1790=0Ch)
020C:F964  75 EA				jne	loc_2632		; Jump if not equal
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 504

020C:F966  26: 80 64 04 C0			and	byte ptr es:[si+4],0C0h
020C:F96B  26: 80 4C 04 01			or	byte ptr es:[si+4],1
020C:F970  EB DE				jmp	short loc_2632		; (F950)
020C:F972			loc_2634:
020C:F972  83 E3 FE				and	bx,0FFFEh
020C:F975  89 1E 1D66				mov	word ptr ds:[1D66h],bx	; (6F63:1D66=20Ch)
020C:F979  89 1E 1D68				mov	word ptr ds:[1D68h],bx	; (6F63:1D68=0D847h)
020C:F97D			loc_2635:
020C:F97D  BF 6C18				mov	di,6C18h
020C:F980  F6 C2 10				test	dl,10h
020C:F983  74 4A				jz	loc_2637		; Jump if zero
020C:F985  BF 6C2E				mov	di,6C2Eh
020C:F988  80 FA 10				cmp	dl,10h
020C:F98B  74 58				je	loc_2639		; Jump if equal
020C:F98D  BF 6C5A				mov	di,6C5Ah
020C:F990  80 FA 12				cmp	dl,12h
020C:F993  74 50				je	loc_2639		; Jump if equal
020C:F995  BF 6C86				mov	di,6C86h
020C:F998  80 FA 14				cmp	dl,14h
020C:F99B  74 48				je	loc_2639		; Jump if equal
020C:F99D  BF 6C18				mov	di,6C18h
020C:F9A0  F7 C3 0003				test	bx,3
020C:F9A4  74 11				jz	loc_2636		; Jump if zero
020C:F9A6  F7 C3 FFFC				test	bx,0FFFCh
020C:F9AA  74 23				jz	loc_2637		; Jump if zero
020C:F9AC  83 E3 FC				and	bx,0FFFCh
020C:F9AF  89 1E 1D66				mov	word ptr ds:[1D66h],bx	; (6F63:1D66=20Ch)
020C:F9B3  89 1E 1D68				mov	word ptr ds:[1D68h],bx	; (6F63:1D68=0D847h)
020C:F9B7			loc_2636:
020C:F9B7  BF 6C44				mov	di,6C44h
020C:F9BA  80 FA 11				cmp	dl,11h
020C:F9BD  74 10				je	loc_2637		; Jump if equal
020C:F9BF  BF 6C70				mov	di,6C70h
020C:F9C2  80 FA 13				cmp	dl,13h
020C:F9C5  74 08				je	loc_2637		; Jump if equal
020C:F9C7  BF 6C9C				mov	di,6C9Ch
020C:F9CA  80 FA 15				cmp	dl,15h
020C:F9CD  75 03				jne	loc_2638		; Jump if not equal
020C:F9CF			loc_2637:
020C:F9CF  E9 00B9				jmp	loc_2645		; (FA8B)
020C:F9D2			loc_2638:
020C:F9D2  BF 6CC8				mov	di,6CC8h
020C:F9D5  80 FA 18				cmp	dl,18h
020C:F9D8  74 0B				je	loc_2639		; Jump if equal
020C:F9DA  BF 6CDE				mov	di,6CDEh
020C:F9DD  80 FA 1A				cmp	dl,1Ah
020C:F9E0  74 03				je	loc_2639		; Jump if equal
020C:F9E2  BF 6CF4				mov	di,6CF4h
020C:F9E5			loc_2639:
020C:F9E5  8B 16 2154				mov	dx,word ptr ds:[2154h]	; (6F63:2154=93Eh)
020C:F9E9  26: F6 44 07 04			test	byte ptr es:[si+7],4
020C:F9EE  74 5D				jz	loc_2641		; Jump if zero
020C:F9F0  8A E2				mov	ah,dl
020C:F9F2  50					push	ax
020C:F9F3  53					push	bx
020C:F9F4  2E: FF 36 3F74			push	cs:data_653		; (020C:3F74=4F3Ch)
020C:F9F9  06					push	es
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 505

020C:F9FA  26: 8A 5C 06				mov	bl,es:[si+6]
020C:F9FE  B0 19				mov	al,19h
020C:FA00  F6 E3				mul	bl			; ax = reg * al
020C:FA02  8B D8				mov	bx,ax
020C:FA04  81 C3 0000				add	bx,0
020C:FA08  E8 7FD7				call	sub_87			; (79E2)
020C:FA0B  26: 8B 17				mov	dx,es:[bx]
020C:FA0E  2E: 89 16 00C2			mov	word ptr cs:[0C2h],dx	; (020C:00C2=8)
020C:FA13  9C					pushf				; Push flags
020C:FA14  2E: 8F 06 00C6			pop	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:FA19  5A					pop	dx
020C:FA1A  8E C2				mov	es,dx
020C:FA1C  2E: 3B 16 3F72			cmp	dx,cs:data_652		; (020C:3F72=0C4FEh)
020C:FA21  5A					pop	dx
020C:FA22  75 0A				jnz	loc_2640		; Jump if not zero
020C:FA24  2E: 3B 16 3F74			cmp	dx,cs:data_653		; (020C:3F74=4F3Ch)
020C:FA29  74 03				je	loc_2640		; Jump if equal
020C:FA2B  E8 8482				call	sub_97			; (7EB0)
020C:FA2E			loc_2640:
020C:FA2E  2E: FF 36 00C6			push	word ptr cs:[0C6h]	; (020C:00C6=0Fh)
020C:FA33  9D					popf				; Pop flags
020C:FA34  2E: 8B 16 00C2			mov	dx,word ptr cs:[0C2h]	; (020C:00C2=8)
020C:FA39  5B					pop	bx
020C:FA3A  58					pop	ax
020C:FA3B  26: 8A 44 04				mov	al,es:[si+4]
020C:FA3F  89 16 2174				mov	word ptr ds:[2174h],dx	; (6F63:2174=40E2h)
020C:FA43  80 E4 07				and	ah,7
020C:FA46  80 CC 40				or	ah,40h			; '@'
020C:FA49  88 26 2173				mov	byte ptr ds:[2173h],ah	; (6F63:2173=5Dh)
020C:FA4D			loc_2641:
020C:FA4D  EB 3C				jmp	short loc_2645		; (FA8B)
020C:FA4F			loc_2642:
020C:FA4F  83 FB 01				cmp	bx,1
020C:FA52  74 37				je	loc_2645		; Jump if equal
020C:FA54  83 FB 02				cmp	bx,2
020C:FA57  75 03				jne	loc_2643		; Jump if not equal
020C:FA59  E9 FEF7				jmp	loc_2633		; (F953)
020C:FA5C			loc_2643:
020C:FA5C  80 FA 22				cmp	dl,22h			; '"'
020C:FA5F  74 05				je	loc_2644		; Jump if equal
020C:FA61  BF 6BEC				mov	di,6BECh
020C:FA64  EB 25				jmp	short loc_2645		; (FA8B)
020C:FA66			loc_2644:
020C:FA66  BF 6C02				mov	di,6C02h
020C:FA69  F7 C3 0001				test	bx,1
020C:FA6D  74 1C				jz	loc_2645		; Jump if zero
020C:FA6F  88 16 1D72				mov	byte ptr ds:[1D72h],dl	; (6F63:1D72=0D8h)
020C:FA73  4B					dec	bx
020C:FA74  FF 0E 1D66				dec	word ptr ds:[1D66h]	; (6F63:1D66=20Ch)
020C:FA78  FF 0E 1D68				dec	word ptr ds:[1D68h]	; (6F63:1D68=0D847h)
020C:FA7C  FF 06 1D6A				inc	word ptr ds:[1D6Ah]	; (6F63:1D6A=4140h)
020C:FA80  83 3E 1D6A 01			cmp	word ptr ds:[1D6Ah],1	; (6F63:1D6A=4140h)
020C:FA85  77 04				ja	loc_2645		; Jump if above
020C:FA87  01 1E 1D6A				add	word ptr ds:[1D6Ah],bx	; (6F63:1D6A=4140h)
020C:FA8B			loc_2645:
020C:FA8B  83 3E 1D6A 00			cmp	word ptr ds:[1D6Ah],0	; (6F63:1D6A=4140h)
020C:FA90  74 16				je	loc_2647		; Jump if equal
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 506

020C:FA92  39 1E 1D6A				cmp	word ptr ds:[1D6Ah],bx	; (6F63:1D6A=4140h)
020C:FA96  77 08				ja	loc_2646		; Jump if above
020C:FA98  C7 06 1D6A 0000			mov	word ptr ds:[1D6Ah],0	; (6F63:1D6A=4140h)
020C:FA9E  EB 08				jmp	short loc_2647		; (FAA8)
020C:FAA0			loc_2646:
020C:FAA0  29 1E 1D6A				sub	word ptr ds:[1D6Ah],bx	; (6F63:1D6A=4140h)
020C:FAA4  89 36 1D6E				mov	word ptr ds:[1D6Eh],si	; (6F63:1D6E=0C08h)
020C:FAA8			loc_2647:
020C:FAA8  E9 0598				jmp	$+59Bh
020C:FAAB			loc_2648:
020C:FAAB  C7 06 178D 0027			mov	word ptr ds:[178Dh],27h	; (6F63:178D=2800h)
020C:FAB1  9A 1491:3388		;*		call	far ptr sub_190		;*(1491:3388)
020C:FAB1  9A					db	9Ah
020C:FAB2  3388 1491				dw	3388h, 1491h
020C:FAB6  E8 7F35				call	sub_90			; (79EE)
020C:FAB9  F6 06 230A 7F			test	byte ptr ds:[230Ah],7Fh	; (6F63:230A=40h)
020C:FABE  75 12				jnz	loc_2649		; Jump if not zero
020C:FAC0  BE 1960				mov	si,1960h
020C:FAC3  9A 1491:85FC		;*		call	far ptr sub_251		;*(1491:85FC)
020C:FAC3  9A					db	9Ah
020C:FAC4  85FC 1491				dw	85FCh, 1491h
020C:FAC8  73 08				jnc	loc_2649		; Jump if carry=0
020C:FACA  C6 06 2348 00			mov	byte ptr ds:[2348h],0	; (6F63:2348=0E5h)
020C:FACF  E9 1331				jmp	loc_78			; (0E03)
020C:FAD2			loc_2649:
020C:FAD2  E8 7433				call	sub_75			; (6F08)
020C:FAD5  72 09				jc	loc_2651		; Jump if carry Set
020C:FAD7  E9 028D				jmp	loc_2693		; (FD67)
020C:FADA			loc_2650:
020C:FADA  BB 0006				mov	bx,6
020C:FADD  E9 780E				jmp	loc_1076		; (72EE)
020C:FAE0			loc_2651:
020C:FAE0  26: 8A 55 01				mov	dl,es:[di+1]
020C:FAE4  80 FA FF				cmp	dl,0FFh
020C:FAE7  74 2F				je	loc_2652		; Jump if equal
020C:FAE9  86 C4				xchg	al,ah
020C:FAEB  8A D8				mov	bl,al
020C:FAED  8A F2				mov	dh,dl
020C:FAEF  80 E6 07				and	dh,7
020C:FAF2  80 FE 00				cmp	dh,0
020C:FAF5  74 73				je	loc_2656		; Jump if equal
020C:FAF7  80 FE 01				cmp	dh,1
020C:FAFA  74 76				je	loc_2657		; Jump if equal
020C:FAFC  80 FE 02				cmp	dh,2
020C:FAFF  74 79				je	loc_2658		; Jump if equal
020C:FB01  80 FE 03				cmp	dh,3
020C:FB04  74 12				je	loc_2652		; Jump if equal
020C:FB06  80 FE 04				cmp	dh,4
020C:FB09  74 77				je	loc_2659		; Jump if equal
020C:FB0B  80 FE 05				cmp	dh,5
020C:FB0E  74 76				je	loc_2660		; Jump if equal
020C:FB10  80 FE 06				cmp	dh,6
020C:FB13  75 C5				jne	loc_2650		; Jump if not equal
020C:FB15  E9 00A2				jmp	loc_2663		; (FBBA)
020C:FB18			loc_2652:
020C:FB18  26: 8A 45 0E				mov	al,es:[di+0Eh]
020C:FB1C  24 07				and	al,7
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 507

020C:FB1E  22 06 1D5A				and	al,byte ptr ds:[1D5Ah]	; (6F63:1D5A=0)
020C:FB22  75 12				jnz	loc_2653		; Jump if not zero
020C:FB24  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020C:FB28  23 06 1D48				and	ax,word ptr ds:[1D48h]	; (6F63:1D48=0CB00h)
020C:FB2C  75 08				jnz	loc_2653		; Jump if not zero
020C:FB2E  80 0E 4568 40			or	byte ptr ds:[4568h],40h	; (6F63:4568=0FFh) '@'
020C:FB33  E9 0105				jmp	loc_2670		; (FC3B)
020C:FB36			loc_2653:
020C:FB36  80 3E 1547 00			cmp	byte ptr ds:[1547h],0	; (6F63:1547=0Ch)
020C:FB3B  74 2A				je	loc_2655		; Jump if equal
020C:FB3D  26: 80 3D 90				cmp	byte ptr es:[di],90h
020C:FB41  74 24				je	loc_2655		; Jump if equal
020C:FB43  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020C:FB47  23 06 13F1				and	ax,word ptr ds:[13F1h]	; (6F63:13F1=20Ch)
020C:FB4B  74 15				jz	loc_2654		; Jump if zero
020C:FB4D  26: F6 45 0E 04			test	byte ptr es:[di+0Eh],4
020C:FB52  74 13				jz	loc_2655		; Jump if zero
020C:FB54  80 3E 13F0 02			cmp	byte ptr ds:[13F0h],2	; (6F63:13F0=7)
020C:FB59  74 07				je	loc_2654		; Jump if equal
020C:FB5B  80 3E 13F0 0A			cmp	byte ptr ds:[13F0h],0Ah	; (6F63:13F0=7)
020C:FB60  75 05				jne	loc_2655		; Jump if not equal
020C:FB62			loc_2654:
020C:FB62  C6 06 3CFE 01			mov	byte ptr ds:[3CFEh],1	; (6F63:3CFE=0FFh)
020C:FB67			loc_2655:
020C:FB67  E9 00F2				jmp	loc_2671		; (FC5C)
020C:FB6A			loc_2656:
020C:FB6A  80 E2 38				and	dl,38h			; '8'
020C:FB6D  80 E3 38				and	bl,38h			; '8'
020C:FB70  EB 5D				jmp	short loc_2665		; (FBCF)
020C:FB72			loc_2657:
020C:FB72  80 E2 C0				and	dl,0C0h
020C:FB75  80 E3 C0				and	bl,0C0h
020C:FB78  EB 55				jmp	short loc_2665		; (FBCF)
020C:FB7A			loc_2658:
020C:FB7A  80 E2 F8				and	dl,0F8h
020C:FB7D  80 E3 F8				and	bl,0F8h
020C:FB80  EB 4D				jmp	short loc_2665		; (FBCF)
020C:FB82			loc_2659:
020C:FB82  B2 0A				mov	dl,0Ah
020C:FB84  EB 49				jmp	short loc_2665		; (FBCF)
020C:FB86			loc_2660:
020C:FB86  8A C2				mov	al,dl
020C:FB88  24 18				and	al,18h
020C:FB8A  3C 18				cmp	al,18h
020C:FB8C  75 07				jne	loc_2661		; Jump if not equal
020C:FB8E  C6 06 1D5E 01			mov	byte ptr ds:[1D5Eh],1	; (6F63:1D5E=2)
020C:FB93  EB 31				jmp	short loc_2664		; (FBC6)
020C:FB95			loc_2661:
020C:FB95  F6 C2 10				test	dl,10h
020C:FB98  74 0C				jz	loc_2662		; Jump if zero
020C:FB9A  8A 44 02				mov	al,[si+2]
020C:FB9D  26: 3A 45 0B				cmp	al,es:[di+0Bh]
020C:FBA1  74 03				je	loc_2662		; Jump if equal
020C:FBA3  E9 0095				jmp	loc_2670		; (FC3B)
020C:FBA6			loc_2662:
020C:FBA6  F6 C2 08				test	dl,8
020C:FBA9  74 1B				jz	loc_2664		; Jump if zero
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 508

020C:FBAB  80 E2 C0				and	dl,0C0h
020C:FBAE  8A 44 02				mov	al,[si+2]
020C:FBB1  24 C0				and	al,0C0h
020C:FBB3  3A C2				cmp	al,dl
020C:FBB5  74 0F				je	loc_2664		; Jump if equal
020C:FBB7  E9 0081				jmp	loc_2670		; (FC3B)
020C:FBBA			loc_2663:
020C:FBBA  80 E2 F8				and	dl,0F8h
020C:FBBD  8A 44 02				mov	al,[si+2]
020C:FBC0  24 F8				and	al,0F8h
020C:FBC2  3A C2				cmp	al,dl
020C:FBC4  75 75				jne	loc_2670		; Jump if not equal
020C:FBC6			loc_2664:
020C:FBC6  C6 06 1D5D 01			mov	byte ptr ds:[1D5Dh],1	; (6F63:1D5D=0Ch)
020C:FBCB  26: 8A 55 12				mov	dl,es:[di+12h]
020C:FBCF			loc_2665:
020C:FBCF  3A D3				cmp	dl,bl
020C:FBD1  75 68				jne	loc_2670		; Jump if not equal
020C:FBD3  26: 8A 45 0E				mov	al,es:[di+0Eh]
020C:FBD7  24 07				and	al,7
020C:FBD9  22 06 1D5A				and	al,byte ptr ds:[1D5Ah]	; (6F63:1D5A=0)
020C:FBDD  74 13				jz	loc_2666		; Jump if zero
020C:FBDF  C6 06 1D5D 00			mov	byte ptr ds:[1D5Dh],0	; (6F63:1D5D=0Ch)
020C:FBE4  C6 06 1D5E 00			mov	byte ptr ds:[1D5Eh],0	; (6F63:1D5E=2)
020C:FBE9  80 3E 1547 00			cmp	byte ptr ds:[1547h],0	; (6F63:1547=0Ch)
020C:FBEE  74 3E				je	loc_2669		; Jump if equal
020C:FBF0  EB 37				jmp	short loc_2668		; (FC29)
020C:FBF2			loc_2666:
020C:FBF2  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020C:FBF6  23 06 1D48				and	ax,word ptr ds:[1D48h]	; (6F63:1D48=0CB00h)
020C:FBFA  75 07				jnz	loc_2667		; Jump if not zero
020C:FBFC  80 0E 4568 40			or	byte ptr ds:[4568h],40h	; (6F63:4568=0FFh) '@'
020C:FC01  EB 38				jmp	short loc_2670		; (FC3B)
020C:FC03			loc_2667:
020C:FC03  80 3E 1547 00			cmp	byte ptr ds:[1547h],0	; (6F63:1547=0Ch)
020C:FC08  74 24				je	loc_2669		; Jump if equal
020C:FC0A  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020C:FC0E  23 06 13F1				and	ax,word ptr ds:[13F1h]	; (6F63:13F1=20Ch)
020C:FC12  74 15				jz	loc_2668		; Jump if zero
020C:FC14  26: F6 45 0E 04			test	byte ptr es:[di+0Eh],4
020C:FC19  74 13				jz	loc_2669		; Jump if zero
020C:FC1B  80 3E 13F0 02			cmp	byte ptr ds:[13F0h],2	; (6F63:13F0=7)
020C:FC20  74 07				je	loc_2668		; Jump if equal
020C:FC22  80 3E 13F0 0A			cmp	byte ptr ds:[13F0h],0Ah	; (6F63:13F0=7)
020C:FC27  75 05				jne	loc_2669		; Jump if not equal
020C:FC29			loc_2668:
020C:FC29  C6 06 3CFE 01			mov	byte ptr ds:[3CFEh],1	; (6F63:3CFE=0FFh)
020C:FC2E			loc_2669:
020C:FC2E  26: 80 7D 09 50			cmp	byte ptr es:[di+9],50h	; 'P'
020C:FC33  74 2E				je	loc_2672		; Jump if equal
020C:FC35  FE 06 1D20				inc	byte ptr ds:[1D20h]	; (6F63:1D20=91h)
020C:FC39  EB 2B				jmp	short loc_2673		; (FC66)
020C:FC3B			loc_2670:
020C:FC3B  C6 06 1D5D 00			mov	byte ptr ds:[1D5Dh],0	; (6F63:1D5D=0Ch)
020C:FC40  C6 06 1D5E 00			mov	byte ptr ds:[1D5Eh],0	; (6F63:1D5E=2)
020C:FC45  C6 06 1D65 00			mov	byte ptr ds:[1D65h],0	; (6F63:1D65=8)
020C:FC4A  B8 1446				mov	ax,1446h
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 509

020C:FC4D  2D 1430				sub	ax,1430h
020C:FC50  03 F8				add	di,ax
020C:FC52  8B 04				mov	ax,[si]
020C:FC54  26: 3A 05				cmp	al,es:[di]
020C:FC57  75 0A				jne	loc_2672		; Jump if not equal
020C:FC59  E9 FE84				jmp	loc_2651		; (FAE0)
020C:FC5C			loc_2671:
020C:FC5C  26: 80 7D 09 50			cmp	byte ptr es:[di+9],50h	; 'P'
020C:FC61  75 03				jne	loc_2673		; Jump if not equal
020C:FC63			loc_2672:
020C:FC63  E9 0101				jmp	loc_2693		; (FD67)
020C:FC66			loc_2673:
020C:FC66  F6 06 230A 08			test	byte ptr ds:[230Ah],8	; (6F63:230A=40h)
020C:FC6B  74 5C				jz	loc_2678		; Jump if zero
020C:FC6D  26: 8A 45 0F				mov	al,es:[di+0Fh]
020C:FC71  A8 03				test	al,3
020C:FC73  74 54				jz	loc_2678		; Jump if zero
020C:FC75  A8 08				test	al,8
020C:FC77  75 24				jnz	loc_2675		; Jump if not zero
020C:FC79  8A 5C 01				mov	bl,[si+1]
020C:FC7C  8A 7C 02				mov	bh,[si+2]
020C:FC7F  80 3E 1D5D 01			cmp	byte ptr ds:[1D5Dh],1	; (6F63:1D5D=0Ch)
020C:FC84  75 06				jne	loc_2674		; Jump if not equal
020C:FC86  8A 5C 02				mov	bl,[si+2]
020C:FC89  8A 7C 03				mov	bh,[si+3]
020C:FC8C			loc_2674:
020C:FC8C  88 1E 1D60				mov	byte ptr ds:[1D60h],bl	; (6F63:1D60=0D8h)
020C:FC90  88 3E 1D61				mov	byte ptr ds:[1D61h],bh	; (6F63:1D61=40h)
020C:FC94  9A 1491:6784		;*		call	far ptr sub_219		;*(1491:6784)
020C:FC94  9A					db	9Ah
020C:FC95  6784 1491				dw	6784h, 1491h
020C:FC99  73 02				jnc	loc_2675		; Jump if carry=0
020C:FC9B  B0 03				mov	al,3
020C:FC9D			loc_2675:
020C:FC9D  24 03				and	al,3
020C:FC9F  80 3E 2345 3E			cmp	byte ptr ds:[2345h],3Eh	; (6F63:2345=0Ch) '>'
020C:FCA4  75 07				jne	loc_2676		; Jump if not equal
020C:FCA6  3C 01				cmp	al,1
020C:FCA8  75 1F				jne	loc_2678		; Jump if not equal
020C:FCAA  E9 00A8				jmp	loc_2691		; (FD55)
020C:FCAD			loc_2676:
020C:FCAD  80 3E 2345 26			cmp	byte ptr ds:[2345h],26h	; (6F63:2345=0Ch) '&'
020C:FCB2  75 07				jne	loc_2677		; Jump if not equal
020C:FCB4  3C 02				cmp	al,2
020C:FCB6  75 11				jne	loc_2678		; Jump if not equal
020C:FCB8  E9 009A				jmp	loc_2691		; (FD55)
020C:FCBB			loc_2677:
020C:FCBB  80 3E 2345 36			cmp	byte ptr ds:[2345h],36h	; (6F63:2345=0Ch) '6'
020C:FCC0  75 07				jne	loc_2678		; Jump if not equal
020C:FCC2  3C 03				cmp	al,3
020C:FCC4  75 03				jne	loc_2678		; Jump if not equal
020C:FCC6  E9 008C				jmp	loc_2691		; (FD55)
020C:FCC9			loc_2678:
020C:FCC9  E8 B544				call	sub_125			; (B210)
020C:FCCC  73 03				jnc	loc_2679		; Jump if carry=0
020C:FCCE  E9 0082				jmp	loc_2690		; (FD53)
020C:FCD1			loc_2679:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 510

020C:FCD1  E8 7284				call	sub_76			; (6F58)
020C:FCD4  8A 04				mov	al,[si]
020C:FCD6  80 3E 1547 00			cmp	byte ptr ds:[1547h],0	; (6F63:1547=0Ch)
020C:FCDB  74 13				je	loc_2681		; Jump if equal
020C:FCDD  3C 68				cmp	al,68h			; 'h'
020C:FCDF  74 08				je	loc_2680		; Jump if equal
020C:FCE1  3C 69				cmp	al,69h			; 'i'
020C:FCE3  74 04				je	loc_2680		; Jump if equal
020C:FCE5  3C 81				cmp	al,81h
020C:FCE7  75 07				jne	loc_2681		; Jump if not equal
020C:FCE9			loc_2680:
020C:FCE9  C6 06 3D06 01			mov	byte ptr ds:[3D06h],1	; (6F63:3D06=0FFh)
020C:FCEE  EB 21				jmp	short loc_2684		; (FD11)
020C:FCF0			loc_2681:
020C:FCF0  3C FF				cmp	al,0FFh
020C:FCF2  75 14				jne	loc_2683		; Jump if not equal
020C:FCF4  8A 44 01				mov	al,[si+1]
020C:FCF7  24 F8				and	al,0F8h
020C:FCF9  3C E0				cmp	al,0E0h
020C:FCFB  74 04				je	loc_2682		; Jump if equal
020C:FCFD  3C D0				cmp	al,0D0h
020C:FCFF  75 10				jne	loc_2684		; Jump if not equal
020C:FD01			loc_2682:
020C:FD01  C6 06 22F5 01			mov	byte ptr ds:[22F5h],1	; (6F63:22F5=2)
020C:FD06  EB 09				jmp	short loc_2684		; (FD11)
020C:FD08			loc_2683:
020C:FD08  24 C2				and	al,0C2h
020C:FD0A  75 05				jnz	loc_2684		; Jump if not zero
020C:FD0C  80 0E 3D06 02			or	byte ptr ds:[3D06h],2	; (6F63:3D06=0FFh)
020C:FD11			loc_2684:
020C:FD11  26: 80 7D 09 40			cmp	byte ptr es:[di+9],40h	; '@'
020C:FD16  75 06				jne	loc_2685		; Jump if not equal
020C:FD18  80 7C 01 FF				cmp	byte ptr [si+1],0FFh
020C:FD1C  74 2B				je	loc_2689		; Jump if equal
020C:FD1E			loc_2685:
020C:FD1E  80 3E 1790 01			cmp	byte ptr ds:[1790h],1	; (6F63:1790=0Ch)
020C:FD23  75 21				jne	loc_2688		; Jump if not equal
020C:FD25  80 3E 2170 00			cmp	byte ptr ds:[2170h],0	; (6F63:2170=9)
020C:FD2A  74 1A				je	loc_2688		; Jump if equal
020C:FD2C  83 3E 2156 03			cmp	word ptr ds:[2156h],3	; (6F63:2156=20Ch)
020C:FD31  77 07				ja	loc_2686		; Jump if above
020C:FD33  F6 06 46D0 20			test	byte ptr ds:[46D0h],20h	; (6F63:46D0=0FFh) ' '
020C:FD38  75 07				jnz	loc_2687		; Jump if not zero
020C:FD3A			loc_2686:
020C:FD3A  B0 51				mov	al,51h			; 'Q'
020C:FD3C  9A 1491:2770		;*		call	far ptr sub_175		;*(1491:2770)
020C:FD3C  9A					db	9Ah
020C:FD3D  2770 1491				dw	2770h, 1491h
020C:FD41			loc_2687:
020C:FD41  C6 06 2170 00			mov	byte ptr ds:[2170h],0	; (6F63:2170=9)
020C:FD46			loc_2688:
020C:FD46  E9 02FA				jmp	$+2FDh
020C:FD49			loc_2689:
020C:FD49  80 26 4568 40			and	byte ptr ds:[4568h],40h	; (6F63:4568=0FFh) '@'
020C:FD4E  80 0E 4568 0A			or	byte ptr ds:[4568h],0Ah	; (6F63:4568=0FFh)
020C:FD53			loc_2690:
020C:FD53  EB 5C				jmp	short loc_2695		; (FDB1)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 511

020C:FD55			loc_2691:
020C:FD55  F7 06 3D1D 0010			test	word ptr ds:[3D1Dh],10h	; (6F63:3D1D=0FFFFh)
020C:FD5B  74 03				jz	loc_2692		; Jump if zero
020C:FD5D  E9 FF69				jmp	loc_2678		; (FCC9)
020C:FD60			loc_2692:
020C:FD60  C6 06 4568 05			mov	byte ptr ds:[4568h],5	; (6F63:4568=0FFh)
020C:FD65  EB 0A				jmp	short loc_2694		; (FD71)
020C:FD67			loc_2693:
020C:FD67  80 26 4568 40			and	byte ptr ds:[4568h],40h	; (6F63:4568=0FFh) '@'
020C:FD6C  80 0E 4568 0A			or	byte ptr ds:[4568h],0Ah	; (6F63:4568=0FFh)
020C:FD71			loc_2694:
020C:FD71  F6 06 230A 7F			test	byte ptr ds:[230Ah],7Fh	; (6F63:230A=40h)
020C:FD76  74 39				jz	loc_2695		; Jump if zero
020C:FD78  A1 230B				mov	ax,word ptr ds:[230Bh]	; (6F63:230B=41h)
020C:FD7B  A3 215A				mov	word ptr ds:[215Ah],ax	; (6F63:215A=4140h)
020C:FD7E  C6 06 230A 00			mov	byte ptr ds:[230Ah],0	; (6F63:230A=40h)
020C:FD83  C6 06 3D25 FE			mov	byte ptr ds:[3D25h],0FEh	; (6F63:3D25=0FFh)
020C:FD88  C6 06 2342 00			mov	byte ptr ds:[2342h],0	; (6F63:2342=0)
020C:FD8D  C7 06 230B FFFF			mov	word ptr ds:[230Bh],0FFFFh	; (6F63:230B=41h)
020C:FD93  C7 06 1CBF 0000			mov	word ptr ds:[1CBFh],0	; (6F63:1CBF=4140h)
020C:FD99  C6 06 1D5D 00			mov	byte ptr ds:[1D5Dh],0	; (6F63:1D5D=0Ch)
020C:FD9E  C6 06 1D5E 00			mov	byte ptr ds:[1D5Eh],0	; (6F63:1D5E=2)
020C:FDA3  E8 65CA				call	sub_65			; (6370)
020C:FDA6  BD 19B8				mov	bp,19B8h
020C:FDA9  A1 2156				mov	ax,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:FDAC  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:FDAC  9A					db	9Ah
020C:FDAD  0294 1491				dw	294h, 1491h
020C:FDB1			loc_2695:
020C:FDB1  E8 B80C				call	sub_128			; (B5C0)
020C:FDB4  E8 A995				call	sub_117			; (A74C)
020C:FDB7  80 3E 1F6D 01			cmp	byte ptr ds:[1F6Dh],1	; (6F63:1F6D=0)
020C:FDBC  75 03				jne	loc_2696		; Jump if not equal
020C:FDBE  E9 0272				jmp	$+275h
020C:FDC1			loc_2696:
020C:FDC1  C7 06 178D 0028			mov	word ptr ds:[178Dh],28h	; (6F63:178D=2800h)
020C:FDC7  9A 1491:3388		;*		call	far ptr sub_190		;*(1491:3388)
020C:FDC7  9A					db	9Ah
020C:FDC8  3388 1491				dw	3388h, 1491h
020C:FDCC  F6 06 230A 7F			test	byte ptr ds:[230Ah],7Fh	; (6F63:230A=40h)
020C:FDD1  74 39				jz	loc_2697		; Jump if zero
020C:FDD3  A1 230B				mov	ax,word ptr ds:[230Bh]	; (6F63:230B=41h)
020C:FDD6  A3 215A				mov	word ptr ds:[215Ah],ax	; (6F63:215A=4140h)
020C:FDD9  C6 06 230A 00			mov	byte ptr ds:[230Ah],0	; (6F63:230A=40h)
020C:FDDE  C6 06 3D25 FE			mov	byte ptr ds:[3D25h],0FEh	; (6F63:3D25=0FFh)
020C:FDE3  C6 06 2342 00			mov	byte ptr ds:[2342h],0	; (6F63:2342=0)
020C:FDE8  C7 06 230B FFFF			mov	word ptr ds:[230Bh],0FFFFh	; (6F63:230B=41h)
020C:FDEE  C7 06 1CBF 0000			mov	word ptr ds:[1CBFh],0	; (6F63:1CBF=4140h)
020C:FDF4  C6 06 1D5D 00			mov	byte ptr ds:[1D5Dh],0	; (6F63:1D5D=0Ch)
020C:FDF9  C6 06 1D5E 00			mov	byte ptr ds:[1D5Eh],0	; (6F63:1D5E=2)
020C:FDFE  E8 656F				call	sub_65			; (6370)
020C:FE01  BD 19B8				mov	bp,19B8h
020C:FE04  A1 2156				mov	ax,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:FE07  9A 1491:0294		;*		call	far ptr sub_156		;*(1491:0294)
020C:FE07  9A					db	9Ah
020C:FE08  0294 1491				dw	294h, 1491h
020C:FE0C			loc_2697:
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 512

020C:FE0C  80 0E 216F 04			or	byte ptr ds:[216Fh],4	; (6F63:216F=41h)
020C:FE11  83 3E 1CFA 00			cmp	word ptr ds:[1CFAh],0	; (6F63:1CFA=20Ch)
020C:FE16  74 09				je	loc_2698		; Jump if equal
020C:FE18  A1 2156				mov	ax,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:FE1B  3B 06 1CF8				cmp	ax,word ptr ds:[1CF8h]	; (6F63:1CF8=8C2h)
020C:FE1F  75 03				jne	loc_2699		; Jump if not equal
020C:FE21			loc_2698:
020C:FE21  E9 020F				jmp	$+212h
020C:FE24			loc_2699:
020C:FE24  A1 3D85				mov	ax,word ptr ds:[3D85h]	; (6F63:3D85=0FFFFh)
020C:FE27  80 3E 1CDE 01			cmp	byte ptr ds:[1CDEh],1	; (6F63:1CDE=8)
020C:FE2C  77 14				ja	loc_2701		; Jump if above
020C:FE2E  8B 1E 3D87				mov	bx,word ptr ds:[3D87h]	; (6F63:3D87=0FFFFh)
020C:FE32  8B 0E 3D89				mov	cx,word ptr ds:[3D89h]	; (6F63:3D89=0FFFFh)
020C:FE36  3B C3				cmp	ax,bx
020C:FE38  76 02				jbe	loc_2700		; Jump if below or =
020C:FE3A  8B C3				mov	ax,bx
020C:FE3C			loc_2700:
020C:FE3C  3B C1				cmp	ax,cx
020C:FE3E  76 02				jbe	loc_2701		; Jump if below or =
020C:FE40  8B C1				mov	ax,cx
020C:FE42			loc_2701:
020C:FE42  3B 06 1CF8				cmp	ax,word ptr ds:[1CF8h]	; (6F63:1CF8=8C2h)
020C:FE46  76 04				jbe	loc_2702		; Jump if below or =
020C:FE48  A1 1CF8				mov	ax,word ptr ds:[1CF8h]	; (6F63:1CF8=8C2h)
020C:FE4B  40					inc	ax
020C:FE4C			loc_2702:
020C:FE4C  8B 0E 2156				mov	cx,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:FE50  2B C1				sub	ax,cx
020C:FE52  8B C8				mov	cx,ax
020C:FE54  83 F9 01				cmp	cx,1
020C:FE57  75 03				jne	loc_2704		; Jump if not equal
020C:FE59			loc_2703:
020C:FE59  E9 0090				jmp	loc_2709		; (FEEC)
020C:FE5C			loc_2704:
020C:FE5C  80 3E 1790 01			cmp	byte ptr ds:[1790h],1	; (6F63:1790=0Ch)
020C:FE61  75 F6				jne	loc_2703		; Jump if not equal
020C:FE63  80 3E 1F6B 03			cmp	byte ptr ds:[1F6Bh],3	; (6F63:1F6B=40h)
020C:FE68  75 EF				jne	loc_2703		; Jump if not equal
020C:FE6A  E8 7B8D				call	sub_92			; (79FA)
020C:FE6D  A1 2156				mov	ax,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:FE70  8B 1E 2154				mov	bx,word ptr ds:[2154h]	; (6F63:2154=93Eh)
020C:FE74  C6 06 3C07 01			mov	byte ptr ds:[3C07h],1	; (6F63:3C07=0FFh)
020C:FE79  BA 0040				mov	dx,40h
020C:FE7C  51					push	cx
020C:FE7D  E8 66B0				call	sub_69			; (6530)
020C:FE80  59					pop	cx
020C:FE81  C6 06 3C07 00			mov	byte ptr ds:[3C07h],0	; (6F63:3C07=0FFh)
020C:FE86			loc_2705:
020C:FE86  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (E247:0000=0)
020C:FE8B  73 5F				jae	loc_2709		; Jump if above or =
020C:FE8D  26: 39 1D				cmp	es:[di],bx
020C:FE90  75 5A				jne	loc_2709		; Jump if not equal
020C:FE92  8B D0				mov	dx,ax
020C:FE94  03 D1				add	dx,cx
020C:FE96  26: 39 55 02				cmp	es:[di+2],dx
020C:FE9A  73 50				jae	loc_2709		; Jump if above or =
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 513

020C:FE9C  26: 8A 55 04				mov	dl,es:[di+4]
020C:FEA0  80 E2 5F				and	dl,5Fh			; '_'
020C:FEA3  80 FA 5F				cmp	dl,5Fh			; '_'
020C:FEA6  75 17				jne	loc_2706		; Jump if not equal
020C:FEA8  26: F6 45 05 0F			test	byte ptr es:[di+5],0Fh
020C:FEAD  75 10				jnz	loc_2706		; Jump if not zero
020C:FEAF  26: 39 45 02				cmp	es:[di+2],ax
020C:FEB3  74 25				je	loc_2708		; Jump if equal
020C:FEB5  26: 8B 4D 02				mov	cx,es:[di+2]
020C:FEB9  2B 0E 2156				sub	cx,word ptr ds:[2156h]	; (6F63:2156=20Ch)
020C:FEBD  EB 2D				jmp	short loc_2709		; (FEEC)
020C:FEBF			loc_2706:
020C:FEBF  50					push	ax
020C:FEC0  53					push	bx
020C:FEC1  BB 2F78				mov	bx,2F78h
020C:FEC4  26: 8A 45 05				mov	al,es:[di+5]
020C:FEC8  25 000F				and	ax,0Fh
020C:FECB  D7					xlat				; al=[al+[bx]] table
020C:FECC  0A C0				or	al,al			; Zero ?
020C:FECE  75 04				jnz	loc_2707		; Jump if not zero
020C:FED0  26: 8A 45 06				mov	al,es:[di+6]
020C:FED4			loc_2707:
020C:FED4  03 F8				add	di,ax
020C:FED6  5B					pop	bx
020C:FED7  58					pop	ax
020C:FED8  EB AC				jmp	short loc_2705		; (FE86)
020C:FEDA			loc_2708:
020C:FEDA  C7 06 1D66 0002			mov	word ptr ds:[1D66h],2	; (6F63:1D66=20Ch)
020C:FEE0  C7 06 1D68 0002			mov	word ptr ds:[1D68h],2	; (6F63:1D68=0D847h)
020C:FEE6  BF 6C18				mov	di,6C18h
020C:FEE9  E9 0157				jmp	$+15Ah
020C:FEEC			loc_2709:
020C:FEEC  8B C1				mov	ax,cx
020C:FEEE  80 3E 1790 01			cmp	byte ptr ds:[1790h],1	; (6F63:1790=0Ch)
020C:FEF3  74 03				je	loc_2710		; Jump if equal
020C:FEF5  E9 0135				jmp	$+138h
020C:FEF8			loc_2710:
020C:FEF8  83 F9 07				cmp	cx,7
020C:FEFB  77 03				ja	loc_2711		; Jump if above
020C:FEFD  E9 012D				jmp	$+130h
020C:FF00			loc_2711:
020C:FF00  8B 36 215A				mov	si,word ptr ds:[215Ah]	; (6F63:215A=4140h)
020C:FF04  8E 06 2158				mov	es,word ptr ds:[2158h]	; (6F63:2158=0E247h)
020C:FF08  8B D1				mov	dx,cx
020C:FF0A  52					push	dx
020C:FF0B  32 F6				xor	dh,dh			; Zero register
020C:FF0D  8B FE				mov	di,si
020C:FF0F  33 DB				xor	bx,bx			; Zero register
020C:FF11  32 E4				xor	ah,ah			; Zero register
020C:FF13  32 D2				xor	dl,dl			; Zero register
020C:FF15  80 3E 1CDF 0A			cmp	byte ptr ds:[1CDFh],0Ah	; (6F63:1CDF=0Ch)
020C:FF1A  74 03				je	loc_2712		; Jump if equal
020C:FF1C  26: 8A 15				mov	dl,es:[di]
020C:FF1F			loc_2712:
020C:FF1F  80 3E 4210 01			cmp	byte ptr ds:[4210h],1	; (6F63:4210=0FFh)
020C:FF24  75 3C				jne	loc_2714		; Jump if not equal
020C:FF26  F7 06 3D18 0002			test	word ptr ds:[3D18h],2	; (6F63:3D18=0FFFFh)
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 514

020C:FF2C  74 34				jz	loc_2714		; Jump if zero
020C:FF2E  80 3E 1CDF 0A			cmp	byte ptr ds:[1CDFh],0Ah	; (6F63:1CDF=0Ch)
020C:FF33  74 6A				je	loc_2717		; Jump if equal
020C:FF35  26: 80 3C 00				cmp	byte ptr es:[si],0
020C:FF39  74 64				je	loc_2717		; Jump if equal
020C:FF3B  50					push	ax
020C:FF3C  26: 8A 24				mov	ah,es:[si]
020C:FF3F  3A D4				cmp	dl,ah
020C:FF41  74 03				je	loc_2713		; Jump if equal
020C:FF43  80 CE 80				or	dh,80h
020C:FF46			loc_2713:
020C:FF46  26: 8A 44 01				mov	al,es:[si+1]
020C:FF4A  9A 1491:4F78		;*		call	far ptr sub_204		;*(1491:4F78)
020C:FF4A  9A					db	9Ah
020C:FF4B  4F78 1491				dw	4F78h, 1491h
020C:FF4F  8B E8				mov	bp,ax
020C:FF51  58					pop	ax
020C:FF52  83 FD 00				cmp	bp,0
020C:FF55  74 48				je	loc_2717		; Jump if equal
020C:FF57  B4 01				mov	ah,1
020C:FF59  83 FD 01				cmp	bp,1
020C:FF5C  74 35				je	loc_2716		; Jump if equal
020C:FF5E  43					inc	bx
020C:FF5F  46					inc	si
020C:FF60  EB 31				jmp	short loc_2716		; (FF93)
020C:FF62			loc_2714:
020C:FF62  53					push	bx
020C:FF63  BB 424E				mov	bx,424Eh
020C:FF66  32 C0				xor	al,al			; Zero register
020C:FF68  80 3E 1CDF 0A			cmp	byte ptr ds:[1CDFh],0Ah	; (6F63:1CDF=0Ch)
020C:FF6D  74 09				je	loc_2715		; Jump if equal
020C:FF6F  26: 8A 04				mov	al,es:[si]
020C:FF72  3A D0				cmp	dl,al
020C:FF74  74 02				je	loc_2715		; Jump if equal
020C:FF76  B6 80				mov	dh,80h
020C:FF78			loc_2715:
020C:FF78  D7					xlat				; al=[al+[bx]] table
020C:FF79  5B					pop	bx
020C:FF7A  80 3E 1CDF 0A			cmp	byte ptr ds:[1CDFh],0Ah	; (6F63:1CDF=0Ch)
020C:FF7F  74 1E				je	loc_2717		; Jump if equal
020C:FF81  26: 80 3C 00				cmp	byte ptr es:[si],0
020C:FF85  74 18				je	loc_2717		; Jump if equal
020C:FF87  0A C0				or	al,al			; Zero ?
020C:FF89  75 14				jnz	loc_2717		; Jump if not zero
020C:FF8B  3B 36 215A				cmp	si,word ptr ds:[215Ah]	; (6F63:215A=4140h)
020C:FF8F  75 02				jne	loc_2716		; Jump if not equal
020C:FF91  B4 01				mov	ah,1
020C:FF93			loc_2716:
020C:FF93  43					inc	bx
020C:FF94  0A E4				or	ah,ah			; Zero ?
020C:FF96  75 12				jnz	loc_2718		; Jump if not zero
020C:FF98  83 FB 07				cmp	bx,7
020C:FF9B  77 3D				ja	loc_2721		; Jump if above
020C:FF9D  EB 0B				jmp	short loc_2718		; (FFAA)
020C:FF9F			loc_2717:
020C:FF9F  83 FB 07				cmp	bx,7
020C:FFA2  77 36				ja	loc_2721		; Jump if above
           Temp.lst				Sourcer	v7.00   23-Sep-23   2:57 am   Page 515

020C:FFA4  33 DB				xor	bx,bx			; Zero register
020C:FFA6  8B FE				mov	di,si
020C:FFA8  32 E4				xor	ah,ah			; Zero register
020C:FFAA			loc_2718:
020C:FFAA  46					inc	si
020C:FFAB  80 3E 4210 02			cmp	byte ptr ds:[4210h],2	; (6F63:4210=0FFh)
020C:FFB0  75 22				jne	loc_2720		; Jump if not equal
020C:FFB2  83 F9 02				cmp	cx,2
020C:FFB5  76 1D				jbe	loc_2720		; Jump if below or =
020C:FFB7  F6 C6 03				test	dh,3
020C:FFBA  75 0A				jnz	loc_2719		; Jump if not zero
020C:FFBC  FE C6				inc	dh
020C:FFBE  26: 80 3C 00				cmp	byte ptr es:[si],0
020C:FFC2  75 10				jne	loc_2720		; Jump if not equal
020C:FFC4  FE C6				inc	dh
020C:FFC6			loc_2719:
020C:FFC6  F6 C6 02				test	dh,2
020C:FFC9  74 09				jz	loc_2720		; Jump if zero
020C:FFCB  26: 80 3C 00				cmp	byte ptr es:[si],0
020C:FFCF  75 09				jne	loc_2721		; Jump if not equal
020C:FFD1  46					inc	si
020C:FFD2  49					dec	cx
020C:FFD3  43					inc	bx
020C:FFD4			loc_2720:
020C:FFD4  49					dec	cx
020C:FFD5  E3 03				jcxz	loc_2721		; Jump if cx=0
020C:FFD7  E9 FF45				jmp	loc_2712		; (FF1F)
020C:FFDA			loc_2721:
020C:FFDA  8B CA				mov	cx,dx
020C:FFDC  5A					pop	dx
020C:FFDD  F6 C5 80				test	ch,80h
020C:FFE0  75 06				jnz	loc_2722		; Jump if not zero
020C:FFE2  81 FB 00A0				cmp	bx,0A0h
020C:FFE6  77 11				ja	loc_2723		; Jump if above
020C:FFE8			loc_2722:
020C:FFE8  0A E4				or	ah,ah			; Zero ?
020C:FFEA  74 0D				jz	loc_2723		; Jump if zero
020C:FFEC  89 1E 1D66				mov	word ptr ds:[1D66h],bx	; (6F63:1D66=20Ch)
020C:FFF0  89 1E 1D68				mov	word ptr ds:[1D68h],bx	; (6F63:1D68=0D847h)
020C:FFF4  BF 6BD6				mov	di,6BD6h
020C:FFF7  EB 4A				jmp	short $+4Ch
020C:FFF9			loc_2723:
020C:FFF9  8A C5				mov	al,ch
020C:FFFB  8B CA				mov	cx,dx
020C:FFFD  A8 80				test	al,80h
020C:FFFF  74 07				jz	$+9			; Jump if zero

